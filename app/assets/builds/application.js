(() => {
  var __defProp = Object.defineProperty;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __require = /* @__PURE__ */ ((x4) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x4, {
    get: (a3, b3) => (typeof require !== "undefined" ? require : a3)[b3]
  }) : x4)(function(x4) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x4 + '" is not supported');
  });
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __publicField = (obj, key, value) => {
    __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
    return value;
  };

  // node_modules/jquery/dist/jquery.js
  var require_jquery = __commonJS({
    "node_modules/jquery/dist/jquery.js"(exports, module) {
      (function(global2, factory) {
        "use strict";
        if (typeof module === "object" && typeof module.exports === "object") {
          module.exports = global2.document ? factory(global2, true) : function(w4) {
            if (!w4.document) {
              throw new Error("jQuery requires a window with a document");
            }
            return factory(w4);
          };
        } else {
          factory(global2);
        }
      })(typeof window !== "undefined" ? window : exports, function(window2, noGlobal) {
        "use strict";
        var arr = [];
        var getProto = Object.getPrototypeOf;
        var slice = arr.slice;
        var flat = arr.flat ? function(array) {
          return arr.flat.call(array);
        } : function(array) {
          return arr.concat.apply([], array);
        };
        var push = arr.push;
        var indexOf = arr.indexOf;
        var class2type = {};
        var toString = class2type.toString;
        var hasOwn = class2type.hasOwnProperty;
        var fnToString = hasOwn.toString;
        var ObjectFunctionString = fnToString.call(Object);
        var support = {};
        var isFunction = function isFunction2(obj) {
          return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
        };
        var isWindow = function isWindow2(obj) {
          return obj != null && obj === obj.window;
        };
        var document2 = window2.document;
        var preservedScriptAttributes = {
          type: true,
          src: true,
          nonce: true,
          noModule: true
        };
        function DOMEval(code, node, doc) {
          doc = doc || document2;
          var i3, val, script = doc.createElement("script");
          script.text = code;
          if (node) {
            for (i3 in preservedScriptAttributes) {
              val = node[i3] || node.getAttribute && node.getAttribute(i3);
              if (val) {
                script.setAttribute(i3, val);
              }
            }
          }
          doc.head.appendChild(script).parentNode.removeChild(script);
        }
        function toType(obj) {
          if (obj == null) {
            return obj + "";
          }
          return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
        }
        var version = "3.6.1", jQuery2 = function(selector, context) {
          return new jQuery2.fn.init(selector, context);
        };
        jQuery2.fn = jQuery2.prototype = {
          jquery: version,
          constructor: jQuery2,
          length: 0,
          toArray: function() {
            return slice.call(this);
          },
          get: function(num) {
            if (num == null) {
              return slice.call(this);
            }
            return num < 0 ? this[num + this.length] : this[num];
          },
          pushStack: function(elems) {
            var ret = jQuery2.merge(this.constructor(), elems);
            ret.prevObject = this;
            return ret;
          },
          each: function(callback) {
            return jQuery2.each(this, callback);
          },
          map: function(callback) {
            return this.pushStack(jQuery2.map(this, function(elem, i3) {
              return callback.call(elem, i3, elem);
            }));
          },
          slice: function() {
            return this.pushStack(slice.apply(this, arguments));
          },
          first: function() {
            return this.eq(0);
          },
          last: function() {
            return this.eq(-1);
          },
          even: function() {
            return this.pushStack(jQuery2.grep(this, function(_elem, i3) {
              return (i3 + 1) % 2;
            }));
          },
          odd: function() {
            return this.pushStack(jQuery2.grep(this, function(_elem, i3) {
              return i3 % 2;
            }));
          },
          eq: function(i3) {
            var len = this.length, j4 = +i3 + (i3 < 0 ? len : 0);
            return this.pushStack(j4 >= 0 && j4 < len ? [this[j4]] : []);
          },
          end: function() {
            return this.prevObject || this.constructor();
          },
          push,
          sort: arr.sort,
          splice: arr.splice
        };
        jQuery2.extend = jQuery2.fn.extend = function() {
          var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i3 = 1, length = arguments.length, deep = false;
          if (typeof target === "boolean") {
            deep = target;
            target = arguments[i3] || {};
            i3++;
          }
          if (typeof target !== "object" && !isFunction(target)) {
            target = {};
          }
          if (i3 === length) {
            target = this;
            i3--;
          }
          for (; i3 < length; i3++) {
            if ((options = arguments[i3]) != null) {
              for (name in options) {
                copy = options[name];
                if (name === "__proto__" || target === copy) {
                  continue;
                }
                if (deep && copy && (jQuery2.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                  src = target[name];
                  if (copyIsArray && !Array.isArray(src)) {
                    clone = [];
                  } else if (!copyIsArray && !jQuery2.isPlainObject(src)) {
                    clone = {};
                  } else {
                    clone = src;
                  }
                  copyIsArray = false;
                  target[name] = jQuery2.extend(deep, clone, copy);
                } else if (copy !== void 0) {
                  target[name] = copy;
                }
              }
            }
          }
          return target;
        };
        jQuery2.extend({
          expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
          isReady: true,
          error: function(msg) {
            throw new Error(msg);
          },
          noop: function() {
          },
          isPlainObject: function(obj) {
            var proto, Ctor;
            if (!obj || toString.call(obj) !== "[object Object]") {
              return false;
            }
            proto = getProto(obj);
            if (!proto) {
              return true;
            }
            Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
            return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
          },
          isEmptyObject: function(obj) {
            var name;
            for (name in obj) {
              return false;
            }
            return true;
          },
          globalEval: function(code, options, doc) {
            DOMEval(code, { nonce: options && options.nonce }, doc);
          },
          each: function(obj, callback) {
            var length, i3 = 0;
            if (isArrayLike(obj)) {
              length = obj.length;
              for (; i3 < length; i3++) {
                if (callback.call(obj[i3], i3, obj[i3]) === false) {
                  break;
                }
              }
            } else {
              for (i3 in obj) {
                if (callback.call(obj[i3], i3, obj[i3]) === false) {
                  break;
                }
              }
            }
            return obj;
          },
          makeArray: function(arr2, results) {
            var ret = results || [];
            if (arr2 != null) {
              if (isArrayLike(Object(arr2))) {
                jQuery2.merge(
                  ret,
                  typeof arr2 === "string" ? [arr2] : arr2
                );
              } else {
                push.call(ret, arr2);
              }
            }
            return ret;
          },
          inArray: function(elem, arr2, i3) {
            return arr2 == null ? -1 : indexOf.call(arr2, elem, i3);
          },
          merge: function(first, second) {
            var len = +second.length, j4 = 0, i3 = first.length;
            for (; j4 < len; j4++) {
              first[i3++] = second[j4];
            }
            first.length = i3;
            return first;
          },
          grep: function(elems, callback, invert) {
            var callbackInverse, matches = [], i3 = 0, length = elems.length, callbackExpect = !invert;
            for (; i3 < length; i3++) {
              callbackInverse = !callback(elems[i3], i3);
              if (callbackInverse !== callbackExpect) {
                matches.push(elems[i3]);
              }
            }
            return matches;
          },
          map: function(elems, callback, arg) {
            var length, value, i3 = 0, ret = [];
            if (isArrayLike(elems)) {
              length = elems.length;
              for (; i3 < length; i3++) {
                value = callback(elems[i3], i3, arg);
                if (value != null) {
                  ret.push(value);
                }
              }
            } else {
              for (i3 in elems) {
                value = callback(elems[i3], i3, arg);
                if (value != null) {
                  ret.push(value);
                }
              }
            }
            return flat(ret);
          },
          guid: 1,
          support
        });
        if (typeof Symbol === "function") {
          jQuery2.fn[Symbol.iterator] = arr[Symbol.iterator];
        }
        jQuery2.each(
          "Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
          function(_i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase();
          }
        );
        function isArrayLike(obj) {
          var length = !!obj && "length" in obj && obj.length, type = toType(obj);
          if (isFunction(obj) || isWindow(obj)) {
            return false;
          }
          return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
        }
        var Sizzle = function(window3) {
          var i3, support2, Expr, getText, isXML, tokenize2, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document3, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + 1 * new Date(), preferredDoc = window3.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a3, b3) {
            if (a3 === b3) {
              hasDuplicate = true;
            }
            return 0;
          }, hasOwn2 = {}.hasOwnProperty, arr2 = [], pop = arr2.pop, pushNative = arr2.push, push2 = arr2.push, slice2 = arr2.slice, indexOf2 = function(list, elem) {
            var i4 = 0, len = list.length;
            for (; i4 < len; i4++) {
              if (list[i4] === elem) {
                return i4;
              }
            }
            return -1;
          }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", whitespace2 = "[\\x20\\t\\r\\n\\f]", identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace2 + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", attributes = "\\[" + whitespace2 + "*(" + identifier + ")(?:" + whitespace2 + "*([*^$|!~]?=)" + whitespace2 + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + identifier + "))|)" + whitespace2 + "*\\]", pseudos = ":(" + identifier + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + attributes + ")*)|.*)\\)|)", rwhitespace = new RegExp(whitespace2 + "+", "g"), rtrim2 = new RegExp("^" + whitespace2 + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace2 + "+$", "g"), rcomma = new RegExp("^" + whitespace2 + "*," + whitespace2 + "*"), rcombinators = new RegExp("^" + whitespace2 + "*([>+~]|" + whitespace2 + ")" + whitespace2 + "*"), rdescend = new RegExp(whitespace2 + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            "ID": new RegExp("^#(" + identifier + ")"),
            "CLASS": new RegExp("^\\.(" + identifier + ")"),
            "TAG": new RegExp("^(" + identifier + "|[*])"),
            "ATTR": new RegExp("^" + attributes),
            "PSEUDO": new RegExp("^" + pseudos),
            "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace2 + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace2 + "*(?:([+-]|)" + whitespace2 + "*(\\d+)|))" + whitespace2 + "*\\)|)", "i"),
            "bool": new RegExp("^(?:" + booleans + ")$", "i"),
            "needsContext": new RegExp("^" + whitespace2 + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace2 + "*((?:-\\d)?\\d*)" + whitespace2 + "*\\)|)(?=[^-]|$)", "i")
          }, rhtml2 = /HTML$/i, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace2 + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape2, nonHex) {
            var high = "0x" + escape2.slice(1) - 65536;
            return nonHex ? nonHex : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
          }, rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, fcssescape = function(ch, asCodePoint) {
            if (asCodePoint) {
              if (ch === "\0") {
                return "\uFFFD";
              }
              return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
            }
            return "\\" + ch;
          }, unloadHandler = function() {
            setDocument();
          }, inDisabledFieldset = addCombinator(
            function(elem) {
              return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
            },
            { dir: "parentNode", next: "legend" }
          );
          try {
            push2.apply(
              arr2 = slice2.call(preferredDoc.childNodes),
              preferredDoc.childNodes
            );
            arr2[preferredDoc.childNodes.length].nodeType;
          } catch (e3) {
            push2 = {
              apply: arr2.length ? function(target, els) {
                pushNative.apply(target, slice2.call(els));
              } : function(target, els) {
                var j4 = target.length, i4 = 0;
                while (target[j4++] = els[i4++]) {
                }
                target.length = j4 - 1;
              }
            };
          }
          function Sizzle2(selector, context, results, seed) {
            var m3, i4, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
            results = results || [];
            if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
              return results;
            }
            if (!seed) {
              setDocument(context);
              context = context || document3;
              if (documentIsHTML) {
                if (nodeType !== 11 && (match = rquickExpr2.exec(selector))) {
                  if (m3 = match[1]) {
                    if (nodeType === 9) {
                      if (elem = context.getElementById(m3)) {
                        if (elem.id === m3) {
                          results.push(elem);
                          return results;
                        }
                      } else {
                        return results;
                      }
                    } else {
                      if (newContext && (elem = newContext.getElementById(m3)) && contains(context, elem) && elem.id === m3) {
                        results.push(elem);
                        return results;
                      }
                    }
                  } else if (match[2]) {
                    push2.apply(results, context.getElementsByTagName(selector));
                    return results;
                  } else if ((m3 = match[3]) && support2.getElementsByClassName && context.getElementsByClassName) {
                    push2.apply(results, context.getElementsByClassName(m3));
                    return results;
                  }
                }
                if (support2.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {
                  newSelector = selector;
                  newContext = context;
                  if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {
                    newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                    if (newContext !== context || !support2.scope) {
                      if (nid = context.getAttribute("id")) {
                        nid = nid.replace(rcssescape, fcssescape);
                      } else {
                        context.setAttribute("id", nid = expando);
                      }
                    }
                    groups = tokenize2(selector);
                    i4 = groups.length;
                    while (i4--) {
                      groups[i4] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i4]);
                    }
                    newSelector = groups.join(",");
                  }
                  try {
                    push2.apply(
                      results,
                      newContext.querySelectorAll(newSelector)
                    );
                    return results;
                  } catch (qsaError) {
                    nonnativeSelectorCache(selector, true);
                  } finally {
                    if (nid === expando) {
                      context.removeAttribute("id");
                    }
                  }
                }
              }
            }
            return select(selector.replace(rtrim2, "$1"), context, results, seed);
          }
          function createCache() {
            var keys = [];
            function cache(key, value) {
              if (keys.push(key + " ") > Expr.cacheLength) {
                delete cache[keys.shift()];
              }
              return cache[key + " "] = value;
            }
            return cache;
          }
          function markFunction(fn) {
            fn[expando] = true;
            return fn;
          }
          function assert(fn) {
            var el = document3.createElement("fieldset");
            try {
              return !!fn(el);
            } catch (e3) {
              return false;
            } finally {
              if (el.parentNode) {
                el.parentNode.removeChild(el);
              }
              el = null;
            }
          }
          function addHandle(attrs, handler) {
            var arr3 = attrs.split("|"), i4 = arr3.length;
            while (i4--) {
              Expr.attrHandle[arr3[i4]] = handler;
            }
          }
          function siblingCheck(a3, b3) {
            var cur = b3 && a3, diff = cur && a3.nodeType === 1 && b3.nodeType === 1 && a3.sourceIndex - b3.sourceIndex;
            if (diff) {
              return diff;
            }
            if (cur) {
              while (cur = cur.nextSibling) {
                if (cur === b3) {
                  return -1;
                }
              }
            }
            return a3 ? 1 : -1;
          }
          function createInputPseudo(type) {
            return function(elem) {
              var name = elem.nodeName.toLowerCase();
              return name === "input" && elem.type === type;
            };
          }
          function createButtonPseudo(type) {
            return function(elem) {
              var name = elem.nodeName.toLowerCase();
              return (name === "input" || name === "button") && elem.type === type;
            };
          }
          function createDisabledPseudo(disabled) {
            return function(elem) {
              if ("form" in elem) {
                if (elem.parentNode && elem.disabled === false) {
                  if ("label" in elem) {
                    if ("label" in elem.parentNode) {
                      return elem.parentNode.disabled === disabled;
                    } else {
                      return elem.disabled === disabled;
                    }
                  }
                  return elem.isDisabled === disabled || elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
                }
                return elem.disabled === disabled;
              } else if ("label" in elem) {
                return elem.disabled === disabled;
              }
              return false;
            };
          }
          function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
              argument = +argument;
              return markFunction(function(seed, matches2) {
                var j4, matchIndexes = fn([], seed.length, argument), i4 = matchIndexes.length;
                while (i4--) {
                  if (seed[j4 = matchIndexes[i4]]) {
                    seed[j4] = !(matches2[j4] = seed[j4]);
                  }
                }
              });
            });
          }
          function testContext(context) {
            return context && typeof context.getElementsByTagName !== "undefined" && context;
          }
          support2 = Sizzle2.support = {};
          isXML = Sizzle2.isXML = function(elem) {
            var namespace = elem && elem.namespaceURI, docElem2 = elem && (elem.ownerDocument || elem).documentElement;
            return !rhtml2.test(namespace || docElem2 && docElem2.nodeName || "HTML");
          };
          setDocument = Sizzle2.setDocument = function(node) {
            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
            if (doc == document3 || doc.nodeType !== 9 || !doc.documentElement) {
              return document3;
            }
            document3 = doc;
            docElem = document3.documentElement;
            documentIsHTML = !isXML(document3);
            if (preferredDoc != document3 && (subWindow = document3.defaultView) && subWindow.top !== subWindow) {
              if (subWindow.addEventListener) {
                subWindow.addEventListener("unload", unloadHandler, false);
              } else if (subWindow.attachEvent) {
                subWindow.attachEvent("onunload", unloadHandler);
              }
            }
            support2.scope = assert(function(el) {
              docElem.appendChild(el).appendChild(document3.createElement("div"));
              return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;
            });
            support2.attributes = assert(function(el) {
              el.className = "i";
              return !el.getAttribute("className");
            });
            support2.getElementsByTagName = assert(function(el) {
              el.appendChild(document3.createComment(""));
              return !el.getElementsByTagName("*").length;
            });
            support2.getElementsByClassName = rnative.test(document3.getElementsByClassName);
            support2.getById = assert(function(el) {
              docElem.appendChild(el).id = expando;
              return !document3.getElementsByName || !document3.getElementsByName(expando).length;
            });
            if (support2.getById) {
              Expr.filter["ID"] = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                  return elem.getAttribute("id") === attrId;
                };
              };
              Expr.find["ID"] = function(id, context) {
                if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                  var elem = context.getElementById(id);
                  return elem ? [elem] : [];
                }
              };
            } else {
              Expr.filter["ID"] = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                  var node2 = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                  return node2 && node2.value === attrId;
                };
              };
              Expr.find["ID"] = function(id, context) {
                if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                  var node2, i4, elems, elem = context.getElementById(id);
                  if (elem) {
                    node2 = elem.getAttributeNode("id");
                    if (node2 && node2.value === id) {
                      return [elem];
                    }
                    elems = context.getElementsByName(id);
                    i4 = 0;
                    while (elem = elems[i4++]) {
                      node2 = elem.getAttributeNode("id");
                      if (node2 && node2.value === id) {
                        return [elem];
                      }
                    }
                  }
                  return [];
                }
              };
            }
            Expr.find["TAG"] = support2.getElementsByTagName ? function(tag, context) {
              if (typeof context.getElementsByTagName !== "undefined") {
                return context.getElementsByTagName(tag);
              } else if (support2.qsa) {
                return context.querySelectorAll(tag);
              }
            } : function(tag, context) {
              var elem, tmp = [], i4 = 0, results = context.getElementsByTagName(tag);
              if (tag === "*") {
                while (elem = results[i4++]) {
                  if (elem.nodeType === 1) {
                    tmp.push(elem);
                  }
                }
                return tmp;
              }
              return results;
            };
            Expr.find["CLASS"] = support2.getElementsByClassName && function(className, context) {
              if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
                return context.getElementsByClassName(className);
              }
            };
            rbuggyMatches = [];
            rbuggyQSA = [];
            if (support2.qsa = rnative.test(document3.querySelectorAll)) {
              assert(function(el) {
                var input;
                docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a><select id='" + expando + "-\r\\' msallowcapture=''><option selected=''></option></select>";
                if (el.querySelectorAll("[msallowcapture^='']").length) {
                  rbuggyQSA.push("[*^$]=" + whitespace2 + `*(?:''|"")`);
                }
                if (!el.querySelectorAll("[selected]").length) {
                  rbuggyQSA.push("\\[" + whitespace2 + "*(?:value|" + booleans + ")");
                }
                if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
                  rbuggyQSA.push("~=");
                }
                input = document3.createElement("input");
                input.setAttribute("name", "");
                el.appendChild(input);
                if (!el.querySelectorAll("[name='']").length) {
                  rbuggyQSA.push("\\[" + whitespace2 + "*name" + whitespace2 + "*=" + whitespace2 + `*(?:''|"")`);
                }
                if (!el.querySelectorAll(":checked").length) {
                  rbuggyQSA.push(":checked");
                }
                if (!el.querySelectorAll("a#" + expando + "+*").length) {
                  rbuggyQSA.push(".#.+[+~]");
                }
                el.querySelectorAll("\\\f");
                rbuggyQSA.push("[\\r\\n\\f]");
              });
              assert(function(el) {
                el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var input = document3.createElement("input");
                input.setAttribute("type", "hidden");
                el.appendChild(input).setAttribute("name", "D");
                if (el.querySelectorAll("[name=d]").length) {
                  rbuggyQSA.push("name" + whitespace2 + "*[*^$|!~]?=");
                }
                if (el.querySelectorAll(":enabled").length !== 2) {
                  rbuggyQSA.push(":enabled", ":disabled");
                }
                docElem.appendChild(el).disabled = true;
                if (el.querySelectorAll(":disabled").length !== 2) {
                  rbuggyQSA.push(":enabled", ":disabled");
                }
                el.querySelectorAll("*,:x");
                rbuggyQSA.push(",.*:");
              });
            }
            if (support2.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
              assert(function(el) {
                support2.disconnectedMatch = matches.call(el, "*");
                matches.call(el, "[s!='']:x");
                rbuggyMatches.push("!=", pseudos);
              });
            }
            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
            hasCompare = rnative.test(docElem.compareDocumentPosition);
            contains = hasCompare || rnative.test(docElem.contains) ? function(a3, b3) {
              var adown = a3.nodeType === 9 ? a3.documentElement : a3, bup = b3 && b3.parentNode;
              return a3 === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a3.compareDocumentPosition && a3.compareDocumentPosition(bup) & 16));
            } : function(a3, b3) {
              if (b3) {
                while (b3 = b3.parentNode) {
                  if (b3 === a3) {
                    return true;
                  }
                }
              }
              return false;
            };
            sortOrder = hasCompare ? function(a3, b3) {
              if (a3 === b3) {
                hasDuplicate = true;
                return 0;
              }
              var compare = !a3.compareDocumentPosition - !b3.compareDocumentPosition;
              if (compare) {
                return compare;
              }
              compare = (a3.ownerDocument || a3) == (b3.ownerDocument || b3) ? a3.compareDocumentPosition(b3) : 1;
              if (compare & 1 || !support2.sortDetached && b3.compareDocumentPosition(a3) === compare) {
                if (a3 == document3 || a3.ownerDocument == preferredDoc && contains(preferredDoc, a3)) {
                  return -1;
                }
                if (b3 == document3 || b3.ownerDocument == preferredDoc && contains(preferredDoc, b3)) {
                  return 1;
                }
                return sortInput ? indexOf2(sortInput, a3) - indexOf2(sortInput, b3) : 0;
              }
              return compare & 4 ? -1 : 1;
            } : function(a3, b3) {
              if (a3 === b3) {
                hasDuplicate = true;
                return 0;
              }
              var cur, i4 = 0, aup = a3.parentNode, bup = b3.parentNode, ap = [a3], bp = [b3];
              if (!aup || !bup) {
                return a3 == document3 ? -1 : b3 == document3 ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf2(sortInput, a3) - indexOf2(sortInput, b3) : 0;
              } else if (aup === bup) {
                return siblingCheck(a3, b3);
              }
              cur = a3;
              while (cur = cur.parentNode) {
                ap.unshift(cur);
              }
              cur = b3;
              while (cur = cur.parentNode) {
                bp.unshift(cur);
              }
              while (ap[i4] === bp[i4]) {
                i4++;
              }
              return i4 ? siblingCheck(ap[i4], bp[i4]) : ap[i4] == preferredDoc ? -1 : bp[i4] == preferredDoc ? 1 : 0;
            };
            return document3;
          };
          Sizzle2.matches = function(expr, elements) {
            return Sizzle2(expr, null, null, elements);
          };
          Sizzle2.matchesSelector = function(elem, expr) {
            setDocument(elem);
            if (support2.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
              try {
                var ret = matches.call(elem, expr);
                if (ret || support2.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
                  return ret;
                }
              } catch (e3) {
                nonnativeSelectorCache(expr, true);
              }
            }
            return Sizzle2(expr, document3, null, [elem]).length > 0;
          };
          Sizzle2.contains = function(context, elem) {
            if ((context.ownerDocument || context) != document3) {
              setDocument(context);
            }
            return contains(context, elem);
          };
          Sizzle2.attr = function(elem, name) {
            if ((elem.ownerDocument || elem) != document3) {
              setDocument(elem);
            }
            var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn2.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
            return val !== void 0 ? val : support2.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
          };
          Sizzle2.escape = function(sel) {
            return (sel + "").replace(rcssescape, fcssescape);
          };
          Sizzle2.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
          };
          Sizzle2.uniqueSort = function(results) {
            var elem, duplicates = [], j4 = 0, i4 = 0;
            hasDuplicate = !support2.detectDuplicates;
            sortInput = !support2.sortStable && results.slice(0);
            results.sort(sortOrder);
            if (hasDuplicate) {
              while (elem = results[i4++]) {
                if (elem === results[i4]) {
                  j4 = duplicates.push(i4);
                }
              }
              while (j4--) {
                results.splice(duplicates[j4], 1);
              }
            }
            sortInput = null;
            return results;
          };
          getText = Sizzle2.getText = function(elem) {
            var node, ret = "", i4 = 0, nodeType = elem.nodeType;
            if (!nodeType) {
              while (node = elem[i4++]) {
                ret += getText(node);
              }
            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
              if (typeof elem.textContent === "string") {
                return elem.textContent;
              } else {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                  ret += getText(elem);
                }
              }
            } else if (nodeType === 3 || nodeType === 4) {
              return elem.nodeValue;
            }
            return ret;
          };
          Expr = Sizzle2.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: true },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: true },
              "~": { dir: "previousSibling" }
            },
            preFilter: {
              "ATTR": function(match) {
                match[1] = match[1].replace(runescape, funescape);
                match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
                if (match[2] === "~=") {
                  match[3] = " " + match[3] + " ";
                }
                return match.slice(0, 4);
              },
              "CHILD": function(match) {
                match[1] = match[1].toLowerCase();
                if (match[1].slice(0, 3) === "nth") {
                  if (!match[3]) {
                    Sizzle2.error(match[0]);
                  }
                  match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
                  match[5] = +(match[7] + match[8] || match[3] === "odd");
                } else if (match[3]) {
                  Sizzle2.error(match[0]);
                }
                return match;
              },
              "PSEUDO": function(match) {
                var excess, unquoted = !match[6] && match[2];
                if (matchExpr["CHILD"].test(match[0])) {
                  return null;
                }
                if (match[3]) {
                  match[2] = match[4] || match[5] || "";
                } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize2(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                  match[0] = match[0].slice(0, excess);
                  match[2] = unquoted.slice(0, excess);
                }
                return match.slice(0, 3);
              }
            },
            filter: {
              "TAG": function(nodeNameSelector) {
                var nodeName2 = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                return nodeNameSelector === "*" ? function() {
                  return true;
                } : function(elem) {
                  return elem.nodeName && elem.nodeName.toLowerCase() === nodeName2;
                };
              },
              "CLASS": function(className) {
                var pattern = classCache[className + " "];
                return pattern || (pattern = new RegExp("(^|" + whitespace2 + ")" + className + "(" + whitespace2 + "|$)")) && classCache(
                  className,
                  function(elem) {
                    return pattern.test(
                      typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || ""
                    );
                  }
                );
              },
              "ATTR": function(name, operator, check) {
                return function(elem) {
                  var result = Sizzle2.attr(elem, name);
                  if (result == null) {
                    return operator === "!=";
                  }
                  if (!operator) {
                    return true;
                  }
                  result += "";
                  return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
                };
              },
              "CHILD": function(type, what, _argument, first, last) {
                var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
                return first === 1 && last === 0 ? function(elem) {
                  return !!elem.parentNode;
                } : function(elem, _context, xml) {
                  var cache, uniqueCache, outerCache, node, nodeIndex, start, dir2 = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                  if (parent) {
                    if (simple) {
                      while (dir2) {
                        node = elem;
                        while (node = node[dir2]) {
                          if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                            return false;
                          }
                        }
                        start = dir2 = type === "only" && !start && "nextSibling";
                      }
                      return true;
                    }
                    start = [forward ? parent.firstChild : parent.lastChild];
                    if (forward && useCache) {
                      node = parent;
                      outerCache = node[expando] || (node[expando] = {});
                      uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                      cache = uniqueCache[type] || [];
                      nodeIndex = cache[0] === dirruns && cache[1];
                      diff = nodeIndex && cache[2];
                      node = nodeIndex && parent.childNodes[nodeIndex];
                      while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {
                        if (node.nodeType === 1 && ++diff && node === elem) {
                          uniqueCache[type] = [dirruns, nodeIndex, diff];
                          break;
                        }
                      }
                    } else {
                      if (useCache) {
                        node = elem;
                        outerCache = node[expando] || (node[expando] = {});
                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        cache = uniqueCache[type] || [];
                        nodeIndex = cache[0] === dirruns && cache[1];
                        diff = nodeIndex;
                      }
                      if (diff === false) {
                        while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {
                          if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                            if (useCache) {
                              outerCache = node[expando] || (node[expando] = {});
                              uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                              uniqueCache[type] = [dirruns, diff];
                            }
                            if (node === elem) {
                              break;
                            }
                          }
                        }
                      }
                    }
                    diff -= last;
                    return diff === first || diff % first === 0 && diff / first >= 0;
                  }
                };
              },
              "PSEUDO": function(pseudo, argument) {
                var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle2.error("unsupported pseudo: " + pseudo);
                if (fn[expando]) {
                  return fn(argument);
                }
                if (fn.length > 1) {
                  args = [pseudo, pseudo, "", argument];
                  return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches2) {
                    var idx, matched = fn(seed, argument), i4 = matched.length;
                    while (i4--) {
                      idx = indexOf2(seed, matched[i4]);
                      seed[idx] = !(matches2[idx] = matched[i4]);
                    }
                  }) : function(elem) {
                    return fn(elem, 0, args);
                  };
                }
                return fn;
              }
            },
            pseudos: {
              "not": markFunction(function(selector) {
                var input = [], results = [], matcher = compile(selector.replace(rtrim2, "$1"));
                return matcher[expando] ? markFunction(function(seed, matches2, _context, xml) {
                  var elem, unmatched = matcher(seed, null, xml, []), i4 = seed.length;
                  while (i4--) {
                    if (elem = unmatched[i4]) {
                      seed[i4] = !(matches2[i4] = elem);
                    }
                  }
                }) : function(elem, _context, xml) {
                  input[0] = elem;
                  matcher(input, null, xml, results);
                  input[0] = null;
                  return !results.pop();
                };
              }),
              "has": markFunction(function(selector) {
                return function(elem) {
                  return Sizzle2(selector, elem).length > 0;
                };
              }),
              "contains": markFunction(function(text) {
                text = text.replace(runescape, funescape);
                return function(elem) {
                  return (elem.textContent || getText(elem)).indexOf(text) > -1;
                };
              }),
              "lang": markFunction(function(lang) {
                if (!ridentifier.test(lang || "")) {
                  Sizzle2.error("unsupported lang: " + lang);
                }
                lang = lang.replace(runescape, funescape).toLowerCase();
                return function(elem) {
                  var elemLang;
                  do {
                    if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                      elemLang = elemLang.toLowerCase();
                      return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                    }
                  } while ((elem = elem.parentNode) && elem.nodeType === 1);
                  return false;
                };
              }),
              "target": function(elem) {
                var hash = window3.location && window3.location.hash;
                return hash && hash.slice(1) === elem.id;
              },
              "root": function(elem) {
                return elem === docElem;
              },
              "focus": function(elem) {
                return elem === document3.activeElement && (!document3.hasFocus || document3.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
              },
              "enabled": createDisabledPseudo(false),
              "disabled": createDisabledPseudo(true),
              "checked": function(elem) {
                var nodeName2 = elem.nodeName.toLowerCase();
                return nodeName2 === "input" && !!elem.checked || nodeName2 === "option" && !!elem.selected;
              },
              "selected": function(elem) {
                if (elem.parentNode) {
                  elem.parentNode.selectedIndex;
                }
                return elem.selected === true;
              },
              "empty": function(elem) {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                  if (elem.nodeType < 6) {
                    return false;
                  }
                }
                return true;
              },
              "parent": function(elem) {
                return !Expr.pseudos["empty"](elem);
              },
              "header": function(elem) {
                return rheader.test(elem.nodeName);
              },
              "input": function(elem) {
                return rinputs.test(elem.nodeName);
              },
              "button": function(elem) {
                var name = elem.nodeName.toLowerCase();
                return name === "input" && elem.type === "button" || name === "button";
              },
              "text": function(elem) {
                var attr;
                return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
              },
              "first": createPositionalPseudo(function() {
                return [0];
              }),
              "last": createPositionalPseudo(function(_matchIndexes, length) {
                return [length - 1];
              }),
              "eq": createPositionalPseudo(function(_matchIndexes, length, argument) {
                return [argument < 0 ? argument + length : argument];
              }),
              "even": createPositionalPseudo(function(matchIndexes, length) {
                var i4 = 0;
                for (; i4 < length; i4 += 2) {
                  matchIndexes.push(i4);
                }
                return matchIndexes;
              }),
              "odd": createPositionalPseudo(function(matchIndexes, length) {
                var i4 = 1;
                for (; i4 < length; i4 += 2) {
                  matchIndexes.push(i4);
                }
                return matchIndexes;
              }),
              "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
                var i4 = argument < 0 ? argument + length : argument > length ? length : argument;
                for (; --i4 >= 0; ) {
                  matchIndexes.push(i4);
                }
                return matchIndexes;
              }),
              "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
                var i4 = argument < 0 ? argument + length : argument;
                for (; ++i4 < length; ) {
                  matchIndexes.push(i4);
                }
                return matchIndexes;
              })
            }
          };
          Expr.pseudos["nth"] = Expr.pseudos["eq"];
          for (i3 in { radio: true, checkbox: true, file: true, password: true, image: true }) {
            Expr.pseudos[i3] = createInputPseudo(i3);
          }
          for (i3 in { submit: true, reset: true }) {
            Expr.pseudos[i3] = createButtonPseudo(i3);
          }
          function setFilters() {
          }
          setFilters.prototype = Expr.filters = Expr.pseudos;
          Expr.setFilters = new setFilters();
          tokenize2 = Sizzle2.tokenize = function(selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
            if (cached) {
              return parseOnly ? 0 : cached.slice(0);
            }
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
            while (soFar) {
              if (!matched || (match = rcomma.exec(soFar))) {
                if (match) {
                  soFar = soFar.slice(match[0].length) || soFar;
                }
                groups.push(tokens = []);
              }
              matched = false;
              if (match = rcombinators.exec(soFar)) {
                matched = match.shift();
                tokens.push({
                  value: matched,
                  type: match[0].replace(rtrim2, " ")
                });
                soFar = soFar.slice(matched.length);
              }
              for (type in Expr.filter) {
                if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                  matched = match.shift();
                  tokens.push({
                    value: matched,
                    type,
                    matches: match
                  });
                  soFar = soFar.slice(matched.length);
                }
              }
              if (!matched) {
                break;
              }
            }
            return parseOnly ? soFar.length : soFar ? Sizzle2.error(selector) : tokenCache(selector, groups).slice(0);
          };
          function toSelector(tokens) {
            var i4 = 0, len = tokens.length, selector = "";
            for (; i4 < len; i4++) {
              selector += tokens[i4].value;
            }
            return selector;
          }
          function addCombinator(matcher, combinator, base) {
            var dir2 = combinator.dir, skip = combinator.next, key = skip || dir2, checkNonElements = base && key === "parentNode", doneName = done++;
            return combinator.first ? function(elem, context, xml) {
              while (elem = elem[dir2]) {
                if (elem.nodeType === 1 || checkNonElements) {
                  return matcher(elem, context, xml);
                }
              }
              return false;
            } : function(elem, context, xml) {
              var oldCache, uniqueCache, outerCache, newCache = [dirruns, doneName];
              if (xml) {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    if (matcher(elem, context, xml)) {
                      return true;
                    }
                  }
                }
              } else {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    outerCache = elem[expando] || (elem[expando] = {});
                    uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                    if (skip && skip === elem.nodeName.toLowerCase()) {
                      elem = elem[dir2] || elem;
                    } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                      return newCache[2] = oldCache[2];
                    } else {
                      uniqueCache[key] = newCache;
                      if (newCache[2] = matcher(elem, context, xml)) {
                        return true;
                      }
                    }
                  }
                }
              }
              return false;
            };
          }
          function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context, xml) {
              var i4 = matchers.length;
              while (i4--) {
                if (!matchers[i4](elem, context, xml)) {
                  return false;
                }
              }
              return true;
            } : matchers[0];
          }
          function multipleContexts(selector, contexts, results) {
            var i4 = 0, len = contexts.length;
            for (; i4 < len; i4++) {
              Sizzle2(selector, contexts[i4], results);
            }
            return results;
          }
          function condense(unmatched, map, filter, context, xml) {
            var elem, newUnmatched = [], i4 = 0, len = unmatched.length, mapped = map != null;
            for (; i4 < len; i4++) {
              if (elem = unmatched[i4]) {
                if (!filter || filter(elem, context, xml)) {
                  newUnmatched.push(elem);
                  if (mapped) {
                    map.push(i4);
                  }
                }
              }
            }
            return newUnmatched;
          }
          function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) {
              postFilter = setMatcher(postFilter);
            }
            if (postFinder && !postFinder[expando]) {
              postFinder = setMatcher(postFinder, postSelector);
            }
            return markFunction(function(seed, results, context, xml) {
              var temp, i4, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(
                selector || "*",
                context.nodeType ? [context] : context,
                []
              ), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
              if (matcher) {
                matcher(matcherIn, matcherOut, context, xml);
              }
              if (postFilter) {
                temp = condense(matcherOut, postMap);
                postFilter(temp, [], context, xml);
                i4 = temp.length;
                while (i4--) {
                  if (elem = temp[i4]) {
                    matcherOut[postMap[i4]] = !(matcherIn[postMap[i4]] = elem);
                  }
                }
              }
              if (seed) {
                if (postFinder || preFilter) {
                  if (postFinder) {
                    temp = [];
                    i4 = matcherOut.length;
                    while (i4--) {
                      if (elem = matcherOut[i4]) {
                        temp.push(matcherIn[i4] = elem);
                      }
                    }
                    postFinder(null, matcherOut = [], temp, xml);
                  }
                  i4 = matcherOut.length;
                  while (i4--) {
                    if ((elem = matcherOut[i4]) && (temp = postFinder ? indexOf2(seed, elem) : preMap[i4]) > -1) {
                      seed[temp] = !(results[temp] = elem);
                    }
                  }
                }
              } else {
                matcherOut = condense(
                  matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut
                );
                if (postFinder) {
                  postFinder(null, results, matcherOut, xml);
                } else {
                  push2.apply(results, matcherOut);
                }
              }
            });
          }
          function matcherFromTokens(tokens) {
            var checkContext, matcher, j4, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i4 = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
              return elem === checkContext;
            }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
              return indexOf2(checkContext, elem) > -1;
            }, implicitRelative, true), matchers = [function(elem, context, xml) {
              var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
              checkContext = null;
              return ret;
            }];
            for (; i4 < len; i4++) {
              if (matcher = Expr.relative[tokens[i4].type]) {
                matchers = [addCombinator(elementMatcher(matchers), matcher)];
              } else {
                matcher = Expr.filter[tokens[i4].type].apply(null, tokens[i4].matches);
                if (matcher[expando]) {
                  j4 = ++i4;
                  for (; j4 < len; j4++) {
                    if (Expr.relative[tokens[j4].type]) {
                      break;
                    }
                  }
                  return setMatcher(
                    i4 > 1 && elementMatcher(matchers),
                    i4 > 1 && toSelector(
                      tokens.slice(0, i4 - 1).concat({ value: tokens[i4 - 2].type === " " ? "*" : "" })
                    ).replace(rtrim2, "$1"),
                    matcher,
                    i4 < j4 && matcherFromTokens(tokens.slice(i4, j4)),
                    j4 < len && matcherFromTokens(tokens = tokens.slice(j4)),
                    j4 < len && toSelector(tokens)
                  );
                }
                matchers.push(matcher);
              }
            }
            return elementMatcher(matchers);
          }
          function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
              var elem, j4, matcher, matchedCount = 0, i4 = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find["TAG"]("*", outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
              if (outermost) {
                outermostContext = context == document3 || context || outermost;
              }
              for (; i4 !== len && (elem = elems[i4]) != null; i4++) {
                if (byElement && elem) {
                  j4 = 0;
                  if (!context && elem.ownerDocument != document3) {
                    setDocument(elem);
                    xml = !documentIsHTML;
                  }
                  while (matcher = elementMatchers[j4++]) {
                    if (matcher(elem, context || document3, xml)) {
                      results.push(elem);
                      break;
                    }
                  }
                  if (outermost) {
                    dirruns = dirrunsUnique;
                  }
                }
                if (bySet) {
                  if (elem = !matcher && elem) {
                    matchedCount--;
                  }
                  if (seed) {
                    unmatched.push(elem);
                  }
                }
              }
              matchedCount += i4;
              if (bySet && i4 !== matchedCount) {
                j4 = 0;
                while (matcher = setMatchers[j4++]) {
                  matcher(unmatched, setMatched, context, xml);
                }
                if (seed) {
                  if (matchedCount > 0) {
                    while (i4--) {
                      if (!(unmatched[i4] || setMatched[i4])) {
                        setMatched[i4] = pop.call(results);
                      }
                    }
                  }
                  setMatched = condense(setMatched);
                }
                push2.apply(results, setMatched);
                if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                  Sizzle2.uniqueSort(results);
                }
              }
              if (outermost) {
                dirruns = dirrunsUnique;
                outermostContext = contextBackup;
              }
              return unmatched;
            };
            return bySet ? markFunction(superMatcher) : superMatcher;
          }
          compile = Sizzle2.compile = function(selector, match) {
            var i4, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
            if (!cached) {
              if (!match) {
                match = tokenize2(selector);
              }
              i4 = match.length;
              while (i4--) {
                cached = matcherFromTokens(match[i4]);
                if (cached[expando]) {
                  setMatchers.push(cached);
                } else {
                  elementMatchers.push(cached);
                }
              }
              cached = compilerCache(
                selector,
                matcherFromGroupMatchers(elementMatchers, setMatchers)
              );
              cached.selector = selector;
            }
            return cached;
          };
          select = Sizzle2.select = function(selector, context, results, seed) {
            var i4, tokens, token, type, find, compiled = typeof selector === "function" && selector, match = !seed && tokenize2(selector = compiled.selector || selector);
            results = results || [];
            if (match.length === 1) {
              tokens = match[0] = match[0].slice(0);
              if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
                if (!context) {
                  return results;
                } else if (compiled) {
                  context = context.parentNode;
                }
                selector = selector.slice(tokens.shift().value.length);
              }
              i4 = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
              while (i4--) {
                token = tokens[i4];
                if (Expr.relative[type = token.type]) {
                  break;
                }
                if (find = Expr.find[type]) {
                  if (seed = find(
                    token.matches[0].replace(runescape, funescape),
                    rsibling.test(tokens[0].type) && testContext(context.parentNode) || context
                  )) {
                    tokens.splice(i4, 1);
                    selector = seed.length && toSelector(tokens);
                    if (!selector) {
                      push2.apply(results, seed);
                      return results;
                    }
                    break;
                  }
                }
              }
            }
            (compiled || compile(selector, match))(
              seed,
              context,
              !documentIsHTML,
              results,
              !context || rsibling.test(selector) && testContext(context.parentNode) || context
            );
            return results;
          };
          support2.sortStable = expando.split("").sort(sortOrder).join("") === expando;
          support2.detectDuplicates = !!hasDuplicate;
          setDocument();
          support2.sortDetached = assert(function(el) {
            return el.compareDocumentPosition(document3.createElement("fieldset")) & 1;
          });
          if (!assert(function(el) {
            el.innerHTML = "<a href='#'></a>";
            return el.firstChild.getAttribute("href") === "#";
          })) {
            addHandle("type|href|height|width", function(elem, name, isXML2) {
              if (!isXML2) {
                return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
              }
            });
          }
          if (!support2.attributes || !assert(function(el) {
            el.innerHTML = "<input/>";
            el.firstChild.setAttribute("value", "");
            return el.firstChild.getAttribute("value") === "";
          })) {
            addHandle("value", function(elem, _name, isXML2) {
              if (!isXML2 && elem.nodeName.toLowerCase() === "input") {
                return elem.defaultValue;
              }
            });
          }
          if (!assert(function(el) {
            return el.getAttribute("disabled") == null;
          })) {
            addHandle(booleans, function(elem, name, isXML2) {
              var val;
              if (!isXML2) {
                return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
              }
            });
          }
          return Sizzle2;
        }(window2);
        jQuery2.find = Sizzle;
        jQuery2.expr = Sizzle.selectors;
        jQuery2.expr[":"] = jQuery2.expr.pseudos;
        jQuery2.uniqueSort = jQuery2.unique = Sizzle.uniqueSort;
        jQuery2.text = Sizzle.getText;
        jQuery2.isXMLDoc = Sizzle.isXML;
        jQuery2.contains = Sizzle.contains;
        jQuery2.escapeSelector = Sizzle.escape;
        var dir = function(elem, dir2, until) {
          var matched = [], truncate = until !== void 0;
          while ((elem = elem[dir2]) && elem.nodeType !== 9) {
            if (elem.nodeType === 1) {
              if (truncate && jQuery2(elem).is(until)) {
                break;
              }
              matched.push(elem);
            }
          }
          return matched;
        };
        var siblings = function(n2, elem) {
          var matched = [];
          for (; n2; n2 = n2.nextSibling) {
            if (n2.nodeType === 1 && n2 !== elem) {
              matched.push(n2);
            }
          }
          return matched;
        };
        var rneedsContext = jQuery2.expr.match.needsContext;
        function nodeName(elem, name) {
          return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
        }
        var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
        function winnow(elements, qualifier, not) {
          if (isFunction(qualifier)) {
            return jQuery2.grep(elements, function(elem, i3) {
              return !!qualifier.call(elem, i3, elem) !== not;
            });
          }
          if (qualifier.nodeType) {
            return jQuery2.grep(elements, function(elem) {
              return elem === qualifier !== not;
            });
          }
          if (typeof qualifier !== "string") {
            return jQuery2.grep(elements, function(elem) {
              return indexOf.call(qualifier, elem) > -1 !== not;
            });
          }
          return jQuery2.filter(qualifier, elements, not);
        }
        jQuery2.filter = function(expr, elems, not) {
          var elem = elems[0];
          if (not) {
            expr = ":not(" + expr + ")";
          }
          if (elems.length === 1 && elem.nodeType === 1) {
            return jQuery2.find.matchesSelector(elem, expr) ? [elem] : [];
          }
          return jQuery2.find.matches(expr, jQuery2.grep(elems, function(elem2) {
            return elem2.nodeType === 1;
          }));
        };
        jQuery2.fn.extend({
          find: function(selector) {
            var i3, ret, len = this.length, self2 = this;
            if (typeof selector !== "string") {
              return this.pushStack(jQuery2(selector).filter(function() {
                for (i3 = 0; i3 < len; i3++) {
                  if (jQuery2.contains(self2[i3], this)) {
                    return true;
                  }
                }
              }));
            }
            ret = this.pushStack([]);
            for (i3 = 0; i3 < len; i3++) {
              jQuery2.find(selector, self2[i3], ret);
            }
            return len > 1 ? jQuery2.uniqueSort(ret) : ret;
          },
          filter: function(selector) {
            return this.pushStack(winnow(this, selector || [], false));
          },
          not: function(selector) {
            return this.pushStack(winnow(this, selector || [], true));
          },
          is: function(selector) {
            return !!winnow(
              this,
              typeof selector === "string" && rneedsContext.test(selector) ? jQuery2(selector) : selector || [],
              false
            ).length;
          }
        });
        var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init = jQuery2.fn.init = function(selector, context, root) {
          var match, elem;
          if (!selector) {
            return this;
          }
          root = root || rootjQuery;
          if (typeof selector === "string") {
            if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
              match = [null, selector, null];
            } else {
              match = rquickExpr.exec(selector);
            }
            if (match && (match[1] || !context)) {
              if (match[1]) {
                context = context instanceof jQuery2 ? context[0] : context;
                jQuery2.merge(this, jQuery2.parseHTML(
                  match[1],
                  context && context.nodeType ? context.ownerDocument || context : document2,
                  true
                ));
                if (rsingleTag.test(match[1]) && jQuery2.isPlainObject(context)) {
                  for (match in context) {
                    if (isFunction(this[match])) {
                      this[match](context[match]);
                    } else {
                      this.attr(match, context[match]);
                    }
                  }
                }
                return this;
              } else {
                elem = document2.getElementById(match[2]);
                if (elem) {
                  this[0] = elem;
                  this.length = 1;
                }
                return this;
              }
            } else if (!context || context.jquery) {
              return (context || root).find(selector);
            } else {
              return this.constructor(context).find(selector);
            }
          } else if (selector.nodeType) {
            this[0] = selector;
            this.length = 1;
            return this;
          } else if (isFunction(selector)) {
            return root.ready !== void 0 ? root.ready(selector) : selector(jQuery2);
          }
          return jQuery2.makeArray(selector, this);
        };
        init.prototype = jQuery2.fn;
        rootjQuery = jQuery2(document2);
        var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {
          children: true,
          contents: true,
          next: true,
          prev: true
        };
        jQuery2.fn.extend({
          has: function(target) {
            var targets = jQuery2(target, this), l3 = targets.length;
            return this.filter(function() {
              var i3 = 0;
              for (; i3 < l3; i3++) {
                if (jQuery2.contains(this, targets[i3])) {
                  return true;
                }
              }
            });
          },
          closest: function(selectors, context) {
            var cur, i3 = 0, l3 = this.length, matched = [], targets = typeof selectors !== "string" && jQuery2(selectors);
            if (!rneedsContext.test(selectors)) {
              for (; i3 < l3; i3++) {
                for (cur = this[i3]; cur && cur !== context; cur = cur.parentNode) {
                  if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : cur.nodeType === 1 && jQuery2.find.matchesSelector(cur, selectors))) {
                    matched.push(cur);
                    break;
                  }
                }
              }
            }
            return this.pushStack(matched.length > 1 ? jQuery2.uniqueSort(matched) : matched);
          },
          index: function(elem) {
            if (!elem) {
              return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            }
            if (typeof elem === "string") {
              return indexOf.call(jQuery2(elem), this[0]);
            }
            return indexOf.call(
              this,
              elem.jquery ? elem[0] : elem
            );
          },
          add: function(selector, context) {
            return this.pushStack(
              jQuery2.uniqueSort(
                jQuery2.merge(this.get(), jQuery2(selector, context))
              )
            );
          },
          addBack: function(selector) {
            return this.add(
              selector == null ? this.prevObject : this.prevObject.filter(selector)
            );
          }
        });
        function sibling(cur, dir2) {
          while ((cur = cur[dir2]) && cur.nodeType !== 1) {
          }
          return cur;
        }
        jQuery2.each({
          parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
          },
          parents: function(elem) {
            return dir(elem, "parentNode");
          },
          parentsUntil: function(elem, _i, until) {
            return dir(elem, "parentNode", until);
          },
          next: function(elem) {
            return sibling(elem, "nextSibling");
          },
          prev: function(elem) {
            return sibling(elem, "previousSibling");
          },
          nextAll: function(elem) {
            return dir(elem, "nextSibling");
          },
          prevAll: function(elem) {
            return dir(elem, "previousSibling");
          },
          nextUntil: function(elem, _i, until) {
            return dir(elem, "nextSibling", until);
          },
          prevUntil: function(elem, _i, until) {
            return dir(elem, "previousSibling", until);
          },
          siblings: function(elem) {
            return siblings((elem.parentNode || {}).firstChild, elem);
          },
          children: function(elem) {
            return siblings(elem.firstChild);
          },
          contents: function(elem) {
            if (elem.contentDocument != null && getProto(elem.contentDocument)) {
              return elem.contentDocument;
            }
            if (nodeName(elem, "template")) {
              elem = elem.content || elem;
            }
            return jQuery2.merge([], elem.childNodes);
          }
        }, function(name, fn) {
          jQuery2.fn[name] = function(until, selector) {
            var matched = jQuery2.map(this, fn, until);
            if (name.slice(-5) !== "Until") {
              selector = until;
            }
            if (selector && typeof selector === "string") {
              matched = jQuery2.filter(selector, matched);
            }
            if (this.length > 1) {
              if (!guaranteedUnique[name]) {
                jQuery2.uniqueSort(matched);
              }
              if (rparentsprev.test(name)) {
                matched.reverse();
              }
            }
            return this.pushStack(matched);
          };
        });
        var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
        function createOptions(options) {
          var object = {};
          jQuery2.each(options.match(rnothtmlwhite) || [], function(_3, flag) {
            object[flag] = true;
          });
          return object;
        }
        jQuery2.Callbacks = function(options) {
          options = typeof options === "string" ? createOptions(options) : jQuery2.extend({}, options);
          var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function() {
            locked = locked || options.once;
            fired = firing = true;
            for (; queue.length; firingIndex = -1) {
              memory = queue.shift();
              while (++firingIndex < list.length) {
                if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                  firingIndex = list.length;
                  memory = false;
                }
              }
            }
            if (!options.memory) {
              memory = false;
            }
            firing = false;
            if (locked) {
              if (memory) {
                list = [];
              } else {
                list = "";
              }
            }
          }, self2 = {
            add: function() {
              if (list) {
                if (memory && !firing) {
                  firingIndex = list.length - 1;
                  queue.push(memory);
                }
                (function add2(args) {
                  jQuery2.each(args, function(_3, arg) {
                    if (isFunction(arg)) {
                      if (!options.unique || !self2.has(arg)) {
                        list.push(arg);
                      }
                    } else if (arg && arg.length && toType(arg) !== "string") {
                      add2(arg);
                    }
                  });
                })(arguments);
                if (memory && !firing) {
                  fire();
                }
              }
              return this;
            },
            remove: function() {
              jQuery2.each(arguments, function(_3, arg) {
                var index;
                while ((index = jQuery2.inArray(arg, list, index)) > -1) {
                  list.splice(index, 1);
                  if (index <= firingIndex) {
                    firingIndex--;
                  }
                }
              });
              return this;
            },
            has: function(fn) {
              return fn ? jQuery2.inArray(fn, list) > -1 : list.length > 0;
            },
            empty: function() {
              if (list) {
                list = [];
              }
              return this;
            },
            disable: function() {
              locked = queue = [];
              list = memory = "";
              return this;
            },
            disabled: function() {
              return !list;
            },
            lock: function() {
              locked = queue = [];
              if (!memory && !firing) {
                list = memory = "";
              }
              return this;
            },
            locked: function() {
              return !!locked;
            },
            fireWith: function(context, args) {
              if (!locked) {
                args = args || [];
                args = [context, args.slice ? args.slice() : args];
                queue.push(args);
                if (!firing) {
                  fire();
                }
              }
              return this;
            },
            fire: function() {
              self2.fireWith(this, arguments);
              return this;
            },
            fired: function() {
              return !!fired;
            }
          };
          return self2;
        };
        function Identity(v3) {
          return v3;
        }
        function Thrower(ex) {
          throw ex;
        }
        function adoptValue(value, resolve, reject, noValue) {
          var method;
          try {
            if (value && isFunction(method = value.promise)) {
              method.call(value).done(resolve).fail(reject);
            } else if (value && isFunction(method = value.then)) {
              method.call(value, resolve, reject);
            } else {
              resolve.apply(void 0, [value].slice(noValue));
            }
          } catch (value2) {
            reject.apply(void 0, [value2]);
          }
        }
        jQuery2.extend({
          Deferred: function(func) {
            var tuples = [
              [
                "notify",
                "progress",
                jQuery2.Callbacks("memory"),
                jQuery2.Callbacks("memory"),
                2
              ],
              [
                "resolve",
                "done",
                jQuery2.Callbacks("once memory"),
                jQuery2.Callbacks("once memory"),
                0,
                "resolved"
              ],
              [
                "reject",
                "fail",
                jQuery2.Callbacks("once memory"),
                jQuery2.Callbacks("once memory"),
                1,
                "rejected"
              ]
            ], state = "pending", promise = {
              state: function() {
                return state;
              },
              always: function() {
                deferred.done(arguments).fail(arguments);
                return this;
              },
              "catch": function(fn) {
                return promise.then(null, fn);
              },
              pipe: function() {
                var fns = arguments;
                return jQuery2.Deferred(function(newDefer) {
                  jQuery2.each(tuples, function(_i, tuple) {
                    var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                    deferred[tuple[1]](function() {
                      var returned = fn && fn.apply(this, arguments);
                      if (returned && isFunction(returned.promise)) {
                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                      } else {
                        newDefer[tuple[0] + "With"](
                          this,
                          fn ? [returned] : arguments
                        );
                      }
                    });
                  });
                  fns = null;
                }).promise();
              },
              then: function(onFulfilled, onRejected, onProgress) {
                var maxDepth = 0;
                function resolve(depth, deferred2, handler, special) {
                  return function() {
                    var that = this, args = arguments, mightThrow = function() {
                      var returned, then;
                      if (depth < maxDepth) {
                        return;
                      }
                      returned = handler.apply(that, args);
                      if (returned === deferred2.promise()) {
                        throw new TypeError("Thenable self-resolution");
                      }
                      then = returned && (typeof returned === "object" || typeof returned === "function") && returned.then;
                      if (isFunction(then)) {
                        if (special) {
                          then.call(
                            returned,
                            resolve(maxDepth, deferred2, Identity, special),
                            resolve(maxDepth, deferred2, Thrower, special)
                          );
                        } else {
                          maxDepth++;
                          then.call(
                            returned,
                            resolve(maxDepth, deferred2, Identity, special),
                            resolve(maxDepth, deferred2, Thrower, special),
                            resolve(
                              maxDepth,
                              deferred2,
                              Identity,
                              deferred2.notifyWith
                            )
                          );
                        }
                      } else {
                        if (handler !== Identity) {
                          that = void 0;
                          args = [returned];
                        }
                        (special || deferred2.resolveWith)(that, args);
                      }
                    }, process = special ? mightThrow : function() {
                      try {
                        mightThrow();
                      } catch (e3) {
                        if (jQuery2.Deferred.exceptionHook) {
                          jQuery2.Deferred.exceptionHook(
                            e3,
                            process.stackTrace
                          );
                        }
                        if (depth + 1 >= maxDepth) {
                          if (handler !== Thrower) {
                            that = void 0;
                            args = [e3];
                          }
                          deferred2.rejectWith(that, args);
                        }
                      }
                    };
                    if (depth) {
                      process();
                    } else {
                      if (jQuery2.Deferred.getStackHook) {
                        process.stackTrace = jQuery2.Deferred.getStackHook();
                      }
                      window2.setTimeout(process);
                    }
                  };
                }
                return jQuery2.Deferred(function(newDefer) {
                  tuples[0][3].add(
                    resolve(
                      0,
                      newDefer,
                      isFunction(onProgress) ? onProgress : Identity,
                      newDefer.notifyWith
                    )
                  );
                  tuples[1][3].add(
                    resolve(
                      0,
                      newDefer,
                      isFunction(onFulfilled) ? onFulfilled : Identity
                    )
                  );
                  tuples[2][3].add(
                    resolve(
                      0,
                      newDefer,
                      isFunction(onRejected) ? onRejected : Thrower
                    )
                  );
                }).promise();
              },
              promise: function(obj) {
                return obj != null ? jQuery2.extend(obj, promise) : promise;
              }
            }, deferred = {};
            jQuery2.each(tuples, function(i3, tuple) {
              var list = tuple[2], stateString = tuple[5];
              promise[tuple[1]] = list.add;
              if (stateString) {
                list.add(
                  function() {
                    state = stateString;
                  },
                  tuples[3 - i3][2].disable,
                  tuples[3 - i3][3].disable,
                  tuples[0][2].lock,
                  tuples[0][3].lock
                );
              }
              list.add(tuple[3].fire);
              deferred[tuple[0]] = function() {
                deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments);
                return this;
              };
              deferred[tuple[0] + "With"] = list.fireWith;
            });
            promise.promise(deferred);
            if (func) {
              func.call(deferred, deferred);
            }
            return deferred;
          },
          when: function(singleValue) {
            var remaining = arguments.length, i3 = remaining, resolveContexts = Array(i3), resolveValues = slice.call(arguments), primary = jQuery2.Deferred(), updateFunc = function(i4) {
              return function(value) {
                resolveContexts[i4] = this;
                resolveValues[i4] = arguments.length > 1 ? slice.call(arguments) : value;
                if (!--remaining) {
                  primary.resolveWith(resolveContexts, resolveValues);
                }
              };
            };
            if (remaining <= 1) {
              adoptValue(
                singleValue,
                primary.done(updateFunc(i3)).resolve,
                primary.reject,
                !remaining
              );
              if (primary.state() === "pending" || isFunction(resolveValues[i3] && resolveValues[i3].then)) {
                return primary.then();
              }
            }
            while (i3--) {
              adoptValue(resolveValues[i3], updateFunc(i3), primary.reject);
            }
            return primary.promise();
          }
        });
        var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        jQuery2.Deferred.exceptionHook = function(error2, stack) {
          if (window2.console && window2.console.warn && error2 && rerrorNames.test(error2.name)) {
            window2.console.warn("jQuery.Deferred exception: " + error2.message, error2.stack, stack);
          }
        };
        jQuery2.readyException = function(error2) {
          window2.setTimeout(function() {
            throw error2;
          });
        };
        var readyList = jQuery2.Deferred();
        jQuery2.fn.ready = function(fn) {
          readyList.then(fn).catch(function(error2) {
            jQuery2.readyException(error2);
          });
          return this;
        };
        jQuery2.extend({
          isReady: false,
          readyWait: 1,
          ready: function(wait) {
            if (wait === true ? --jQuery2.readyWait : jQuery2.isReady) {
              return;
            }
            jQuery2.isReady = true;
            if (wait !== true && --jQuery2.readyWait > 0) {
              return;
            }
            readyList.resolveWith(document2, [jQuery2]);
          }
        });
        jQuery2.ready.then = readyList.then;
        function completed() {
          document2.removeEventListener("DOMContentLoaded", completed);
          window2.removeEventListener("load", completed);
          jQuery2.ready();
        }
        if (document2.readyState === "complete" || document2.readyState !== "loading" && !document2.documentElement.doScroll) {
          window2.setTimeout(jQuery2.ready);
        } else {
          document2.addEventListener("DOMContentLoaded", completed);
          window2.addEventListener("load", completed);
        }
        var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
          var i3 = 0, len = elems.length, bulk = key == null;
          if (toType(key) === "object") {
            chainable = true;
            for (i3 in key) {
              access(elems, fn, i3, key[i3], true, emptyGet, raw);
            }
          } else if (value !== void 0) {
            chainable = true;
            if (!isFunction(value)) {
              raw = true;
            }
            if (bulk) {
              if (raw) {
                fn.call(elems, value);
                fn = null;
              } else {
                bulk = fn;
                fn = function(elem, _key, value2) {
                  return bulk.call(jQuery2(elem), value2);
                };
              }
            }
            if (fn) {
              for (; i3 < len; i3++) {
                fn(
                  elems[i3],
                  key,
                  raw ? value : value.call(elems[i3], i3, fn(elems[i3], key))
                );
              }
            }
          }
          if (chainable) {
            return elems;
          }
          if (bulk) {
            return fn.call(elems);
          }
          return len ? fn(elems[0], key) : emptyGet;
        };
        var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
        function fcamelCase(_all, letter) {
          return letter.toUpperCase();
        }
        function camelCase(string) {
          return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
        }
        var acceptData = function(owner) {
          return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
        };
        function Data() {
          this.expando = jQuery2.expando + Data.uid++;
        }
        Data.uid = 1;
        Data.prototype = {
          cache: function(owner) {
            var value = owner[this.expando];
            if (!value) {
              value = {};
              if (acceptData(owner)) {
                if (owner.nodeType) {
                  owner[this.expando] = value;
                } else {
                  Object.defineProperty(owner, this.expando, {
                    value,
                    configurable: true
                  });
                }
              }
            }
            return value;
          },
          set: function(owner, data, value) {
            var prop, cache = this.cache(owner);
            if (typeof data === "string") {
              cache[camelCase(data)] = value;
            } else {
              for (prop in data) {
                cache[camelCase(prop)] = data[prop];
              }
            }
            return cache;
          },
          get: function(owner, key) {
            return key === void 0 ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)];
          },
          access: function(owner, key, value) {
            if (key === void 0 || key && typeof key === "string" && value === void 0) {
              return this.get(owner, key);
            }
            this.set(owner, key, value);
            return value !== void 0 ? value : key;
          },
          remove: function(owner, key) {
            var i3, cache = owner[this.expando];
            if (cache === void 0) {
              return;
            }
            if (key !== void 0) {
              if (Array.isArray(key)) {
                key = key.map(camelCase);
              } else {
                key = camelCase(key);
                key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
              }
              i3 = key.length;
              while (i3--) {
                delete cache[key[i3]];
              }
            }
            if (key === void 0 || jQuery2.isEmptyObject(cache)) {
              if (owner.nodeType) {
                owner[this.expando] = void 0;
              } else {
                delete owner[this.expando];
              }
            }
          },
          hasData: function(owner) {
            var cache = owner[this.expando];
            return cache !== void 0 && !jQuery2.isEmptyObject(cache);
          }
        };
        var dataPriv = new Data();
        var dataUser = new Data();
        var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
        function getData(data) {
          if (data === "true") {
            return true;
          }
          if (data === "false") {
            return false;
          }
          if (data === "null") {
            return null;
          }
          if (data === +data + "") {
            return +data;
          }
          if (rbrace.test(data)) {
            return JSON.parse(data);
          }
          return data;
        }
        function dataAttr(elem, key, data) {
          var name;
          if (data === void 0 && elem.nodeType === 1) {
            name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
              try {
                data = getData(data);
              } catch (e3) {
              }
              dataUser.set(elem, key, data);
            } else {
              data = void 0;
            }
          }
          return data;
        }
        jQuery2.extend({
          hasData: function(elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
          },
          data: function(elem, name, data) {
            return dataUser.access(elem, name, data);
          },
          removeData: function(elem, name) {
            dataUser.remove(elem, name);
          },
          _data: function(elem, name, data) {
            return dataPriv.access(elem, name, data);
          },
          _removeData: function(elem, name) {
            dataPriv.remove(elem, name);
          }
        });
        jQuery2.fn.extend({
          data: function(key, value) {
            var i3, name, data, elem = this[0], attrs = elem && elem.attributes;
            if (key === void 0) {
              if (this.length) {
                data = dataUser.get(elem);
                if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                  i3 = attrs.length;
                  while (i3--) {
                    if (attrs[i3]) {
                      name = attrs[i3].name;
                      if (name.indexOf("data-") === 0) {
                        name = camelCase(name.slice(5));
                        dataAttr(elem, name, data[name]);
                      }
                    }
                  }
                  dataPriv.set(elem, "hasDataAttrs", true);
                }
              }
              return data;
            }
            if (typeof key === "object") {
              return this.each(function() {
                dataUser.set(this, key);
              });
            }
            return access(this, function(value2) {
              var data2;
              if (elem && value2 === void 0) {
                data2 = dataUser.get(elem, key);
                if (data2 !== void 0) {
                  return data2;
                }
                data2 = dataAttr(elem, key);
                if (data2 !== void 0) {
                  return data2;
                }
                return;
              }
              this.each(function() {
                dataUser.set(this, key, value2);
              });
            }, null, value, arguments.length > 1, null, true);
          },
          removeData: function(key) {
            return this.each(function() {
              dataUser.remove(this, key);
            });
          }
        });
        jQuery2.extend({
          queue: function(elem, type, data) {
            var queue;
            if (elem) {
              type = (type || "fx") + "queue";
              queue = dataPriv.get(elem, type);
              if (data) {
                if (!queue || Array.isArray(data)) {
                  queue = dataPriv.access(elem, type, jQuery2.makeArray(data));
                } else {
                  queue.push(data);
                }
              }
              return queue || [];
            }
          },
          dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery2.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery2._queueHooks(elem, type), next = function() {
              jQuery2.dequeue(elem, type);
            };
            if (fn === "inprogress") {
              fn = queue.shift();
              startLength--;
            }
            if (fn) {
              if (type === "fx") {
                queue.unshift("inprogress");
              }
              delete hooks.stop;
              fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) {
              hooks.empty.fire();
            }
          },
          _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
              empty: jQuery2.Callbacks("once memory").add(function() {
                dataPriv.remove(elem, [type + "queue", key]);
              })
            });
          }
        });
        jQuery2.fn.extend({
          queue: function(type, data) {
            var setter = 2;
            if (typeof type !== "string") {
              data = type;
              type = "fx";
              setter--;
            }
            if (arguments.length < setter) {
              return jQuery2.queue(this[0], type);
            }
            return data === void 0 ? this : this.each(function() {
              var queue = jQuery2.queue(this, type, data);
              jQuery2._queueHooks(this, type);
              if (type === "fx" && queue[0] !== "inprogress") {
                jQuery2.dequeue(this, type);
              }
            });
          },
          dequeue: function(type) {
            return this.each(function() {
              jQuery2.dequeue(this, type);
            });
          },
          clearQueue: function(type) {
            return this.queue(type || "fx", []);
          },
          promise: function(type, obj) {
            var tmp, count = 1, defer = jQuery2.Deferred(), elements = this, i3 = this.length, resolve = function() {
              if (!--count) {
                defer.resolveWith(elements, [elements]);
              }
            };
            if (typeof type !== "string") {
              obj = type;
              type = void 0;
            }
            type = type || "fx";
            while (i3--) {
              tmp = dataPriv.get(elements[i3], type + "queueHooks");
              if (tmp && tmp.empty) {
                count++;
                tmp.empty.add(resolve);
              }
            }
            resolve();
            return defer.promise(obj);
          }
        });
        var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
        var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
        var cssExpand = ["Top", "Right", "Bottom", "Left"];
        var documentElement = document2.documentElement;
        var isAttached = function(elem) {
          return jQuery2.contains(elem.ownerDocument, elem);
        }, composed = { composed: true };
        if (documentElement.getRootNode) {
          isAttached = function(elem) {
            return jQuery2.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
          };
        }
        var isHiddenWithinTree = function(elem, el) {
          elem = el || elem;
          return elem.style.display === "none" || elem.style.display === "" && isAttached(elem) && jQuery2.css(elem, "display") === "none";
        };
        function adjustCSS(elem, prop, valueParts, tween) {
          var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
            return tween.cur();
          } : function() {
            return jQuery2.css(elem, prop, "");
          }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery2.cssNumber[prop] ? "" : "px"), initialInUnit = elem.nodeType && (jQuery2.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery2.css(elem, prop));
          if (initialInUnit && initialInUnit[3] !== unit) {
            initial = initial / 2;
            unit = unit || initialInUnit[3];
            initialInUnit = +initial || 1;
            while (maxIterations--) {
              jQuery2.style(elem, prop, initialInUnit + unit);
              if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
                maxIterations = 0;
              }
              initialInUnit = initialInUnit / scale;
            }
            initialInUnit = initialInUnit * 2;
            jQuery2.style(elem, prop, initialInUnit + unit);
            valueParts = valueParts || [];
          }
          if (valueParts) {
            initialInUnit = +initialInUnit || +initial || 0;
            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
            if (tween) {
              tween.unit = unit;
              tween.start = initialInUnit;
              tween.end = adjusted;
            }
          }
          return adjusted;
        }
        var defaultDisplayMap = {};
        function getDefaultDisplay(elem) {
          var temp, doc = elem.ownerDocument, nodeName2 = elem.nodeName, display = defaultDisplayMap[nodeName2];
          if (display) {
            return display;
          }
          temp = doc.body.appendChild(doc.createElement(nodeName2));
          display = jQuery2.css(temp, "display");
          temp.parentNode.removeChild(temp);
          if (display === "none") {
            display = "block";
          }
          defaultDisplayMap[nodeName2] = display;
          return display;
        }
        function showHide(elements, show) {
          var display, elem, values = [], index = 0, length = elements.length;
          for (; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
              continue;
            }
            display = elem.style.display;
            if (show) {
              if (display === "none") {
                values[index] = dataPriv.get(elem, "display") || null;
                if (!values[index]) {
                  elem.style.display = "";
                }
              }
              if (elem.style.display === "" && isHiddenWithinTree(elem)) {
                values[index] = getDefaultDisplay(elem);
              }
            } else {
              if (display !== "none") {
                values[index] = "none";
                dataPriv.set(elem, "display", display);
              }
            }
          }
          for (index = 0; index < length; index++) {
            if (values[index] != null) {
              elements[index].style.display = values[index];
            }
          }
          return elements;
        }
        jQuery2.fn.extend({
          show: function() {
            return showHide(this, true);
          },
          hide: function() {
            return showHide(this);
          },
          toggle: function(state) {
            if (typeof state === "boolean") {
              return state ? this.show() : this.hide();
            }
            return this.each(function() {
              if (isHiddenWithinTree(this)) {
                jQuery2(this).show();
              } else {
                jQuery2(this).hide();
              }
            });
          }
        });
        var rcheckableType = /^(?:checkbox|radio)$/i;
        var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
        var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
        (function() {
          var fragment = document2.createDocumentFragment(), div = fragment.appendChild(document2.createElement("div")), input = document2.createElement("input");
          input.setAttribute("type", "radio");
          input.setAttribute("checked", "checked");
          input.setAttribute("name", "t");
          div.appendChild(input);
          support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
          div.innerHTML = "<textarea>x</textarea>";
          support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
          div.innerHTML = "<option></option>";
          support.option = !!div.lastChild;
        })();
        var wrapMap = {
          thead: [1, "<table>", "</table>"],
          col: [2, "<table><colgroup>", "</colgroup></table>"],
          tr: [2, "<table><tbody>", "</tbody></table>"],
          td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
          _default: [0, "", ""]
        };
        wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
        wrapMap.th = wrapMap.td;
        if (!support.option) {
          wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
        }
        function getAll(context, tag) {
          var ret;
          if (typeof context.getElementsByTagName !== "undefined") {
            ret = context.getElementsByTagName(tag || "*");
          } else if (typeof context.querySelectorAll !== "undefined") {
            ret = context.querySelectorAll(tag || "*");
          } else {
            ret = [];
          }
          if (tag === void 0 || tag && nodeName(context, tag)) {
            return jQuery2.merge([context], ret);
          }
          return ret;
        }
        function setGlobalEval(elems, refElements) {
          var i3 = 0, l3 = elems.length;
          for (; i3 < l3; i3++) {
            dataPriv.set(
              elems[i3],
              "globalEval",
              !refElements || dataPriv.get(refElements[i3], "globalEval")
            );
          }
        }
        var rhtml = /<|&#?\w+;/;
        function buildFragment(elems, context, scripts, selection, ignored) {
          var elem, tmp, tag, wrap, attached, j4, fragment = context.createDocumentFragment(), nodes = [], i3 = 0, l3 = elems.length;
          for (; i3 < l3; i3++) {
            elem = elems[i3];
            if (elem || elem === 0) {
              if (toType(elem) === "object") {
                jQuery2.merge(nodes, elem.nodeType ? [elem] : elem);
              } else if (!rhtml.test(elem)) {
                nodes.push(context.createTextNode(elem));
              } else {
                tmp = tmp || fragment.appendChild(context.createElement("div"));
                tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
                wrap = wrapMap[tag] || wrapMap._default;
                tmp.innerHTML = wrap[1] + jQuery2.htmlPrefilter(elem) + wrap[2];
                j4 = wrap[0];
                while (j4--) {
                  tmp = tmp.lastChild;
                }
                jQuery2.merge(nodes, tmp.childNodes);
                tmp = fragment.firstChild;
                tmp.textContent = "";
              }
            }
          }
          fragment.textContent = "";
          i3 = 0;
          while (elem = nodes[i3++]) {
            if (selection && jQuery2.inArray(elem, selection) > -1) {
              if (ignored) {
                ignored.push(elem);
              }
              continue;
            }
            attached = isAttached(elem);
            tmp = getAll(fragment.appendChild(elem), "script");
            if (attached) {
              setGlobalEval(tmp);
            }
            if (scripts) {
              j4 = 0;
              while (elem = tmp[j4++]) {
                if (rscriptType.test(elem.type || "")) {
                  scripts.push(elem);
                }
              }
            }
          }
          return fragment;
        }
        var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
        function returnTrue() {
          return true;
        }
        function returnFalse() {
          return false;
        }
        function expectSync(elem, type) {
          return elem === safeActiveElement() === (type === "focus");
        }
        function safeActiveElement() {
          try {
            return document2.activeElement;
          } catch (err) {
          }
        }
        function on(elem, types, selector, data, fn, one) {
          var origFn, type;
          if (typeof types === "object") {
            if (typeof selector !== "string") {
              data = data || selector;
              selector = void 0;
            }
            for (type in types) {
              on(elem, type, selector, data, types[type], one);
            }
            return elem;
          }
          if (data == null && fn == null) {
            fn = selector;
            data = selector = void 0;
          } else if (fn == null) {
            if (typeof selector === "string") {
              fn = data;
              data = void 0;
            } else {
              fn = data;
              data = selector;
              selector = void 0;
            }
          }
          if (fn === false) {
            fn = returnFalse;
          } else if (!fn) {
            return elem;
          }
          if (one === 1) {
            origFn = fn;
            fn = function(event2) {
              jQuery2().off(event2);
              return origFn.apply(this, arguments);
            };
            fn.guid = origFn.guid || (origFn.guid = jQuery2.guid++);
          }
          return elem.each(function() {
            jQuery2.event.add(this, types, fn, data, selector);
          });
        }
        jQuery2.event = {
          global: {},
          add: function(elem, types, handler, data, selector) {
            var handleObjIn, eventHandle, tmp, events, t3, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
            if (!acceptData(elem)) {
              return;
            }
            if (handler.handler) {
              handleObjIn = handler;
              handler = handleObjIn.handler;
              selector = handleObjIn.selector;
            }
            if (selector) {
              jQuery2.find.matchesSelector(documentElement, selector);
            }
            if (!handler.guid) {
              handler.guid = jQuery2.guid++;
            }
            if (!(events = elemData.events)) {
              events = elemData.events = /* @__PURE__ */ Object.create(null);
            }
            if (!(eventHandle = elemData.handle)) {
              eventHandle = elemData.handle = function(e3) {
                return typeof jQuery2 !== "undefined" && jQuery2.event.triggered !== e3.type ? jQuery2.event.dispatch.apply(elem, arguments) : void 0;
              };
            }
            types = (types || "").match(rnothtmlwhite) || [""];
            t3 = types.length;
            while (t3--) {
              tmp = rtypenamespace.exec(types[t3]) || [];
              type = origType = tmp[1];
              namespaces = (tmp[2] || "").split(".").sort();
              if (!type) {
                continue;
              }
              special = jQuery2.event.special[type] || {};
              type = (selector ? special.delegateType : special.bindType) || type;
              special = jQuery2.event.special[type] || {};
              handleObj = jQuery2.extend({
                type,
                origType,
                data,
                handler,
                guid: handler.guid,
                selector,
                needsContext: selector && jQuery2.expr.match.needsContext.test(selector),
                namespace: namespaces.join(".")
              }, handleObjIn);
              if (!(handlers = events[type])) {
                handlers = events[type] = [];
                handlers.delegateCount = 0;
                if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                  if (elem.addEventListener) {
                    elem.addEventListener(type, eventHandle);
                  }
                }
              }
              if (special.add) {
                special.add.call(elem, handleObj);
                if (!handleObj.handler.guid) {
                  handleObj.handler.guid = handler.guid;
                }
              }
              if (selector) {
                handlers.splice(handlers.delegateCount++, 0, handleObj);
              } else {
                handlers.push(handleObj);
              }
              jQuery2.event.global[type] = true;
            }
          },
          remove: function(elem, types, handler, selector, mappedTypes) {
            var j4, origCount, tmp, events, t3, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (!elemData || !(events = elemData.events)) {
              return;
            }
            types = (types || "").match(rnothtmlwhite) || [""];
            t3 = types.length;
            while (t3--) {
              tmp = rtypenamespace.exec(types[t3]) || [];
              type = origType = tmp[1];
              namespaces = (tmp[2] || "").split(".").sort();
              if (!type) {
                for (type in events) {
                  jQuery2.event.remove(elem, type + types[t3], handler, selector, true);
                }
                continue;
              }
              special = jQuery2.event.special[type] || {};
              type = (selector ? special.delegateType : special.bindType) || type;
              handlers = events[type] || [];
              tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
              origCount = j4 = handlers.length;
              while (j4--) {
                handleObj = handlers[j4];
                if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                  handlers.splice(j4, 1);
                  if (handleObj.selector) {
                    handlers.delegateCount--;
                  }
                  if (special.remove) {
                    special.remove.call(elem, handleObj);
                  }
                }
              }
              if (origCount && !handlers.length) {
                if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                  jQuery2.removeEvent(elem, type, elemData.handle);
                }
                delete events[type];
              }
            }
            if (jQuery2.isEmptyObject(events)) {
              dataPriv.remove(elem, "handle events");
            }
          },
          dispatch: function(nativeEvent) {
            var i3, j4, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), event2 = jQuery2.event.fix(nativeEvent), handlers = (dataPriv.get(this, "events") || /* @__PURE__ */ Object.create(null))[event2.type] || [], special = jQuery2.event.special[event2.type] || {};
            args[0] = event2;
            for (i3 = 1; i3 < arguments.length; i3++) {
              args[i3] = arguments[i3];
            }
            event2.delegateTarget = this;
            if (special.preDispatch && special.preDispatch.call(this, event2) === false) {
              return;
            }
            handlerQueue = jQuery2.event.handlers.call(this, event2, handlers);
            i3 = 0;
            while ((matched = handlerQueue[i3++]) && !event2.isPropagationStopped()) {
              event2.currentTarget = matched.elem;
              j4 = 0;
              while ((handleObj = matched.handlers[j4++]) && !event2.isImmediatePropagationStopped()) {
                if (!event2.rnamespace || handleObj.namespace === false || event2.rnamespace.test(handleObj.namespace)) {
                  event2.handleObj = handleObj;
                  event2.data = handleObj.data;
                  ret = ((jQuery2.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                  if (ret !== void 0) {
                    if ((event2.result = ret) === false) {
                      event2.preventDefault();
                      event2.stopPropagation();
                    }
                  }
                }
              }
            }
            if (special.postDispatch) {
              special.postDispatch.call(this, event2);
            }
            return event2.result;
          },
          handlers: function(event2, handlers) {
            var i3, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event2.target;
            if (delegateCount && cur.nodeType && !(event2.type === "click" && event2.button >= 1)) {
              for (; cur !== this; cur = cur.parentNode || this) {
                if (cur.nodeType === 1 && !(event2.type === "click" && cur.disabled === true)) {
                  matchedHandlers = [];
                  matchedSelectors = {};
                  for (i3 = 0; i3 < delegateCount; i3++) {
                    handleObj = handlers[i3];
                    sel = handleObj.selector + " ";
                    if (matchedSelectors[sel] === void 0) {
                      matchedSelectors[sel] = handleObj.needsContext ? jQuery2(sel, this).index(cur) > -1 : jQuery2.find(sel, this, null, [cur]).length;
                    }
                    if (matchedSelectors[sel]) {
                      matchedHandlers.push(handleObj);
                    }
                  }
                  if (matchedHandlers.length) {
                    handlerQueue.push({ elem: cur, handlers: matchedHandlers });
                  }
                }
              }
            }
            cur = this;
            if (delegateCount < handlers.length) {
              handlerQueue.push({ elem: cur, handlers: handlers.slice(delegateCount) });
            }
            return handlerQueue;
          },
          addProp: function(name, hook) {
            Object.defineProperty(jQuery2.Event.prototype, name, {
              enumerable: true,
              configurable: true,
              get: isFunction(hook) ? function() {
                if (this.originalEvent) {
                  return hook(this.originalEvent);
                }
              } : function() {
                if (this.originalEvent) {
                  return this.originalEvent[name];
                }
              },
              set: function(value) {
                Object.defineProperty(this, name, {
                  enumerable: true,
                  configurable: true,
                  writable: true,
                  value
                });
              }
            });
          },
          fix: function(originalEvent) {
            return originalEvent[jQuery2.expando] ? originalEvent : new jQuery2.Event(originalEvent);
          },
          special: {
            load: {
              noBubble: true
            },
            click: {
              setup: function(data) {
                var el = this || data;
                if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                  leverageNative(el, "click", returnTrue);
                }
                return false;
              },
              trigger: function(data) {
                var el = this || data;
                if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                  leverageNative(el, "click");
                }
                return true;
              },
              _default: function(event2) {
                var target = event2.target;
                return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
              }
            },
            beforeunload: {
              postDispatch: function(event2) {
                if (event2.result !== void 0 && event2.originalEvent) {
                  event2.originalEvent.returnValue = event2.result;
                }
              }
            }
          }
        };
        function leverageNative(el, type, expectSync2) {
          if (!expectSync2) {
            if (dataPriv.get(el, type) === void 0) {
              jQuery2.event.add(el, type, returnTrue);
            }
            return;
          }
          dataPriv.set(el, type, false);
          jQuery2.event.add(el, type, {
            namespace: false,
            handler: function(event2) {
              var notAsync, result, saved = dataPriv.get(this, type);
              if (event2.isTrigger & 1 && this[type]) {
                if (!saved.length) {
                  saved = slice.call(arguments);
                  dataPriv.set(this, type, saved);
                  notAsync = expectSync2(this, type);
                  this[type]();
                  result = dataPriv.get(this, type);
                  if (saved !== result || notAsync) {
                    dataPriv.set(this, type, false);
                  } else {
                    result = {};
                  }
                  if (saved !== result) {
                    event2.stopImmediatePropagation();
                    event2.preventDefault();
                    return result && result.value;
                  }
                } else if ((jQuery2.event.special[type] || {}).delegateType) {
                  event2.stopPropagation();
                }
              } else if (saved.length) {
                dataPriv.set(this, type, {
                  value: jQuery2.event.trigger(
                    jQuery2.extend(saved[0], jQuery2.Event.prototype),
                    saved.slice(1),
                    this
                  )
                });
                event2.stopImmediatePropagation();
              }
            }
          });
        }
        jQuery2.removeEvent = function(elem, type, handle) {
          if (elem.removeEventListener) {
            elem.removeEventListener(type, handle);
          }
        };
        jQuery2.Event = function(src, props) {
          if (!(this instanceof jQuery2.Event)) {
            return new jQuery2.Event(src, props);
          }
          if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === void 0 && src.returnValue === false ? returnTrue : returnFalse;
            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
            this.currentTarget = src.currentTarget;
            this.relatedTarget = src.relatedTarget;
          } else {
            this.type = src;
          }
          if (props) {
            jQuery2.extend(this, props);
          }
          this.timeStamp = src && src.timeStamp || Date.now();
          this[jQuery2.expando] = true;
        };
        jQuery2.Event.prototype = {
          constructor: jQuery2.Event,
          isDefaultPrevented: returnFalse,
          isPropagationStopped: returnFalse,
          isImmediatePropagationStopped: returnFalse,
          isSimulated: false,
          preventDefault: function() {
            var e3 = this.originalEvent;
            this.isDefaultPrevented = returnTrue;
            if (e3 && !this.isSimulated) {
              e3.preventDefault();
            }
          },
          stopPropagation: function() {
            var e3 = this.originalEvent;
            this.isPropagationStopped = returnTrue;
            if (e3 && !this.isSimulated) {
              e3.stopPropagation();
            }
          },
          stopImmediatePropagation: function() {
            var e3 = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue;
            if (e3 && !this.isSimulated) {
              e3.stopImmediatePropagation();
            }
            this.stopPropagation();
          }
        };
        jQuery2.each({
          altKey: true,
          bubbles: true,
          cancelable: true,
          changedTouches: true,
          ctrlKey: true,
          detail: true,
          eventPhase: true,
          metaKey: true,
          pageX: true,
          pageY: true,
          shiftKey: true,
          view: true,
          "char": true,
          code: true,
          charCode: true,
          key: true,
          keyCode: true,
          button: true,
          buttons: true,
          clientX: true,
          clientY: true,
          offsetX: true,
          offsetY: true,
          pointerId: true,
          pointerType: true,
          screenX: true,
          screenY: true,
          targetTouches: true,
          toElement: true,
          touches: true,
          which: true
        }, jQuery2.event.addProp);
        jQuery2.each({ focus: "focusin", blur: "focusout" }, function(type, delegateType) {
          jQuery2.event.special[type] = {
            setup: function() {
              leverageNative(this, type, expectSync);
              return false;
            },
            trigger: function() {
              leverageNative(this, type);
              return true;
            },
            _default: function(event2) {
              return dataPriv.get(event2.target, type);
            },
            delegateType
          };
        });
        jQuery2.each({
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout"
        }, function(orig, fix) {
          jQuery2.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event2) {
              var ret, target = this, related = event2.relatedTarget, handleObj = event2.handleObj;
              if (!related || related !== target && !jQuery2.contains(target, related)) {
                event2.type = handleObj.origType;
                ret = handleObj.handler.apply(this, arguments);
                event2.type = fix;
              }
              return ret;
            }
          };
        });
        jQuery2.fn.extend({
          on: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn);
          },
          one: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn, 1);
          },
          off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
              handleObj = types.handleObj;
              jQuery2(types.delegateTarget).off(
                handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
                handleObj.selector,
                handleObj.handler
              );
              return this;
            }
            if (typeof types === "object") {
              for (type in types) {
                this.off(type, selector, types[type]);
              }
              return this;
            }
            if (selector === false || typeof selector === "function") {
              fn = selector;
              selector = void 0;
            }
            if (fn === false) {
              fn = returnFalse;
            }
            return this.each(function() {
              jQuery2.event.remove(this, types, fn, selector);
            });
          }
        });
        var rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
        function manipulationTarget(elem, content) {
          if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
            return jQuery2(elem).children("tbody")[0] || elem;
          }
          return elem;
        }
        function disableScript(elem) {
          elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
          return elem;
        }
        function restoreScript(elem) {
          if ((elem.type || "").slice(0, 5) === "true/") {
            elem.type = elem.type.slice(5);
          } else {
            elem.removeAttribute("type");
          }
          return elem;
        }
        function cloneCopyEvent(src, dest) {
          var i3, l3, type, pdataOld, udataOld, udataCur, events;
          if (dest.nodeType !== 1) {
            return;
          }
          if (dataPriv.hasData(src)) {
            pdataOld = dataPriv.get(src);
            events = pdataOld.events;
            if (events) {
              dataPriv.remove(dest, "handle events");
              for (type in events) {
                for (i3 = 0, l3 = events[type].length; i3 < l3; i3++) {
                  jQuery2.event.add(dest, type, events[type][i3]);
                }
              }
            }
          }
          if (dataUser.hasData(src)) {
            udataOld = dataUser.access(src);
            udataCur = jQuery2.extend({}, udataOld);
            dataUser.set(dest, udataCur);
          }
        }
        function fixInput(src, dest) {
          var nodeName2 = dest.nodeName.toLowerCase();
          if (nodeName2 === "input" && rcheckableType.test(src.type)) {
            dest.checked = src.checked;
          } else if (nodeName2 === "input" || nodeName2 === "textarea") {
            dest.defaultValue = src.defaultValue;
          }
        }
        function domManip(collection, args, callback, ignored) {
          args = flat(args);
          var fragment, first, scripts, hasScripts, node, doc, i3 = 0, l3 = collection.length, iNoClone = l3 - 1, value = args[0], valueIsFunction = isFunction(value);
          if (valueIsFunction || l3 > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
            return collection.each(function(index) {
              var self2 = collection.eq(index);
              if (valueIsFunction) {
                args[0] = value.call(this, index, self2.html());
              }
              domManip(self2, args, callback, ignored);
            });
          }
          if (l3) {
            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
            first = fragment.firstChild;
            if (fragment.childNodes.length === 1) {
              fragment = first;
            }
            if (first || ignored) {
              scripts = jQuery2.map(getAll(fragment, "script"), disableScript);
              hasScripts = scripts.length;
              for (; i3 < l3; i3++) {
                node = fragment;
                if (i3 !== iNoClone) {
                  node = jQuery2.clone(node, true, true);
                  if (hasScripts) {
                    jQuery2.merge(scripts, getAll(node, "script"));
                  }
                }
                callback.call(collection[i3], node, i3);
              }
              if (hasScripts) {
                doc = scripts[scripts.length - 1].ownerDocument;
                jQuery2.map(scripts, restoreScript);
                for (i3 = 0; i3 < hasScripts; i3++) {
                  node = scripts[i3];
                  if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery2.contains(doc, node)) {
                    if (node.src && (node.type || "").toLowerCase() !== "module") {
                      if (jQuery2._evalUrl && !node.noModule) {
                        jQuery2._evalUrl(node.src, {
                          nonce: node.nonce || node.getAttribute("nonce")
                        }, doc);
                      }
                    } else {
                      DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
                    }
                  }
                }
              }
            }
          }
          return collection;
        }
        function remove(elem, selector, keepData) {
          var node, nodes = selector ? jQuery2.filter(selector, elem) : elem, i3 = 0;
          for (; (node = nodes[i3]) != null; i3++) {
            if (!keepData && node.nodeType === 1) {
              jQuery2.cleanData(getAll(node));
            }
            if (node.parentNode) {
              if (keepData && isAttached(node)) {
                setGlobalEval(getAll(node, "script"));
              }
              node.parentNode.removeChild(node);
            }
          }
          return elem;
        }
        jQuery2.extend({
          htmlPrefilter: function(html) {
            return html;
          },
          clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var i3, l3, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);
            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery2.isXMLDoc(elem)) {
              destElements = getAll(clone);
              srcElements = getAll(elem);
              for (i3 = 0, l3 = srcElements.length; i3 < l3; i3++) {
                fixInput(srcElements[i3], destElements[i3]);
              }
            }
            if (dataAndEvents) {
              if (deepDataAndEvents) {
                srcElements = srcElements || getAll(elem);
                destElements = destElements || getAll(clone);
                for (i3 = 0, l3 = srcElements.length; i3 < l3; i3++) {
                  cloneCopyEvent(srcElements[i3], destElements[i3]);
                }
              } else {
                cloneCopyEvent(elem, clone);
              }
            }
            destElements = getAll(clone, "script");
            if (destElements.length > 0) {
              setGlobalEval(destElements, !inPage && getAll(elem, "script"));
            }
            return clone;
          },
          cleanData: function(elems) {
            var data, elem, type, special = jQuery2.event.special, i3 = 0;
            for (; (elem = elems[i3]) !== void 0; i3++) {
              if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                  if (data.events) {
                    for (type in data.events) {
                      if (special[type]) {
                        jQuery2.event.remove(elem, type);
                      } else {
                        jQuery2.removeEvent(elem, type, data.handle);
                      }
                    }
                  }
                  elem[dataPriv.expando] = void 0;
                }
                if (elem[dataUser.expando]) {
                  elem[dataUser.expando] = void 0;
                }
              }
            }
          }
        });
        jQuery2.fn.extend({
          detach: function(selector) {
            return remove(this, selector, true);
          },
          remove: function(selector) {
            return remove(this, selector);
          },
          text: function(value) {
            return access(this, function(value2) {
              return value2 === void 0 ? jQuery2.text(this) : this.empty().each(function() {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                  this.textContent = value2;
                }
              });
            }, null, value, arguments.length);
          },
          append: function() {
            return domManip(this, arguments, function(elem) {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.appendChild(elem);
              }
            });
          },
          prepend: function() {
            return domManip(this, arguments, function(elem) {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.insertBefore(elem, target.firstChild);
              }
            });
          },
          before: function() {
            return domManip(this, arguments, function(elem) {
              if (this.parentNode) {
                this.parentNode.insertBefore(elem, this);
              }
            });
          },
          after: function() {
            return domManip(this, arguments, function(elem) {
              if (this.parentNode) {
                this.parentNode.insertBefore(elem, this.nextSibling);
              }
            });
          },
          empty: function() {
            var elem, i3 = 0;
            for (; (elem = this[i3]) != null; i3++) {
              if (elem.nodeType === 1) {
                jQuery2.cleanData(getAll(elem, false));
                elem.textContent = "";
              }
            }
            return this;
          },
          clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
              return jQuery2.clone(this, dataAndEvents, deepDataAndEvents);
            });
          },
          html: function(value) {
            return access(this, function(value2) {
              var elem = this[0] || {}, i3 = 0, l3 = this.length;
              if (value2 === void 0 && elem.nodeType === 1) {
                return elem.innerHTML;
              }
              if (typeof value2 === "string" && !rnoInnerhtml.test(value2) && !wrapMap[(rtagName.exec(value2) || ["", ""])[1].toLowerCase()]) {
                value2 = jQuery2.htmlPrefilter(value2);
                try {
                  for (; i3 < l3; i3++) {
                    elem = this[i3] || {};
                    if (elem.nodeType === 1) {
                      jQuery2.cleanData(getAll(elem, false));
                      elem.innerHTML = value2;
                    }
                  }
                  elem = 0;
                } catch (e3) {
                }
              }
              if (elem) {
                this.empty().append(value2);
              }
            }, null, value, arguments.length);
          },
          replaceWith: function() {
            var ignored = [];
            return domManip(this, arguments, function(elem) {
              var parent = this.parentNode;
              if (jQuery2.inArray(this, ignored) < 0) {
                jQuery2.cleanData(getAll(this));
                if (parent) {
                  parent.replaceChild(elem, this);
                }
              }
            }, ignored);
          }
        });
        jQuery2.each({
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith"
        }, function(name, original) {
          jQuery2.fn[name] = function(selector) {
            var elems, ret = [], insert = jQuery2(selector), last = insert.length - 1, i3 = 0;
            for (; i3 <= last; i3++) {
              elems = i3 === last ? this : this.clone(true);
              jQuery2(insert[i3])[original](elems);
              push.apply(ret, elems.get());
            }
            return this.pushStack(ret);
          };
        });
        var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
        var rcustomProp = /^--/;
        var getStyles = function(elem) {
          var view = elem.ownerDocument.defaultView;
          if (!view || !view.opener) {
            view = window2;
          }
          return view.getComputedStyle(elem);
        };
        var swap = function(elem, options, callback) {
          var ret, name, old = {};
          for (name in options) {
            old[name] = elem.style[name];
            elem.style[name] = options[name];
          }
          ret = callback.call(elem);
          for (name in options) {
            elem.style[name] = old[name];
          }
          return ret;
        };
        var rboxStyle = new RegExp(cssExpand.join("|"), "i");
        var whitespace = "[\\x20\\t\\r\\n\\f]";
        var rtrimCSS = new RegExp(
          "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
          "g"
        );
        (function() {
          function computeStyleTests() {
            if (!div) {
              return;
            }
            container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
            div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
            documentElement.appendChild(container).appendChild(div);
            var divStyle = window2.getComputedStyle(div);
            pixelPositionVal = divStyle.top !== "1%";
            reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;
            div.style.right = "60%";
            pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;
            boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;
            div.style.position = "absolute";
            scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
            documentElement.removeChild(container);
            div = null;
          }
          function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
          }
          var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document2.createElement("div"), div = document2.createElement("div");
          if (!div.style) {
            return;
          }
          div.style.backgroundClip = "content-box";
          div.cloneNode(true).style.backgroundClip = "";
          support.clearCloneStyle = div.style.backgroundClip === "content-box";
          jQuery2.extend(support, {
            boxSizingReliable: function() {
              computeStyleTests();
              return boxSizingReliableVal;
            },
            pixelBoxStyles: function() {
              computeStyleTests();
              return pixelBoxStylesVal;
            },
            pixelPosition: function() {
              computeStyleTests();
              return pixelPositionVal;
            },
            reliableMarginLeft: function() {
              computeStyleTests();
              return reliableMarginLeftVal;
            },
            scrollboxSize: function() {
              computeStyleTests();
              return scrollboxSizeVal;
            },
            reliableTrDimensions: function() {
              var table, tr, trChild, trStyle;
              if (reliableTrDimensionsVal == null) {
                table = document2.createElement("table");
                tr = document2.createElement("tr");
                trChild = document2.createElement("div");
                table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
                tr.style.cssText = "border:1px solid";
                tr.style.height = "1px";
                trChild.style.height = "9px";
                trChild.style.display = "block";
                documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
                trStyle = window2.getComputedStyle(tr);
                reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
                documentElement.removeChild(table);
              }
              return reliableTrDimensionsVal;
            }
          });
        })();
        function curCSS(elem, name, computed) {
          var width, minWidth, maxWidth, ret, isCustomProp = rcustomProp.test(name), style = elem.style;
          computed = computed || getStyles(elem);
          if (computed) {
            ret = computed.getPropertyValue(name) || computed[name];
            if (isCustomProp) {
              ret = ret.replace(rtrimCSS, "$1");
            }
            if (ret === "" && !isAttached(elem)) {
              ret = jQuery2.style(elem, name);
            }
            if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
              width = style.width;
              minWidth = style.minWidth;
              maxWidth = style.maxWidth;
              style.minWidth = style.maxWidth = style.width = ret;
              ret = computed.width;
              style.width = width;
              style.minWidth = minWidth;
              style.maxWidth = maxWidth;
            }
          }
          return ret !== void 0 ? ret + "" : ret;
        }
        function addGetHookIf(conditionFn, hookFn) {
          return {
            get: function() {
              if (conditionFn()) {
                delete this.get;
                return;
              }
              return (this.get = hookFn).apply(this, arguments);
            }
          };
        }
        var cssPrefixes = ["Webkit", "Moz", "ms"], emptyStyle = document2.createElement("div").style, vendorProps = {};
        function vendorPropName(name) {
          var capName = name[0].toUpperCase() + name.slice(1), i3 = cssPrefixes.length;
          while (i3--) {
            name = cssPrefixes[i3] + capName;
            if (name in emptyStyle) {
              return name;
            }
          }
        }
        function finalPropName(name) {
          var final = jQuery2.cssProps[name] || vendorProps[name];
          if (final) {
            return final;
          }
          if (name in emptyStyle) {
            return name;
          }
          return vendorProps[name] = vendorPropName(name) || name;
        }
        var rdisplayswap = /^(none|table(?!-c[ea]).+)/, cssShow = { position: "absolute", visibility: "hidden", display: "block" }, cssNormalTransform = {
          letterSpacing: "0",
          fontWeight: "400"
        };
        function setPositiveNumber(_elem, value, subtract) {
          var matches = rcssNum.exec(value);
          return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
        }
        function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
          var i3 = dimension === "width" ? 1 : 0, extra = 0, delta = 0;
          if (box === (isBorderBox ? "border" : "content")) {
            return 0;
          }
          for (; i3 < 4; i3 += 2) {
            if (box === "margin") {
              delta += jQuery2.css(elem, box + cssExpand[i3], true, styles);
            }
            if (!isBorderBox) {
              delta += jQuery2.css(elem, "padding" + cssExpand[i3], true, styles);
              if (box !== "padding") {
                delta += jQuery2.css(elem, "border" + cssExpand[i3] + "Width", true, styles);
              } else {
                extra += jQuery2.css(elem, "border" + cssExpand[i3] + "Width", true, styles);
              }
            } else {
              if (box === "content") {
                delta -= jQuery2.css(elem, "padding" + cssExpand[i3], true, styles);
              }
              if (box !== "margin") {
                delta -= jQuery2.css(elem, "border" + cssExpand[i3] + "Width", true, styles);
              }
            }
          }
          if (!isBorderBox && computedVal >= 0) {
            delta += Math.max(0, Math.ceil(
              elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5
            )) || 0;
          }
          return delta;
        }
        function getWidthOrHeight(elem, dimension, extra) {
          var styles = getStyles(elem), boxSizingNeeded = !support.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
          if (rnumnonpx.test(val)) {
            if (!extra) {
              return val;
            }
            val = "auto";
          }
          if ((!support.boxSizingReliable() && isBorderBox || !support.reliableTrDimensions() && nodeName(elem, "tr") || val === "auto" || !parseFloat(val) && jQuery2.css(elem, "display", false, styles) === "inline") && elem.getClientRects().length) {
            isBorderBox = jQuery2.css(elem, "boxSizing", false, styles) === "border-box";
            valueIsBorderBox = offsetProp in elem;
            if (valueIsBorderBox) {
              val = elem[offsetProp];
            }
          }
          val = parseFloat(val) || 0;
          return val + boxModelAdjustment(
            elem,
            dimension,
            extra || (isBorderBox ? "border" : "content"),
            valueIsBorderBox,
            styles,
            val
          ) + "px";
        }
        jQuery2.extend({
          cssHooks: {
            opacity: {
              get: function(elem, computed) {
                if (computed) {
                  var ret = curCSS(elem, "opacity");
                  return ret === "" ? "1" : ret;
                }
              }
            }
          },
          cssNumber: {
            "animationIterationCount": true,
            "columnCount": true,
            "fillOpacity": true,
            "flexGrow": true,
            "flexShrink": true,
            "fontWeight": true,
            "gridArea": true,
            "gridColumn": true,
            "gridColumnEnd": true,
            "gridColumnStart": true,
            "gridRow": true,
            "gridRowEnd": true,
            "gridRowStart": true,
            "lineHeight": true,
            "opacity": true,
            "order": true,
            "orphans": true,
            "widows": true,
            "zIndex": true,
            "zoom": true
          },
          cssProps: {},
          style: function(elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
              return;
            }
            var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
            if (!isCustomProp) {
              name = finalPropName(origName);
            }
            hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
            if (value !== void 0) {
              type = typeof value;
              if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
                value = adjustCSS(elem, name, ret);
                type = "number";
              }
              if (value == null || value !== value) {
                return;
              }
              if (type === "number" && !isCustomProp) {
                value += ret && ret[3] || (jQuery2.cssNumber[origName] ? "" : "px");
              }
              if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
                style[name] = "inherit";
              }
              if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== void 0) {
                if (isCustomProp) {
                  style.setProperty(name, value);
                } else {
                  style[name] = value;
                }
              }
            } else {
              if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== void 0) {
                return ret;
              }
              return style[name];
            }
          },
          css: function(elem, name, extra, styles) {
            var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
            if (!isCustomProp) {
              name = finalPropName(origName);
            }
            hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
            if (hooks && "get" in hooks) {
              val = hooks.get(elem, true, extra);
            }
            if (val === void 0) {
              val = curCSS(elem, name, styles);
            }
            if (val === "normal" && name in cssNormalTransform) {
              val = cssNormalTransform[name];
            }
            if (extra === "" || extra) {
              num = parseFloat(val);
              return extra === true || isFinite(num) ? num || 0 : val;
            }
            return val;
          }
        });
        jQuery2.each(["height", "width"], function(_i, dimension) {
          jQuery2.cssHooks[dimension] = {
            get: function(elem, computed, extra) {
              if (computed) {
                return rdisplayswap.test(jQuery2.css(elem, "display")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {
                  return getWidthOrHeight(elem, dimension, extra);
                }) : getWidthOrHeight(elem, dimension, extra);
              }
            },
            set: function(elem, value, extra) {
              var matches, styles = getStyles(elem), scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute", boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", subtract = extra ? boxModelAdjustment(
                elem,
                dimension,
                extra,
                isBorderBox,
                styles
              ) : 0;
              if (isBorderBox && scrollboxSizeBuggy) {
                subtract -= Math.ceil(
                  elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5
                );
              }
              if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
                elem.style[dimension] = value;
                value = jQuery2.css(elem, dimension);
              }
              return setPositiveNumber(elem, value, subtract);
            }
          };
        });
        jQuery2.cssHooks.marginLeft = addGetHookIf(
          support.reliableMarginLeft,
          function(elem, computed) {
            if (computed) {
              return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function() {
                return elem.getBoundingClientRect().left;
              })) + "px";
            }
          }
        );
        jQuery2.each({
          margin: "",
          padding: "",
          border: "Width"
        }, function(prefix, suffix) {
          jQuery2.cssHooks[prefix + suffix] = {
            expand: function(value) {
              var i3 = 0, expanded = {}, parts = typeof value === "string" ? value.split(" ") : [value];
              for (; i3 < 4; i3++) {
                expanded[prefix + cssExpand[i3] + suffix] = parts[i3] || parts[i3 - 2] || parts[0];
              }
              return expanded;
            }
          };
          if (prefix !== "margin") {
            jQuery2.cssHooks[prefix + suffix].set = setPositiveNumber;
          }
        });
        jQuery2.fn.extend({
          css: function(name, value) {
            return access(this, function(elem, name2, value2) {
              var styles, len, map = {}, i3 = 0;
              if (Array.isArray(name2)) {
                styles = getStyles(elem);
                len = name2.length;
                for (; i3 < len; i3++) {
                  map[name2[i3]] = jQuery2.css(elem, name2[i3], false, styles);
                }
                return map;
              }
              return value2 !== void 0 ? jQuery2.style(elem, name2, value2) : jQuery2.css(elem, name2);
            }, name, value, arguments.length > 1);
          }
        });
        function Tween(elem, options, prop, end, easing) {
          return new Tween.prototype.init(elem, options, prop, end, easing);
        }
        jQuery2.Tween = Tween;
        Tween.prototype = {
          constructor: Tween,
          init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery2.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery2.cssNumber[prop] ? "" : "px");
          },
          cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
          },
          run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) {
              this.pos = eased = jQuery2.easing[this.easing](
                percent,
                this.options.duration * percent,
                0,
                1,
                this.options.duration
              );
            } else {
              this.pos = eased = percent;
            }
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) {
              this.options.step.call(this.elem, this.now, this);
            }
            if (hooks && hooks.set) {
              hooks.set(this);
            } else {
              Tween.propHooks._default.set(this);
            }
            return this;
          }
        };
        Tween.prototype.init.prototype = Tween.prototype;
        Tween.propHooks = {
          _default: {
            get: function(tween) {
              var result;
              if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                return tween.elem[tween.prop];
              }
              result = jQuery2.css(tween.elem, tween.prop, "");
              return !result || result === "auto" ? 0 : result;
            },
            set: function(tween) {
              if (jQuery2.fx.step[tween.prop]) {
                jQuery2.fx.step[tween.prop](tween);
              } else if (tween.elem.nodeType === 1 && (jQuery2.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
                jQuery2.style(tween.elem, tween.prop, tween.now + tween.unit);
              } else {
                tween.elem[tween.prop] = tween.now;
              }
            }
          }
        };
        Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
          set: function(tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) {
              tween.elem[tween.prop] = tween.now;
            }
          }
        };
        jQuery2.easing = {
          linear: function(p3) {
            return p3;
          },
          swing: function(p3) {
            return 0.5 - Math.cos(p3 * Math.PI) / 2;
          },
          _default: "swing"
        };
        jQuery2.fx = Tween.prototype.init;
        jQuery2.fx.step = {};
        var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
        function schedule() {
          if (inProgress) {
            if (document2.hidden === false && window2.requestAnimationFrame) {
              window2.requestAnimationFrame(schedule);
            } else {
              window2.setTimeout(schedule, jQuery2.fx.interval);
            }
            jQuery2.fx.tick();
          }
        }
        function createFxNow() {
          window2.setTimeout(function() {
            fxNow = void 0;
          });
          return fxNow = Date.now();
        }
        function genFx(type, includeWidth) {
          var which, i3 = 0, attrs = { height: type };
          includeWidth = includeWidth ? 1 : 0;
          for (; i3 < 4; i3 += 2 - includeWidth) {
            which = cssExpand[i3];
            attrs["margin" + which] = attrs["padding" + which] = type;
          }
          if (includeWidth) {
            attrs.opacity = attrs.width = type;
          }
          return attrs;
        }
        function createTween(value, prop, animation) {
          var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length;
          for (; index < length; index++) {
            if (tween = collection[index].call(animation, prop, value)) {
              return tween;
            }
          }
        }
        function defaultPrefilter(elem, props, opts) {
          var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = "width" in props || "height" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
          if (!opts.queue) {
            hooks = jQuery2._queueHooks(elem, "fx");
            if (hooks.unqueued == null) {
              hooks.unqueued = 0;
              oldfire = hooks.empty.fire;
              hooks.empty.fire = function() {
                if (!hooks.unqueued) {
                  oldfire();
                }
              };
            }
            hooks.unqueued++;
            anim.always(function() {
              anim.always(function() {
                hooks.unqueued--;
                if (!jQuery2.queue(elem, "fx").length) {
                  hooks.empty.fire();
                }
              });
            });
          }
          for (prop in props) {
            value = props[prop];
            if (rfxtypes.test(value)) {
              delete props[prop];
              toggle = toggle || value === "toggle";
              if (value === (hidden ? "hide" : "show")) {
                if (value === "show" && dataShow && dataShow[prop] !== void 0) {
                  hidden = true;
                } else {
                  continue;
                }
              }
              orig[prop] = dataShow && dataShow[prop] || jQuery2.style(elem, prop);
            }
          }
          propTween = !jQuery2.isEmptyObject(props);
          if (!propTween && jQuery2.isEmptyObject(orig)) {
            return;
          }
          if (isBox && elem.nodeType === 1) {
            opts.overflow = [style.overflow, style.overflowX, style.overflowY];
            restoreDisplay = dataShow && dataShow.display;
            if (restoreDisplay == null) {
              restoreDisplay = dataPriv.get(elem, "display");
            }
            display = jQuery2.css(elem, "display");
            if (display === "none") {
              if (restoreDisplay) {
                display = restoreDisplay;
              } else {
                showHide([elem], true);
                restoreDisplay = elem.style.display || restoreDisplay;
                display = jQuery2.css(elem, "display");
                showHide([elem]);
              }
            }
            if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
              if (jQuery2.css(elem, "float") === "none") {
                if (!propTween) {
                  anim.done(function() {
                    style.display = restoreDisplay;
                  });
                  if (restoreDisplay == null) {
                    display = style.display;
                    restoreDisplay = display === "none" ? "" : display;
                  }
                }
                style.display = "inline-block";
              }
            }
          }
          if (opts.overflow) {
            style.overflow = "hidden";
            anim.always(function() {
              style.overflow = opts.overflow[0];
              style.overflowX = opts.overflow[1];
              style.overflowY = opts.overflow[2];
            });
          }
          propTween = false;
          for (prop in orig) {
            if (!propTween) {
              if (dataShow) {
                if ("hidden" in dataShow) {
                  hidden = dataShow.hidden;
                }
              } else {
                dataShow = dataPriv.access(elem, "fxshow", { display: restoreDisplay });
              }
              if (toggle) {
                dataShow.hidden = !hidden;
              }
              if (hidden) {
                showHide([elem], true);
              }
              anim.done(function() {
                if (!hidden) {
                  showHide([elem]);
                }
                dataPriv.remove(elem, "fxshow");
                for (prop in orig) {
                  jQuery2.style(elem, prop, orig[prop]);
                }
              });
            }
            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
            if (!(prop in dataShow)) {
              dataShow[prop] = propTween.start;
              if (hidden) {
                propTween.end = propTween.start;
                propTween.start = 0;
              }
            }
          }
        }
        function propFilter(props, specialEasing) {
          var index, name, easing, value, hooks;
          for (index in props) {
            name = camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (Array.isArray(value)) {
              easing = value[1];
              value = props[index] = value[0];
            }
            if (index !== name) {
              props[name] = value;
              delete props[index];
            }
            hooks = jQuery2.cssHooks[name];
            if (hooks && "expand" in hooks) {
              value = hooks.expand(value);
              delete props[name];
              for (index in value) {
                if (!(index in props)) {
                  props[index] = value[index];
                  specialEasing[index] = easing;
                }
              }
            } else {
              specialEasing[name] = easing;
            }
          }
        }
        function Animation(elem, properties, options) {
          var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery2.Deferred().always(function() {
            delete tick.elem;
          }), tick = function() {
            if (stopped) {
              return false;
            }
            var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index2 = 0, length2 = animation.tweens.length;
            for (; index2 < length2; index2++) {
              animation.tweens[index2].run(percent);
            }
            deferred.notifyWith(elem, [animation, percent, remaining]);
            if (percent < 1 && length2) {
              return remaining;
            }
            if (!length2) {
              deferred.notifyWith(elem, [animation, 1, 0]);
            }
            deferred.resolveWith(elem, [animation]);
            return false;
          }, animation = deferred.promise({
            elem,
            props: jQuery2.extend({}, properties),
            opts: jQuery2.extend(true, {
              specialEasing: {},
              easing: jQuery2.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
              var tween = jQuery2.Tween(
                elem,
                animation.opts,
                prop,
                end,
                animation.opts.specialEasing[prop] || animation.opts.easing
              );
              animation.tweens.push(tween);
              return tween;
            },
            stop: function(gotoEnd) {
              var index2 = 0, length2 = gotoEnd ? animation.tweens.length : 0;
              if (stopped) {
                return this;
              }
              stopped = true;
              for (; index2 < length2; index2++) {
                animation.tweens[index2].run(1);
              }
              if (gotoEnd) {
                deferred.notifyWith(elem, [animation, 1, 0]);
                deferred.resolveWith(elem, [animation, gotoEnd]);
              } else {
                deferred.rejectWith(elem, [animation, gotoEnd]);
              }
              return this;
            }
          }), props = animation.props;
          propFilter(props, animation.opts.specialEasing);
          for (; index < length; index++) {
            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
              if (isFunction(result.stop)) {
                jQuery2._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
              }
              return result;
            }
          }
          jQuery2.map(props, createTween, animation);
          if (isFunction(animation.opts.start)) {
            animation.opts.start.call(elem, animation);
          }
          animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
          jQuery2.fx.timer(
            jQuery2.extend(tick, {
              elem,
              anim: animation,
              queue: animation.opts.queue
            })
          );
          return animation;
        }
        jQuery2.Animation = jQuery2.extend(Animation, {
          tweeners: {
            "*": [function(prop, value) {
              var tween = this.createTween(prop, value);
              adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
              return tween;
            }]
          },
          tweener: function(props, callback) {
            if (isFunction(props)) {
              callback = props;
              props = ["*"];
            } else {
              props = props.match(rnothtmlwhite);
            }
            var prop, index = 0, length = props.length;
            for (; index < length; index++) {
              prop = props[index];
              Animation.tweeners[prop] = Animation.tweeners[prop] || [];
              Animation.tweeners[prop].unshift(callback);
            }
          },
          prefilters: [defaultPrefilter],
          prefilter: function(callback, prepend) {
            if (prepend) {
              Animation.prefilters.unshift(callback);
            } else {
              Animation.prefilters.push(callback);
            }
          }
        });
        jQuery2.speed = function(speed, easing, fn) {
          var opt = speed && typeof speed === "object" ? jQuery2.extend({}, speed) : {
            complete: fn || !fn && easing || isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !isFunction(easing) && easing
          };
          if (jQuery2.fx.off) {
            opt.duration = 0;
          } else {
            if (typeof opt.duration !== "number") {
              if (opt.duration in jQuery2.fx.speeds) {
                opt.duration = jQuery2.fx.speeds[opt.duration];
              } else {
                opt.duration = jQuery2.fx.speeds._default;
              }
            }
          }
          if (opt.queue == null || opt.queue === true) {
            opt.queue = "fx";
          }
          opt.old = opt.complete;
          opt.complete = function() {
            if (isFunction(opt.old)) {
              opt.old.call(this);
            }
            if (opt.queue) {
              jQuery2.dequeue(this, opt.queue);
            }
          };
          return opt;
        };
        jQuery2.fn.extend({
          fadeTo: function(speed, to, easing, callback) {
            return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({ opacity: to }, speed, easing, callback);
          },
          animate: function(prop, speed, easing, callback) {
            var empty = jQuery2.isEmptyObject(prop), optall = jQuery2.speed(speed, easing, callback), doAnimation = function() {
              var anim = Animation(this, jQuery2.extend({}, prop), optall);
              if (empty || dataPriv.get(this, "finish")) {
                anim.stop(true);
              }
            };
            doAnimation.finish = doAnimation;
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
          },
          stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
              var stop = hooks.stop;
              delete hooks.stop;
              stop(gotoEnd);
            };
            if (typeof type !== "string") {
              gotoEnd = clearQueue;
              clearQueue = type;
              type = void 0;
            }
            if (clearQueue) {
              this.queue(type || "fx", []);
            }
            return this.each(function() {
              var dequeue = true, index = type != null && type + "queueHooks", timers = jQuery2.timers, data = dataPriv.get(this);
              if (index) {
                if (data[index] && data[index].stop) {
                  stopQueue(data[index]);
                }
              } else {
                for (index in data) {
                  if (data[index] && data[index].stop && rrun.test(index)) {
                    stopQueue(data[index]);
                  }
                }
              }
              for (index = timers.length; index--; ) {
                if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                  timers[index].anim.stop(gotoEnd);
                  dequeue = false;
                  timers.splice(index, 1);
                }
              }
              if (dequeue || !gotoEnd) {
                jQuery2.dequeue(this, type);
              }
            });
          },
          finish: function(type) {
            if (type !== false) {
              type = type || "fx";
            }
            return this.each(function() {
              var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery2.timers, length = queue ? queue.length : 0;
              data.finish = true;
              jQuery2.queue(this, type, []);
              if (hooks && hooks.stop) {
                hooks.stop.call(this, true);
              }
              for (index = timers.length; index--; ) {
                if (timers[index].elem === this && timers[index].queue === type) {
                  timers[index].anim.stop(true);
                  timers.splice(index, 1);
                }
              }
              for (index = 0; index < length; index++) {
                if (queue[index] && queue[index].finish) {
                  queue[index].finish.call(this);
                }
              }
              delete data.finish;
            });
          }
        });
        jQuery2.each(["toggle", "show", "hide"], function(_i, name) {
          var cssFn = jQuery2.fn[name];
          jQuery2.fn[name] = function(speed, easing, callback) {
            return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
          };
        });
        jQuery2.each({
          slideDown: genFx("show"),
          slideUp: genFx("hide"),
          slideToggle: genFx("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" }
        }, function(name, props) {
          jQuery2.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
          };
        });
        jQuery2.timers = [];
        jQuery2.fx.tick = function() {
          var timer, i3 = 0, timers = jQuery2.timers;
          fxNow = Date.now();
          for (; i3 < timers.length; i3++) {
            timer = timers[i3];
            if (!timer() && timers[i3] === timer) {
              timers.splice(i3--, 1);
            }
          }
          if (!timers.length) {
            jQuery2.fx.stop();
          }
          fxNow = void 0;
        };
        jQuery2.fx.timer = function(timer) {
          jQuery2.timers.push(timer);
          jQuery2.fx.start();
        };
        jQuery2.fx.interval = 13;
        jQuery2.fx.start = function() {
          if (inProgress) {
            return;
          }
          inProgress = true;
          schedule();
        };
        jQuery2.fx.stop = function() {
          inProgress = null;
        };
        jQuery2.fx.speeds = {
          slow: 600,
          fast: 200,
          _default: 400
        };
        jQuery2.fn.delay = function(time, type) {
          time = jQuery2.fx ? jQuery2.fx.speeds[time] || time : time;
          type = type || "fx";
          return this.queue(type, function(next, hooks) {
            var timeout = window2.setTimeout(next, time);
            hooks.stop = function() {
              window2.clearTimeout(timeout);
            };
          });
        };
        (function() {
          var input = document2.createElement("input"), select = document2.createElement("select"), opt = select.appendChild(document2.createElement("option"));
          input.type = "checkbox";
          support.checkOn = input.value !== "";
          support.optSelected = opt.selected;
          input = document2.createElement("input");
          input.value = "t";
          input.type = "radio";
          support.radioValue = input.value === "t";
        })();
        var boolHook, attrHandle = jQuery2.expr.attrHandle;
        jQuery2.fn.extend({
          attr: function(name, value) {
            return access(this, jQuery2.attr, name, value, arguments.length > 1);
          },
          removeAttr: function(name) {
            return this.each(function() {
              jQuery2.removeAttr(this, name);
            });
          }
        });
        jQuery2.extend({
          attr: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
              return;
            }
            if (typeof elem.getAttribute === "undefined") {
              return jQuery2.prop(elem, name, value);
            }
            if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
              hooks = jQuery2.attrHooks[name.toLowerCase()] || (jQuery2.expr.match.bool.test(name) ? boolHook : void 0);
            }
            if (value !== void 0) {
              if (value === null) {
                jQuery2.removeAttr(elem, name);
                return;
              }
              if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
                return ret;
              }
              elem.setAttribute(name, value + "");
              return value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
              return ret;
            }
            ret = jQuery2.find.attr(elem, name);
            return ret == null ? void 0 : ret;
          },
          attrHooks: {
            type: {
              set: function(elem, value) {
                if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
                  var val = elem.value;
                  elem.setAttribute("type", value);
                  if (val) {
                    elem.value = val;
                  }
                  return value;
                }
              }
            }
          },
          removeAttr: function(elem, value) {
            var name, i3 = 0, attrNames = value && value.match(rnothtmlwhite);
            if (attrNames && elem.nodeType === 1) {
              while (name = attrNames[i3++]) {
                elem.removeAttribute(name);
              }
            }
          }
        });
        boolHook = {
          set: function(elem, value, name) {
            if (value === false) {
              jQuery2.removeAttr(elem, name);
            } else {
              elem.setAttribute(name, name);
            }
            return name;
          }
        };
        jQuery2.each(jQuery2.expr.match.bool.source.match(/\w+/g), function(_i, name) {
          var getter = attrHandle[name] || jQuery2.find.attr;
          attrHandle[name] = function(elem, name2, isXML) {
            var ret, handle, lowercaseName = name2.toLowerCase();
            if (!isXML) {
              handle = attrHandle[lowercaseName];
              attrHandle[lowercaseName] = ret;
              ret = getter(elem, name2, isXML) != null ? lowercaseName : null;
              attrHandle[lowercaseName] = handle;
            }
            return ret;
          };
        });
        var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
        jQuery2.fn.extend({
          prop: function(name, value) {
            return access(this, jQuery2.prop, name, value, arguments.length > 1);
          },
          removeProp: function(name) {
            return this.each(function() {
              delete this[jQuery2.propFix[name] || name];
            });
          }
        });
        jQuery2.extend({
          prop: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
              return;
            }
            if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
              name = jQuery2.propFix[name] || name;
              hooks = jQuery2.propHooks[name];
            }
            if (value !== void 0) {
              if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
                return ret;
              }
              return elem[name] = value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
              return ret;
            }
            return elem[name];
          },
          propHooks: {
            tabIndex: {
              get: function(elem) {
                var tabindex = jQuery2.find.attr(elem, "tabindex");
                if (tabindex) {
                  return parseInt(tabindex, 10);
                }
                if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
                  return 0;
                }
                return -1;
              }
            }
          },
          propFix: {
            "for": "htmlFor",
            "class": "className"
          }
        });
        if (!support.optSelected) {
          jQuery2.propHooks.selected = {
            get: function(elem) {
              var parent = elem.parentNode;
              if (parent && parent.parentNode) {
                parent.parentNode.selectedIndex;
              }
              return null;
            },
            set: function(elem) {
              var parent = elem.parentNode;
              if (parent) {
                parent.selectedIndex;
                if (parent.parentNode) {
                  parent.parentNode.selectedIndex;
                }
              }
            }
          };
        }
        jQuery2.each([
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable"
        ], function() {
          jQuery2.propFix[this.toLowerCase()] = this;
        });
        function stripAndCollapse(value) {
          var tokens = value.match(rnothtmlwhite) || [];
          return tokens.join(" ");
        }
        function getClass(elem) {
          return elem.getAttribute && elem.getAttribute("class") || "";
        }
        function classesToArray(value) {
          if (Array.isArray(value)) {
            return value;
          }
          if (typeof value === "string") {
            return value.match(rnothtmlwhite) || [];
          }
          return [];
        }
        jQuery2.fn.extend({
          addClass: function(value) {
            var classNames, cur, curValue, className, i3, finalValue;
            if (isFunction(value)) {
              return this.each(function(j4) {
                jQuery2(this).addClass(value.call(this, j4, getClass(this)));
              });
            }
            classNames = classesToArray(value);
            if (classNames.length) {
              return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                  for (i3 = 0; i3 < classNames.length; i3++) {
                    className = classNames[i3];
                    if (cur.indexOf(" " + className + " ") < 0) {
                      cur += className + " ";
                    }
                  }
                  finalValue = stripAndCollapse(cur);
                  if (curValue !== finalValue) {
                    this.setAttribute("class", finalValue);
                  }
                }
              });
            }
            return this;
          },
          removeClass: function(value) {
            var classNames, cur, curValue, className, i3, finalValue;
            if (isFunction(value)) {
              return this.each(function(j4) {
                jQuery2(this).removeClass(value.call(this, j4, getClass(this)));
              });
            }
            if (!arguments.length) {
              return this.attr("class", "");
            }
            classNames = classesToArray(value);
            if (classNames.length) {
              return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                  for (i3 = 0; i3 < classNames.length; i3++) {
                    className = classNames[i3];
                    while (cur.indexOf(" " + className + " ") > -1) {
                      cur = cur.replace(" " + className + " ", " ");
                    }
                  }
                  finalValue = stripAndCollapse(cur);
                  if (curValue !== finalValue) {
                    this.setAttribute("class", finalValue);
                  }
                }
              });
            }
            return this;
          },
          toggleClass: function(value, stateVal) {
            var classNames, className, i3, self2, type = typeof value, isValidValue = type === "string" || Array.isArray(value);
            if (isFunction(value)) {
              return this.each(function(i4) {
                jQuery2(this).toggleClass(
                  value.call(this, i4, getClass(this), stateVal),
                  stateVal
                );
              });
            }
            if (typeof stateVal === "boolean" && isValidValue) {
              return stateVal ? this.addClass(value) : this.removeClass(value);
            }
            classNames = classesToArray(value);
            return this.each(function() {
              if (isValidValue) {
                self2 = jQuery2(this);
                for (i3 = 0; i3 < classNames.length; i3++) {
                  className = classNames[i3];
                  if (self2.hasClass(className)) {
                    self2.removeClass(className);
                  } else {
                    self2.addClass(className);
                  }
                }
              } else if (value === void 0 || type === "boolean") {
                className = getClass(this);
                if (className) {
                  dataPriv.set(this, "__className__", className);
                }
                if (this.setAttribute) {
                  this.setAttribute(
                    "class",
                    className || value === false ? "" : dataPriv.get(this, "__className__") || ""
                  );
                }
              }
            });
          },
          hasClass: function(selector) {
            var className, elem, i3 = 0;
            className = " " + selector + " ";
            while (elem = this[i3++]) {
              if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
                return true;
              }
            }
            return false;
          }
        });
        var rreturn = /\r/g;
        jQuery2.fn.extend({
          val: function(value) {
            var hooks, ret, valueIsFunction, elem = this[0];
            if (!arguments.length) {
              if (elem) {
                hooks = jQuery2.valHooks[elem.type] || jQuery2.valHooks[elem.nodeName.toLowerCase()];
                if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== void 0) {
                  return ret;
                }
                ret = elem.value;
                if (typeof ret === "string") {
                  return ret.replace(rreturn, "");
                }
                return ret == null ? "" : ret;
              }
              return;
            }
            valueIsFunction = isFunction(value);
            return this.each(function(i3) {
              var val;
              if (this.nodeType !== 1) {
                return;
              }
              if (valueIsFunction) {
                val = value.call(this, i3, jQuery2(this).val());
              } else {
                val = value;
              }
              if (val == null) {
                val = "";
              } else if (typeof val === "number") {
                val += "";
              } else if (Array.isArray(val)) {
                val = jQuery2.map(val, function(value2) {
                  return value2 == null ? "" : value2 + "";
                });
              }
              hooks = jQuery2.valHooks[this.type] || jQuery2.valHooks[this.nodeName.toLowerCase()];
              if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === void 0) {
                this.value = val;
              }
            });
          }
        });
        jQuery2.extend({
          valHooks: {
            option: {
              get: function(elem) {
                var val = jQuery2.find.attr(elem, "value");
                return val != null ? val : stripAndCollapse(jQuery2.text(elem));
              }
            },
            select: {
              get: function(elem) {
                var value, option, i3, options = elem.options, index = elem.selectedIndex, one = elem.type === "select-one", values = one ? null : [], max = one ? index + 1 : options.length;
                if (index < 0) {
                  i3 = max;
                } else {
                  i3 = one ? index : 0;
                }
                for (; i3 < max; i3++) {
                  option = options[i3];
                  if ((option.selected || i3 === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                    value = jQuery2(option).val();
                    if (one) {
                      return value;
                    }
                    values.push(value);
                  }
                }
                return values;
              },
              set: function(elem, value) {
                var optionSet, option, options = elem.options, values = jQuery2.makeArray(value), i3 = options.length;
                while (i3--) {
                  option = options[i3];
                  if (option.selected = jQuery2.inArray(jQuery2.valHooks.option.get(option), values) > -1) {
                    optionSet = true;
                  }
                }
                if (!optionSet) {
                  elem.selectedIndex = -1;
                }
                return values;
              }
            }
          }
        });
        jQuery2.each(["radio", "checkbox"], function() {
          jQuery2.valHooks[this] = {
            set: function(elem, value) {
              if (Array.isArray(value)) {
                return elem.checked = jQuery2.inArray(jQuery2(elem).val(), value) > -1;
              }
            }
          };
          if (!support.checkOn) {
            jQuery2.valHooks[this].get = function(elem) {
              return elem.getAttribute("value") === null ? "on" : elem.value;
            };
          }
        });
        support.focusin = "onfocusin" in window2;
        var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e3) {
          e3.stopPropagation();
        };
        jQuery2.extend(jQuery2.event, {
          trigger: function(event2, data, elem, onlyHandlers) {
            var i3, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [elem || document2], type = hasOwn.call(event2, "type") ? event2.type : event2, namespaces = hasOwn.call(event2, "namespace") ? event2.namespace.split(".") : [];
            cur = lastElement = tmp = elem = elem || document2;
            if (elem.nodeType === 3 || elem.nodeType === 8) {
              return;
            }
            if (rfocusMorph.test(type + jQuery2.event.triggered)) {
              return;
            }
            if (type.indexOf(".") > -1) {
              namespaces = type.split(".");
              type = namespaces.shift();
              namespaces.sort();
            }
            ontype = type.indexOf(":") < 0 && "on" + type;
            event2 = event2[jQuery2.expando] ? event2 : new jQuery2.Event(type, typeof event2 === "object" && event2);
            event2.isTrigger = onlyHandlers ? 2 : 3;
            event2.namespace = namespaces.join(".");
            event2.rnamespace = event2.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            event2.result = void 0;
            if (!event2.target) {
              event2.target = elem;
            }
            data = data == null ? [event2] : jQuery2.makeArray(data, [event2]);
            special = jQuery2.event.special[type] || {};
            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
              return;
            }
            if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
              bubbleType = special.delegateType || type;
              if (!rfocusMorph.test(bubbleType + type)) {
                cur = cur.parentNode;
              }
              for (; cur; cur = cur.parentNode) {
                eventPath.push(cur);
                tmp = cur;
              }
              if (tmp === (elem.ownerDocument || document2)) {
                eventPath.push(tmp.defaultView || tmp.parentWindow || window2);
              }
            }
            i3 = 0;
            while ((cur = eventPath[i3++]) && !event2.isPropagationStopped()) {
              lastElement = cur;
              event2.type = i3 > 1 ? bubbleType : special.bindType || type;
              handle = (dataPriv.get(cur, "events") || /* @__PURE__ */ Object.create(null))[event2.type] && dataPriv.get(cur, "handle");
              if (handle) {
                handle.apply(cur, data);
              }
              handle = ontype && cur[ontype];
              if (handle && handle.apply && acceptData(cur)) {
                event2.result = handle.apply(cur, data);
                if (event2.result === false) {
                  event2.preventDefault();
                }
              }
            }
            event2.type = type;
            if (!onlyHandlers && !event2.isDefaultPrevented()) {
              if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
                if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                  tmp = elem[ontype];
                  if (tmp) {
                    elem[ontype] = null;
                  }
                  jQuery2.event.triggered = type;
                  if (event2.isPropagationStopped()) {
                    lastElement.addEventListener(type, stopPropagationCallback);
                  }
                  elem[type]();
                  if (event2.isPropagationStopped()) {
                    lastElement.removeEventListener(type, stopPropagationCallback);
                  }
                  jQuery2.event.triggered = void 0;
                  if (tmp) {
                    elem[ontype] = tmp;
                  }
                }
              }
            }
            return event2.result;
          },
          simulate: function(type, elem, event2) {
            var e3 = jQuery2.extend(
              new jQuery2.Event(),
              event2,
              {
                type,
                isSimulated: true
              }
            );
            jQuery2.event.trigger(e3, null, elem);
          }
        });
        jQuery2.fn.extend({
          trigger: function(type, data) {
            return this.each(function() {
              jQuery2.event.trigger(type, data, this);
            });
          },
          triggerHandler: function(type, data) {
            var elem = this[0];
            if (elem) {
              return jQuery2.event.trigger(type, data, elem, true);
            }
          }
        });
        if (!support.focusin) {
          jQuery2.each({ focus: "focusin", blur: "focusout" }, function(orig, fix) {
            var handler = function(event2) {
              jQuery2.event.simulate(fix, event2.target, jQuery2.event.fix(event2));
            };
            jQuery2.event.special[fix] = {
              setup: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix);
                if (!attaches) {
                  doc.addEventListener(orig, handler, true);
                }
                dataPriv.access(doc, fix, (attaches || 0) + 1);
              },
              teardown: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix) - 1;
                if (!attaches) {
                  doc.removeEventListener(orig, handler, true);
                  dataPriv.remove(doc, fix);
                } else {
                  dataPriv.access(doc, fix, attaches);
                }
              }
            };
          });
        }
        var location2 = window2.location;
        var nonce = { guid: Date.now() };
        var rquery = /\?/;
        jQuery2.parseXML = function(data) {
          var xml, parserErrorElem;
          if (!data || typeof data !== "string") {
            return null;
          }
          try {
            xml = new window2.DOMParser().parseFromString(data, "text/xml");
          } catch (e3) {
          }
          parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
          if (!xml || parserErrorElem) {
            jQuery2.error("Invalid XML: " + (parserErrorElem ? jQuery2.map(parserErrorElem.childNodes, function(el) {
              return el.textContent;
            }).join("\n") : data));
          }
          return xml;
        };
        var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
        function buildParams(prefix, obj, traditional, add2) {
          var name;
          if (Array.isArray(obj)) {
            jQuery2.each(obj, function(i3, v3) {
              if (traditional || rbracket.test(prefix)) {
                add2(prefix, v3);
              } else {
                buildParams(
                  prefix + "[" + (typeof v3 === "object" && v3 != null ? i3 : "") + "]",
                  v3,
                  traditional,
                  add2
                );
              }
            });
          } else if (!traditional && toType(obj) === "object") {
            for (name in obj) {
              buildParams(prefix + "[" + name + "]", obj[name], traditional, add2);
            }
          } else {
            add2(prefix, obj);
          }
        }
        jQuery2.param = function(a3, traditional) {
          var prefix, s3 = [], add2 = function(key, valueOrFunction) {
            var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
            s3[s3.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
          };
          if (a3 == null) {
            return "";
          }
          if (Array.isArray(a3) || a3.jquery && !jQuery2.isPlainObject(a3)) {
            jQuery2.each(a3, function() {
              add2(this.name, this.value);
            });
          } else {
            for (prefix in a3) {
              buildParams(prefix, a3[prefix], traditional, add2);
            }
          }
          return s3.join("&");
        };
        jQuery2.fn.extend({
          serialize: function() {
            return jQuery2.param(this.serializeArray());
          },
          serializeArray: function() {
            return this.map(function() {
              var elements = jQuery2.prop(this, "elements");
              return elements ? jQuery2.makeArray(elements) : this;
            }).filter(function() {
              var type = this.type;
              return this.name && !jQuery2(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function(_i, elem) {
              var val = jQuery2(this).val();
              if (val == null) {
                return null;
              }
              if (Array.isArray(val)) {
                return jQuery2.map(val, function(val2) {
                  return { name: elem.name, value: val2.replace(rCRLF, "\r\n") };
                });
              }
              return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
            }).get();
          }
        });
        var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, prefilters = {}, transports = {}, allTypes = "*/".concat("*"), originAnchor = document2.createElement("a");
        originAnchor.href = location2.href;
        function addToPrefiltersOrTransports(structure) {
          return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
              func = dataTypeExpression;
              dataTypeExpression = "*";
            }
            var dataType, i3 = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func)) {
              while (dataType = dataTypes[i3++]) {
                if (dataType[0] === "+") {
                  dataType = dataType.slice(1) || "*";
                  (structure[dataType] = structure[dataType] || []).unshift(func);
                } else {
                  (structure[dataType] = structure[dataType] || []).push(func);
                }
              }
            }
          };
        }
        function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
          var inspected = {}, seekingTransport = structure === transports;
          function inspect(dataType) {
            var selected;
            inspected[dataType] = true;
            jQuery2.each(structure[dataType] || [], function(_3, prefilterOrFactory) {
              var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
              if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
                options.dataTypes.unshift(dataTypeOrTransport);
                inspect(dataTypeOrTransport);
                return false;
              } else if (seekingTransport) {
                return !(selected = dataTypeOrTransport);
              }
            });
            return selected;
          }
          return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
        }
        function ajaxExtend(target, src) {
          var key, deep, flatOptions = jQuery2.ajaxSettings.flatOptions || {};
          for (key in src) {
            if (src[key] !== void 0) {
              (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
            }
          }
          if (deep) {
            jQuery2.extend(true, target, deep);
          }
          return target;
        }
        function ajaxHandleResponses(s3, jqXHR, responses) {
          var ct, type, finalDataType, firstDataType, contents = s3.contents, dataTypes = s3.dataTypes;
          while (dataTypes[0] === "*") {
            dataTypes.shift();
            if (ct === void 0) {
              ct = s3.mimeType || jqXHR.getResponseHeader("Content-Type");
            }
          }
          if (ct) {
            for (type in contents) {
              if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
              }
            }
          }
          if (dataTypes[0] in responses) {
            finalDataType = dataTypes[0];
          } else {
            for (type in responses) {
              if (!dataTypes[0] || s3.converters[type + " " + dataTypes[0]]) {
                finalDataType = type;
                break;
              }
              if (!firstDataType) {
                firstDataType = type;
              }
            }
            finalDataType = finalDataType || firstDataType;
          }
          if (finalDataType) {
            if (finalDataType !== dataTypes[0]) {
              dataTypes.unshift(finalDataType);
            }
            return responses[finalDataType];
          }
        }
        function ajaxConvert(s3, response, jqXHR, isSuccess) {
          var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s3.dataTypes.slice();
          if (dataTypes[1]) {
            for (conv in s3.converters) {
              converters[conv.toLowerCase()] = s3.converters[conv];
            }
          }
          current = dataTypes.shift();
          while (current) {
            if (s3.responseFields[current]) {
              jqXHR[s3.responseFields[current]] = response;
            }
            if (!prev && isSuccess && s3.dataFilter) {
              response = s3.dataFilter(response, s3.dataType);
            }
            prev = current;
            current = dataTypes.shift();
            if (current) {
              if (current === "*") {
                current = prev;
              } else if (prev !== "*" && prev !== current) {
                conv = converters[prev + " " + current] || converters["* " + current];
                if (!conv) {
                  for (conv2 in converters) {
                    tmp = conv2.split(" ");
                    if (tmp[1] === current) {
                      conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                      if (conv) {
                        if (conv === true) {
                          conv = converters[conv2];
                        } else if (converters[conv2] !== true) {
                          current = tmp[0];
                          dataTypes.unshift(tmp[1]);
                        }
                        break;
                      }
                    }
                  }
                }
                if (conv !== true) {
                  if (conv && s3.throws) {
                    response = conv(response);
                  } else {
                    try {
                      response = conv(response);
                    } catch (e3) {
                      return {
                        state: "parsererror",
                        error: conv ? e3 : "No conversion from " + prev + " to " + current
                      };
                    }
                  }
                }
              }
            }
          }
          return { state: "success", data: response };
        }
        jQuery2.extend({
          active: 0,
          lastModified: {},
          etag: {},
          ajaxSettings: {
            url: location2.href,
            type: "GET",
            isLocal: rlocalProtocol.test(location2.protocol),
            global: true,
            processData: true,
            async: true,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
              "*": allTypes,
              text: "text/plain",
              html: "text/html",
              xml: "application/xml, text/xml",
              json: "application/json, text/javascript"
            },
            contents: {
              xml: /\bxml\b/,
              html: /\bhtml/,
              json: /\bjson\b/
            },
            responseFields: {
              xml: "responseXML",
              text: "responseText",
              json: "responseJSON"
            },
            converters: {
              "* text": String,
              "text html": true,
              "text json": JSON.parse,
              "text xml": jQuery2.parseXML
            },
            flatOptions: {
              url: true,
              context: true
            }
          },
          ajaxSetup: function(target, settings) {
            return settings ? ajaxExtend(ajaxExtend(target, jQuery2.ajaxSettings), settings) : ajaxExtend(jQuery2.ajaxSettings, target);
          },
          ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
          ajaxTransport: addToPrefiltersOrTransports(transports),
          ajax: function(url, options) {
            if (typeof url === "object") {
              options = url;
              url = void 0;
            }
            options = options || {};
            var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed2, fireGlobals, i3, uncached, s3 = jQuery2.ajaxSetup({}, options), callbackContext = s3.context || s3, globalEventContext = s3.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery2(callbackContext) : jQuery2.event, deferred = jQuery2.Deferred(), completeDeferred = jQuery2.Callbacks("once memory"), statusCode = s3.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = "canceled", jqXHR = {
              readyState: 0,
              getResponseHeader: function(key) {
                var match;
                if (completed2) {
                  if (!responseHeaders) {
                    responseHeaders = {};
                    while (match = rheaders.exec(responseHeadersString)) {
                      responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                    }
                  }
                  match = responseHeaders[key.toLowerCase() + " "];
                }
                return match == null ? null : match.join(", ");
              },
              getAllResponseHeaders: function() {
                return completed2 ? responseHeadersString : null;
              },
              setRequestHeader: function(name, value) {
                if (completed2 == null) {
                  name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                  requestHeaders[name] = value;
                }
                return this;
              },
              overrideMimeType: function(type) {
                if (completed2 == null) {
                  s3.mimeType = type;
                }
                return this;
              },
              statusCode: function(map) {
                var code;
                if (map) {
                  if (completed2) {
                    jqXHR.always(map[jqXHR.status]);
                  } else {
                    for (code in map) {
                      statusCode[code] = [statusCode[code], map[code]];
                    }
                  }
                }
                return this;
              },
              abort: function(statusText) {
                var finalText = statusText || strAbort;
                if (transport) {
                  transport.abort(finalText);
                }
                done(0, finalText);
                return this;
              }
            };
            deferred.promise(jqXHR);
            s3.url = ((url || s3.url || location2.href) + "").replace(rprotocol, location2.protocol + "//");
            s3.type = options.method || options.type || s3.method || s3.type;
            s3.dataTypes = (s3.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];
            if (s3.crossDomain == null) {
              urlAnchor = document2.createElement("a");
              try {
                urlAnchor.href = s3.url;
                urlAnchor.href = urlAnchor.href;
                s3.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
              } catch (e3) {
                s3.crossDomain = true;
              }
            }
            if (s3.data && s3.processData && typeof s3.data !== "string") {
              s3.data = jQuery2.param(s3.data, s3.traditional);
            }
            inspectPrefiltersOrTransports(prefilters, s3, options, jqXHR);
            if (completed2) {
              return jqXHR;
            }
            fireGlobals = jQuery2.event && s3.global;
            if (fireGlobals && jQuery2.active++ === 0) {
              jQuery2.event.trigger("ajaxStart");
            }
            s3.type = s3.type.toUpperCase();
            s3.hasContent = !rnoContent.test(s3.type);
            cacheURL = s3.url.replace(rhash, "");
            if (!s3.hasContent) {
              uncached = s3.url.slice(cacheURL.length);
              if (s3.data && (s3.processData || typeof s3.data === "string")) {
                cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s3.data;
                delete s3.data;
              }
              if (s3.cache === false) {
                cacheURL = cacheURL.replace(rantiCache, "$1");
                uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
              }
              s3.url = cacheURL + uncached;
            } else if (s3.data && s3.processData && (s3.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
              s3.data = s3.data.replace(r20, "+");
            }
            if (s3.ifModified) {
              if (jQuery2.lastModified[cacheURL]) {
                jqXHR.setRequestHeader("If-Modified-Since", jQuery2.lastModified[cacheURL]);
              }
              if (jQuery2.etag[cacheURL]) {
                jqXHR.setRequestHeader("If-None-Match", jQuery2.etag[cacheURL]);
              }
            }
            if (s3.data && s3.hasContent && s3.contentType !== false || options.contentType) {
              jqXHR.setRequestHeader("Content-Type", s3.contentType);
            }
            jqXHR.setRequestHeader(
              "Accept",
              s3.dataTypes[0] && s3.accepts[s3.dataTypes[0]] ? s3.accepts[s3.dataTypes[0]] + (s3.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s3.accepts["*"]
            );
            for (i3 in s3.headers) {
              jqXHR.setRequestHeader(i3, s3.headers[i3]);
            }
            if (s3.beforeSend && (s3.beforeSend.call(callbackContext, jqXHR, s3) === false || completed2)) {
              return jqXHR.abort();
            }
            strAbort = "abort";
            completeDeferred.add(s3.complete);
            jqXHR.done(s3.success);
            jqXHR.fail(s3.error);
            transport = inspectPrefiltersOrTransports(transports, s3, options, jqXHR);
            if (!transport) {
              done(-1, "No Transport");
            } else {
              jqXHR.readyState = 1;
              if (fireGlobals) {
                globalEventContext.trigger("ajaxSend", [jqXHR, s3]);
              }
              if (completed2) {
                return jqXHR;
              }
              if (s3.async && s3.timeout > 0) {
                timeoutTimer = window2.setTimeout(function() {
                  jqXHR.abort("timeout");
                }, s3.timeout);
              }
              try {
                completed2 = false;
                transport.send(requestHeaders, done);
              } catch (e3) {
                if (completed2) {
                  throw e3;
                }
                done(-1, e3);
              }
            }
            function done(status, nativeStatusText, responses, headers) {
              var isSuccess, success, error2, response, modified, statusText = nativeStatusText;
              if (completed2) {
                return;
              }
              completed2 = true;
              if (timeoutTimer) {
                window2.clearTimeout(timeoutTimer);
              }
              transport = void 0;
              responseHeadersString = headers || "";
              jqXHR.readyState = status > 0 ? 4 : 0;
              isSuccess = status >= 200 && status < 300 || status === 304;
              if (responses) {
                response = ajaxHandleResponses(s3, jqXHR, responses);
              }
              if (!isSuccess && jQuery2.inArray("script", s3.dataTypes) > -1 && jQuery2.inArray("json", s3.dataTypes) < 0) {
                s3.converters["text script"] = function() {
                };
              }
              response = ajaxConvert(s3, response, jqXHR, isSuccess);
              if (isSuccess) {
                if (s3.ifModified) {
                  modified = jqXHR.getResponseHeader("Last-Modified");
                  if (modified) {
                    jQuery2.lastModified[cacheURL] = modified;
                  }
                  modified = jqXHR.getResponseHeader("etag");
                  if (modified) {
                    jQuery2.etag[cacheURL] = modified;
                  }
                }
                if (status === 204 || s3.type === "HEAD") {
                  statusText = "nocontent";
                } else if (status === 304) {
                  statusText = "notmodified";
                } else {
                  statusText = response.state;
                  success = response.data;
                  error2 = response.error;
                  isSuccess = !error2;
                }
              } else {
                error2 = statusText;
                if (status || !statusText) {
                  statusText = "error";
                  if (status < 0) {
                    status = 0;
                  }
                }
              }
              jqXHR.status = status;
              jqXHR.statusText = (nativeStatusText || statusText) + "";
              if (isSuccess) {
                deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
              } else {
                deferred.rejectWith(callbackContext, [jqXHR, statusText, error2]);
              }
              jqXHR.statusCode(statusCode);
              statusCode = void 0;
              if (fireGlobals) {
                globalEventContext.trigger(
                  isSuccess ? "ajaxSuccess" : "ajaxError",
                  [jqXHR, s3, isSuccess ? success : error2]
                );
              }
              completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
              if (fireGlobals) {
                globalEventContext.trigger("ajaxComplete", [jqXHR, s3]);
                if (!--jQuery2.active) {
                  jQuery2.event.trigger("ajaxStop");
                }
              }
            }
            return jqXHR;
          },
          getJSON: function(url, data, callback) {
            return jQuery2.get(url, data, callback, "json");
          },
          getScript: function(url, callback) {
            return jQuery2.get(url, void 0, callback, "script");
          }
        });
        jQuery2.each(["get", "post"], function(_i, method) {
          jQuery2[method] = function(url, data, callback, type) {
            if (isFunction(data)) {
              type = type || callback;
              callback = data;
              data = void 0;
            }
            return jQuery2.ajax(jQuery2.extend({
              url,
              type: method,
              dataType: type,
              data,
              success: callback
            }, jQuery2.isPlainObject(url) && url));
          };
        });
        jQuery2.ajaxPrefilter(function(s3) {
          var i3;
          for (i3 in s3.headers) {
            if (i3.toLowerCase() === "content-type") {
              s3.contentType = s3.headers[i3] || "";
            }
          }
        });
        jQuery2._evalUrl = function(url, options, doc) {
          return jQuery2.ajax({
            url,
            type: "GET",
            dataType: "script",
            cache: true,
            async: false,
            global: false,
            converters: {
              "text script": function() {
              }
            },
            dataFilter: function(response) {
              jQuery2.globalEval(response, options, doc);
            }
          });
        };
        jQuery2.fn.extend({
          wrapAll: function(html) {
            var wrap;
            if (this[0]) {
              if (isFunction(html)) {
                html = html.call(this[0]);
              }
              wrap = jQuery2(html, this[0].ownerDocument).eq(0).clone(true);
              if (this[0].parentNode) {
                wrap.insertBefore(this[0]);
              }
              wrap.map(function() {
                var elem = this;
                while (elem.firstElementChild) {
                  elem = elem.firstElementChild;
                }
                return elem;
              }).append(this);
            }
            return this;
          },
          wrapInner: function(html) {
            if (isFunction(html)) {
              return this.each(function(i3) {
                jQuery2(this).wrapInner(html.call(this, i3));
              });
            }
            return this.each(function() {
              var self2 = jQuery2(this), contents = self2.contents();
              if (contents.length) {
                contents.wrapAll(html);
              } else {
                self2.append(html);
              }
            });
          },
          wrap: function(html) {
            var htmlIsFunction = isFunction(html);
            return this.each(function(i3) {
              jQuery2(this).wrapAll(htmlIsFunction ? html.call(this, i3) : html);
            });
          },
          unwrap: function(selector) {
            this.parent(selector).not("body").each(function() {
              jQuery2(this).replaceWith(this.childNodes);
            });
            return this;
          }
        });
        jQuery2.expr.pseudos.hidden = function(elem) {
          return !jQuery2.expr.pseudos.visible(elem);
        };
        jQuery2.expr.pseudos.visible = function(elem) {
          return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
        };
        jQuery2.ajaxSettings.xhr = function() {
          try {
            return new window2.XMLHttpRequest();
          } catch (e3) {
          }
        };
        var xhrSuccessStatus = {
          0: 200,
          1223: 204
        }, xhrSupported = jQuery2.ajaxSettings.xhr();
        support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
        support.ajax = xhrSupported = !!xhrSupported;
        jQuery2.ajaxTransport(function(options) {
          var callback, errorCallback;
          if (support.cors || xhrSupported && !options.crossDomain) {
            return {
              send: function(headers, complete) {
                var i3, xhr = options.xhr();
                xhr.open(
                  options.type,
                  options.url,
                  options.async,
                  options.username,
                  options.password
                );
                if (options.xhrFields) {
                  for (i3 in options.xhrFields) {
                    xhr[i3] = options.xhrFields[i3];
                  }
                }
                if (options.mimeType && xhr.overrideMimeType) {
                  xhr.overrideMimeType(options.mimeType);
                }
                if (!options.crossDomain && !headers["X-Requested-With"]) {
                  headers["X-Requested-With"] = "XMLHttpRequest";
                }
                for (i3 in headers) {
                  xhr.setRequestHeader(i3, headers[i3]);
                }
                callback = function(type) {
                  return function() {
                    if (callback) {
                      callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;
                      if (type === "abort") {
                        xhr.abort();
                      } else if (type === "error") {
                        if (typeof xhr.status !== "number") {
                          complete(0, "error");
                        } else {
                          complete(
                            xhr.status,
                            xhr.statusText
                          );
                        }
                      } else {
                        complete(
                          xhrSuccessStatus[xhr.status] || xhr.status,
                          xhr.statusText,
                          (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? { binary: xhr.response } : { text: xhr.responseText },
                          xhr.getAllResponseHeaders()
                        );
                      }
                    }
                  };
                };
                xhr.onload = callback();
                errorCallback = xhr.onerror = xhr.ontimeout = callback("error");
                if (xhr.onabort !== void 0) {
                  xhr.onabort = errorCallback;
                } else {
                  xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                      window2.setTimeout(function() {
                        if (callback) {
                          errorCallback();
                        }
                      });
                    }
                  };
                }
                callback = callback("abort");
                try {
                  xhr.send(options.hasContent && options.data || null);
                } catch (e3) {
                  if (callback) {
                    throw e3;
                  }
                }
              },
              abort: function() {
                if (callback) {
                  callback();
                }
              }
            };
          }
        });
        jQuery2.ajaxPrefilter(function(s3) {
          if (s3.crossDomain) {
            s3.contents.script = false;
          }
        });
        jQuery2.ajaxSetup({
          accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
          },
          contents: {
            script: /\b(?:java|ecma)script\b/
          },
          converters: {
            "text script": function(text) {
              jQuery2.globalEval(text);
              return text;
            }
          }
        });
        jQuery2.ajaxPrefilter("script", function(s3) {
          if (s3.cache === void 0) {
            s3.cache = false;
          }
          if (s3.crossDomain) {
            s3.type = "GET";
          }
        });
        jQuery2.ajaxTransport("script", function(s3) {
          if (s3.crossDomain || s3.scriptAttrs) {
            var script, callback;
            return {
              send: function(_3, complete) {
                script = jQuery2("<script>").attr(s3.scriptAttrs || {}).prop({ charset: s3.scriptCharset, src: s3.url }).on("load error", callback = function(evt) {
                  script.remove();
                  callback = null;
                  if (evt) {
                    complete(evt.type === "error" ? 404 : 200, evt.type);
                  }
                });
                document2.head.appendChild(script[0]);
              },
              abort: function() {
                if (callback) {
                  callback();
                }
              }
            };
          }
        });
        var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
        jQuery2.ajaxSetup({
          jsonp: "callback",
          jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery2.expando + "_" + nonce.guid++;
            this[callback] = true;
            return callback;
          }
        });
        jQuery2.ajaxPrefilter("json jsonp", function(s3, originalSettings, jqXHR) {
          var callbackName, overwritten, responseContainer, jsonProp = s3.jsonp !== false && (rjsonp.test(s3.url) ? "url" : typeof s3.data === "string" && (s3.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s3.data) && "data");
          if (jsonProp || s3.dataTypes[0] === "jsonp") {
            callbackName = s3.jsonpCallback = isFunction(s3.jsonpCallback) ? s3.jsonpCallback() : s3.jsonpCallback;
            if (jsonProp) {
              s3[jsonProp] = s3[jsonProp].replace(rjsonp, "$1" + callbackName);
            } else if (s3.jsonp !== false) {
              s3.url += (rquery.test(s3.url) ? "&" : "?") + s3.jsonp + "=" + callbackName;
            }
            s3.converters["script json"] = function() {
              if (!responseContainer) {
                jQuery2.error(callbackName + " was not called");
              }
              return responseContainer[0];
            };
            s3.dataTypes[0] = "json";
            overwritten = window2[callbackName];
            window2[callbackName] = function() {
              responseContainer = arguments;
            };
            jqXHR.always(function() {
              if (overwritten === void 0) {
                jQuery2(window2).removeProp(callbackName);
              } else {
                window2[callbackName] = overwritten;
              }
              if (s3[callbackName]) {
                s3.jsonpCallback = originalSettings.jsonpCallback;
                oldCallbacks.push(callbackName);
              }
              if (responseContainer && isFunction(overwritten)) {
                overwritten(responseContainer[0]);
              }
              responseContainer = overwritten = void 0;
            });
            return "script";
          }
        });
        support.createHTMLDocument = function() {
          var body = document2.implementation.createHTMLDocument("").body;
          body.innerHTML = "<form></form><form></form>";
          return body.childNodes.length === 2;
        }();
        jQuery2.parseHTML = function(data, context, keepScripts) {
          if (typeof data !== "string") {
            return [];
          }
          if (typeof context === "boolean") {
            keepScripts = context;
            context = false;
          }
          var base, parsed, scripts;
          if (!context) {
            if (support.createHTMLDocument) {
              context = document2.implementation.createHTMLDocument("");
              base = context.createElement("base");
              base.href = document2.location.href;
              context.head.appendChild(base);
            } else {
              context = document2;
            }
          }
          parsed = rsingleTag.exec(data);
          scripts = !keepScripts && [];
          if (parsed) {
            return [context.createElement(parsed[1])];
          }
          parsed = buildFragment([data], context, scripts);
          if (scripts && scripts.length) {
            jQuery2(scripts).remove();
          }
          return jQuery2.merge([], parsed.childNodes);
        };
        jQuery2.fn.load = function(url, params, callback) {
          var selector, type, response, self2 = this, off = url.indexOf(" ");
          if (off > -1) {
            selector = stripAndCollapse(url.slice(off));
            url = url.slice(0, off);
          }
          if (isFunction(params)) {
            callback = params;
            params = void 0;
          } else if (params && typeof params === "object") {
            type = "POST";
          }
          if (self2.length > 0) {
            jQuery2.ajax({
              url,
              type: type || "GET",
              dataType: "html",
              data: params
            }).done(function(responseText) {
              response = arguments;
              self2.html(selector ? jQuery2("<div>").append(jQuery2.parseHTML(responseText)).find(selector) : responseText);
            }).always(callback && function(jqXHR, status) {
              self2.each(function() {
                callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
              });
            });
          }
          return this;
        };
        jQuery2.expr.pseudos.animated = function(elem) {
          return jQuery2.grep(jQuery2.timers, function(fn) {
            return elem === fn.elem;
          }).length;
        };
        jQuery2.offset = {
          setOffset: function(elem, options, i3) {
            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery2.css(elem, "position"), curElem = jQuery2(elem), props = {};
            if (position === "static") {
              elem.style.position = "relative";
            }
            curOffset = curElem.offset();
            curCSSTop = jQuery2.css(elem, "top");
            curCSSLeft = jQuery2.css(elem, "left");
            calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
            if (calculatePosition) {
              curPosition = curElem.position();
              curTop = curPosition.top;
              curLeft = curPosition.left;
            } else {
              curTop = parseFloat(curCSSTop) || 0;
              curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (isFunction(options)) {
              options = options.call(elem, i3, jQuery2.extend({}, curOffset));
            }
            if (options.top != null) {
              props.top = options.top - curOffset.top + curTop;
            }
            if (options.left != null) {
              props.left = options.left - curOffset.left + curLeft;
            }
            if ("using" in options) {
              options.using.call(elem, props);
            } else {
              curElem.css(props);
            }
          }
        };
        jQuery2.fn.extend({
          offset: function(options) {
            if (arguments.length) {
              return options === void 0 ? this : this.each(function(i3) {
                jQuery2.offset.setOffset(this, options, i3);
              });
            }
            var rect, win, elem = this[0];
            if (!elem) {
              return;
            }
            if (!elem.getClientRects().length) {
              return { top: 0, left: 0 };
            }
            rect = elem.getBoundingClientRect();
            win = elem.ownerDocument.defaultView;
            return {
              top: rect.top + win.pageYOffset,
              left: rect.left + win.pageXOffset
            };
          },
          position: function() {
            if (!this[0]) {
              return;
            }
            var offsetParent, offset, doc, elem = this[0], parentOffset = { top: 0, left: 0 };
            if (jQuery2.css(elem, "position") === "fixed") {
              offset = elem.getBoundingClientRect();
            } else {
              offset = this.offset();
              doc = elem.ownerDocument;
              offsetParent = elem.offsetParent || doc.documentElement;
              while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery2.css(offsetParent, "position") === "static") {
                offsetParent = offsetParent.parentNode;
              }
              if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
                parentOffset = jQuery2(offsetParent).offset();
                parentOffset.top += jQuery2.css(offsetParent, "borderTopWidth", true);
                parentOffset.left += jQuery2.css(offsetParent, "borderLeftWidth", true);
              }
            }
            return {
              top: offset.top - parentOffset.top - jQuery2.css(elem, "marginTop", true),
              left: offset.left - parentOffset.left - jQuery2.css(elem, "marginLeft", true)
            };
          },
          offsetParent: function() {
            return this.map(function() {
              var offsetParent = this.offsetParent;
              while (offsetParent && jQuery2.css(offsetParent, "position") === "static") {
                offsetParent = offsetParent.offsetParent;
              }
              return offsetParent || documentElement;
            });
          }
        });
        jQuery2.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(method, prop) {
          var top = "pageYOffset" === prop;
          jQuery2.fn[method] = function(val) {
            return access(this, function(elem, method2, val2) {
              var win;
              if (isWindow(elem)) {
                win = elem;
              } else if (elem.nodeType === 9) {
                win = elem.defaultView;
              }
              if (val2 === void 0) {
                return win ? win[prop] : elem[method2];
              }
              if (win) {
                win.scrollTo(
                  !top ? val2 : win.pageXOffset,
                  top ? val2 : win.pageYOffset
                );
              } else {
                elem[method2] = val2;
              }
            }, method, val, arguments.length);
          };
        });
        jQuery2.each(["top", "left"], function(_i, prop) {
          jQuery2.cssHooks[prop] = addGetHookIf(
            support.pixelPosition,
            function(elem, computed) {
              if (computed) {
                computed = curCSS(elem, prop);
                return rnumnonpx.test(computed) ? jQuery2(elem).position()[prop] + "px" : computed;
              }
            }
          );
        });
        jQuery2.each({ Height: "height", Width: "width" }, function(name, type) {
          jQuery2.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
          }, function(defaultExtra, funcName) {
            jQuery2.fn[funcName] = function(margin, value) {
              var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"), extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
              return access(this, function(elem, type2, value2) {
                var doc;
                if (isWindow(elem)) {
                  return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
                }
                if (elem.nodeType === 9) {
                  doc = elem.documentElement;
                  return Math.max(
                    elem.body["scroll" + name],
                    doc["scroll" + name],
                    elem.body["offset" + name],
                    doc["offset" + name],
                    doc["client" + name]
                  );
                }
                return value2 === void 0 ? jQuery2.css(elem, type2, extra) : jQuery2.style(elem, type2, value2, extra);
              }, type, chainable ? margin : void 0, chainable);
            };
          });
        });
        jQuery2.each([
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend"
        ], function(_i, type) {
          jQuery2.fn[type] = function(fn) {
            return this.on(type, fn);
          };
        });
        jQuery2.fn.extend({
          bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
          },
          unbind: function(types, fn) {
            return this.off(types, null, fn);
          },
          delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
          },
          undelegate: function(selector, types, fn) {
            return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
          },
          hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
          }
        });
        jQuery2.each(
          "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
          function(_i, name) {
            jQuery2.fn[name] = function(data, fn) {
              return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
            };
          }
        );
        var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
        jQuery2.proxy = function(fn, context) {
          var tmp, args, proxy;
          if (typeof context === "string") {
            tmp = fn[context];
            context = fn;
            fn = tmp;
          }
          if (!isFunction(fn)) {
            return void 0;
          }
          args = slice.call(arguments, 2);
          proxy = function() {
            return fn.apply(context || this, args.concat(slice.call(arguments)));
          };
          proxy.guid = fn.guid = fn.guid || jQuery2.guid++;
          return proxy;
        };
        jQuery2.holdReady = function(hold) {
          if (hold) {
            jQuery2.readyWait++;
          } else {
            jQuery2.ready(true);
          }
        };
        jQuery2.isArray = Array.isArray;
        jQuery2.parseJSON = JSON.parse;
        jQuery2.nodeName = nodeName;
        jQuery2.isFunction = isFunction;
        jQuery2.isWindow = isWindow;
        jQuery2.camelCase = camelCase;
        jQuery2.type = toType;
        jQuery2.now = Date.now;
        jQuery2.isNumeric = function(obj) {
          var type = jQuery2.type(obj);
          return (type === "number" || type === "string") && !isNaN(obj - parseFloat(obj));
        };
        jQuery2.trim = function(text) {
          return text == null ? "" : (text + "").replace(rtrim, "$1");
        };
        if (typeof define === "function" && define.amd) {
          define("jquery", [], function() {
            return jQuery2;
          });
        }
        var _jQuery = window2.jQuery, _$ = window2.$;
        jQuery2.noConflict = function(deep) {
          if (window2.$ === jQuery2) {
            window2.$ = _$;
          }
          if (deep && window2.jQuery === jQuery2) {
            window2.jQuery = _jQuery;
          }
          return jQuery2;
        };
        if (typeof noGlobal === "undefined") {
          window2.jQuery = window2.$ = jQuery2;
        }
        return jQuery2;
      });
    }
  });

  // node_modules/admin-lte/plugins/datatables/jquery.dataTables.min.js
  var require_jquery_dataTables_min = __commonJS({
    "node_modules/admin-lte/plugins/datatables/jquery.dataTables.min.js"(exports, module) {
      var $jscomp = $jscomp || {};
      $jscomp.scope = {};
      $jscomp.findInternal = function(l3, y3, A3) {
        l3 instanceof String && (l3 = String(l3));
        for (var q3 = l3.length, E = 0; E < q3; E++) {
          var P2 = l3[E];
          if (y3.call(A3, P2, E, l3))
            return { i: E, v: P2 };
        }
        return { i: -1, v: void 0 };
      };
      $jscomp.ASSUME_ES5 = false;
      $jscomp.ASSUME_NO_NATIVE_MAP = false;
      $jscomp.ASSUME_NO_NATIVE_SET = false;
      $jscomp.SIMPLE_FROUND_POLYFILL = false;
      $jscomp.ISOLATE_POLYFILLS = false;
      $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(l3, y3, A3) {
        if (l3 == Array.prototype || l3 == Object.prototype)
          return l3;
        l3[y3] = A3.value;
        return l3;
      };
      $jscomp.getGlobal = function(l3) {
        l3 = ["object" == typeof globalThis && globalThis, l3, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
        for (var y3 = 0; y3 < l3.length; ++y3) {
          var A3 = l3[y3];
          if (A3 && A3.Math == Math)
            return A3;
        }
        throw Error("Cannot find global object");
      };
      $jscomp.global = $jscomp.getGlobal(exports);
      $jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
      $jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
      $jscomp.polyfills = {};
      $jscomp.propertyToPolyfillSymbol = {};
      $jscomp.POLYFILL_PREFIX = "$jscp$";
      $jscomp.polyfill = function(l3, y3, A3, q3) {
        y3 && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(l3, y3, A3, q3) : $jscomp.polyfillUnisolated(l3, y3, A3, q3));
      };
      $jscomp.polyfillUnisolated = function(l3, y3, A3, q3) {
        A3 = $jscomp.global;
        l3 = l3.split(".");
        for (q3 = 0; q3 < l3.length - 1; q3++) {
          var E = l3[q3];
          if (!(E in A3))
            return;
          A3 = A3[E];
        }
        l3 = l3[l3.length - 1];
        q3 = A3[l3];
        y3 = y3(q3);
        y3 != q3 && null != y3 && $jscomp.defineProperty(A3, l3, { configurable: true, writable: true, value: y3 });
      };
      $jscomp.polyfillIsolated = function(l3, y3, A3, q3) {
        var E = l3.split(".");
        l3 = 1 === E.length;
        q3 = E[0];
        q3 = !l3 && q3 in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
        for (var P2 = 0; P2 < E.length - 1; P2++) {
          var la = E[P2];
          if (!(la in q3))
            return;
          q3 = q3[la];
        }
        E = E[E.length - 1];
        A3 = $jscomp.IS_SYMBOL_NATIVE && "es6" === A3 ? q3[E] : null;
        y3 = y3(A3);
        null != y3 && (l3 ? $jscomp.defineProperty($jscomp.polyfills, E, { configurable: true, writable: true, value: y3 }) : y3 !== A3 && ($jscomp.propertyToPolyfillSymbol[E] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(E) : $jscomp.POLYFILL_PREFIX + E, E = $jscomp.propertyToPolyfillSymbol[E], $jscomp.defineProperty(q3, E, { configurable: true, writable: true, value: y3 })));
      };
      $jscomp.polyfill("Array.prototype.find", function(l3) {
        return l3 ? l3 : function(y3, A3) {
          return $jscomp.findInternal(this, y3, A3).v;
        };
      }, "es6", "es3");
      (function(l3) {
        "function" === typeof define && define.amd ? define(["jquery"], function(y3) {
          return l3(y3, window, document);
        }) : "object" === typeof exports ? module.exports = function(y3, A3) {
          y3 || (y3 = window);
          A3 || (A3 = "undefined" !== typeof window ? require_jquery() : require_jquery()(y3));
          return l3(A3, y3, y3.document);
        } : window.DataTable = l3(jQuery, window, document);
      })(function(l3, y3, A3, q3) {
        function E(a3) {
          var b3, c3, d2 = {};
          l3.each(a3, function(e3, h3) {
            (b3 = e3.match(/^([^A-Z]+?)([A-Z])/)) && -1 !== "a aa ai ao as b fn i m o s ".indexOf(b3[1] + " ") && (c3 = e3.replace(
              b3[0],
              b3[2].toLowerCase()
            ), d2[c3] = e3, "o" === b3[1] && E(a3[e3]));
          });
          a3._hungarianMap = d2;
        }
        function P2(a3, b3, c3) {
          a3._hungarianMap || E(a3);
          var d2;
          l3.each(b3, function(e3, h3) {
            d2 = a3._hungarianMap[e3];
            d2 === q3 || !c3 && b3[d2] !== q3 || ("o" === d2.charAt(0) ? (b3[d2] || (b3[d2] = {}), l3.extend(true, b3[d2], b3[e3]), P2(a3[d2], b3[d2], c3)) : b3[d2] = b3[e3]);
          });
        }
        function la(a3) {
          var b3 = u3.defaults.oLanguage, c3 = b3.sDecimal;
          c3 && bb(c3);
          if (a3) {
            var d2 = a3.sZeroRecords;
            !a3.sEmptyTable && d2 && "No data available in table" === b3.sEmptyTable && Y(a3, a3, "sZeroRecords", "sEmptyTable");
            !a3.sLoadingRecords && d2 && "Loading..." === b3.sLoadingRecords && Y(a3, a3, "sZeroRecords", "sLoadingRecords");
            a3.sInfoThousands && (a3.sThousands = a3.sInfoThousands);
            (a3 = a3.sDecimal) && c3 !== a3 && bb(a3);
          }
        }
        function Db(a3) {
          S2(a3, "ordering", "bSort");
          S2(a3, "orderMulti", "bSortMulti");
          S2(a3, "orderClasses", "bSortClasses");
          S2(a3, "orderCellsTop", "bSortCellsTop");
          S2(a3, "order", "aaSorting");
          S2(a3, "orderFixed", "aaSortingFixed");
          S2(a3, "paging", "bPaginate");
          S2(a3, "pagingType", "sPaginationType");
          S2(a3, "pageLength", "iDisplayLength");
          S2(a3, "searching", "bFilter");
          "boolean" === typeof a3.sScrollX && (a3.sScrollX = a3.sScrollX ? "100%" : "");
          "boolean" === typeof a3.scrollX && (a3.scrollX = a3.scrollX ? "100%" : "");
          if (a3 = a3.aoSearchCols)
            for (var b3 = 0, c3 = a3.length; b3 < c3; b3++)
              a3[b3] && P2(u3.models.oSearch, a3[b3]);
        }
        function Eb(a3) {
          S2(a3, "orderable", "bSortable");
          S2(a3, "orderData", "aDataSort");
          S2(a3, "orderSequence", "asSorting");
          S2(a3, "orderDataType", "sortDataType");
          var b3 = a3.aDataSort;
          "number" !== typeof b3 || Array.isArray(b3) || (a3.aDataSort = [b3]);
        }
        function Fb(a3) {
          if (!u3.__browser) {
            var b3 = {};
            u3.__browser = b3;
            var c3 = l3("<div/>").css({
              position: "fixed",
              top: 0,
              left: -1 * l3(y3).scrollLeft(),
              height: 1,
              width: 1,
              overflow: "hidden"
            }).append(l3("<div/>").css({ position: "absolute", top: 1, left: 1, width: 100, overflow: "scroll" }).append(l3("<div/>").css({ width: "100%", height: 10 }))).appendTo("body"), d2 = c3.children(), e3 = d2.children();
            b3.barWidth = d2[0].offsetWidth - d2[0].clientWidth;
            b3.bScrollOversize = 100 === e3[0].offsetWidth && 100 !== d2[0].clientWidth;
            b3.bScrollbarLeft = 1 !== Math.round(e3.offset().left);
            b3.bBounding = c3[0].getBoundingClientRect().width ? true : false;
            c3.remove();
          }
          l3.extend(a3.oBrowser, u3.__browser);
          a3.oScroll.iBarWidth = u3.__browser.barWidth;
        }
        function Gb(a3, b3, c3, d2, e3, h3) {
          var f3 = false;
          if (c3 !== q3) {
            var g4 = c3;
            f3 = true;
          }
          for (; d2 !== e3; )
            a3.hasOwnProperty(d2) && (g4 = f3 ? b3(g4, a3[d2], d2, a3) : a3[d2], f3 = true, d2 += h3);
          return g4;
        }
        function cb(a3, b3) {
          var c3 = u3.defaults.column, d2 = a3.aoColumns.length;
          c3 = l3.extend({}, u3.models.oColumn, c3, { nTh: b3 ? b3 : A3.createElement("th"), sTitle: c3.sTitle ? c3.sTitle : b3 ? b3.innerHTML : "", aDataSort: c3.aDataSort ? c3.aDataSort : [d2], mData: c3.mData ? c3.mData : d2, idx: d2 });
          a3.aoColumns.push(c3);
          c3 = a3.aoPreSearchCols;
          c3[d2] = l3.extend({}, u3.models.oSearch, c3[d2]);
          Ia(a3, d2, l3(b3).data());
        }
        function Ia(a3, b3, c3) {
          b3 = a3.aoColumns[b3];
          var d2 = a3.oClasses, e3 = l3(b3.nTh);
          if (!b3.sWidthOrig) {
            b3.sWidthOrig = e3.attr("width") || null;
            var h3 = (e3.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
            h3 && (b3.sWidthOrig = h3[1]);
          }
          c3 !== q3 && null !== c3 && (Eb(c3), P2(u3.defaults.column, c3, true), c3.mDataProp === q3 || c3.mData || (c3.mData = c3.mDataProp), c3.sType && (b3._sManualType = c3.sType), c3.className && !c3.sClass && (c3.sClass = c3.className), c3.sClass && e3.addClass(c3.sClass), h3 = b3.sClass, l3.extend(b3, c3), Y(b3, c3, "sWidth", "sWidthOrig"), h3 !== b3.sClass && (b3.sClass = h3 + " " + b3.sClass), c3.iDataSort !== q3 && (b3.aDataSort = [c3.iDataSort]), Y(b3, c3, "aDataSort"));
          var f3 = b3.mData, g4 = ma(f3), k3 = b3.mRender ? ma(b3.mRender) : null;
          c3 = function(m3) {
            return "string" === typeof m3 && -1 !== m3.indexOf("@");
          };
          b3._bAttrSrc = l3.isPlainObject(f3) && (c3(f3.sort) || c3(f3.type) || c3(f3.filter));
          b3._setter = null;
          b3.fnGetData = function(m3, n2, p3) {
            var t3 = g4(m3, n2, q3, p3);
            return k3 && n2 ? k3(t3, n2, m3, p3) : t3;
          };
          b3.fnSetData = function(m3, n2, p3) {
            return ha(f3)(m3, n2, p3);
          };
          "number" !== typeof f3 && (a3._rowReadObject = true);
          a3.oFeatures.bSort || (b3.bSortable = false, e3.addClass(d2.sSortableNone));
          a3 = -1 !== l3.inArray("asc", b3.asSorting);
          c3 = -1 !== l3.inArray(
            "desc",
            b3.asSorting
          );
          b3.bSortable && (a3 || c3) ? a3 && !c3 ? (b3.sSortingClass = d2.sSortableAsc, b3.sSortingClassJUI = d2.sSortJUIAscAllowed) : !a3 && c3 ? (b3.sSortingClass = d2.sSortableDesc, b3.sSortingClassJUI = d2.sSortJUIDescAllowed) : (b3.sSortingClass = d2.sSortable, b3.sSortingClassJUI = d2.sSortJUI) : (b3.sSortingClass = d2.sSortableNone, b3.sSortingClassJUI = "");
        }
        function sa(a3) {
          if (false !== a3.oFeatures.bAutoWidth) {
            var b3 = a3.aoColumns;
            db(a3);
            for (var c3 = 0, d2 = b3.length; c3 < d2; c3++)
              b3[c3].nTh.style.width = b3[c3].sWidth;
          }
          b3 = a3.oScroll;
          "" === b3.sY && "" === b3.sX || Ja(a3);
          F3(
            a3,
            null,
            "column-sizing",
            [a3]
          );
        }
        function ta(a3, b3) {
          a3 = Ka(a3, "bVisible");
          return "number" === typeof a3[b3] ? a3[b3] : null;
        }
        function ua(a3, b3) {
          a3 = Ka(a3, "bVisible");
          b3 = l3.inArray(b3, a3);
          return -1 !== b3 ? b3 : null;
        }
        function na(a3) {
          var b3 = 0;
          l3.each(a3.aoColumns, function(c3, d2) {
            d2.bVisible && "none" !== l3(d2.nTh).css("display") && b3++;
          });
          return b3;
        }
        function Ka(a3, b3) {
          var c3 = [];
          l3.map(a3.aoColumns, function(d2, e3) {
            d2[b3] && c3.push(e3);
          });
          return c3;
        }
        function eb(a3) {
          var b3 = a3.aoColumns, c3 = a3.aoData, d2 = u3.ext.type.detect, e3, h3, f3;
          var g4 = 0;
          for (e3 = b3.length; g4 < e3; g4++) {
            var k3 = b3[g4];
            var m3 = [];
            if (!k3.sType && k3._sManualType)
              k3.sType = k3._sManualType;
            else if (!k3.sType) {
              var n2 = 0;
              for (h3 = d2.length; n2 < h3; n2++) {
                var p3 = 0;
                for (f3 = c3.length; p3 < f3; p3++) {
                  m3[p3] === q3 && (m3[p3] = T4(a3, p3, g4, "type"));
                  var t3 = d2[n2](m3[p3], a3);
                  if (!t3 && n2 !== d2.length - 1)
                    break;
                  if ("html" === t3 && !aa(m3[p3]))
                    break;
                }
                if (t3) {
                  k3.sType = t3;
                  break;
                }
              }
              k3.sType || (k3.sType = "string");
            }
          }
        }
        function Hb(a3, b3, c3, d2) {
          var e3, h3, f3, g4 = a3.aoColumns;
          if (b3)
            for (e3 = b3.length - 1; 0 <= e3; e3--) {
              var k3 = b3[e3];
              var m3 = k3.target !== q3 ? k3.target : k3.targets !== q3 ? k3.targets : k3.aTargets;
              Array.isArray(m3) || (m3 = [m3]);
              var n2 = 0;
              for (h3 = m3.length; n2 < h3; n2++)
                if ("number" === typeof m3[n2] && 0 <= m3[n2]) {
                  for (; g4.length <= m3[n2]; )
                    cb(a3);
                  d2(m3[n2], k3);
                } else if ("number" === typeof m3[n2] && 0 > m3[n2])
                  d2(g4.length + m3[n2], k3);
                else if ("string" === typeof m3[n2]) {
                  var p3 = 0;
                  for (f3 = g4.length; p3 < f3; p3++)
                    ("_all" == m3[n2] || l3(g4[p3].nTh).hasClass(m3[n2])) && d2(p3, k3);
                }
            }
          if (c3)
            for (e3 = 0, a3 = c3.length; e3 < a3; e3++)
              d2(e3, c3[e3]);
        }
        function ia(a3, b3, c3, d2) {
          var e3 = a3.aoData.length, h3 = l3.extend(true, {}, u3.models.oRow, { src: c3 ? "dom" : "data", idx: e3 });
          h3._aData = b3;
          a3.aoData.push(h3);
          for (var f3 = a3.aoColumns, g4 = 0, k3 = f3.length; g4 < k3; g4++)
            f3[g4].sType = null;
          a3.aiDisplayMaster.push(e3);
          b3 = a3.rowIdFn(b3);
          b3 !== q3 && (a3.aIds[b3] = h3);
          !c3 && a3.oFeatures.bDeferRender || fb(a3, e3, c3, d2);
          return e3;
        }
        function La(a3, b3) {
          var c3;
          b3 instanceof l3 || (b3 = l3(b3));
          return b3.map(function(d2, e3) {
            c3 = gb(a3, e3);
            return ia(a3, c3.data, e3, c3.cells);
          });
        }
        function T4(a3, b3, c3, d2) {
          "search" === d2 ? d2 = "filter" : "order" === d2 && (d2 = "sort");
          var e3 = a3.iDraw, h3 = a3.aoColumns[c3], f3 = a3.aoData[b3]._aData, g4 = h3.sDefaultContent, k3 = h3.fnGetData(f3, d2, { settings: a3, row: b3, col: c3 });
          if (k3 === q3)
            return a3.iDrawError != e3 && null === g4 && (ea(a3, 0, "Requested unknown parameter " + ("function" == typeof h3.mData ? "{function}" : "'" + h3.mData + "'") + " for row " + b3 + ", column " + c3, 4), a3.iDrawError = e3), g4;
          if ((k3 === f3 || null === k3) && null !== g4 && d2 !== q3)
            k3 = g4;
          else if ("function" === typeof k3)
            return k3.call(f3);
          if (null === k3 && "display" === d2)
            return "";
          "filter" === d2 && (a3 = u3.ext.type.search, a3[h3.sType] && (k3 = a3[h3.sType](k3)));
          return k3;
        }
        function Ib(a3, b3, c3, d2) {
          a3.aoColumns[c3].fnSetData(a3.aoData[b3]._aData, d2, { settings: a3, row: b3, col: c3 });
        }
        function hb(a3) {
          return l3.map(a3.match(/(\\.|[^\.])+/g) || [""], function(b3) {
            return b3.replace(/\\\./g, ".");
          });
        }
        function ib(a3) {
          return U2(a3.aoData, "_aData");
        }
        function Ma(a3) {
          a3.aoData.length = 0;
          a3.aiDisplayMaster.length = 0;
          a3.aiDisplay.length = 0;
          a3.aIds = {};
        }
        function Na(a3, b3, c3) {
          for (var d2 = -1, e3 = 0, h3 = a3.length; e3 < h3; e3++)
            a3[e3] == b3 ? d2 = e3 : a3[e3] > b3 && a3[e3]--;
          -1 != d2 && c3 === q3 && a3.splice(d2, 1);
        }
        function va(a3, b3, c3, d2) {
          var e3 = a3.aoData[b3], h3, f3 = function(k3, m3) {
            for (; k3.childNodes.length; )
              k3.removeChild(k3.firstChild);
            k3.innerHTML = T4(a3, b3, m3, "display");
          };
          if ("dom" !== c3 && (c3 && "auto" !== c3 || "dom" !== e3.src)) {
            var g4 = e3.anCells;
            if (g4)
              if (d2 !== q3)
                f3(g4[d2], d2);
              else
                for (c3 = 0, h3 = g4.length; c3 < h3; c3++)
                  f3(g4[c3], c3);
          } else
            e3._aData = gb(a3, e3, d2, d2 === q3 ? q3 : e3._aData).data;
          e3._aSortData = null;
          e3._aFilterData = null;
          f3 = a3.aoColumns;
          if (d2 !== q3)
            f3[d2].sType = null;
          else {
            c3 = 0;
            for (h3 = f3.length; c3 < h3; c3++)
              f3[c3].sType = null;
            jb(a3, e3);
          }
        }
        function gb(a3, b3, c3, d2) {
          var e3 = [], h3 = b3.firstChild, f3, g4 = 0, k3, m3 = a3.aoColumns, n2 = a3._rowReadObject;
          d2 = d2 !== q3 ? d2 : n2 ? {} : [];
          var p3 = function(x4, w4) {
            if ("string" === typeof x4) {
              var r3 = x4.indexOf("@");
              -1 !== r3 && (r3 = x4.substring(r3 + 1), ha(x4)(d2, w4.getAttribute(r3)));
            }
          }, t3 = function(x4) {
            if (c3 === q3 || c3 === g4)
              f3 = m3[g4], k3 = x4.innerHTML.trim(), f3 && f3._bAttrSrc ? (ha(f3.mData._)(d2, k3), p3(f3.mData.sort, x4), p3(f3.mData.type, x4), p3(f3.mData.filter, x4)) : n2 ? (f3._setter || (f3._setter = ha(f3.mData)), f3._setter(d2, k3)) : d2[g4] = k3;
            g4++;
          };
          if (h3)
            for (; h3; ) {
              var v3 = h3.nodeName.toUpperCase();
              if ("TD" == v3 || "TH" == v3)
                t3(h3), e3.push(h3);
              h3 = h3.nextSibling;
            }
          else
            for (e3 = b3.anCells, h3 = 0, v3 = e3.length; h3 < v3; h3++)
              t3(e3[h3]);
          (b3 = b3.firstChild ? b3 : b3.nTr) && (b3 = b3.getAttribute("id")) && ha(a3.rowId)(d2, b3);
          return { data: d2, cells: e3 };
        }
        function fb(a3, b3, c3, d2) {
          var e3 = a3.aoData[b3], h3 = e3._aData, f3 = [], g4, k3;
          if (null === e3.nTr) {
            var m3 = c3 || A3.createElement("tr");
            e3.nTr = m3;
            e3.anCells = f3;
            m3._DT_RowIndex = b3;
            jb(a3, e3);
            var n2 = 0;
            for (g4 = a3.aoColumns.length; n2 < g4; n2++) {
              var p3 = a3.aoColumns[n2];
              e3 = (k3 = c3 ? false : true) ? A3.createElement(p3.sCellType) : d2[n2];
              e3._DT_CellIndex = { row: b3, column: n2 };
              f3.push(e3);
              if (k3 || !(!p3.mRender && p3.mData === n2 || l3.isPlainObject(p3.mData) && p3.mData._ === n2 + ".display"))
                e3.innerHTML = T4(a3, b3, n2, "display");
              p3.sClass && (e3.className += " " + p3.sClass);
              p3.bVisible && !c3 ? m3.appendChild(e3) : !p3.bVisible && c3 && e3.parentNode.removeChild(e3);
              p3.fnCreatedCell && p3.fnCreatedCell.call(a3.oInstance, e3, T4(a3, b3, n2), h3, b3, n2);
            }
            F3(a3, "aoRowCreatedCallback", null, [m3, h3, b3, f3]);
          }
        }
        function jb(a3, b3) {
          var c3 = b3.nTr, d2 = b3._aData;
          if (c3) {
            if (a3 = a3.rowIdFn(d2))
              c3.id = a3;
            d2.DT_RowClass && (a3 = d2.DT_RowClass.split(" "), b3.__rowc = b3.__rowc ? Oa(b3.__rowc.concat(a3)) : a3, l3(c3).removeClass(b3.__rowc.join(" ")).addClass(d2.DT_RowClass));
            d2.DT_RowAttr && l3(c3).attr(d2.DT_RowAttr);
            d2.DT_RowData && l3(c3).data(d2.DT_RowData);
          }
        }
        function Jb(a3) {
          var b3, c3, d2 = a3.nTHead, e3 = a3.nTFoot, h3 = 0 === l3("th, td", d2).length, f3 = a3.oClasses, g4 = a3.aoColumns;
          h3 && (c3 = l3("<tr/>").appendTo(d2));
          var k3 = 0;
          for (b3 = g4.length; k3 < b3; k3++) {
            var m3 = g4[k3];
            var n2 = l3(m3.nTh).addClass(m3.sClass);
            h3 && n2.appendTo(c3);
            a3.oFeatures.bSort && (n2.addClass(m3.sSortingClass), false !== m3.bSortable && (n2.attr("tabindex", a3.iTabIndex).attr(
              "aria-controls",
              a3.sTableId
            ), kb(a3, m3.nTh, k3)));
            m3.sTitle != n2[0].innerHTML && n2.html(m3.sTitle);
            lb(a3, "header")(a3, n2, m3, f3);
          }
          h3 && wa(a3.aoHeader, d2);
          l3(d2).children("tr").children("th, td").addClass(f3.sHeaderTH);
          l3(e3).children("tr").children("th, td").addClass(f3.sFooterTH);
          if (null !== e3)
            for (a3 = a3.aoFooter[0], k3 = 0, b3 = a3.length; k3 < b3; k3++)
              m3 = g4[k3], m3.nTf = a3[k3].cell, m3.sClass && l3(m3.nTf).addClass(m3.sClass);
        }
        function xa(a3, b3, c3) {
          var d2, e3, h3 = [], f3 = [], g4 = a3.aoColumns.length;
          if (b3) {
            c3 === q3 && (c3 = false);
            var k3 = 0;
            for (d2 = b3.length; k3 < d2; k3++) {
              h3[k3] = b3[k3].slice();
              h3[k3].nTr = b3[k3].nTr;
              for (e3 = g4 - 1; 0 <= e3; e3--)
                a3.aoColumns[e3].bVisible || c3 || h3[k3].splice(e3, 1);
              f3.push([]);
            }
            k3 = 0;
            for (d2 = h3.length; k3 < d2; k3++) {
              if (a3 = h3[k3].nTr)
                for (; e3 = a3.firstChild; )
                  a3.removeChild(e3);
              e3 = 0;
              for (b3 = h3[k3].length; e3 < b3; e3++) {
                var m3 = g4 = 1;
                if (f3[k3][e3] === q3) {
                  a3.appendChild(h3[k3][e3].cell);
                  for (f3[k3][e3] = 1; h3[k3 + g4] !== q3 && h3[k3][e3].cell == h3[k3 + g4][e3].cell; )
                    f3[k3 + g4][e3] = 1, g4++;
                  for (; h3[k3][e3 + m3] !== q3 && h3[k3][e3].cell == h3[k3][e3 + m3].cell; ) {
                    for (c3 = 0; c3 < g4; c3++)
                      f3[k3 + c3][e3 + m3] = 1;
                    m3++;
                  }
                  l3(h3[k3][e3].cell).attr("rowspan", g4).attr("colspan", m3);
                }
              }
            }
          }
        }
        function ja(a3, b3) {
          var c3 = "ssp" == Q2(a3), d2 = a3.iInitDisplayStart;
          d2 !== q3 && -1 !== d2 && (a3._iDisplayStart = c3 ? d2 : d2 >= a3.fnRecordsDisplay() ? 0 : d2, a3.iInitDisplayStart = -1);
          c3 = F3(a3, "aoPreDrawCallback", "preDraw", [a3]);
          if (-1 !== l3.inArray(false, c3))
            V3(a3, false);
          else {
            c3 = [];
            var e3 = 0;
            d2 = a3.asStripeClasses;
            var h3 = d2.length, f3 = a3.oLanguage, g4 = "ssp" == Q2(a3), k3 = a3.aiDisplay, m3 = a3._iDisplayStart, n2 = a3.fnDisplayEnd();
            a3.bDrawing = true;
            if (a3.bDeferLoading)
              a3.bDeferLoading = false, a3.iDraw++, V3(a3, false);
            else if (!g4)
              a3.iDraw++;
            else if (!a3.bDestroying && !b3) {
              Kb(a3);
              return;
            }
            if (0 !== k3.length)
              for (b3 = g4 ? a3.aoData.length : n2, f3 = g4 ? 0 : m3; f3 < b3; f3++) {
                g4 = k3[f3];
                var p3 = a3.aoData[g4];
                null === p3.nTr && fb(a3, g4);
                var t3 = p3.nTr;
                if (0 !== h3) {
                  var v3 = d2[e3 % h3];
                  p3._sRowStripe != v3 && (l3(t3).removeClass(p3._sRowStripe).addClass(v3), p3._sRowStripe = v3);
                }
                F3(a3, "aoRowCallback", null, [t3, p3._aData, e3, f3, g4]);
                c3.push(t3);
                e3++;
              }
            else
              e3 = f3.sZeroRecords, 1 == a3.iDraw && "ajax" == Q2(a3) ? e3 = f3.sLoadingRecords : f3.sEmptyTable && 0 === a3.fnRecordsTotal() && (e3 = f3.sEmptyTable), c3[0] = l3("<tr/>", { "class": h3 ? d2[0] : "" }).append(l3("<td />", { valign: "top", colSpan: na(a3), "class": a3.oClasses.sRowEmpty }).html(e3))[0];
            F3(a3, "aoHeaderCallback", "header", [
              l3(a3.nTHead).children("tr")[0],
              ib(a3),
              m3,
              n2,
              k3
            ]);
            F3(a3, "aoFooterCallback", "footer", [l3(a3.nTFoot).children("tr")[0], ib(a3), m3, n2, k3]);
            d2 = l3(a3.nTBody);
            d2.children().detach();
            d2.append(l3(c3));
            F3(a3, "aoDrawCallback", "draw", [a3]);
            a3.bSorted = false;
            a3.bFiltered = false;
            a3.bDrawing = false;
          }
        }
        function ka(a3, b3) {
          var c3 = a3.oFeatures, d2 = c3.bFilter;
          c3.bSort && Lb(a3);
          d2 ? ya(a3, a3.oPreviousSearch) : a3.aiDisplay = a3.aiDisplayMaster.slice();
          true !== b3 && (a3._iDisplayStart = 0);
          a3._drawHold = b3;
          ja(a3);
          a3._drawHold = false;
        }
        function Mb(a3) {
          var b3 = a3.oClasses, c3 = l3(a3.nTable);
          c3 = l3("<div/>").insertBefore(c3);
          var d2 = a3.oFeatures, e3 = l3("<div/>", { id: a3.sTableId + "_wrapper", "class": b3.sWrapper + (a3.nTFoot ? "" : " " + b3.sNoFooter) });
          a3.nHolding = c3[0];
          a3.nTableWrapper = e3[0];
          a3.nTableReinsertBefore = a3.nTable.nextSibling;
          for (var h3 = a3.sDom.split(""), f3, g4, k3, m3, n2, p3, t3 = 0; t3 < h3.length; t3++) {
            f3 = null;
            g4 = h3[t3];
            if ("<" == g4) {
              k3 = l3("<div/>")[0];
              m3 = h3[t3 + 1];
              if ("'" == m3 || '"' == m3) {
                n2 = "";
                for (p3 = 2; h3[t3 + p3] != m3; )
                  n2 += h3[t3 + p3], p3++;
                "H" == n2 ? n2 = b3.sJUIHeader : "F" == n2 && (n2 = b3.sJUIFooter);
                -1 != n2.indexOf(".") ? (m3 = n2.split("."), k3.id = m3[0].substr(1, m3[0].length - 1), k3.className = m3[1]) : "#" == n2.charAt(0) ? k3.id = n2.substr(
                  1,
                  n2.length - 1
                ) : k3.className = n2;
                t3 += p3;
              }
              e3.append(k3);
              e3 = l3(k3);
            } else if (">" == g4)
              e3 = e3.parent();
            else if ("l" == g4 && d2.bPaginate && d2.bLengthChange)
              f3 = Nb(a3);
            else if ("f" == g4 && d2.bFilter)
              f3 = Ob(a3);
            else if ("r" == g4 && d2.bProcessing)
              f3 = Pb(a3);
            else if ("t" == g4)
              f3 = Qb(a3);
            else if ("i" == g4 && d2.bInfo)
              f3 = Rb(a3);
            else if ("p" == g4 && d2.bPaginate)
              f3 = Sb(a3);
            else if (0 !== u3.ext.feature.length) {
              for (k3 = u3.ext.feature, p3 = 0, m3 = k3.length; p3 < m3; p3++)
                if (g4 == k3[p3].cFeature) {
                  f3 = k3[p3].fnInit(a3);
                  break;
                }
            }
            f3 && (k3 = a3.aanFeatures, k3[g4] || (k3[g4] = []), k3[g4].push(f3), e3.append(f3));
          }
          c3.replaceWith(e3);
          a3.nHolding = null;
        }
        function wa(a3, b3) {
          b3 = l3(b3).children("tr");
          var c3, d2, e3;
          a3.splice(0, a3.length);
          var h3 = 0;
          for (e3 = b3.length; h3 < e3; h3++)
            a3.push([]);
          h3 = 0;
          for (e3 = b3.length; h3 < e3; h3++) {
            var f3 = b3[h3];
            for (c3 = f3.firstChild; c3; ) {
              if ("TD" == c3.nodeName.toUpperCase() || "TH" == c3.nodeName.toUpperCase()) {
                var g4 = 1 * c3.getAttribute("colspan");
                var k3 = 1 * c3.getAttribute("rowspan");
                g4 = g4 && 0 !== g4 && 1 !== g4 ? g4 : 1;
                k3 = k3 && 0 !== k3 && 1 !== k3 ? k3 : 1;
                var m3 = 0;
                for (d2 = a3[h3]; d2[m3]; )
                  m3++;
                var n2 = m3;
                var p3 = 1 === g4 ? true : false;
                for (d2 = 0; d2 < g4; d2++)
                  for (m3 = 0; m3 < k3; m3++)
                    a3[h3 + m3][n2 + d2] = { cell: c3, unique: p3 }, a3[h3 + m3].nTr = f3;
              }
              c3 = c3.nextSibling;
            }
          }
        }
        function Pa(a3, b3, c3) {
          var d2 = [];
          c3 || (c3 = a3.aoHeader, b3 && (c3 = [], wa(c3, b3)));
          b3 = 0;
          for (var e3 = c3.length; b3 < e3; b3++)
            for (var h3 = 0, f3 = c3[b3].length; h3 < f3; h3++)
              !c3[b3][h3].unique || d2[h3] && a3.bSortCellsTop || (d2[h3] = c3[b3][h3].cell);
          return d2;
        }
        function Qa(a3, b3, c3) {
          F3(a3, "aoServerParams", "serverParams", [b3]);
          if (b3 && Array.isArray(b3)) {
            var d2 = {}, e3 = /(.*?)\[\]$/;
            l3.each(b3, function(n2, p3) {
              (n2 = p3.name.match(e3)) ? (n2 = n2[0], d2[n2] || (d2[n2] = []), d2[n2].push(p3.value)) : d2[p3.name] = p3.value;
            });
            b3 = d2;
          }
          var h3 = a3.ajax, f3 = a3.oInstance, g4 = function(n2) {
            var p3 = a3.jqXHR ? a3.jqXHR.status : null;
            if (null === n2 || "number" === typeof p3 && 204 == p3)
              n2 = {}, za(a3, n2, []);
            (p3 = n2.error || n2.sError) && ea(a3, 0, p3);
            a3.json = n2;
            F3(a3, null, "xhr", [a3, n2, a3.jqXHR]);
            c3(n2);
          };
          if (l3.isPlainObject(h3) && h3.data) {
            var k3 = h3.data;
            var m3 = "function" === typeof k3 ? k3(b3, a3) : k3;
            b3 = "function" === typeof k3 && m3 ? m3 : l3.extend(true, b3, m3);
            delete h3.data;
          }
          m3 = { data: b3, success: g4, dataType: "json", cache: false, type: a3.sServerMethod, error: function(n2, p3, t3) {
            t3 = F3(a3, null, "xhr", [a3, null, a3.jqXHR]);
            -1 === l3.inArray(true, t3) && ("parsererror" == p3 ? ea(a3, 0, "Invalid JSON response", 1) : 4 === n2.readyState && ea(
              a3,
              0,
              "Ajax error",
              7
            ));
            V3(a3, false);
          } };
          a3.oAjaxData = b3;
          F3(a3, null, "preXhr", [a3, b3]);
          a3.fnServerData ? a3.fnServerData.call(f3, a3.sAjaxSource, l3.map(b3, function(n2, p3) {
            return { name: p3, value: n2 };
          }), g4, a3) : a3.sAjaxSource || "string" === typeof h3 ? a3.jqXHR = l3.ajax(l3.extend(m3, { url: h3 || a3.sAjaxSource })) : "function" === typeof h3 ? a3.jqXHR = h3.call(f3, b3, g4, a3) : (a3.jqXHR = l3.ajax(l3.extend(m3, h3)), h3.data = k3);
        }
        function Kb(a3) {
          a3.iDraw++;
          V3(a3, true);
          Qa(a3, Tb(a3), function(b3) {
            Ub(a3, b3);
          });
        }
        function Tb(a3) {
          var b3 = a3.aoColumns, c3 = b3.length, d2 = a3.oFeatures, e3 = a3.oPreviousSearch, h3 = a3.aoPreSearchCols, f3 = [], g4 = oa(a3);
          var k3 = a3._iDisplayStart;
          var m3 = false !== d2.bPaginate ? a3._iDisplayLength : -1;
          var n2 = function(x4, w4) {
            f3.push({ name: x4, value: w4 });
          };
          n2("sEcho", a3.iDraw);
          n2("iColumns", c3);
          n2("sColumns", U2(b3, "sName").join(","));
          n2("iDisplayStart", k3);
          n2("iDisplayLength", m3);
          var p3 = { draw: a3.iDraw, columns: [], order: [], start: k3, length: m3, search: { value: e3.sSearch, regex: e3.bRegex } };
          for (k3 = 0; k3 < c3; k3++) {
            var t3 = b3[k3];
            var v3 = h3[k3];
            m3 = "function" == typeof t3.mData ? "function" : t3.mData;
            p3.columns.push({ data: m3, name: t3.sName, searchable: t3.bSearchable, orderable: t3.bSortable, search: {
              value: v3.sSearch,
              regex: v3.bRegex
            } });
            n2("mDataProp_" + k3, m3);
            d2.bFilter && (n2("sSearch_" + k3, v3.sSearch), n2("bRegex_" + k3, v3.bRegex), n2("bSearchable_" + k3, t3.bSearchable));
            d2.bSort && n2("bSortable_" + k3, t3.bSortable);
          }
          d2.bFilter && (n2("sSearch", e3.sSearch), n2("bRegex", e3.bRegex));
          d2.bSort && (l3.each(g4, function(x4, w4) {
            p3.order.push({ column: w4.col, dir: w4.dir });
            n2("iSortCol_" + x4, w4.col);
            n2("sSortDir_" + x4, w4.dir);
          }), n2("iSortingCols", g4.length));
          b3 = u3.ext.legacy.ajax;
          return null === b3 ? a3.sAjaxSource ? f3 : p3 : b3 ? f3 : p3;
        }
        function Ub(a3, b3) {
          var c3 = function(f3, g4) {
            return b3[f3] !== q3 ? b3[f3] : b3[g4];
          }, d2 = za(a3, b3), e3 = c3("sEcho", "draw"), h3 = c3("iTotalRecords", "recordsTotal");
          c3 = c3("iTotalDisplayRecords", "recordsFiltered");
          if (e3 !== q3) {
            if (1 * e3 < a3.iDraw)
              return;
            a3.iDraw = 1 * e3;
          }
          d2 || (d2 = []);
          Ma(a3);
          a3._iRecordsTotal = parseInt(h3, 10);
          a3._iRecordsDisplay = parseInt(c3, 10);
          e3 = 0;
          for (h3 = d2.length; e3 < h3; e3++)
            ia(a3, d2[e3]);
          a3.aiDisplay = a3.aiDisplayMaster.slice();
          ja(a3, true);
          a3._bInitComplete || Ra(a3, b3);
          V3(a3, false);
        }
        function za(a3, b3, c3) {
          a3 = l3.isPlainObject(a3.ajax) && a3.ajax.dataSrc !== q3 ? a3.ajax.dataSrc : a3.sAjaxDataProp;
          if (!c3)
            return "data" === a3 ? b3.aaData || b3[a3] : "" !== a3 ? ma(a3)(b3) : b3;
          ha(a3)(b3, c3);
        }
        function Ob(a3) {
          var b3 = a3.oClasses, c3 = a3.sTableId, d2 = a3.oLanguage, e3 = a3.oPreviousSearch, h3 = a3.aanFeatures, f3 = '<input type="search" class="' + b3.sFilterInput + '"/>', g4 = d2.sSearch;
          g4 = g4.match(/_INPUT_/) ? g4.replace("_INPUT_", f3) : g4 + f3;
          b3 = l3("<div/>", { id: h3.f ? null : c3 + "_filter", "class": b3.sFilter }).append(l3("<label/>").append(g4));
          var k3 = function(n2) {
            var p3 = this.value ? this.value : "";
            e3.return && "Enter" !== n2.key || p3 == e3.sSearch || (ya(a3, { sSearch: p3, bRegex: e3.bRegex, bSmart: e3.bSmart, bCaseInsensitive: e3.bCaseInsensitive, "return": e3.return }), a3._iDisplayStart = 0, ja(a3));
          };
          h3 = null !== a3.searchDelay ? a3.searchDelay : "ssp" === Q2(a3) ? 400 : 0;
          var m3 = l3("input", b3).val(e3.sSearch).attr("placeholder", d2.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", h3 ? mb(k3, h3) : k3).on("mouseup", function(n2) {
            setTimeout(function() {
              k3.call(m3[0], n2);
            }, 10);
          }).on("keypress.DT", function(n2) {
            if (13 == n2.keyCode)
              return false;
          }).attr("aria-controls", c3);
          l3(a3.nTable).on("search.dt.DT", function(n2, p3) {
            if (a3 === p3)
              try {
                m3[0] !== A3.activeElement && m3.val(e3.sSearch);
              } catch (t3) {
              }
          });
          return b3[0];
        }
        function ya(a3, b3, c3) {
          var d2 = a3.oPreviousSearch, e3 = a3.aoPreSearchCols, h3 = function(g4) {
            d2.sSearch = g4.sSearch;
            d2.bRegex = g4.bRegex;
            d2.bSmart = g4.bSmart;
            d2.bCaseInsensitive = g4.bCaseInsensitive;
            d2.return = g4.return;
          }, f3 = function(g4) {
            return g4.bEscapeRegex !== q3 ? !g4.bEscapeRegex : g4.bRegex;
          };
          eb(a3);
          if ("ssp" != Q2(a3)) {
            Vb(a3, b3.sSearch, c3, f3(b3), b3.bSmart, b3.bCaseInsensitive, b3.return);
            h3(b3);
            for (b3 = 0; b3 < e3.length; b3++)
              Wb(a3, e3[b3].sSearch, b3, f3(e3[b3]), e3[b3].bSmart, e3[b3].bCaseInsensitive);
            Xb(a3);
          } else
            h3(b3);
          a3.bFiltered = true;
          F3(a3, null, "search", [a3]);
        }
        function Xb(a3) {
          for (var b3 = u3.ext.search, c3 = a3.aiDisplay, d2, e3, h3 = 0, f3 = b3.length; h3 < f3; h3++) {
            for (var g4 = [], k3 = 0, m3 = c3.length; k3 < m3; k3++)
              e3 = c3[k3], d2 = a3.aoData[e3], b3[h3](a3, d2._aFilterData, e3, d2._aData, k3) && g4.push(e3);
            c3.length = 0;
            l3.merge(c3, g4);
          }
        }
        function Wb(a3, b3, c3, d2, e3, h3) {
          if ("" !== b3) {
            var f3 = [], g4 = a3.aiDisplay;
            d2 = nb(b3, d2, e3, h3);
            for (e3 = 0; e3 < g4.length; e3++)
              b3 = a3.aoData[g4[e3]]._aFilterData[c3], d2.test(b3) && f3.push(g4[e3]);
            a3.aiDisplay = f3;
          }
        }
        function Vb(a3, b3, c3, d2, e3, h3) {
          e3 = nb(b3, d2, e3, h3);
          var f3 = a3.oPreviousSearch.sSearch, g4 = a3.aiDisplayMaster;
          h3 = [];
          0 !== u3.ext.search.length && (c3 = true);
          var k3 = Yb(a3);
          if (0 >= b3.length)
            a3.aiDisplay = g4.slice();
          else {
            if (k3 || c3 || d2 || f3.length > b3.length || 0 !== b3.indexOf(f3) || a3.bSorted)
              a3.aiDisplay = g4.slice();
            b3 = a3.aiDisplay;
            for (c3 = 0; c3 < b3.length; c3++)
              e3.test(a3.aoData[b3[c3]]._sFilterRow) && h3.push(b3[c3]);
            a3.aiDisplay = h3;
          }
        }
        function nb(a3, b3, c3, d2) {
          a3 = b3 ? a3 : ob(a3);
          c3 && (a3 = "^(?=.*?" + l3.map(a3.match(/"[^"]+"|[^ ]+/g) || [""], function(e3) {
            if ('"' === e3.charAt(0)) {
              var h3 = e3.match(/^"(.*)"$/);
              e3 = h3 ? h3[1] : e3;
            }
            return e3.replace('"', "");
          }).join(")(?=.*?") + ").*$");
          return new RegExp(a3, d2 ? "i" : "");
        }
        function Yb(a3) {
          var b3 = a3.aoColumns, c3, d2;
          var e3 = false;
          var h3 = 0;
          for (c3 = a3.aoData.length; h3 < c3; h3++) {
            var f3 = a3.aoData[h3];
            if (!f3._aFilterData) {
              var g4 = [];
              e3 = 0;
              for (d2 = b3.length; e3 < d2; e3++) {
                var k3 = b3[e3];
                k3.bSearchable ? (k3 = T4(a3, h3, e3, "filter"), null === k3 && (k3 = ""), "string" !== typeof k3 && k3.toString && (k3 = k3.toString())) : k3 = "";
                k3.indexOf && -1 !== k3.indexOf("&") && (Sa.innerHTML = k3, k3 = Bc ? Sa.textContent : Sa.innerText);
                k3.replace && (k3 = k3.replace(/[\r\n\u2028]/g, ""));
                g4.push(k3);
              }
              f3._aFilterData = g4;
              f3._sFilterRow = g4.join("  ");
              e3 = true;
            }
          }
          return e3;
        }
        function Zb(a3) {
          return { search: a3.sSearch, smart: a3.bSmart, regex: a3.bRegex, caseInsensitive: a3.bCaseInsensitive };
        }
        function $b(a3) {
          return { sSearch: a3.search, bSmart: a3.smart, bRegex: a3.regex, bCaseInsensitive: a3.caseInsensitive };
        }
        function Rb(a3) {
          var b3 = a3.sTableId, c3 = a3.aanFeatures.i, d2 = l3("<div/>", { "class": a3.oClasses.sInfo, id: c3 ? null : b3 + "_info" });
          c3 || (a3.aoDrawCallback.push({ fn: ac, sName: "information" }), d2.attr("role", "status").attr("aria-live", "polite"), l3(a3.nTable).attr("aria-describedby", b3 + "_info"));
          return d2[0];
        }
        function ac(a3) {
          var b3 = a3.aanFeatures.i;
          if (0 !== b3.length) {
            var c3 = a3.oLanguage, d2 = a3._iDisplayStart + 1, e3 = a3.fnDisplayEnd(), h3 = a3.fnRecordsTotal(), f3 = a3.fnRecordsDisplay(), g4 = f3 ? c3.sInfo : c3.sInfoEmpty;
            f3 !== h3 && (g4 += " " + c3.sInfoFiltered);
            g4 += c3.sInfoPostFix;
            g4 = bc(a3, g4);
            c3 = c3.fnInfoCallback;
            null !== c3 && (g4 = c3.call(a3.oInstance, a3, d2, e3, h3, f3, g4));
            l3(b3).html(g4);
          }
        }
        function bc(a3, b3) {
          var c3 = a3.fnFormatNumber, d2 = a3._iDisplayStart + 1, e3 = a3._iDisplayLength, h3 = a3.fnRecordsDisplay(), f3 = -1 === e3;
          return b3.replace(/_START_/g, c3.call(a3, d2)).replace(/_END_/g, c3.call(a3, a3.fnDisplayEnd())).replace(/_MAX_/g, c3.call(a3, a3.fnRecordsTotal())).replace(/_TOTAL_/g, c3.call(a3, h3)).replace(/_PAGE_/g, c3.call(a3, f3 ? 1 : Math.ceil(d2 / e3))).replace(/_PAGES_/g, c3.call(a3, f3 ? 1 : Math.ceil(h3 / e3)));
        }
        function Aa(a3) {
          var b3 = a3.iInitDisplayStart, c3 = a3.aoColumns;
          var d2 = a3.oFeatures;
          var e3 = a3.bDeferLoading;
          if (a3.bInitialised) {
            Mb(a3);
            Jb(a3);
            xa(a3, a3.aoHeader);
            xa(a3, a3.aoFooter);
            V3(a3, true);
            d2.bAutoWidth && db(a3);
            var h3 = 0;
            for (d2 = c3.length; h3 < d2; h3++) {
              var f3 = c3[h3];
              f3.sWidth && (f3.nTh.style.width = K2(f3.sWidth));
            }
            F3(a3, null, "preInit", [a3]);
            ka(a3);
            c3 = Q2(a3);
            if ("ssp" != c3 || e3)
              "ajax" == c3 ? Qa(
                a3,
                [],
                function(g4) {
                  var k3 = za(a3, g4);
                  for (h3 = 0; h3 < k3.length; h3++)
                    ia(a3, k3[h3]);
                  a3.iInitDisplayStart = b3;
                  ka(a3);
                  V3(a3, false);
                  Ra(a3, g4);
                },
                a3
              ) : (V3(a3, false), Ra(a3));
          } else
            setTimeout(function() {
              Aa(a3);
            }, 200);
        }
        function Ra(a3, b3) {
          a3._bInitComplete = true;
          (b3 || a3.oInit.aaData) && sa(a3);
          F3(a3, null, "plugin-init", [a3, b3]);
          F3(a3, "aoInitComplete", "init", [a3, b3]);
        }
        function pb(a3, b3) {
          b3 = parseInt(b3, 10);
          a3._iDisplayLength = b3;
          qb(a3);
          F3(a3, null, "length", [a3, b3]);
        }
        function Nb(a3) {
          var b3 = a3.oClasses, c3 = a3.sTableId, d2 = a3.aLengthMenu, e3 = Array.isArray(d2[0]), h3 = e3 ? d2[0] : d2;
          d2 = e3 ? d2[1] : d2;
          e3 = l3("<select/>", { name: c3 + "_length", "aria-controls": c3, "class": b3.sLengthSelect });
          for (var f3 = 0, g4 = h3.length; f3 < g4; f3++)
            e3[0][f3] = new Option("number" === typeof d2[f3] ? a3.fnFormatNumber(d2[f3]) : d2[f3], h3[f3]);
          var k3 = l3("<div><label/></div>").addClass(b3.sLength);
          a3.aanFeatures.l || (k3[0].id = c3 + "_length");
          k3.children().append(a3.oLanguage.sLengthMenu.replace("_MENU_", e3[0].outerHTML));
          l3("select", k3).val(a3._iDisplayLength).on("change.DT", function(m3) {
            pb(a3, l3(this).val());
            ja(a3);
          });
          l3(a3.nTable).on("length.dt.DT", function(m3, n2, p3) {
            a3 === n2 && l3("select", k3).val(p3);
          });
          return k3[0];
        }
        function Sb(a3) {
          var b3 = a3.sPaginationType, c3 = u3.ext.pager[b3], d2 = "function" === typeof c3, e3 = function(f3) {
            ja(f3);
          };
          b3 = l3("<div/>").addClass(a3.oClasses.sPaging + b3)[0];
          var h3 = a3.aanFeatures;
          d2 || c3.fnInit(a3, b3, e3);
          h3.p || (b3.id = a3.sTableId + "_paginate", a3.aoDrawCallback.push({ fn: function(f3) {
            if (d2) {
              var g4 = f3._iDisplayStart, k3 = f3._iDisplayLength, m3 = f3.fnRecordsDisplay(), n2 = -1 === k3;
              g4 = n2 ? 0 : Math.ceil(g4 / k3);
              k3 = n2 ? 1 : Math.ceil(m3 / k3);
              m3 = c3(g4, k3);
              var p3;
              n2 = 0;
              for (p3 = h3.p.length; n2 < p3; n2++)
                lb(f3, "pageButton")(f3, h3.p[n2], n2, m3, g4, k3);
            } else
              c3.fnUpdate(f3, e3);
          }, sName: "pagination" }));
          return b3;
        }
        function Ta(a3, b3, c3) {
          var d2 = a3._iDisplayStart, e3 = a3._iDisplayLength, h3 = a3.fnRecordsDisplay();
          0 === h3 || -1 === e3 ? d2 = 0 : "number" === typeof b3 ? (d2 = b3 * e3, d2 > h3 && (d2 = 0)) : "first" == b3 ? d2 = 0 : "previous" == b3 ? (d2 = 0 <= e3 ? d2 - e3 : 0, 0 > d2 && (d2 = 0)) : "next" == b3 ? d2 + e3 < h3 && (d2 += e3) : "last" == b3 ? d2 = Math.floor((h3 - 1) / e3) * e3 : ea(a3, 0, "Unknown paging action: " + b3, 5);
          b3 = a3._iDisplayStart !== d2;
          a3._iDisplayStart = d2;
          b3 && (F3(a3, null, "page", [a3]), c3 && ja(a3));
          return b3;
        }
        function Pb(a3) {
          return l3("<div/>", { id: a3.aanFeatures.r ? null : a3.sTableId + "_processing", "class": a3.oClasses.sProcessing }).html(a3.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(a3.nTable)[0];
        }
        function V3(a3, b3) {
          a3.oFeatures.bProcessing && l3(a3.aanFeatures.r).css("display", b3 ? "block" : "none");
          F3(a3, null, "processing", [a3, b3]);
        }
        function Qb(a3) {
          var b3 = l3(a3.nTable), c3 = a3.oScroll;
          if ("" === c3.sX && "" === c3.sY)
            return a3.nTable;
          var d2 = c3.sX, e3 = c3.sY, h3 = a3.oClasses, f3 = b3.children("caption"), g4 = f3.length ? f3[0]._captionSide : null, k3 = l3(b3[0].cloneNode(false)), m3 = l3(b3[0].cloneNode(false)), n2 = b3.children("tfoot");
          n2.length || (n2 = null);
          k3 = l3("<div/>", { "class": h3.sScrollWrapper }).append(l3("<div/>", { "class": h3.sScrollHead }).css({
            overflow: "hidden",
            position: "relative",
            border: 0,
            width: d2 ? d2 ? K2(d2) : null : "100%"
          }).append(l3("<div/>", { "class": h3.sScrollHeadInner }).css({ "box-sizing": "content-box", width: c3.sXInner || "100%" }).append(k3.removeAttr("id").css("margin-left", 0).append("top" === g4 ? f3 : null).append(b3.children("thead"))))).append(l3("<div/>", { "class": h3.sScrollBody }).css({ position: "relative", overflow: "auto", width: d2 ? K2(d2) : null }).append(b3));
          n2 && k3.append(l3("<div/>", { "class": h3.sScrollFoot }).css({ overflow: "hidden", border: 0, width: d2 ? d2 ? K2(d2) : null : "100%" }).append(l3("<div/>", { "class": h3.sScrollFootInner }).append(m3.removeAttr("id").css(
            "margin-left",
            0
          ).append("bottom" === g4 ? f3 : null).append(b3.children("tfoot")))));
          b3 = k3.children();
          var p3 = b3[0];
          h3 = b3[1];
          var t3 = n2 ? b3[2] : null;
          if (d2)
            l3(h3).on("scroll.DT", function(v3) {
              v3 = this.scrollLeft;
              p3.scrollLeft = v3;
              n2 && (t3.scrollLeft = v3);
            });
          l3(h3).css("max-height", e3);
          c3.bCollapse || l3(h3).css("height", e3);
          a3.nScrollHead = p3;
          a3.nScrollBody = h3;
          a3.nScrollFoot = t3;
          a3.aoDrawCallback.push({ fn: Ja, sName: "scrolling" });
          return k3[0];
        }
        function Ja(a3) {
          var b3 = a3.oScroll, c3 = b3.sX, d2 = b3.sXInner, e3 = b3.sY;
          b3 = b3.iBarWidth;
          var h3 = l3(a3.nScrollHead), f3 = h3[0].style, g4 = h3.children("div"), k3 = g4[0].style, m3 = g4.children("table");
          g4 = a3.nScrollBody;
          var n2 = l3(g4), p3 = g4.style, t3 = l3(a3.nScrollFoot).children("div"), v3 = t3.children("table"), x4 = l3(a3.nTHead), w4 = l3(a3.nTable), r3 = w4[0], C3 = r3.style, G2 = a3.nTFoot ? l3(a3.nTFoot) : null, ba = a3.oBrowser, L3 = ba.bScrollOversize;
          U2(a3.aoColumns, "nTh");
          var O2 = [], I3 = [], H3 = [], fa = [], Z2, Ba = function(D2) {
            D2 = D2.style;
            D2.paddingTop = "0";
            D2.paddingBottom = "0";
            D2.borderTopWidth = "0";
            D2.borderBottomWidth = "0";
            D2.height = 0;
          };
          var X2 = g4.scrollHeight > g4.clientHeight;
          if (a3.scrollBarVis !== X2 && a3.scrollBarVis !== q3)
            a3.scrollBarVis = X2, sa(a3);
          else {
            a3.scrollBarVis = X2;
            w4.children("thead, tfoot").remove();
            if (G2) {
              X2 = G2.clone().prependTo(w4);
              var ca = G2.find("tr");
              var Ca = X2.find("tr");
              X2.find("[id]").removeAttr("id");
            }
            var Ua = x4.clone().prependTo(w4);
            x4 = x4.find("tr");
            X2 = Ua.find("tr");
            Ua.find("th, td").removeAttr("tabindex");
            Ua.find("[id]").removeAttr("id");
            c3 || (p3.width = "100%", h3[0].style.width = "100%");
            l3.each(Pa(a3, Ua), function(D2, W2) {
              Z2 = ta(a3, D2);
              W2.style.width = a3.aoColumns[Z2].sWidth;
            });
            G2 && da(function(D2) {
              D2.style.width = "";
            }, Ca);
            h3 = w4.outerWidth();
            "" === c3 ? (C3.width = "100%", L3 && (w4.find("tbody").height() > g4.offsetHeight || "scroll" == n2.css("overflow-y")) && (C3.width = K2(w4.outerWidth() - b3)), h3 = w4.outerWidth()) : "" !== d2 && (C3.width = K2(d2), h3 = w4.outerWidth());
            da(Ba, X2);
            da(function(D2) {
              var W2 = y3.getComputedStyle ? y3.getComputedStyle(D2).width : K2(l3(D2).width());
              H3.push(D2.innerHTML);
              O2.push(W2);
            }, X2);
            da(function(D2, W2) {
              D2.style.width = O2[W2];
            }, x4);
            l3(X2).css("height", 0);
            G2 && (da(Ba, Ca), da(function(D2) {
              fa.push(D2.innerHTML);
              I3.push(K2(l3(D2).css("width")));
            }, Ca), da(function(D2, W2) {
              D2.style.width = I3[W2];
            }, ca), l3(Ca).height(0));
            da(function(D2, W2) {
              D2.innerHTML = '<div class="dataTables_sizing">' + H3[W2] + "</div>";
              D2.childNodes[0].style.height = "0";
              D2.childNodes[0].style.overflow = "hidden";
              D2.style.width = O2[W2];
            }, X2);
            G2 && da(function(D2, W2) {
              D2.innerHTML = '<div class="dataTables_sizing">' + fa[W2] + "</div>";
              D2.childNodes[0].style.height = "0";
              D2.childNodes[0].style.overflow = "hidden";
              D2.style.width = I3[W2];
            }, Ca);
            Math.round(w4.outerWidth()) < Math.round(h3) ? (ca = g4.scrollHeight > g4.offsetHeight || "scroll" == n2.css("overflow-y") ? h3 + b3 : h3, L3 && (g4.scrollHeight > g4.offsetHeight || "scroll" == n2.css("overflow-y")) && (C3.width = K2(ca - b3)), "" !== c3 && "" === d2 || ea(a3, 1, "Possible column misalignment", 6)) : ca = "100%";
            p3.width = K2(ca);
            f3.width = K2(ca);
            G2 && (a3.nScrollFoot.style.width = K2(ca));
            !e3 && L3 && (p3.height = K2(r3.offsetHeight + b3));
            c3 = w4.outerWidth();
            m3[0].style.width = K2(c3);
            k3.width = K2(c3);
            d2 = w4.height() > g4.clientHeight || "scroll" == n2.css("overflow-y");
            e3 = "padding" + (ba.bScrollbarLeft ? "Left" : "Right");
            k3[e3] = d2 ? b3 + "px" : "0px";
            G2 && (v3[0].style.width = K2(c3), t3[0].style.width = K2(c3), t3[0].style[e3] = d2 ? b3 + "px" : "0px");
            w4.children("colgroup").insertBefore(w4.children("thead"));
            n2.trigger("scroll");
            !a3.bSorted && !a3.bFiltered || a3._drawHold || (g4.scrollTop = 0);
          }
        }
        function da(a3, b3, c3) {
          for (var d2 = 0, e3 = 0, h3 = b3.length, f3, g4; e3 < h3; ) {
            f3 = b3[e3].firstChild;
            for (g4 = c3 ? c3[e3].firstChild : null; f3; )
              1 === f3.nodeType && (c3 ? a3(f3, g4, d2) : a3(f3, d2), d2++), f3 = f3.nextSibling, g4 = c3 ? g4.nextSibling : null;
            e3++;
          }
        }
        function db(a3) {
          var b3 = a3.nTable, c3 = a3.aoColumns, d2 = a3.oScroll, e3 = d2.sY, h3 = d2.sX, f3 = d2.sXInner, g4 = c3.length, k3 = Ka(a3, "bVisible"), m3 = l3("th", a3.nTHead), n2 = b3.getAttribute("width"), p3 = b3.parentNode, t3 = false, v3, x4 = a3.oBrowser;
          d2 = x4.bScrollOversize;
          (v3 = b3.style.width) && -1 !== v3.indexOf("%") && (n2 = v3);
          for (v3 = 0; v3 < k3.length; v3++) {
            var w4 = c3[k3[v3]];
            null !== w4.sWidth && (w4.sWidth = cc(w4.sWidthOrig, p3), t3 = true);
          }
          if (d2 || !t3 && !h3 && !e3 && g4 == na(a3) && g4 == m3.length)
            for (v3 = 0; v3 < g4; v3++)
              k3 = ta(a3, v3), null !== k3 && (c3[k3].sWidth = K2(m3.eq(v3).width()));
          else {
            g4 = l3(b3).clone().css("visibility", "hidden").removeAttr("id");
            g4.find("tbody tr").remove();
            var r3 = l3("<tr/>").appendTo(g4.find("tbody"));
            g4.find("thead, tfoot").remove();
            g4.append(l3(a3.nTHead).clone()).append(l3(a3.nTFoot).clone());
            g4.find("tfoot th, tfoot td").css("width", "");
            m3 = Pa(a3, g4.find("thead")[0]);
            for (v3 = 0; v3 < k3.length; v3++)
              w4 = c3[k3[v3]], m3[v3].style.width = null !== w4.sWidthOrig && "" !== w4.sWidthOrig ? K2(w4.sWidthOrig) : "", w4.sWidthOrig && h3 && l3(m3[v3]).append(l3("<div/>").css({ width: w4.sWidthOrig, margin: 0, padding: 0, border: 0, height: 1 }));
            if (a3.aoData.length)
              for (v3 = 0; v3 < k3.length; v3++)
                t3 = k3[v3], w4 = c3[t3], l3(dc(a3, t3)).clone(false).append(w4.sContentPadding).appendTo(r3);
            l3("[name]", g4).removeAttr("name");
            w4 = l3("<div/>").css(h3 || e3 ? { position: "absolute", top: 0, left: 0, height: 1, right: 0, overflow: "hidden" } : {}).append(g4).appendTo(p3);
            h3 && f3 ? g4.width(f3) : h3 ? (g4.css("width", "auto"), g4.removeAttr("width"), g4.width() < p3.clientWidth && n2 && g4.width(p3.clientWidth)) : e3 ? g4.width(p3.clientWidth) : n2 && g4.width(n2);
            for (v3 = e3 = 0; v3 < k3.length; v3++)
              p3 = l3(m3[v3]), f3 = p3.outerWidth() - p3.width(), p3 = x4.bBounding ? Math.ceil(m3[v3].getBoundingClientRect().width) : p3.outerWidth(), e3 += p3, c3[k3[v3]].sWidth = K2(p3 - f3);
            b3.style.width = K2(e3);
            w4.remove();
          }
          n2 && (b3.style.width = K2(n2));
          !n2 && !h3 || a3._reszEvt || (b3 = function() {
            l3(y3).on("resize.DT-" + a3.sInstance, mb(function() {
              sa(a3);
            }));
          }, d2 ? setTimeout(b3, 1e3) : b3(), a3._reszEvt = true);
        }
        function cc(a3, b3) {
          if (!a3)
            return 0;
          a3 = l3("<div/>").css("width", K2(a3)).appendTo(b3 || A3.body);
          b3 = a3[0].offsetWidth;
          a3.remove();
          return b3;
        }
        function dc(a3, b3) {
          var c3 = ec(a3, b3);
          if (0 > c3)
            return null;
          var d2 = a3.aoData[c3];
          return d2.nTr ? d2.anCells[b3] : l3("<td/>").html(T4(a3, c3, b3, "display"))[0];
        }
        function ec(a3, b3) {
          for (var c3, d2 = -1, e3 = -1, h3 = 0, f3 = a3.aoData.length; h3 < f3; h3++)
            c3 = T4(a3, h3, b3, "display") + "", c3 = c3.replace(Cc, ""), c3 = c3.replace(/&nbsp;/g, " "), c3.length > d2 && (d2 = c3.length, e3 = h3);
          return e3;
        }
        function K2(a3) {
          return null === a3 ? "0px" : "number" == typeof a3 ? 0 > a3 ? "0px" : a3 + "px" : a3.match(/\d$/) ? a3 + "px" : a3;
        }
        function oa(a3) {
          var b3 = [], c3 = a3.aoColumns;
          var d2 = a3.aaSortingFixed;
          var e3 = l3.isPlainObject(d2);
          var h3 = [];
          var f3 = function(n2) {
            n2.length && !Array.isArray(n2[0]) ? h3.push(n2) : l3.merge(h3, n2);
          };
          Array.isArray(d2) && f3(d2);
          e3 && d2.pre && f3(d2.pre);
          f3(a3.aaSorting);
          e3 && d2.post && f3(d2.post);
          for (a3 = 0; a3 < h3.length; a3++) {
            var g4 = h3[a3][0];
            f3 = c3[g4].aDataSort;
            d2 = 0;
            for (e3 = f3.length; d2 < e3; d2++) {
              var k3 = f3[d2];
              var m3 = c3[k3].sType || "string";
              h3[a3]._idx === q3 && (h3[a3]._idx = l3.inArray(h3[a3][1], c3[k3].asSorting));
              b3.push({ src: g4, col: k3, dir: h3[a3][1], index: h3[a3]._idx, type: m3, formatter: u3.ext.type.order[m3 + "-pre"] });
            }
          }
          return b3;
        }
        function Lb(a3) {
          var b3, c3 = [], d2 = u3.ext.type.order, e3 = a3.aoData, h3 = 0, f3 = a3.aiDisplayMaster;
          eb(a3);
          var g4 = oa(a3);
          var k3 = 0;
          for (b3 = g4.length; k3 < b3; k3++) {
            var m3 = g4[k3];
            m3.formatter && h3++;
            fc(a3, m3.col);
          }
          if ("ssp" != Q2(a3) && 0 !== g4.length) {
            k3 = 0;
            for (b3 = f3.length; k3 < b3; k3++)
              c3[f3[k3]] = k3;
            h3 === g4.length ? f3.sort(function(n2, p3) {
              var t3, v3 = g4.length, x4 = e3[n2]._aSortData, w4 = e3[p3]._aSortData;
              for (t3 = 0; t3 < v3; t3++) {
                var r3 = g4[t3];
                var C3 = x4[r3.col];
                var G2 = w4[r3.col];
                C3 = C3 < G2 ? -1 : C3 > G2 ? 1 : 0;
                if (0 !== C3)
                  return "asc" === r3.dir ? C3 : -C3;
              }
              C3 = c3[n2];
              G2 = c3[p3];
              return C3 < G2 ? -1 : C3 > G2 ? 1 : 0;
            }) : f3.sort(function(n2, p3) {
              var t3, v3 = g4.length, x4 = e3[n2]._aSortData, w4 = e3[p3]._aSortData;
              for (t3 = 0; t3 < v3; t3++) {
                var r3 = g4[t3];
                var C3 = x4[r3.col];
                var G2 = w4[r3.col];
                r3 = d2[r3.type + "-" + r3.dir] || d2["string-" + r3.dir];
                C3 = r3(C3, G2);
                if (0 !== C3)
                  return C3;
              }
              C3 = c3[n2];
              G2 = c3[p3];
              return C3 < G2 ? -1 : C3 > G2 ? 1 : 0;
            });
          }
          a3.bSorted = true;
        }
        function gc(a3) {
          var b3 = a3.aoColumns, c3 = oa(a3);
          a3 = a3.oLanguage.oAria;
          for (var d2 = 0, e3 = b3.length; d2 < e3; d2++) {
            var h3 = b3[d2];
            var f3 = h3.asSorting;
            var g4 = h3.ariaTitle || h3.sTitle.replace(/<.*?>/g, "");
            var k3 = h3.nTh;
            k3.removeAttribute("aria-sort");
            h3.bSortable && (0 < c3.length && c3[0].col == d2 ? (k3.setAttribute("aria-sort", "asc" == c3[0].dir ? "ascending" : "descending"), h3 = f3[c3[0].index + 1] || f3[0]) : h3 = f3[0], g4 += "asc" === h3 ? a3.sSortAscending : a3.sSortDescending);
            k3.setAttribute("aria-label", g4);
          }
        }
        function rb(a3, b3, c3, d2) {
          var e3 = a3.aaSorting, h3 = a3.aoColumns[b3].asSorting, f3 = function(g4, k3) {
            var m3 = g4._idx;
            m3 === q3 && (m3 = l3.inArray(g4[1], h3));
            return m3 + 1 < h3.length ? m3 + 1 : k3 ? null : 0;
          };
          "number" === typeof e3[0] && (e3 = a3.aaSorting = [e3]);
          c3 && a3.oFeatures.bSortMulti ? (c3 = l3.inArray(b3, U2(e3, "0")), -1 !== c3 ? (b3 = f3(e3[c3], true), null === b3 && 1 === e3.length && (b3 = 0), null === b3 ? e3.splice(c3, 1) : (e3[c3][1] = h3[b3], e3[c3]._idx = b3)) : (e3.push([b3, h3[0], 0]), e3[e3.length - 1]._idx = 0)) : e3.length && e3[0][0] == b3 ? (b3 = f3(e3[0]), e3.length = 1, e3[0][1] = h3[b3], e3[0]._idx = b3) : (e3.length = 0, e3.push([b3, h3[0]]), e3[0]._idx = 0);
          ka(a3);
          "function" == typeof d2 && d2(a3);
        }
        function kb(a3, b3, c3, d2) {
          var e3 = a3.aoColumns[c3];
          sb(b3, {}, function(h3) {
            false !== e3.bSortable && (a3.oFeatures.bProcessing ? (V3(a3, true), setTimeout(function() {
              rb(a3, c3, h3.shiftKey, d2);
              "ssp" !== Q2(a3) && V3(a3, false);
            }, 0)) : rb(a3, c3, h3.shiftKey, d2));
          });
        }
        function Va(a3) {
          var b3 = a3.aLastSort, c3 = a3.oClasses.sSortColumn, d2 = oa(a3), e3 = a3.oFeatures, h3;
          if (e3.bSort && e3.bSortClasses) {
            e3 = 0;
            for (h3 = b3.length; e3 < h3; e3++) {
              var f3 = b3[e3].src;
              l3(U2(a3.aoData, "anCells", f3)).removeClass(c3 + (2 > e3 ? e3 + 1 : 3));
            }
            e3 = 0;
            for (h3 = d2.length; e3 < h3; e3++)
              f3 = d2[e3].src, l3(U2(a3.aoData, "anCells", f3)).addClass(c3 + (2 > e3 ? e3 + 1 : 3));
          }
          a3.aLastSort = d2;
        }
        function fc(a3, b3) {
          var c3 = a3.aoColumns[b3], d2 = u3.ext.order[c3.sSortDataType], e3;
          d2 && (e3 = d2.call(a3.oInstance, a3, b3, ua(a3, b3)));
          for (var h3, f3 = u3.ext.type.order[c3.sType + "-pre"], g4 = 0, k3 = a3.aoData.length; g4 < k3; g4++)
            if (c3 = a3.aoData[g4], c3._aSortData || (c3._aSortData = []), !c3._aSortData[b3] || d2)
              h3 = d2 ? e3[g4] : T4(a3, g4, b3, "sort"), c3._aSortData[b3] = f3 ? f3(h3) : h3;
        }
        function Da(a3) {
          if (!a3._bLoadingState) {
            var b3 = { time: +new Date(), start: a3._iDisplayStart, length: a3._iDisplayLength, order: l3.extend(true, [], a3.aaSorting), search: Zb(a3.oPreviousSearch), columns: l3.map(a3.aoColumns, function(c3, d2) {
              return { visible: c3.bVisible, search: Zb(a3.aoPreSearchCols[d2]) };
            }) };
            a3.oSavedState = b3;
            F3(a3, "aoStateSaveParams", "stateSaveParams", [a3, b3]);
            a3.oFeatures.bStateSave && !a3.bDestroying && a3.fnStateSaveCallback.call(a3.oInstance, a3, b3);
          }
        }
        function hc(a3, b3, c3) {
          if (a3.oFeatures.bStateSave)
            return b3 = a3.fnStateLoadCallback.call(
              a3.oInstance,
              a3,
              function(d2) {
                tb(a3, d2, c3);
              }
            ), b3 !== q3 && tb(a3, b3, c3), true;
          c3();
        }
        function tb(a3, b3, c3) {
          var d2, e3 = a3.aoColumns;
          a3._bLoadingState = true;
          var h3 = a3._bInitComplete ? new u3.Api(a3) : null;
          if (b3 && b3.time) {
            var f3 = F3(a3, "aoStateLoadParams", "stateLoadParams", [a3, b3]);
            if (-1 !== l3.inArray(false, f3))
              a3._bLoadingState = false;
            else if (f3 = a3.iStateDuration, 0 < f3 && b3.time < +new Date() - 1e3 * f3)
              a3._bLoadingState = false;
            else if (b3.columns && e3.length !== b3.columns.length)
              a3._bLoadingState = false;
            else {
              a3.oLoadedState = l3.extend(true, {}, b3);
              b3.length !== q3 && (h3 ? h3.page.len(b3.length) : a3._iDisplayLength = b3.length);
              b3.start !== q3 && (null === h3 ? (a3._iDisplayStart = b3.start, a3.iInitDisplayStart = b3.start) : Ta(a3, b3.start / a3._iDisplayLength));
              b3.order !== q3 && (a3.aaSorting = [], l3.each(b3.order, function(k3, m3) {
                a3.aaSorting.push(m3[0] >= e3.length ? [0, m3[1]] : m3);
              }));
              b3.search !== q3 && l3.extend(a3.oPreviousSearch, $b(b3.search));
              if (b3.columns) {
                f3 = 0;
                for (d2 = b3.columns.length; f3 < d2; f3++) {
                  var g4 = b3.columns[f3];
                  g4.visible !== q3 && (h3 ? h3.column(f3).visible(g4.visible, false) : e3[f3].bVisible = g4.visible);
                  g4.search !== q3 && l3.extend(a3.aoPreSearchCols[f3], $b(g4.search));
                }
                h3 && h3.columns.adjust();
              }
              a3._bLoadingState = false;
              F3(a3, "aoStateLoaded", "stateLoaded", [a3, b3]);
            }
          } else
            a3._bLoadingState = false;
          c3();
        }
        function Wa(a3) {
          var b3 = u3.settings;
          a3 = l3.inArray(a3, U2(b3, "nTable"));
          return -1 !== a3 ? b3[a3] : null;
        }
        function ea(a3, b3, c3, d2) {
          c3 = "DataTables warning: " + (a3 ? "table id=" + a3.sTableId + " - " : "") + c3;
          d2 && (c3 += ". For more information about this error, please see http://datatables.net/tn/" + d2);
          if (b3)
            y3.console && console.log && console.log(c3);
          else if (b3 = u3.ext, b3 = b3.sErrMode || b3.errMode, a3 && F3(a3, null, "error", [a3, d2, c3]), "alert" == b3)
            alert(c3);
          else {
            if ("throw" == b3)
              throw Error(c3);
            "function" == typeof b3 && b3(a3, d2, c3);
          }
        }
        function Y(a3, b3, c3, d2) {
          Array.isArray(c3) ? l3.each(c3, function(e3, h3) {
            Array.isArray(h3) ? Y(a3, b3, h3[0], h3[1]) : Y(a3, b3, h3);
          }) : (d2 === q3 && (d2 = c3), b3[c3] !== q3 && (a3[d2] = b3[c3]));
        }
        function ub(a3, b3, c3) {
          var d2;
          for (d2 in b3)
            if (b3.hasOwnProperty(d2)) {
              var e3 = b3[d2];
              l3.isPlainObject(e3) ? (l3.isPlainObject(a3[d2]) || (a3[d2] = {}), l3.extend(true, a3[d2], e3)) : c3 && "data" !== d2 && "aaData" !== d2 && Array.isArray(e3) ? a3[d2] = e3.slice() : a3[d2] = e3;
            }
          return a3;
        }
        function sb(a3, b3, c3) {
          l3(a3).on("click.DT", b3, function(d2) {
            l3(a3).trigger("blur");
            c3(d2);
          }).on("keypress.DT", b3, function(d2) {
            13 === d2.which && (d2.preventDefault(), c3(d2));
          }).on("selectstart.DT", function() {
            return false;
          });
        }
        function R(a3, b3, c3, d2) {
          c3 && a3[b3].push({ fn: c3, sName: d2 });
        }
        function F3(a3, b3, c3, d2) {
          var e3 = [];
          b3 && (e3 = l3.map(a3[b3].slice().reverse(), function(h3, f3) {
            return h3.fn.apply(a3.oInstance, d2);
          }));
          null !== c3 && (b3 = l3.Event(c3 + ".dt"), l3(a3.nTable).trigger(b3, d2), e3.push(b3.result));
          return e3;
        }
        function qb(a3) {
          var b3 = a3._iDisplayStart, c3 = a3.fnDisplayEnd(), d2 = a3._iDisplayLength;
          b3 >= c3 && (b3 = c3 - d2);
          b3 -= b3 % d2;
          if (-1 === d2 || 0 > b3)
            b3 = 0;
          a3._iDisplayStart = b3;
        }
        function lb(a3, b3) {
          a3 = a3.renderer;
          var c3 = u3.ext.renderer[b3];
          return l3.isPlainObject(a3) && a3[b3] ? c3[a3[b3]] || c3._ : "string" === typeof a3 ? c3[a3] || c3._ : c3._;
        }
        function Q2(a3) {
          return a3.oFeatures.bServerSide ? "ssp" : a3.ajax || a3.sAjaxSource ? "ajax" : "dom";
        }
        function Ea(a3, b3) {
          var c3 = ic.numbers_length, d2 = Math.floor(c3 / 2);
          b3 <= c3 ? a3 = pa(0, b3) : a3 <= d2 ? (a3 = pa(0, c3 - 2), a3.push("ellipsis"), a3.push(b3 - 1)) : (a3 >= b3 - 1 - d2 ? a3 = pa(b3 - (c3 - 2), b3) : (a3 = pa(a3 - d2 + 2, a3 + d2 - 1), a3.push("ellipsis"), a3.push(b3 - 1)), a3.splice(0, 0, "ellipsis"), a3.splice(0, 0, 0));
          a3.DT_el = "span";
          return a3;
        }
        function bb(a3) {
          l3.each({ num: function(b3) {
            return Xa(b3, a3);
          }, "num-fmt": function(b3) {
            return Xa(
              b3,
              a3,
              vb
            );
          }, "html-num": function(b3) {
            return Xa(b3, a3, Ya);
          }, "html-num-fmt": function(b3) {
            return Xa(b3, a3, Ya, vb);
          } }, function(b3, c3) {
            M2.type.order[b3 + a3 + "-pre"] = c3;
            b3.match(/^html\-/) && (M2.type.search[b3 + a3] = M2.type.search.html);
          });
        }
        function jc(a3, b3, c3, d2, e3) {
          return y3.moment ? a3[b3](e3) : y3.luxon ? a3[c3](e3) : d2 ? a3[d2](e3) : a3;
        }
        function Za(a3, b3, c3) {
          if (y3.moment) {
            var d2 = y3.moment.utc(a3, b3, c3, true);
            if (!d2.isValid())
              return null;
          } else if (y3.luxon) {
            d2 = b3 ? y3.luxon.DateTime.fromFormat(a3, b3) : y3.luxon.DateTime.fromISO(a3);
            if (!d2.isValid)
              return null;
            d2.setLocale(c3);
          } else
            b3 ? (kc || alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17"), kc = true) : d2 = new Date(a3);
          return d2;
        }
        function wb(a3) {
          return function(b3, c3, d2, e3) {
            0 === arguments.length ? (d2 = "en", b3 = c3 = null) : 1 === arguments.length ? (d2 = "en", c3 = b3, b3 = null) : 2 === arguments.length && (d2 = c3, c3 = b3, b3 = null);
            var h3 = "datetime-" + c3;
            u3.ext.type.order[h3] || (u3.ext.type.detect.unshift(function(f3) {
              return f3 === h3 ? h3 : false;
            }), u3.ext.type.order[h3 + "-asc"] = function(f3, g4) {
              f3 = f3.valueOf();
              g4 = g4.valueOf();
              return f3 === g4 ? 0 : f3 < g4 ? -1 : 1;
            }, u3.ext.type.order[h3 + "-desc"] = function(f3, g4) {
              f3 = f3.valueOf();
              g4 = g4.valueOf();
              return f3 === g4 ? 0 : f3 > g4 ? -1 : 1;
            });
            return function(f3, g4) {
              if (null === f3 || f3 === q3)
                "--now" === e3 ? (f3 = new Date(), f3 = new Date(Date.UTC(f3.getFullYear(), f3.getMonth(), f3.getDate(), f3.getHours(), f3.getMinutes(), f3.getSeconds()))) : f3 = "";
              if ("type" === g4)
                return h3;
              if ("" === f3)
                return "sort" !== g4 ? "" : Za("0000-01-01 00:00:00", null, d2);
              if (null !== c3 && b3 === c3 && "sort" !== g4 && "type" !== g4 && !(f3 instanceof Date))
                return f3;
              var k3 = Za(f3, b3, d2);
              if (null === k3)
                return f3;
              if ("sort" === g4)
                return k3;
              f3 = null === c3 ? jc(
                k3,
                "toDate",
                "toJSDate",
                ""
              )[a3]() : jc(k3, "format", "toFormat", "toISOString", c3);
              return "display" === g4 ? $a(f3) : f3;
            };
          };
        }
        function lc(a3) {
          return function() {
            var b3 = [Wa(this[u3.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
            return u3.ext.internal[a3].apply(this, b3);
          };
        }
        var u3 = function(a3, b3) {
          if (this instanceof u3)
            return l3(a3).DataTable(b3);
          b3 = a3;
          this.$ = function(f3, g4) {
            return this.api(true).$(f3, g4);
          };
          this._ = function(f3, g4) {
            return this.api(true).rows(f3, g4).data();
          };
          this.api = function(f3) {
            return f3 ? new B3(Wa(this[M2.iApiIndex])) : new B3(this);
          };
          this.fnAddData = function(f3, g4) {
            var k3 = this.api(true);
            f3 = Array.isArray(f3) && (Array.isArray(f3[0]) || l3.isPlainObject(f3[0])) ? k3.rows.add(f3) : k3.row.add(f3);
            (g4 === q3 || g4) && k3.draw();
            return f3.flatten().toArray();
          };
          this.fnAdjustColumnSizing = function(f3) {
            var g4 = this.api(true).columns.adjust(), k3 = g4.settings()[0], m3 = k3.oScroll;
            f3 === q3 || f3 ? g4.draw(false) : ("" !== m3.sX || "" !== m3.sY) && Ja(k3);
          };
          this.fnClearTable = function(f3) {
            var g4 = this.api(true).clear();
            (f3 === q3 || f3) && g4.draw();
          };
          this.fnClose = function(f3) {
            this.api(true).row(f3).child.hide();
          };
          this.fnDeleteRow = function(f3, g4, k3) {
            var m3 = this.api(true);
            f3 = m3.rows(f3);
            var n2 = f3.settings()[0], p3 = n2.aoData[f3[0][0]];
            f3.remove();
            g4 && g4.call(this, n2, p3);
            (k3 === q3 || k3) && m3.draw();
            return p3;
          };
          this.fnDestroy = function(f3) {
            this.api(true).destroy(f3);
          };
          this.fnDraw = function(f3) {
            this.api(true).draw(f3);
          };
          this.fnFilter = function(f3, g4, k3, m3, n2, p3) {
            n2 = this.api(true);
            null === g4 || g4 === q3 ? n2.search(f3, k3, m3, p3) : n2.column(g4).search(f3, k3, m3, p3);
            n2.draw();
          };
          this.fnGetData = function(f3, g4) {
            var k3 = this.api(true);
            if (f3 !== q3) {
              var m3 = f3.nodeName ? f3.nodeName.toLowerCase() : "";
              return g4 !== q3 || "td" == m3 || "th" == m3 ? k3.cell(f3, g4).data() : k3.row(f3).data() || null;
            }
            return k3.data().toArray();
          };
          this.fnGetNodes = function(f3) {
            var g4 = this.api(true);
            return f3 !== q3 ? g4.row(f3).node() : g4.rows().nodes().flatten().toArray();
          };
          this.fnGetPosition = function(f3) {
            var g4 = this.api(true), k3 = f3.nodeName.toUpperCase();
            return "TR" == k3 ? g4.row(f3).index() : "TD" == k3 || "TH" == k3 ? (f3 = g4.cell(f3).index(), [f3.row, f3.columnVisible, f3.column]) : null;
          };
          this.fnIsOpen = function(f3) {
            return this.api(true).row(f3).child.isShown();
          };
          this.fnOpen = function(f3, g4, k3) {
            return this.api(true).row(f3).child(g4, k3).show().child()[0];
          };
          this.fnPageChange = function(f3, g4) {
            f3 = this.api(true).page(f3);
            (g4 === q3 || g4) && f3.draw(false);
          };
          this.fnSetColumnVis = function(f3, g4, k3) {
            f3 = this.api(true).column(f3).visible(g4);
            (k3 === q3 || k3) && f3.columns.adjust().draw();
          };
          this.fnSettings = function() {
            return Wa(this[M2.iApiIndex]);
          };
          this.fnSort = function(f3) {
            this.api(true).order(f3).draw();
          };
          this.fnSortListener = function(f3, g4, k3) {
            this.api(true).order.listener(f3, g4, k3);
          };
          this.fnUpdate = function(f3, g4, k3, m3, n2) {
            var p3 = this.api(true);
            k3 === q3 || null === k3 ? p3.row(g4).data(f3) : p3.cell(g4, k3).data(f3);
            (n2 === q3 || n2) && p3.columns.adjust();
            (m3 === q3 || m3) && p3.draw();
            return 0;
          };
          this.fnVersionCheck = M2.fnVersionCheck;
          var c3 = this, d2 = b3 === q3, e3 = this.length;
          d2 && (b3 = {});
          this.oApi = this.internal = M2.internal;
          for (var h3 in u3.ext.internal)
            h3 && (this[h3] = lc(h3));
          this.each(function() {
            var f3 = {}, g4 = 1 < e3 ? ub(f3, b3, true) : b3, k3 = 0, m3;
            f3 = this.getAttribute("id");
            var n2 = false, p3 = u3.defaults, t3 = l3(this);
            if ("table" != this.nodeName.toLowerCase())
              ea(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
            else {
              Db(p3);
              Eb(p3.column);
              P2(p3, p3, true);
              P2(p3.column, p3.column, true);
              P2(p3, l3.extend(g4, t3.data()), true);
              var v3 = u3.settings;
              k3 = 0;
              for (m3 = v3.length; k3 < m3; k3++) {
                var x4 = v3[k3];
                if (x4.nTable == this || x4.nTHead && x4.nTHead.parentNode == this || x4.nTFoot && x4.nTFoot.parentNode == this) {
                  var w4 = g4.bRetrieve !== q3 ? g4.bRetrieve : p3.bRetrieve;
                  if (d2 || w4)
                    return x4.oInstance;
                  if (g4.bDestroy !== q3 ? g4.bDestroy : p3.bDestroy) {
                    x4.oInstance.fnDestroy();
                    break;
                  } else {
                    ea(x4, 0, "Cannot reinitialise DataTable", 3);
                    return;
                  }
                }
                if (x4.sTableId == this.id) {
                  v3.splice(k3, 1);
                  break;
                }
              }
              if (null === f3 || "" === f3)
                this.id = f3 = "DataTables_Table_" + u3.ext._unique++;
              var r3 = l3.extend(true, {}, u3.models.oSettings, {
                sDestroyWidth: t3[0].style.width,
                sInstance: f3,
                sTableId: f3
              });
              r3.nTable = this;
              r3.oApi = c3.internal;
              r3.oInit = g4;
              v3.push(r3);
              r3.oInstance = 1 === c3.length ? c3 : t3.dataTable();
              Db(g4);
              la(g4.oLanguage);
              g4.aLengthMenu && !g4.iDisplayLength && (g4.iDisplayLength = Array.isArray(g4.aLengthMenu[0]) ? g4.aLengthMenu[0][0] : g4.aLengthMenu[0]);
              g4 = ub(l3.extend(true, {}, p3), g4);
              Y(r3.oFeatures, g4, "bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));
              Y(r3, g4, [
                "asStripeClasses",
                "ajax",
                "fnServerData",
                "fnFormatNumber",
                "sServerMethod",
                "aaSorting",
                "aaSortingFixed",
                "aLengthMenu",
                "sPaginationType",
                "sAjaxSource",
                "sAjaxDataProp",
                "iStateDuration",
                "sDom",
                "bSortCellsTop",
                "iTabIndex",
                "fnStateLoadCallback",
                "fnStateSaveCallback",
                "renderer",
                "searchDelay",
                "rowId",
                ["iCookieDuration", "iStateDuration"],
                ["oSearch", "oPreviousSearch"],
                ["aoSearchCols", "aoPreSearchCols"],
                ["iDisplayLength", "_iDisplayLength"]
              ]);
              Y(r3.oScroll, g4, [["sScrollX", "sX"], ["sScrollXInner", "sXInner"], ["sScrollY", "sY"], ["bScrollCollapse", "bCollapse"]]);
              Y(r3.oLanguage, g4, "fnInfoCallback");
              R(r3, "aoDrawCallback", g4.fnDrawCallback, "user");
              R(r3, "aoServerParams", g4.fnServerParams, "user");
              R(r3, "aoStateSaveParams", g4.fnStateSaveParams, "user");
              R(r3, "aoStateLoadParams", g4.fnStateLoadParams, "user");
              R(r3, "aoStateLoaded", g4.fnStateLoaded, "user");
              R(r3, "aoRowCallback", g4.fnRowCallback, "user");
              R(r3, "aoRowCreatedCallback", g4.fnCreatedRow, "user");
              R(r3, "aoHeaderCallback", g4.fnHeaderCallback, "user");
              R(r3, "aoFooterCallback", g4.fnFooterCallback, "user");
              R(r3, "aoInitComplete", g4.fnInitComplete, "user");
              R(
                r3,
                "aoPreDrawCallback",
                g4.fnPreDrawCallback,
                "user"
              );
              r3.rowIdFn = ma(g4.rowId);
              Fb(r3);
              var C3 = r3.oClasses;
              l3.extend(C3, u3.ext.classes, g4.oClasses);
              t3.addClass(C3.sTable);
              r3.iInitDisplayStart === q3 && (r3.iInitDisplayStart = g4.iDisplayStart, r3._iDisplayStart = g4.iDisplayStart);
              null !== g4.iDeferLoading && (r3.bDeferLoading = true, f3 = Array.isArray(g4.iDeferLoading), r3._iRecordsDisplay = f3 ? g4.iDeferLoading[0] : g4.iDeferLoading, r3._iRecordsTotal = f3 ? g4.iDeferLoading[1] : g4.iDeferLoading);
              var G2 = r3.oLanguage;
              l3.extend(true, G2, g4.oLanguage);
              G2.sUrl ? (l3.ajax({
                dataType: "json",
                url: G2.sUrl,
                success: function(I3) {
                  P2(p3.oLanguage, I3);
                  la(I3);
                  l3.extend(true, G2, I3, r3.oInit.oLanguage);
                  F3(r3, null, "i18n", [r3]);
                  Aa(r3);
                },
                error: function() {
                  Aa(r3);
                }
              }), n2 = true) : F3(r3, null, "i18n", [r3]);
              null === g4.asStripeClasses && (r3.asStripeClasses = [C3.sStripeOdd, C3.sStripeEven]);
              f3 = r3.asStripeClasses;
              var ba = t3.children("tbody").find("tr").eq(0);
              -1 !== l3.inArray(true, l3.map(f3, function(I3, H3) {
                return ba.hasClass(I3);
              })) && (l3("tbody tr", this).removeClass(f3.join(" ")), r3.asDestroyStripes = f3.slice());
              f3 = [];
              v3 = this.getElementsByTagName("thead");
              0 !== v3.length && (wa(
                r3.aoHeader,
                v3[0]
              ), f3 = Pa(r3));
              if (null === g4.aoColumns)
                for (v3 = [], k3 = 0, m3 = f3.length; k3 < m3; k3++)
                  v3.push(null);
              else
                v3 = g4.aoColumns;
              k3 = 0;
              for (m3 = v3.length; k3 < m3; k3++)
                cb(r3, f3 ? f3[k3] : null);
              Hb(r3, g4.aoColumnDefs, v3, function(I3, H3) {
                Ia(r3, I3, H3);
              });
              if (ba.length) {
                var L3 = function(I3, H3) {
                  return null !== I3.getAttribute("data-" + H3) ? H3 : null;
                };
                l3(ba[0]).children("th, td").each(function(I3, H3) {
                  var fa = r3.aoColumns[I3];
                  if (fa.mData === I3) {
                    var Z2 = L3(H3, "sort") || L3(H3, "order");
                    H3 = L3(H3, "filter") || L3(H3, "search");
                    if (null !== Z2 || null !== H3)
                      fa.mData = {
                        _: I3 + ".display",
                        sort: null !== Z2 ? I3 + ".@data-" + Z2 : q3,
                        type: null !== Z2 ? I3 + ".@data-" + Z2 : q3,
                        filter: null !== H3 ? I3 + ".@data-" + H3 : q3
                      }, Ia(r3, I3);
                  }
                });
              }
              var O2 = r3.oFeatures;
              f3 = function() {
                if (g4.aaSorting === q3) {
                  var I3 = r3.aaSorting;
                  k3 = 0;
                  for (m3 = I3.length; k3 < m3; k3++)
                    I3[k3][1] = r3.aoColumns[k3].asSorting[0];
                }
                Va(r3);
                O2.bSort && R(r3, "aoDrawCallback", function() {
                  if (r3.bSorted) {
                    var Z2 = oa(r3), Ba = {};
                    l3.each(Z2, function(X2, ca) {
                      Ba[ca.src] = ca.dir;
                    });
                    F3(r3, null, "order", [r3, Z2, Ba]);
                    gc(r3);
                  }
                });
                R(r3, "aoDrawCallback", function() {
                  (r3.bSorted || "ssp" === Q2(r3) || O2.bDeferRender) && Va(r3);
                }, "sc");
                I3 = t3.children("caption").each(function() {
                  this._captionSide = l3(this).css("caption-side");
                });
                var H3 = t3.children("thead");
                0 === H3.length && (H3 = l3("<thead/>").appendTo(t3));
                r3.nTHead = H3[0];
                var fa = t3.children("tbody");
                0 === fa.length && (fa = l3("<tbody/>").insertAfter(H3));
                r3.nTBody = fa[0];
                H3 = t3.children("tfoot");
                0 === H3.length && 0 < I3.length && ("" !== r3.oScroll.sX || "" !== r3.oScroll.sY) && (H3 = l3("<tfoot/>").appendTo(t3));
                0 === H3.length || 0 === H3.children().length ? t3.addClass(C3.sNoFooter) : 0 < H3.length && (r3.nTFoot = H3[0], wa(r3.aoFooter, r3.nTFoot));
                if (g4.aaData)
                  for (k3 = 0; k3 < g4.aaData.length; k3++)
                    ia(r3, g4.aaData[k3]);
                else
                  (r3.bDeferLoading || "dom" == Q2(r3)) && La(r3, l3(r3.nTBody).children("tr"));
                r3.aiDisplay = r3.aiDisplayMaster.slice();
                r3.bInitialised = true;
                false === n2 && Aa(r3);
              };
              R(r3, "aoDrawCallback", Da, "state_save");
              g4.bStateSave ? (O2.bStateSave = true, hc(r3, g4, f3)) : f3();
            }
          });
          c3 = null;
          return this;
        }, M2, z3, J2, xb = {}, mc = /[\r\n\u2028]/g, Ya = /<.*?>/g, Dc = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/, Ec = /(\/|\.|\*|\+|\?|\||\(|\)|\[|\]|\{|\}|\\|\$|\^|\-)/g, vb = /['\u00A0,$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi, aa = function(a3) {
          return a3 && true !== a3 && "-" !== a3 ? false : true;
        }, nc = function(a3) {
          var b3 = parseInt(a3, 10);
          return !isNaN(b3) && isFinite(a3) ? b3 : null;
        }, oc = function(a3, b3) {
          xb[b3] || (xb[b3] = new RegExp(ob(b3), "g"));
          return "string" === typeof a3 && "." !== b3 ? a3.replace(/\./g, "").replace(xb[b3], ".") : a3;
        }, yb = function(a3, b3, c3) {
          var d2 = "string" === typeof a3;
          if (aa(a3))
            return true;
          b3 && d2 && (a3 = oc(a3, b3));
          c3 && d2 && (a3 = a3.replace(vb, ""));
          return !isNaN(parseFloat(a3)) && isFinite(a3);
        }, pc = function(a3, b3, c3) {
          return aa(a3) ? true : aa(a3) || "string" === typeof a3 ? yb(a3.replace(Ya, ""), b3, c3) ? true : null : null;
        }, U2 = function(a3, b3, c3) {
          var d2 = [], e3 = 0, h3 = a3.length;
          if (c3 !== q3)
            for (; e3 < h3; e3++)
              a3[e3] && a3[e3][b3] && d2.push(a3[e3][b3][c3]);
          else
            for (; e3 < h3; e3++)
              a3[e3] && d2.push(a3[e3][b3]);
          return d2;
        }, Fa = function(a3, b3, c3, d2) {
          var e3 = [], h3 = 0, f3 = b3.length;
          if (d2 !== q3)
            for (; h3 < f3; h3++)
              a3[b3[h3]][c3] && e3.push(a3[b3[h3]][c3][d2]);
          else
            for (; h3 < f3; h3++)
              e3.push(a3[b3[h3]][c3]);
          return e3;
        }, pa = function(a3, b3) {
          var c3 = [];
          if (b3 === q3) {
            b3 = 0;
            var d2 = a3;
          } else
            d2 = b3, b3 = a3;
          for (a3 = b3; a3 < d2; a3++)
            c3.push(a3);
          return c3;
        }, qc = function(a3) {
          for (var b3 = [], c3 = 0, d2 = a3.length; c3 < d2; c3++)
            a3[c3] && b3.push(a3[c3]);
          return b3;
        }, Oa = function(a3) {
          a: {
            if (!(2 > a3.length)) {
              var b3 = a3.slice().sort();
              for (var c3 = b3[0], d2 = 1, e3 = b3.length; d2 < e3; d2++) {
                if (b3[d2] === c3) {
                  b3 = false;
                  break a;
                }
                c3 = b3[d2];
              }
            }
            b3 = true;
          }
          if (b3)
            return a3.slice();
          b3 = [];
          e3 = a3.length;
          var h3, f3 = 0;
          d2 = 0;
          a:
            for (; d2 < e3; d2++) {
              c3 = a3[d2];
              for (h3 = 0; h3 < f3; h3++)
                if (b3[h3] === c3)
                  continue a;
              b3.push(c3);
              f3++;
            }
          return b3;
        }, rc = function(a3, b3) {
          if (Array.isArray(b3))
            for (var c3 = 0; c3 < b3.length; c3++)
              rc(a3, b3[c3]);
          else
            a3.push(b3);
          return a3;
        }, sc = function(a3, b3) {
          b3 === q3 && (b3 = 0);
          return -1 !== this.indexOf(a3, b3);
        };
        Array.isArray || (Array.isArray = function(a3) {
          return "[object Array]" === Object.prototype.toString.call(a3);
        });
        Array.prototype.includes || (Array.prototype.includes = sc);
        String.prototype.trim || (String.prototype.trim = function() {
          return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
        });
        String.prototype.includes || (String.prototype.includes = sc);
        u3.util = { throttle: function(a3, b3) {
          var c3 = b3 !== q3 ? b3 : 200, d2, e3;
          return function() {
            var h3 = this, f3 = +new Date(), g4 = arguments;
            d2 && f3 < d2 + c3 ? (clearTimeout(e3), e3 = setTimeout(function() {
              d2 = q3;
              a3.apply(h3, g4);
            }, c3)) : (d2 = f3, a3.apply(h3, g4));
          };
        }, escapeRegex: function(a3) {
          return a3.replace(Ec, "\\$1");
        }, set: function(a3) {
          if (l3.isPlainObject(a3))
            return u3.util.set(a3._);
          if (null === a3)
            return function() {
            };
          if ("function" === typeof a3)
            return function(c3, d2, e3) {
              a3(c3, "set", d2, e3);
            };
          if ("string" !== typeof a3 || -1 === a3.indexOf(".") && -1 === a3.indexOf("[") && -1 === a3.indexOf("("))
            return function(c3, d2) {
              c3[a3] = d2;
            };
          var b3 = function(c3, d2, e3) {
            e3 = hb(e3);
            var h3 = e3[e3.length - 1];
            for (var f3, g4, k3 = 0, m3 = e3.length - 1; k3 < m3; k3++) {
              if ("__proto__" === e3[k3] || "constructor" === e3[k3])
                throw Error("Cannot set prototype values");
              f3 = e3[k3].match(Ga);
              g4 = e3[k3].match(qa);
              if (f3) {
                e3[k3] = e3[k3].replace(Ga, "");
                c3[e3[k3]] = [];
                h3 = e3.slice();
                h3.splice(0, k3 + 1);
                f3 = h3.join(".");
                if (Array.isArray(d2))
                  for (g4 = 0, m3 = d2.length; g4 < m3; g4++)
                    h3 = {}, b3(h3, d2[g4], f3), c3[e3[k3]].push(h3);
                else
                  c3[e3[k3]] = d2;
                return;
              }
              g4 && (e3[k3] = e3[k3].replace(qa, ""), c3 = c3[e3[k3]](d2));
              if (null === c3[e3[k3]] || c3[e3[k3]] === q3)
                c3[e3[k3]] = {};
              c3 = c3[e3[k3]];
            }
            if (h3.match(qa))
              c3[h3.replace(qa, "")](d2);
            else
              c3[h3.replace(Ga, "")] = d2;
          };
          return function(c3, d2) {
            return b3(c3, d2, a3);
          };
        }, get: function(a3) {
          if (l3.isPlainObject(a3)) {
            var b3 = {};
            l3.each(a3, function(d2, e3) {
              e3 && (b3[d2] = u3.util.get(e3));
            });
            return function(d2, e3, h3, f3) {
              var g4 = b3[e3] || b3._;
              return g4 !== q3 ? g4(d2, e3, h3, f3) : d2;
            };
          }
          if (null === a3)
            return function(d2) {
              return d2;
            };
          if ("function" === typeof a3)
            return function(d2, e3, h3, f3) {
              return a3(d2, e3, h3, f3);
            };
          if ("string" !== typeof a3 || -1 === a3.indexOf(".") && -1 === a3.indexOf("[") && -1 === a3.indexOf("("))
            return function(d2, e3) {
              return d2[a3];
            };
          var c3 = function(d2, e3, h3) {
            if ("" !== h3) {
              var f3 = hb(h3);
              for (var g4 = 0, k3 = f3.length; g4 < k3; g4++) {
                h3 = f3[g4].match(Ga);
                var m3 = f3[g4].match(qa);
                if (h3) {
                  f3[g4] = f3[g4].replace(Ga, "");
                  "" !== f3[g4] && (d2 = d2[f3[g4]]);
                  m3 = [];
                  f3.splice(0, g4 + 1);
                  f3 = f3.join(".");
                  if (Array.isArray(d2))
                    for (g4 = 0, k3 = d2.length; g4 < k3; g4++)
                      m3.push(c3(d2[g4], e3, f3));
                  d2 = h3[0].substring(1, h3[0].length - 1);
                  d2 = "" === d2 ? m3 : m3.join(d2);
                  break;
                } else if (m3) {
                  f3[g4] = f3[g4].replace(
                    qa,
                    ""
                  );
                  d2 = d2[f3[g4]]();
                  continue;
                }
                if (null === d2 || d2[f3[g4]] === q3)
                  return q3;
                d2 = d2[f3[g4]];
              }
            }
            return d2;
          };
          return function(d2, e3) {
            return c3(d2, e3, a3);
          };
        } };
        var S2 = function(a3, b3, c3) {
          a3[b3] !== q3 && (a3[c3] = a3[b3]);
        }, Ga = /\[.*?\]$/, qa = /\(\)$/, ma = u3.util.get, ha = u3.util.set, ob = u3.util.escapeRegex, Sa = l3("<div>")[0], Bc = Sa.textContent !== q3, Cc = /<.*?>/g, mb = u3.util.throttle, tc = [], N3 = Array.prototype, Fc = function(a3) {
          var b3, c3 = u3.settings, d2 = l3.map(c3, function(h3, f3) {
            return h3.nTable;
          });
          if (a3) {
            if (a3.nTable && a3.oApi)
              return [a3];
            if (a3.nodeName && "table" === a3.nodeName.toLowerCase()) {
              var e3 = l3.inArray(a3, d2);
              return -1 !== e3 ? [c3[e3]] : null;
            }
            if (a3 && "function" === typeof a3.settings)
              return a3.settings().toArray();
            "string" === typeof a3 ? b3 = l3(a3) : a3 instanceof l3 && (b3 = a3);
          } else
            return [];
          if (b3)
            return b3.map(function(h3) {
              e3 = l3.inArray(this, d2);
              return -1 !== e3 ? c3[e3] : null;
            }).toArray();
        };
        var B3 = function(a3, b3) {
          if (!(this instanceof B3))
            return new B3(a3, b3);
          var c3 = [], d2 = function(f3) {
            (f3 = Fc(f3)) && c3.push.apply(c3, f3);
          };
          if (Array.isArray(a3))
            for (var e3 = 0, h3 = a3.length; e3 < h3; e3++)
              d2(a3[e3]);
          else
            d2(a3);
          this.context = Oa(c3);
          b3 && l3.merge(this, b3);
          this.selector = {
            rows: null,
            cols: null,
            opts: null
          };
          B3.extend(this, this, tc);
        };
        u3.Api = B3;
        l3.extend(B3.prototype, {
          any: function() {
            return 0 !== this.count();
          },
          concat: N3.concat,
          context: [],
          count: function() {
            return this.flatten().length;
          },
          each: function(a3) {
            for (var b3 = 0, c3 = this.length; b3 < c3; b3++)
              a3.call(this, this[b3], b3, this);
            return this;
          },
          eq: function(a3) {
            var b3 = this.context;
            return b3.length > a3 ? new B3(b3[a3], this[a3]) : null;
          },
          filter: function(a3) {
            var b3 = [];
            if (N3.filter)
              b3 = N3.filter.call(this, a3, this);
            else
              for (var c3 = 0, d2 = this.length; c3 < d2; c3++)
                a3.call(this, this[c3], c3, this) && b3.push(this[c3]);
            return new B3(this.context, b3);
          },
          flatten: function() {
            var a3 = [];
            return new B3(this.context, a3.concat.apply(a3, this.toArray()));
          },
          join: N3.join,
          indexOf: N3.indexOf || function(a3, b3) {
            b3 = b3 || 0;
            for (var c3 = this.length; b3 < c3; b3++)
              if (this[b3] === a3)
                return b3;
            return -1;
          },
          iterator: function(a3, b3, c3, d2) {
            var e3 = [], h3, f3, g4 = this.context, k3, m3 = this.selector;
            "string" === typeof a3 && (d2 = c3, c3 = b3, b3 = a3, a3 = false);
            var n2 = 0;
            for (h3 = g4.length; n2 < h3; n2++) {
              var p3 = new B3(g4[n2]);
              if ("table" === b3) {
                var t3 = c3.call(p3, g4[n2], n2);
                t3 !== q3 && e3.push(t3);
              } else if ("columns" === b3 || "rows" === b3)
                t3 = c3.call(
                  p3,
                  g4[n2],
                  this[n2],
                  n2
                ), t3 !== q3 && e3.push(t3);
              else if ("column" === b3 || "column-rows" === b3 || "row" === b3 || "cell" === b3) {
                var v3 = this[n2];
                "column-rows" === b3 && (k3 = ab(g4[n2], m3.opts));
                var x4 = 0;
                for (f3 = v3.length; x4 < f3; x4++)
                  t3 = v3[x4], t3 = "cell" === b3 ? c3.call(p3, g4[n2], t3.row, t3.column, n2, x4) : c3.call(p3, g4[n2], t3, n2, x4, k3), t3 !== q3 && e3.push(t3);
              }
            }
            return e3.length || d2 ? (a3 = new B3(g4, a3 ? e3.concat.apply([], e3) : e3), b3 = a3.selector, b3.rows = m3.rows, b3.cols = m3.cols, b3.opts = m3.opts, a3) : this;
          },
          lastIndexOf: N3.lastIndexOf || function(a3, b3) {
            return this.indexOf.apply(this.toArray.reverse(), arguments);
          },
          length: 0,
          map: function(a3) {
            var b3 = [];
            if (N3.map)
              b3 = N3.map.call(this, a3, this);
            else
              for (var c3 = 0, d2 = this.length; c3 < d2; c3++)
                b3.push(a3.call(this, this[c3], c3));
            return new B3(this.context, b3);
          },
          pluck: function(a3) {
            var b3 = u3.util.get(a3);
            return this.map(function(c3) {
              return b3(c3);
            });
          },
          pop: N3.pop,
          push: N3.push,
          reduce: N3.reduce || function(a3, b3) {
            return Gb(this, a3, b3, 0, this.length, 1);
          },
          reduceRight: N3.reduceRight || function(a3, b3) {
            return Gb(this, a3, b3, this.length - 1, -1, -1);
          },
          reverse: N3.reverse,
          selector: null,
          shift: N3.shift,
          slice: function() {
            return new B3(
              this.context,
              this
            );
          },
          sort: N3.sort,
          splice: N3.splice,
          toArray: function() {
            return N3.slice.call(this);
          },
          to$: function() {
            return l3(this);
          },
          toJQuery: function() {
            return l3(this);
          },
          unique: function() {
            return new B3(this.context, Oa(this));
          },
          unshift: N3.unshift
        });
        B3.extend = function(a3, b3, c3) {
          if (c3.length && b3 && (b3 instanceof B3 || b3.__dt_wrapper)) {
            var d2, e3 = function(g4, k3, m3) {
              return function() {
                var n2 = k3.apply(g4, arguments);
                B3.extend(n2, n2, m3.methodExt);
                return n2;
              };
            };
            var h3 = 0;
            for (d2 = c3.length; h3 < d2; h3++) {
              var f3 = c3[h3];
              b3[f3.name] = "function" === f3.type ? e3(a3, f3.val, f3) : "object" === f3.type ? {} : f3.val;
              b3[f3.name].__dt_wrapper = true;
              B3.extend(a3, b3[f3.name], f3.propExt);
            }
          }
        };
        B3.register = z3 = function(a3, b3) {
          if (Array.isArray(a3))
            for (var c3 = 0, d2 = a3.length; c3 < d2; c3++)
              B3.register(a3[c3], b3);
          else {
            d2 = a3.split(".");
            var e3 = tc, h3;
            a3 = 0;
            for (c3 = d2.length; a3 < c3; a3++) {
              var f3 = (h3 = -1 !== d2[a3].indexOf("()")) ? d2[a3].replace("()", "") : d2[a3];
              a: {
                var g4 = 0;
                for (var k3 = e3.length; g4 < k3; g4++)
                  if (e3[g4].name === f3) {
                    g4 = e3[g4];
                    break a;
                  }
                g4 = null;
              }
              g4 || (g4 = { name: f3, val: {}, methodExt: [], propExt: [], type: "object" }, e3.push(g4));
              a3 === c3 - 1 ? (g4.val = b3, g4.type = "function" === typeof b3 ? "function" : l3.isPlainObject(b3) ? "object" : "other") : e3 = h3 ? g4.methodExt : g4.propExt;
            }
          }
        };
        B3.registerPlural = J2 = function(a3, b3, c3) {
          B3.register(a3, c3);
          B3.register(b3, function() {
            var d2 = c3.apply(this, arguments);
            return d2 === this ? this : d2 instanceof B3 ? d2.length ? Array.isArray(d2[0]) ? new B3(d2.context, d2[0]) : d2[0] : q3 : d2;
          });
        };
        var uc = function(a3, b3) {
          if (Array.isArray(a3))
            return l3.map(a3, function(d2) {
              return uc(d2, b3);
            });
          if ("number" === typeof a3)
            return [b3[a3]];
          var c3 = l3.map(b3, function(d2, e3) {
            return d2.nTable;
          });
          return l3(c3).filter(a3).map(function(d2) {
            d2 = l3.inArray(this, c3);
            return b3[d2];
          }).toArray();
        };
        z3("tables()", function(a3) {
          return a3 !== q3 && null !== a3 ? new B3(uc(a3, this.context)) : this;
        });
        z3("table()", function(a3) {
          a3 = this.tables(a3);
          var b3 = a3.context;
          return b3.length ? new B3(b3[0]) : a3;
        });
        J2("tables().nodes()", "table().node()", function() {
          return this.iterator("table", function(a3) {
            return a3.nTable;
          }, 1);
        });
        J2("tables().body()", "table().body()", function() {
          return this.iterator("table", function(a3) {
            return a3.nTBody;
          }, 1);
        });
        J2("tables().header()", "table().header()", function() {
          return this.iterator(
            "table",
            function(a3) {
              return a3.nTHead;
            },
            1
          );
        });
        J2("tables().footer()", "table().footer()", function() {
          return this.iterator("table", function(a3) {
            return a3.nTFoot;
          }, 1);
        });
        J2("tables().containers()", "table().container()", function() {
          return this.iterator("table", function(a3) {
            return a3.nTableWrapper;
          }, 1);
        });
        z3("draw()", function(a3) {
          return this.iterator("table", function(b3) {
            "page" === a3 ? ja(b3) : ("string" === typeof a3 && (a3 = "full-hold" === a3 ? false : true), ka(b3, false === a3));
          });
        });
        z3("page()", function(a3) {
          return a3 === q3 ? this.page.info().page : this.iterator("table", function(b3) {
            Ta(b3, a3);
          });
        });
        z3(
          "page.info()",
          function(a3) {
            if (0 === this.context.length)
              return q3;
            a3 = this.context[0];
            var b3 = a3._iDisplayStart, c3 = a3.oFeatures.bPaginate ? a3._iDisplayLength : -1, d2 = a3.fnRecordsDisplay(), e3 = -1 === c3;
            return { page: e3 ? 0 : Math.floor(b3 / c3), pages: e3 ? 1 : Math.ceil(d2 / c3), start: b3, end: a3.fnDisplayEnd(), length: c3, recordsTotal: a3.fnRecordsTotal(), recordsDisplay: d2, serverSide: "ssp" === Q2(a3) };
          }
        );
        z3("page.len()", function(a3) {
          return a3 === q3 ? 0 !== this.context.length ? this.context[0]._iDisplayLength : q3 : this.iterator("table", function(b3) {
            pb(b3, a3);
          });
        });
        var vc = function(a3, b3, c3) {
          if (c3) {
            var d2 = new B3(a3);
            d2.one("draw", function() {
              c3(d2.ajax.json());
            });
          }
          if ("ssp" == Q2(a3))
            ka(a3, b3);
          else {
            V3(a3, true);
            var e3 = a3.jqXHR;
            e3 && 4 !== e3.readyState && e3.abort();
            Qa(a3, [], function(h3) {
              Ma(a3);
              h3 = za(a3, h3);
              for (var f3 = 0, g4 = h3.length; f3 < g4; f3++)
                ia(a3, h3[f3]);
              ka(a3, b3);
              V3(a3, false);
            });
          }
        };
        z3("ajax.json()", function() {
          var a3 = this.context;
          if (0 < a3.length)
            return a3[0].json;
        });
        z3("ajax.params()", function() {
          var a3 = this.context;
          if (0 < a3.length)
            return a3[0].oAjaxData;
        });
        z3("ajax.reload()", function(a3, b3) {
          return this.iterator("table", function(c3) {
            vc(c3, false === b3, a3);
          });
        });
        z3("ajax.url()", function(a3) {
          var b3 = this.context;
          if (a3 === q3) {
            if (0 === b3.length)
              return q3;
            b3 = b3[0];
            return b3.ajax ? l3.isPlainObject(b3.ajax) ? b3.ajax.url : b3.ajax : b3.sAjaxSource;
          }
          return this.iterator("table", function(c3) {
            l3.isPlainObject(c3.ajax) ? c3.ajax.url = a3 : c3.ajax = a3;
          });
        });
        z3("ajax.url().load()", function(a3, b3) {
          return this.iterator("table", function(c3) {
            vc(c3, false === b3, a3);
          });
        });
        var zb = function(a3, b3, c3, d2, e3) {
          var h3 = [], f3, g4, k3;
          var m3 = typeof b3;
          b3 && "string" !== m3 && "function" !== m3 && b3.length !== q3 || (b3 = [b3]);
          m3 = 0;
          for (g4 = b3.length; m3 < g4; m3++) {
            var n2 = b3[m3] && b3[m3].split && !b3[m3].match(/[\[\(:]/) ? b3[m3].split(",") : [b3[m3]];
            var p3 = 0;
            for (k3 = n2.length; p3 < k3; p3++)
              (f3 = c3("string" === typeof n2[p3] ? n2[p3].trim() : n2[p3])) && f3.length && (h3 = h3.concat(f3));
          }
          a3 = M2.selector[a3];
          if (a3.length)
            for (m3 = 0, g4 = a3.length; m3 < g4; m3++)
              h3 = a3[m3](d2, e3, h3);
          return Oa(h3);
        }, Ab = function(a3) {
          a3 || (a3 = {});
          a3.filter && a3.search === q3 && (a3.search = a3.filter);
          return l3.extend({ search: "none", order: "current", page: "all" }, a3);
        }, Bb = function(a3) {
          for (var b3 = 0, c3 = a3.length; b3 < c3; b3++)
            if (0 < a3[b3].length)
              return a3[0] = a3[b3], a3[0].length = 1, a3.length = 1, a3.context = [a3.context[b3]], a3;
          a3.length = 0;
          return a3;
        }, ab = function(a3, b3) {
          var c3 = [], d2 = a3.aiDisplay;
          var e3 = a3.aiDisplayMaster;
          var h3 = b3.search;
          var f3 = b3.order;
          b3 = b3.page;
          if ("ssp" == Q2(a3))
            return "removed" === h3 ? [] : pa(0, e3.length);
          if ("current" == b3)
            for (f3 = a3._iDisplayStart, a3 = a3.fnDisplayEnd(); f3 < a3; f3++)
              c3.push(d2[f3]);
          else if ("current" == f3 || "applied" == f3)
            if ("none" == h3)
              c3 = e3.slice();
            else if ("applied" == h3)
              c3 = d2.slice();
            else {
              if ("removed" == h3) {
                var g4 = {};
                f3 = 0;
                for (a3 = d2.length; f3 < a3; f3++)
                  g4[d2[f3]] = null;
                c3 = l3.map(e3, function(k3) {
                  return g4.hasOwnProperty(k3) ? null : k3;
                });
              }
            }
          else if ("index" == f3 || "original" == f3)
            for (f3 = 0, a3 = a3.aoData.length; f3 < a3; f3++)
              "none" == h3 ? c3.push(f3) : (e3 = l3.inArray(f3, d2), (-1 === e3 && "removed" == h3 || 0 <= e3 && "applied" == h3) && c3.push(f3));
          return c3;
        }, Gc = function(a3, b3, c3) {
          var d2;
          return zb("row", b3, function(e3) {
            var h3 = nc(e3), f3 = a3.aoData;
            if (null !== h3 && !c3)
              return [h3];
            d2 || (d2 = ab(a3, c3));
            if (null !== h3 && -1 !== l3.inArray(h3, d2))
              return [h3];
            if (null === e3 || e3 === q3 || "" === e3)
              return d2;
            if ("function" === typeof e3)
              return l3.map(d2, function(k3) {
                var m3 = f3[k3];
                return e3(k3, m3._aData, m3.nTr) ? k3 : null;
              });
            if (e3.nodeName) {
              h3 = e3._DT_RowIndex;
              var g4 = e3._DT_CellIndex;
              if (h3 !== q3)
                return f3[h3] && f3[h3].nTr === e3 ? [h3] : [];
              if (g4)
                return f3[g4.row] && f3[g4.row].nTr === e3.parentNode ? [g4.row] : [];
              h3 = l3(e3).closest("*[data-dt-row]");
              return h3.length ? [h3.data("dt-row")] : [];
            }
            if ("string" === typeof e3 && "#" === e3.charAt(0) && (h3 = a3.aIds[e3.replace(/^#/, "")], h3 !== q3))
              return [h3.idx];
            h3 = qc(Fa(a3.aoData, d2, "nTr"));
            return l3(h3).filter(e3).map(function() {
              return this._DT_RowIndex;
            }).toArray();
          }, a3, c3);
        };
        z3("rows()", function(a3, b3) {
          a3 === q3 ? a3 = "" : l3.isPlainObject(a3) && (b3 = a3, a3 = "");
          b3 = Ab(b3);
          var c3 = this.iterator("table", function(d2) {
            return Gc(d2, a3, b3);
          }, 1);
          c3.selector.rows = a3;
          c3.selector.opts = b3;
          return c3;
        });
        z3("rows().nodes()", function() {
          return this.iterator("row", function(a3, b3) {
            return a3.aoData[b3].nTr || q3;
          }, 1);
        });
        z3("rows().data()", function() {
          return this.iterator(true, "rows", function(a3, b3) {
            return Fa(a3.aoData, b3, "_aData");
          }, 1);
        });
        J2("rows().cache()", "row().cache()", function(a3) {
          return this.iterator("row", function(b3, c3) {
            b3 = b3.aoData[c3];
            return "search" === a3 ? b3._aFilterData : b3._aSortData;
          }, 1);
        });
        J2("rows().invalidate()", "row().invalidate()", function(a3) {
          return this.iterator("row", function(b3, c3) {
            va(
              b3,
              c3,
              a3
            );
          });
        });
        J2("rows().indexes()", "row().index()", function() {
          return this.iterator("row", function(a3, b3) {
            return b3;
          }, 1);
        });
        J2("rows().ids()", "row().id()", function(a3) {
          for (var b3 = [], c3 = this.context, d2 = 0, e3 = c3.length; d2 < e3; d2++)
            for (var h3 = 0, f3 = this[d2].length; h3 < f3; h3++) {
              var g4 = c3[d2].rowIdFn(c3[d2].aoData[this[d2][h3]]._aData);
              b3.push((true === a3 ? "#" : "") + g4);
            }
          return new B3(c3, b3);
        });
        J2("rows().remove()", "row().remove()", function() {
          var a3 = this;
          this.iterator("row", function(b3, c3, d2) {
            var e3 = b3.aoData, h3 = e3[c3], f3, g4;
            e3.splice(c3, 1);
            var k3 = 0;
            for (f3 = e3.length; k3 < f3; k3++) {
              var m3 = e3[k3];
              var n2 = m3.anCells;
              null !== m3.nTr && (m3.nTr._DT_RowIndex = k3);
              if (null !== n2)
                for (m3 = 0, g4 = n2.length; m3 < g4; m3++)
                  n2[m3]._DT_CellIndex.row = k3;
            }
            Na(b3.aiDisplayMaster, c3);
            Na(b3.aiDisplay, c3);
            Na(a3[d2], c3, false);
            0 < b3._iRecordsDisplay && b3._iRecordsDisplay--;
            qb(b3);
            c3 = b3.rowIdFn(h3._aData);
            c3 !== q3 && delete b3.aIds[c3];
          });
          this.iterator("table", function(b3) {
            for (var c3 = 0, d2 = b3.aoData.length; c3 < d2; c3++)
              b3.aoData[c3].idx = c3;
          });
          return this;
        });
        z3("rows.add()", function(a3) {
          var b3 = this.iterator("table", function(d2) {
            var e3, h3 = [];
            var f3 = 0;
            for (e3 = a3.length; f3 < e3; f3++) {
              var g4 = a3[f3];
              g4.nodeName && "TR" === g4.nodeName.toUpperCase() ? h3.push(La(d2, g4)[0]) : h3.push(ia(d2, g4));
            }
            return h3;
          }, 1), c3 = this.rows(-1);
          c3.pop();
          l3.merge(c3, b3);
          return c3;
        });
        z3("row()", function(a3, b3) {
          return Bb(this.rows(a3, b3));
        });
        z3("row().data()", function(a3) {
          var b3 = this.context;
          if (a3 === q3)
            return b3.length && this.length ? b3[0].aoData[this[0]]._aData : q3;
          var c3 = b3[0].aoData[this[0]];
          c3._aData = a3;
          Array.isArray(a3) && c3.nTr && c3.nTr.id && ha(b3[0].rowId)(a3, c3.nTr.id);
          va(b3[0], this[0], "data");
          return this;
        });
        z3("row().node()", function() {
          var a3 = this.context;
          return a3.length && this.length ? a3[0].aoData[this[0]].nTr || null : null;
        });
        z3("row.add()", function(a3) {
          a3 instanceof l3 && a3.length && (a3 = a3[0]);
          var b3 = this.iterator("table", function(c3) {
            return a3.nodeName && "TR" === a3.nodeName.toUpperCase() ? La(c3, a3)[0] : ia(c3, a3);
          });
          return this.row(b3[0]);
        });
        l3(A3).on("plugin-init.dt", function(a3, b3) {
          a3 = new B3(b3);
          a3.on("stateSaveParams", function(d2, e3, h3) {
            d2 = e3.rowIdFn;
            e3 = e3.aoData;
            for (var f3 = [], g4 = 0; g4 < e3.length; g4++)
              e3[g4]._detailsShow && f3.push("#" + d2(e3[g4]._aData));
            h3.childRows = f3;
          });
          var c3 = a3.state.loaded();
          c3 && c3.childRows && a3.rows(l3.map(
            c3.childRows,
            function(d2) {
              return d2.replace(/:/g, "\\:");
            }
          )).every(function() {
            F3(b3, null, "requestChild", [this]);
          });
        });
        var Hc = function(a3, b3, c3, d2) {
          var e3 = [], h3 = function(f3, g4) {
            if (Array.isArray(f3) || f3 instanceof l3)
              for (var k3 = 0, m3 = f3.length; k3 < m3; k3++)
                h3(f3[k3], g4);
            else
              f3.nodeName && "tr" === f3.nodeName.toLowerCase() ? e3.push(f3) : (k3 = l3("<tr><td></td></tr>").addClass(g4), l3("td", k3).addClass(g4).html(f3)[0].colSpan = na(a3), e3.push(k3[0]));
          };
          h3(c3, d2);
          b3._details && b3._details.detach();
          b3._details = l3(e3);
          b3._detailsShow && b3._details.insertAfter(b3.nTr);
        }, wc = u3.util.throttle(
          function(a3) {
            Da(a3[0]);
          },
          500
        ), Cb = function(a3, b3) {
          var c3 = a3.context;
          c3.length && (a3 = c3[0].aoData[b3 !== q3 ? b3 : a3[0]]) && a3._details && (a3._details.remove(), a3._detailsShow = q3, a3._details = q3, l3(a3.nTr).removeClass("dt-hasChild"), wc(c3));
        }, xc = function(a3, b3) {
          var c3 = a3.context;
          if (c3.length && a3.length) {
            var d2 = c3[0].aoData[a3[0]];
            d2._details && ((d2._detailsShow = b3) ? (d2._details.insertAfter(d2.nTr), l3(d2.nTr).addClass("dt-hasChild")) : (d2._details.detach(), l3(d2.nTr).removeClass("dt-hasChild")), F3(c3[0], null, "childRow", [b3, a3.row(a3[0])]), Ic(c3[0]), wc(c3));
          }
        }, Ic = function(a3) {
          var b3 = new B3(a3), c3 = a3.aoData;
          b3.off("draw.dt.DT_details column-sizing.dt.DT_details destroy.dt.DT_details");
          0 < U2(c3, "_details").length && (b3.on("draw.dt.DT_details", function(d2, e3) {
            a3 === e3 && b3.rows({ page: "current" }).eq(0).each(function(h3) {
              h3 = c3[h3];
              h3._detailsShow && h3._details.insertAfter(h3.nTr);
            });
          }), b3.on("column-sizing.dt.DT_details", function(d2, e3, h3, f3) {
            if (a3 === e3)
              for (e3 = na(e3), h3 = 0, f3 = c3.length; h3 < f3; h3++)
                d2 = c3[h3], d2._details && d2._details.children("td[colspan]").attr("colspan", e3);
          }), b3.on("destroy.dt.DT_details", function(d2, e3) {
            if (a3 === e3)
              for (d2 = 0, e3 = c3.length; d2 < e3; d2++)
                c3[d2]._details && Cb(b3, d2);
          }));
        };
        z3("row().child()", function(a3, b3) {
          var c3 = this.context;
          if (a3 === q3)
            return c3.length && this.length ? c3[0].aoData[this[0]]._details : q3;
          true === a3 ? this.child.show() : false === a3 ? Cb(this) : c3.length && this.length && Hc(c3[0], c3[0].aoData[this[0]], a3, b3);
          return this;
        });
        z3(["row().child.show()", "row().child().show()"], function(a3) {
          xc(this, true);
          return this;
        });
        z3(["row().child.hide()", "row().child().hide()"], function() {
          xc(this, false);
          return this;
        });
        z3(["row().child.remove()", "row().child().remove()"], function() {
          Cb(this);
          return this;
        });
        z3("row().child.isShown()", function() {
          var a3 = this.context;
          return a3.length && this.length ? a3[0].aoData[this[0]]._detailsShow || false : false;
        });
        var Jc = /^([^:]+):(name|visIdx|visible)$/, yc = function(a3, b3, c3, d2, e3) {
          c3 = [];
          d2 = 0;
          for (var h3 = e3.length; d2 < h3; d2++)
            c3.push(T4(a3, e3[d2], b3));
          return c3;
        }, Kc = function(a3, b3, c3) {
          var d2 = a3.aoColumns, e3 = U2(d2, "sName"), h3 = U2(d2, "nTh");
          return zb("column", b3, function(f3) {
            var g4 = nc(f3);
            if ("" === f3)
              return pa(d2.length);
            if (null !== g4)
              return [0 <= g4 ? g4 : d2.length + g4];
            if ("function" === typeof f3) {
              var k3 = ab(a3, c3);
              return l3.map(
                d2,
                function(p3, t3) {
                  return f3(t3, yc(a3, t3, 0, 0, k3), h3[t3]) ? t3 : null;
                }
              );
            }
            var m3 = "string" === typeof f3 ? f3.match(Jc) : "";
            if (m3)
              switch (m3[2]) {
                case "visIdx":
                case "visible":
                  g4 = parseInt(m3[1], 10);
                  if (0 > g4) {
                    var n2 = l3.map(d2, function(p3, t3) {
                      return p3.bVisible ? t3 : null;
                    });
                    return [n2[n2.length + g4]];
                  }
                  return [ta(a3, g4)];
                case "name":
                  return l3.map(e3, function(p3, t3) {
                    return p3 === m3[1] ? t3 : null;
                  });
                default:
                  return [];
              }
            if (f3.nodeName && f3._DT_CellIndex)
              return [f3._DT_CellIndex.column];
            g4 = l3(h3).filter(f3).map(function() {
              return l3.inArray(this, h3);
            }).toArray();
            if (g4.length || !f3.nodeName)
              return g4;
            g4 = l3(f3).closest("*[data-dt-column]");
            return g4.length ? [g4.data("dt-column")] : [];
          }, a3, c3);
        };
        z3("columns()", function(a3, b3) {
          a3 === q3 ? a3 = "" : l3.isPlainObject(a3) && (b3 = a3, a3 = "");
          b3 = Ab(b3);
          var c3 = this.iterator("table", function(d2) {
            return Kc(d2, a3, b3);
          }, 1);
          c3.selector.cols = a3;
          c3.selector.opts = b3;
          return c3;
        });
        J2("columns().header()", "column().header()", function(a3, b3) {
          return this.iterator("column", function(c3, d2) {
            return c3.aoColumns[d2].nTh;
          }, 1);
        });
        J2("columns().footer()", "column().footer()", function(a3, b3) {
          return this.iterator("column", function(c3, d2) {
            return c3.aoColumns[d2].nTf;
          }, 1);
        });
        J2("columns().data()", "column().data()", function() {
          return this.iterator("column-rows", yc, 1);
        });
        J2("columns().dataSrc()", "column().dataSrc()", function() {
          return this.iterator("column", function(a3, b3) {
            return a3.aoColumns[b3].mData;
          }, 1);
        });
        J2("columns().cache()", "column().cache()", function(a3) {
          return this.iterator("column-rows", function(b3, c3, d2, e3, h3) {
            return Fa(b3.aoData, h3, "search" === a3 ? "_aFilterData" : "_aSortData", c3);
          }, 1);
        });
        J2("columns().nodes()", "column().nodes()", function() {
          return this.iterator(
            "column-rows",
            function(a3, b3, c3, d2, e3) {
              return Fa(a3.aoData, e3, "anCells", b3);
            },
            1
          );
        });
        J2("columns().visible()", "column().visible()", function(a3, b3) {
          var c3 = this, d2 = this.iterator("column", function(e3, h3) {
            if (a3 === q3)
              return e3.aoColumns[h3].bVisible;
            var f3 = e3.aoColumns, g4 = f3[h3], k3 = e3.aoData, m3;
            if (a3 !== q3 && g4.bVisible !== a3) {
              if (a3) {
                var n2 = l3.inArray(true, U2(f3, "bVisible"), h3 + 1);
                f3 = 0;
                for (m3 = k3.length; f3 < m3; f3++) {
                  var p3 = k3[f3].nTr;
                  e3 = k3[f3].anCells;
                  p3 && p3.insertBefore(e3[h3], e3[n2] || null);
                }
              } else
                l3(U2(e3.aoData, "anCells", h3)).detach();
              g4.bVisible = a3;
            }
          });
          a3 !== q3 && this.iterator("table", function(e3) {
            xa(
              e3,
              e3.aoHeader
            );
            xa(e3, e3.aoFooter);
            e3.aiDisplay.length || l3(e3.nTBody).find("td[colspan]").attr("colspan", na(e3));
            Da(e3);
            c3.iterator("column", function(h3, f3) {
              F3(h3, null, "column-visibility", [h3, f3, a3, b3]);
            });
            (b3 === q3 || b3) && c3.columns.adjust();
          });
          return d2;
        });
        J2("columns().indexes()", "column().index()", function(a3) {
          return this.iterator("column", function(b3, c3) {
            return "visible" === a3 ? ua(b3, c3) : c3;
          }, 1);
        });
        z3("columns.adjust()", function() {
          return this.iterator("table", function(a3) {
            sa(a3);
          }, 1);
        });
        z3("column.index()", function(a3, b3) {
          if (0 !== this.context.length) {
            var c3 = this.context[0];
            if ("fromVisible" === a3 || "toData" === a3)
              return ta(c3, b3);
            if ("fromData" === a3 || "toVisible" === a3)
              return ua(c3, b3);
          }
        });
        z3("column()", function(a3, b3) {
          return Bb(this.columns(a3, b3));
        });
        var Lc = function(a3, b3, c3) {
          var d2 = a3.aoData, e3 = ab(a3, c3), h3 = qc(Fa(d2, e3, "anCells")), f3 = l3(rc([], h3)), g4, k3 = a3.aoColumns.length, m3, n2, p3, t3, v3, x4;
          return zb("cell", b3, function(w4) {
            var r3 = "function" === typeof w4;
            if (null === w4 || w4 === q3 || r3) {
              m3 = [];
              n2 = 0;
              for (p3 = e3.length; n2 < p3; n2++)
                for (g4 = e3[n2], t3 = 0; t3 < k3; t3++)
                  v3 = { row: g4, column: t3 }, r3 ? (x4 = d2[g4], w4(v3, T4(a3, g4, t3), x4.anCells ? x4.anCells[t3] : null) && m3.push(v3)) : m3.push(v3);
              return m3;
            }
            if (l3.isPlainObject(w4))
              return w4.column !== q3 && w4.row !== q3 && -1 !== l3.inArray(w4.row, e3) ? [w4] : [];
            r3 = f3.filter(w4).map(function(C3, G2) {
              return { row: G2._DT_CellIndex.row, column: G2._DT_CellIndex.column };
            }).toArray();
            if (r3.length || !w4.nodeName)
              return r3;
            x4 = l3(w4).closest("*[data-dt-row]");
            return x4.length ? [{ row: x4.data("dt-row"), column: x4.data("dt-column") }] : [];
          }, a3, c3);
        };
        z3("cells()", function(a3, b3, c3) {
          l3.isPlainObject(a3) && (a3.row === q3 ? (c3 = a3, a3 = null) : (c3 = b3, b3 = null));
          l3.isPlainObject(b3) && (c3 = b3, b3 = null);
          if (null === b3 || b3 === q3)
            return this.iterator("table", function(n2) {
              return Lc(n2, a3, Ab(c3));
            });
          var d2 = c3 ? { page: c3.page, order: c3.order, search: c3.search } : {}, e3 = this.columns(b3, d2), h3 = this.rows(a3, d2), f3, g4, k3, m3;
          d2 = this.iterator("table", function(n2, p3) {
            n2 = [];
            f3 = 0;
            for (g4 = h3[p3].length; f3 < g4; f3++)
              for (k3 = 0, m3 = e3[p3].length; k3 < m3; k3++)
                n2.push({ row: h3[p3][f3], column: e3[p3][k3] });
            return n2;
          }, 1);
          d2 = c3 && c3.selected ? this.cells(d2, c3) : d2;
          l3.extend(d2.selector, { cols: b3, rows: a3, opts: c3 });
          return d2;
        });
        J2("cells().nodes()", "cell().node()", function() {
          return this.iterator("cell", function(a3, b3, c3) {
            return (a3 = a3.aoData[b3]) && a3.anCells ? a3.anCells[c3] : q3;
          }, 1);
        });
        z3("cells().data()", function() {
          return this.iterator("cell", function(a3, b3, c3) {
            return T4(a3, b3, c3);
          }, 1);
        });
        J2("cells().cache()", "cell().cache()", function(a3) {
          a3 = "search" === a3 ? "_aFilterData" : "_aSortData";
          return this.iterator("cell", function(b3, c3, d2) {
            return b3.aoData[c3][a3][d2];
          }, 1);
        });
        J2("cells().render()", "cell().render()", function(a3) {
          return this.iterator("cell", function(b3, c3, d2) {
            return T4(b3, c3, d2, a3);
          }, 1);
        });
        J2("cells().indexes()", "cell().index()", function() {
          return this.iterator(
            "cell",
            function(a3, b3, c3) {
              return { row: b3, column: c3, columnVisible: ua(a3, c3) };
            },
            1
          );
        });
        J2("cells().invalidate()", "cell().invalidate()", function(a3) {
          return this.iterator("cell", function(b3, c3, d2) {
            va(b3, c3, a3, d2);
          });
        });
        z3("cell()", function(a3, b3, c3) {
          return Bb(this.cells(a3, b3, c3));
        });
        z3("cell().data()", function(a3) {
          var b3 = this.context, c3 = this[0];
          if (a3 === q3)
            return b3.length && c3.length ? T4(b3[0], c3[0].row, c3[0].column) : q3;
          Ib(b3[0], c3[0].row, c3[0].column, a3);
          va(b3[0], c3[0].row, "data", c3[0].column);
          return this;
        });
        z3("order()", function(a3, b3) {
          var c3 = this.context;
          if (a3 === q3)
            return 0 !== c3.length ? c3[0].aaSorting : q3;
          "number" === typeof a3 ? a3 = [[a3, b3]] : a3.length && !Array.isArray(a3[0]) && (a3 = Array.prototype.slice.call(arguments));
          return this.iterator("table", function(d2) {
            d2.aaSorting = a3.slice();
          });
        });
        z3("order.listener()", function(a3, b3, c3) {
          return this.iterator("table", function(d2) {
            kb(d2, a3, b3, c3);
          });
        });
        z3("order.fixed()", function(a3) {
          if (!a3) {
            var b3 = this.context;
            b3 = b3.length ? b3[0].aaSortingFixed : q3;
            return Array.isArray(b3) ? { pre: b3 } : b3;
          }
          return this.iterator("table", function(c3) {
            c3.aaSortingFixed = l3.extend(true, {}, a3);
          });
        });
        z3(["columns().order()", "column().order()"], function(a3) {
          var b3 = this;
          return this.iterator("table", function(c3, d2) {
            var e3 = [];
            l3.each(b3[d2], function(h3, f3) {
              e3.push([f3, a3]);
            });
            c3.aaSorting = e3;
          });
        });
        z3("search()", function(a3, b3, c3, d2) {
          var e3 = this.context;
          return a3 === q3 ? 0 !== e3.length ? e3[0].oPreviousSearch.sSearch : q3 : this.iterator("table", function(h3) {
            h3.oFeatures.bFilter && ya(h3, l3.extend({}, h3.oPreviousSearch, { sSearch: a3 + "", bRegex: null === b3 ? false : b3, bSmart: null === c3 ? true : c3, bCaseInsensitive: null === d2 ? true : d2 }), 1);
          });
        });
        J2(
          "columns().search()",
          "column().search()",
          function(a3, b3, c3, d2) {
            return this.iterator("column", function(e3, h3) {
              var f3 = e3.aoPreSearchCols;
              if (a3 === q3)
                return f3[h3].sSearch;
              e3.oFeatures.bFilter && (l3.extend(f3[h3], { sSearch: a3 + "", bRegex: null === b3 ? false : b3, bSmart: null === c3 ? true : c3, bCaseInsensitive: null === d2 ? true : d2 }), ya(e3, e3.oPreviousSearch, 1));
            });
          }
        );
        z3("state()", function() {
          return this.context.length ? this.context[0].oSavedState : null;
        });
        z3("state.clear()", function() {
          return this.iterator("table", function(a3) {
            a3.fnStateSaveCallback.call(a3.oInstance, a3, {});
          });
        });
        z3("state.loaded()", function() {
          return this.context.length ? this.context[0].oLoadedState : null;
        });
        z3("state.save()", function() {
          return this.iterator("table", function(a3) {
            Da(a3);
          });
        });
        u3.versionCheck = u3.fnVersionCheck = function(a3) {
          var b3 = u3.version.split(".");
          a3 = a3.split(".");
          for (var c3, d2, e3 = 0, h3 = a3.length; e3 < h3; e3++)
            if (c3 = parseInt(b3[e3], 10) || 0, d2 = parseInt(a3[e3], 10) || 0, c3 !== d2)
              return c3 > d2;
          return true;
        };
        u3.isDataTable = u3.fnIsDataTable = function(a3) {
          var b3 = l3(a3).get(0), c3 = false;
          if (a3 instanceof u3.Api)
            return true;
          l3.each(u3.settings, function(d2, e3) {
            d2 = e3.nScrollHead ? l3("table", e3.nScrollHead)[0] : null;
            var h3 = e3.nScrollFoot ? l3("table", e3.nScrollFoot)[0] : null;
            if (e3.nTable === b3 || d2 === b3 || h3 === b3)
              c3 = true;
          });
          return c3;
        };
        u3.tables = u3.fnTables = function(a3) {
          var b3 = false;
          l3.isPlainObject(a3) && (b3 = a3.api, a3 = a3.visible);
          var c3 = l3.map(u3.settings, function(d2) {
            if (!a3 || a3 && l3(d2.nTable).is(":visible"))
              return d2.nTable;
          });
          return b3 ? new B3(c3) : c3;
        };
        u3.camelToHungarian = P2;
        z3("$()", function(a3, b3) {
          b3 = this.rows(b3).nodes();
          b3 = l3(b3);
          return l3([].concat(b3.filter(a3).toArray(), b3.find(a3).toArray()));
        });
        l3.each(["on", "one", "off"], function(a3, b3) {
          z3(b3 + "()", function() {
            var c3 = Array.prototype.slice.call(arguments);
            c3[0] = l3.map(c3[0].split(/\s/), function(e3) {
              return e3.match(/\.dt\b/) ? e3 : e3 + ".dt";
            }).join(" ");
            var d2 = l3(this.tables().nodes());
            d2[b3].apply(d2, c3);
            return this;
          });
        });
        z3("clear()", function() {
          return this.iterator("table", function(a3) {
            Ma(a3);
          });
        });
        z3("settings()", function() {
          return new B3(this.context, this.context);
        });
        z3("init()", function() {
          var a3 = this.context;
          return a3.length ? a3[0].oInit : null;
        });
        z3("data()", function() {
          return this.iterator("table", function(a3) {
            return U2(a3.aoData, "_aData");
          }).flatten();
        });
        z3("destroy()", function(a3) {
          a3 = a3 || false;
          return this.iterator("table", function(b3) {
            var c3 = b3.oClasses, d2 = b3.nTable, e3 = b3.nTBody, h3 = b3.nTHead, f3 = b3.nTFoot, g4 = l3(d2);
            e3 = l3(e3);
            var k3 = l3(b3.nTableWrapper), m3 = l3.map(b3.aoData, function(p3) {
              return p3.nTr;
            }), n2;
            b3.bDestroying = true;
            F3(b3, "aoDestroyCallback", "destroy", [b3]);
            a3 || new B3(b3).columns().visible(true);
            k3.off(".DT").find(":not(tbody *)").off(".DT");
            l3(y3).off(".DT-" + b3.sInstance);
            d2 != h3.parentNode && (g4.children("thead").detach(), g4.append(h3));
            f3 && d2 != f3.parentNode && (g4.children("tfoot").detach(), g4.append(f3));
            b3.aaSorting = [];
            b3.aaSortingFixed = [];
            Va(b3);
            l3(m3).removeClass(b3.asStripeClasses.join(" "));
            l3("th, td", h3).removeClass(c3.sSortable + " " + c3.sSortableAsc + " " + c3.sSortableDesc + " " + c3.sSortableNone);
            e3.children().detach();
            e3.append(m3);
            h3 = b3.nTableWrapper.parentNode;
            f3 = a3 ? "remove" : "detach";
            g4[f3]();
            k3[f3]();
            !a3 && h3 && (h3.insertBefore(d2, b3.nTableReinsertBefore), g4.css("width", b3.sDestroyWidth).removeClass(c3.sTable), (n2 = b3.asDestroyStripes.length) && e3.children().each(function(p3) {
              l3(this).addClass(b3.asDestroyStripes[p3 % n2]);
            }));
            c3 = l3.inArray(b3, u3.settings);
            -1 !== c3 && u3.settings.splice(
              c3,
              1
            );
          });
        });
        l3.each(["column", "row", "cell"], function(a3, b3) {
          z3(b3 + "s().every()", function(c3) {
            var d2 = this.selector.opts, e3 = this;
            return this.iterator(b3, function(h3, f3, g4, k3, m3) {
              c3.call(e3[b3](f3, "cell" === b3 ? g4 : d2, "cell" === b3 ? d2 : q3), f3, g4, k3, m3);
            });
          });
        });
        z3("i18n()", function(a3, b3, c3) {
          var d2 = this.context[0];
          a3 = ma(a3)(d2.oLanguage);
          a3 === q3 && (a3 = b3);
          c3 !== q3 && l3.isPlainObject(a3) && (a3 = a3[c3] !== q3 ? a3[c3] : a3._);
          return a3.replace("%d", c3);
        });
        u3.version = "1.12.1";
        u3.settings = [];
        u3.models = {};
        u3.models.oSearch = { bCaseInsensitive: true, sSearch: "", bRegex: false, bSmart: true, "return": false };
        u3.models.oRow = { nTr: null, anCells: null, _aData: [], _aSortData: null, _aFilterData: null, _sFilterRow: null, _sRowStripe: "", src: null, idx: -1 };
        u3.models.oColumn = {
          idx: null,
          aDataSort: null,
          asSorting: null,
          bSearchable: null,
          bSortable: null,
          bVisible: null,
          _sManualType: null,
          _bAttrSrc: false,
          fnCreatedCell: null,
          fnGetData: null,
          fnSetData: null,
          mData: null,
          mRender: null,
          nTh: null,
          nTf: null,
          sClass: null,
          sContentPadding: null,
          sDefaultContent: null,
          sName: null,
          sSortDataType: "std",
          sSortingClass: null,
          sSortingClassJUI: null,
          sTitle: null,
          sType: null,
          sWidth: null,
          sWidthOrig: null
        };
        u3.defaults = { aaData: null, aaSorting: [[0, "asc"]], aaSortingFixed: [], ajax: null, aLengthMenu: [10, 25, 50, 100], aoColumns: null, aoColumnDefs: null, aoSearchCols: [], asStripeClasses: null, bAutoWidth: true, bDeferRender: false, bDestroy: false, bFilter: true, bInfo: true, bLengthChange: true, bPaginate: true, bProcessing: false, bRetrieve: false, bScrollCollapse: false, bServerSide: false, bSort: true, bSortMulti: true, bSortCellsTop: false, bSortClasses: true, bStateSave: false, fnCreatedRow: null, fnDrawCallback: null, fnFooterCallback: null, fnFormatNumber: function(a3) {
          return a3.toString().replace(
            /\B(?=(\d{3})+(?!\d))/g,
            this.oLanguage.sThousands
          );
        }, fnHeaderCallback: null, fnInfoCallback: null, fnInitComplete: null, fnPreDrawCallback: null, fnRowCallback: null, fnServerData: null, fnServerParams: null, fnStateLoadCallback: function(a3) {
          try {
            return JSON.parse((-1 === a3.iStateDuration ? sessionStorage : localStorage).getItem("DataTables_" + a3.sInstance + "_" + location.pathname));
          } catch (b3) {
            return {};
          }
        }, fnStateLoadParams: null, fnStateLoaded: null, fnStateSaveCallback: function(a3, b3) {
          try {
            (-1 === a3.iStateDuration ? sessionStorage : localStorage).setItem("DataTables_" + a3.sInstance + "_" + location.pathname, JSON.stringify(b3));
          } catch (c3) {
          }
        }, fnStateSaveParams: null, iStateDuration: 7200, iDeferLoading: null, iDisplayLength: 10, iDisplayStart: 0, iTabIndex: 0, oClasses: {}, oLanguage: {
          oAria: { sSortAscending: ": activate to sort column ascending", sSortDescending: ": activate to sort column descending" },
          oPaginate: { sFirst: "First", sLast: "Last", sNext: "Next", sPrevious: "Previous" },
          sEmptyTable: "No data available in table",
          sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
          sInfoEmpty: "Showing 0 to 0 of 0 entries",
          sInfoFiltered: "(filtered from _MAX_ total entries)",
          sInfoPostFix: "",
          sDecimal: "",
          sThousands: ",",
          sLengthMenu: "Show _MENU_ entries",
          sLoadingRecords: "Loading...",
          sProcessing: "",
          sSearch: "Search:",
          sSearchPlaceholder: "",
          sUrl: "",
          sZeroRecords: "No matching records found"
        }, oSearch: l3.extend({}, u3.models.oSearch), sAjaxDataProp: "data", sAjaxSource: null, sDom: "lfrtip", searchDelay: null, sPaginationType: "simple_numbers", sScrollX: "", sScrollXInner: "", sScrollY: "", sServerMethod: "GET", renderer: null, rowId: "DT_RowId" };
        E(u3.defaults);
        u3.defaults.column = { aDataSort: null, iDataSort: -1, asSorting: ["asc", "desc"], bSearchable: true, bSortable: true, bVisible: true, fnCreatedCell: null, mData: null, mRender: null, sCellType: "td", sClass: "", sContentPadding: "", sDefaultContent: null, sName: "", sSortDataType: "std", sTitle: null, sType: null, sWidth: null };
        E(u3.defaults.column);
        u3.models.oSettings = {
          oFeatures: {
            bAutoWidth: null,
            bDeferRender: null,
            bFilter: null,
            bInfo: null,
            bLengthChange: null,
            bPaginate: null,
            bProcessing: null,
            bServerSide: null,
            bSort: null,
            bSortMulti: null,
            bSortClasses: null,
            bStateSave: null
          },
          oScroll: { bCollapse: null, iBarWidth: 0, sX: null, sXInner: null, sY: null },
          oLanguage: { fnInfoCallback: null },
          oBrowser: { bScrollOversize: false, bScrollbarLeft: false, bBounding: false, barWidth: 0 },
          ajax: null,
          aanFeatures: [],
          aoData: [],
          aiDisplay: [],
          aiDisplayMaster: [],
          aIds: {},
          aoColumns: [],
          aoHeader: [],
          aoFooter: [],
          oPreviousSearch: {},
          aoPreSearchCols: [],
          aaSorting: null,
          aaSortingFixed: [],
          asStripeClasses: null,
          asDestroyStripes: [],
          sDestroyWidth: 0,
          aoRowCallback: [],
          aoHeaderCallback: [],
          aoFooterCallback: [],
          aoDrawCallback: [],
          aoRowCreatedCallback: [],
          aoPreDrawCallback: [],
          aoInitComplete: [],
          aoStateSaveParams: [],
          aoStateLoadParams: [],
          aoStateLoaded: [],
          sTableId: "",
          nTable: null,
          nTHead: null,
          nTFoot: null,
          nTBody: null,
          nTableWrapper: null,
          bDeferLoading: false,
          bInitialised: false,
          aoOpenRows: [],
          sDom: null,
          searchDelay: null,
          sPaginationType: "two_button",
          iStateDuration: 0,
          aoStateSave: [],
          aoStateLoad: [],
          oSavedState: null,
          oLoadedState: null,
          sAjaxSource: null,
          sAjaxDataProp: null,
          jqXHR: null,
          json: q3,
          oAjaxData: q3,
          fnServerData: null,
          aoServerParams: [],
          sServerMethod: null,
          fnFormatNumber: null,
          aLengthMenu: null,
          iDraw: 0,
          bDrawing: false,
          iDrawError: -1,
          _iDisplayLength: 10,
          _iDisplayStart: 0,
          _iRecordsTotal: 0,
          _iRecordsDisplay: 0,
          oClasses: {},
          bFiltered: false,
          bSorted: false,
          bSortCellsTop: null,
          oInit: null,
          aoDestroyCallback: [],
          fnRecordsTotal: function() {
            return "ssp" == Q2(this) ? 1 * this._iRecordsTotal : this.aiDisplayMaster.length;
          },
          fnRecordsDisplay: function() {
            return "ssp" == Q2(this) ? 1 * this._iRecordsDisplay : this.aiDisplay.length;
          },
          fnDisplayEnd: function() {
            var a3 = this._iDisplayLength, b3 = this._iDisplayStart, c3 = b3 + a3, d2 = this.aiDisplay.length, e3 = this.oFeatures, h3 = e3.bPaginate;
            return e3.bServerSide ? false === h3 || -1 === a3 ? b3 + d2 : Math.min(b3 + a3, this._iRecordsDisplay) : !h3 || c3 > d2 || -1 === a3 ? d2 : c3;
          },
          oInstance: null,
          sInstance: null,
          iTabIndex: 0,
          nScrollHead: null,
          nScrollFoot: null,
          aLastSort: [],
          oPlugins: {},
          rowIdFn: null,
          rowId: null
        };
        u3.ext = M2 = { buttons: {}, classes: {}, builder: "-source-", errMode: "alert", feature: [], search: [], selector: { cell: [], column: [], row: [] }, internal: {}, legacy: { ajax: null }, pager: {}, renderer: { pageButton: {}, header: {} }, order: {}, type: {
          detect: [],
          search: {},
          order: {}
        }, _unique: 0, fnVersionCheck: u3.fnVersionCheck, iApiIndex: 0, oJUIClasses: {}, sVersion: u3.version };
        l3.extend(M2, { afnFiltering: M2.search, aTypes: M2.type.detect, ofnSearch: M2.type.search, oSort: M2.type.order, afnSortData: M2.order, aoFeatures: M2.feature, oApi: M2.internal, oStdClasses: M2.classes, oPagination: M2.pager });
        l3.extend(u3.ext.classes, {
          sTable: "dataTable",
          sNoFooter: "no-footer",
          sPageButton: "paginate_button",
          sPageButtonActive: "current",
          sPageButtonDisabled: "disabled",
          sStripeOdd: "odd",
          sStripeEven: "even",
          sRowEmpty: "dataTables_empty",
          sWrapper: "dataTables_wrapper",
          sFilter: "dataTables_filter",
          sInfo: "dataTables_info",
          sPaging: "dataTables_paginate paging_",
          sLength: "dataTables_length",
          sProcessing: "dataTables_processing",
          sSortAsc: "sorting_asc",
          sSortDesc: "sorting_desc",
          sSortable: "sorting",
          sSortableAsc: "sorting_desc_disabled",
          sSortableDesc: "sorting_asc_disabled",
          sSortableNone: "sorting_disabled",
          sSortColumn: "sorting_",
          sFilterInput: "",
          sLengthSelect: "",
          sScrollWrapper: "dataTables_scroll",
          sScrollHead: "dataTables_scrollHead",
          sScrollHeadInner: "dataTables_scrollHeadInner",
          sScrollBody: "dataTables_scrollBody",
          sScrollFoot: "dataTables_scrollFoot",
          sScrollFootInner: "dataTables_scrollFootInner",
          sHeaderTH: "",
          sFooterTH: "",
          sSortJUIAsc: "",
          sSortJUIDesc: "",
          sSortJUI: "",
          sSortJUIAscAllowed: "",
          sSortJUIDescAllowed: "",
          sSortJUIWrapper: "",
          sSortIcon: "",
          sJUIHeader: "",
          sJUIFooter: ""
        });
        var ic = u3.ext.pager;
        l3.extend(ic, { simple: function(a3, b3) {
          return ["previous", "next"];
        }, full: function(a3, b3) {
          return ["first", "previous", "next", "last"];
        }, numbers: function(a3, b3) {
          return [Ea(a3, b3)];
        }, simple_numbers: function(a3, b3) {
          return [
            "previous",
            Ea(a3, b3),
            "next"
          ];
        }, full_numbers: function(a3, b3) {
          return ["first", "previous", Ea(a3, b3), "next", "last"];
        }, first_last_numbers: function(a3, b3) {
          return ["first", Ea(a3, b3), "last"];
        }, _numbers: Ea, numbers_length: 7 });
        l3.extend(true, u3.ext.renderer, { pageButton: { _: function(a3, b3, c3, d2, e3, h3) {
          var f3 = a3.oClasses, g4 = a3.oLanguage.oPaginate, k3 = a3.oLanguage.oAria.paginate || {}, m3, n2, p3 = 0, t3 = function(x4, w4) {
            var r3, C3 = f3.sPageButtonDisabled, G2 = function(I3) {
              Ta(a3, I3.data.action, true);
            };
            var ba = 0;
            for (r3 = w4.length; ba < r3; ba++) {
              var L3 = w4[ba];
              if (Array.isArray(L3)) {
                var O2 = l3("<" + (L3.DT_el || "div") + "/>").appendTo(x4);
                t3(O2, L3);
              } else {
                m3 = null;
                n2 = L3;
                O2 = a3.iTabIndex;
                switch (L3) {
                  case "ellipsis":
                    x4.append('<span class="ellipsis">&#x2026;</span>');
                    break;
                  case "first":
                    m3 = g4.sFirst;
                    0 === e3 && (O2 = -1, n2 += " " + C3);
                    break;
                  case "previous":
                    m3 = g4.sPrevious;
                    0 === e3 && (O2 = -1, n2 += " " + C3);
                    break;
                  case "next":
                    m3 = g4.sNext;
                    if (0 === h3 || e3 === h3 - 1)
                      O2 = -1, n2 += " " + C3;
                    break;
                  case "last":
                    m3 = g4.sLast;
                    if (0 === h3 || e3 === h3 - 1)
                      O2 = -1, n2 += " " + C3;
                    break;
                  default:
                    m3 = a3.fnFormatNumber(L3 + 1), n2 = e3 === L3 ? f3.sPageButtonActive : "";
                }
                null !== m3 && (O2 = l3("<a>", {
                  "class": f3.sPageButton + " " + n2,
                  "aria-controls": a3.sTableId,
                  "aria-label": k3[L3],
                  "data-dt-idx": p3,
                  tabindex: O2,
                  id: 0 === c3 && "string" === typeof L3 ? a3.sTableId + "_" + L3 : null
                }).html(m3).appendTo(x4), sb(O2, { action: L3 }, G2), p3++);
              }
            }
          };
          try {
            var v3 = l3(b3).find(A3.activeElement).data("dt-idx");
          } catch (x4) {
          }
          t3(l3(b3).empty(), d2);
          v3 !== q3 && l3(b3).find("[data-dt-idx=" + v3 + "]").trigger("focus");
        } } });
        l3.extend(u3.ext.type.detect, [function(a3, b3) {
          b3 = b3.oLanguage.sDecimal;
          return yb(a3, b3) ? "num" + b3 : null;
        }, function(a3, b3) {
          if (a3 && !(a3 instanceof Date) && !Dc.test(a3))
            return null;
          b3 = Date.parse(a3);
          return null !== b3 && !isNaN(b3) || aa(a3) ? "date" : null;
        }, function(a3, b3) {
          b3 = b3.oLanguage.sDecimal;
          return yb(a3, b3, true) ? "num-fmt" + b3 : null;
        }, function(a3, b3) {
          b3 = b3.oLanguage.sDecimal;
          return pc(a3, b3) ? "html-num" + b3 : null;
        }, function(a3, b3) {
          b3 = b3.oLanguage.sDecimal;
          return pc(a3, b3, true) ? "html-num-fmt" + b3 : null;
        }, function(a3, b3) {
          return aa(a3) || "string" === typeof a3 && -1 !== a3.indexOf("<") ? "html" : null;
        }]);
        l3.extend(u3.ext.type.search, { html: function(a3) {
          return aa(a3) ? a3 : "string" === typeof a3 ? a3.replace(mc, " ").replace(Ya, "") : "";
        }, string: function(a3) {
          return aa(a3) ? a3 : "string" === typeof a3 ? a3.replace(mc, " ") : a3;
        } });
        var Xa = function(a3, b3, c3, d2) {
          if (0 !== a3 && (!a3 || "-" === a3))
            return -Infinity;
          b3 && (a3 = oc(a3, b3));
          a3.replace && (c3 && (a3 = a3.replace(c3, "")), d2 && (a3 = a3.replace(d2, "")));
          return 1 * a3;
        };
        l3.extend(M2.type.order, { "date-pre": function(a3) {
          a3 = Date.parse(a3);
          return isNaN(a3) ? -Infinity : a3;
        }, "html-pre": function(a3) {
          return aa(a3) ? "" : a3.replace ? a3.replace(/<.*?>/g, "").toLowerCase() : a3 + "";
        }, "string-pre": function(a3) {
          return aa(a3) ? "" : "string" === typeof a3 ? a3.toLowerCase() : a3.toString ? a3.toString() : "";
        }, "string-asc": function(a3, b3) {
          return a3 < b3 ? -1 : a3 > b3 ? 1 : 0;
        }, "string-desc": function(a3, b3) {
          return a3 < b3 ? 1 : a3 > b3 ? -1 : 0;
        } });
        bb("");
        l3.extend(true, u3.ext.renderer, { header: { _: function(a3, b3, c3, d2) {
          l3(a3.nTable).on("order.dt.DT", function(e3, h3, f3, g4) {
            a3 === h3 && (e3 = c3.idx, b3.removeClass(d2.sSortAsc + " " + d2.sSortDesc).addClass("asc" == g4[e3] ? d2.sSortAsc : "desc" == g4[e3] ? d2.sSortDesc : c3.sSortingClass));
          });
        }, jqueryui: function(a3, b3, c3, d2) {
          l3("<div/>").addClass(d2.sSortJUIWrapper).append(b3.contents()).append(l3("<span/>").addClass(d2.sSortIcon + " " + c3.sSortingClassJUI)).appendTo(b3);
          l3(a3.nTable).on("order.dt.DT", function(e3, h3, f3, g4) {
            a3 === h3 && (e3 = c3.idx, b3.removeClass(d2.sSortAsc + " " + d2.sSortDesc).addClass("asc" == g4[e3] ? d2.sSortAsc : "desc" == g4[e3] ? d2.sSortDesc : c3.sSortingClass), b3.find("span." + d2.sSortIcon).removeClass(d2.sSortJUIAsc + " " + d2.sSortJUIDesc + " " + d2.sSortJUI + " " + d2.sSortJUIAscAllowed + " " + d2.sSortJUIDescAllowed).addClass("asc" == g4[e3] ? d2.sSortJUIAsc : "desc" == g4[e3] ? d2.sSortJUIDesc : c3.sSortingClassJUI));
          });
        } } });
        var $a = function(a3) {
          Array.isArray(a3) && (a3 = a3.join(","));
          return "string" === typeof a3 ? a3.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(
            /"/g,
            "&quot;"
          ) : a3;
        }, kc = false, zc = ",", Ac = ".";
        if (Intl)
          try {
            for (var Ha = new Intl.NumberFormat().formatToParts(100000.1), ra = 0; ra < Ha.length; ra++)
              "group" === Ha[ra].type ? zc = Ha[ra].value : "decimal" === Ha[ra].type && (Ac = Ha[ra].value);
          } catch (a3) {
          }
        u3.datetime = function(a3, b3) {
          var c3 = "datetime-detect-" + a3;
          b3 || (b3 = "en");
          u3.ext.type.order[c3] || (u3.ext.type.detect.unshift(function(d2) {
            var e3 = Za(d2, a3, b3);
            return "" === d2 || e3 ? c3 : false;
          }), u3.ext.type.order[c3 + "-pre"] = function(d2) {
            return Za(d2, a3, b3) || 0;
          });
        };
        u3.render = {
          date: wb("toLocaleDateString"),
          datetime: wb("toLocaleString"),
          time: wb("toLocaleTimeString"),
          number: function(a3, b3, c3, d2, e3) {
            if (null === a3 || a3 === q3)
              a3 = zc;
            if (null === b3 || b3 === q3)
              b3 = Ac;
            return { display: function(h3) {
              if ("number" !== typeof h3 && "string" !== typeof h3 || "" === h3 || null === h3)
                return h3;
              var f3 = 0 > h3 ? "-" : "", g4 = parseFloat(h3);
              if (isNaN(g4))
                return $a(h3);
              g4 = g4.toFixed(c3);
              h3 = Math.abs(g4);
              g4 = parseInt(h3, 10);
              h3 = c3 ? b3 + (h3 - g4).toFixed(c3).substring(2) : "";
              0 === g4 && 0 === parseFloat(h3) && (f3 = "");
              return f3 + (d2 || "") + g4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, a3) + h3 + (e3 || "");
            } };
          },
          text: function() {
            return { display: $a, filter: $a };
          }
        };
        l3.extend(u3.ext.internal, {
          _fnExternApiFunc: lc,
          _fnBuildAjax: Qa,
          _fnAjaxUpdate: Kb,
          _fnAjaxParameters: Tb,
          _fnAjaxUpdateDraw: Ub,
          _fnAjaxDataSrc: za,
          _fnAddColumn: cb,
          _fnColumnOptions: Ia,
          _fnAdjustColumnSizing: sa,
          _fnVisibleToColumnIndex: ta,
          _fnColumnIndexToVisible: ua,
          _fnVisbleColumns: na,
          _fnGetColumns: Ka,
          _fnColumnTypes: eb,
          _fnApplyColumnDefs: Hb,
          _fnHungarianMap: E,
          _fnCamelToHungarian: P2,
          _fnLanguageCompat: la,
          _fnBrowserDetect: Fb,
          _fnAddData: ia,
          _fnAddTr: La,
          _fnNodeToDataIndex: function(a3, b3) {
            return b3._DT_RowIndex !== q3 ? b3._DT_RowIndex : null;
          },
          _fnNodeToColumnIndex: function(a3, b3, c3) {
            return l3.inArray(c3, a3.aoData[b3].anCells);
          },
          _fnGetCellData: T4,
          _fnSetCellData: Ib,
          _fnSplitObjNotation: hb,
          _fnGetObjectDataFn: ma,
          _fnSetObjectDataFn: ha,
          _fnGetDataMaster: ib,
          _fnClearTable: Ma,
          _fnDeleteIndex: Na,
          _fnInvalidate: va,
          _fnGetRowElements: gb,
          _fnCreateTr: fb,
          _fnBuildHead: Jb,
          _fnDrawHead: xa,
          _fnDraw: ja,
          _fnReDraw: ka,
          _fnAddOptionsHtml: Mb,
          _fnDetectHeader: wa,
          _fnGetUniqueThs: Pa,
          _fnFeatureHtmlFilter: Ob,
          _fnFilterComplete: ya,
          _fnFilterCustom: Xb,
          _fnFilterColumn: Wb,
          _fnFilter: Vb,
          _fnFilterCreateSearch: nb,
          _fnEscapeRegex: ob,
          _fnFilterData: Yb,
          _fnFeatureHtmlInfo: Rb,
          _fnUpdateInfo: ac,
          _fnInfoMacros: bc,
          _fnInitialise: Aa,
          _fnInitComplete: Ra,
          _fnLengthChange: pb,
          _fnFeatureHtmlLength: Nb,
          _fnFeatureHtmlPaginate: Sb,
          _fnPageChange: Ta,
          _fnFeatureHtmlProcessing: Pb,
          _fnProcessingDisplay: V3,
          _fnFeatureHtmlTable: Qb,
          _fnScrollDraw: Ja,
          _fnApplyToChildren: da,
          _fnCalculateColumnWidths: db,
          _fnThrottle: mb,
          _fnConvertToWidth: cc,
          _fnGetWidestNode: dc,
          _fnGetMaxLenString: ec,
          _fnStringToCss: K2,
          _fnSortFlatten: oa,
          _fnSort: Lb,
          _fnSortAria: gc,
          _fnSortListener: rb,
          _fnSortAttachListener: kb,
          _fnSortingClasses: Va,
          _fnSortData: fc,
          _fnSaveState: Da,
          _fnLoadState: hc,
          _fnImplementState: tb,
          _fnSettingsFromNode: Wa,
          _fnLog: ea,
          _fnMap: Y,
          _fnBindAction: sb,
          _fnCallbackReg: R,
          _fnCallbackFire: F3,
          _fnLengthOverflow: qb,
          _fnRenderer: lb,
          _fnDataSource: Q2,
          _fnRowAttributes: jb,
          _fnExtend: ub,
          _fnCalculateEnd: function() {
          }
        });
        l3.fn.dataTable = u3;
        u3.$ = l3;
        l3.fn.dataTableSettings = u3.settings;
        l3.fn.dataTableExt = u3.ext;
        l3.fn.DataTable = function(a3) {
          return l3(this).dataTable(a3).api();
        };
        l3.each(u3, function(a3, b3) {
          l3.fn.DataTable[a3] = b3;
        });
        return u3;
      });
    }
  });

  // node_modules/datatables.net/js/jquery.dataTables.js
  var require_jquery_dataTables = __commonJS({
    "node_modules/datatables.net/js/jquery.dataTables.js"(exports, module) {
      (function(factory) {
        "use strict";
        if (typeof define === "function" && define.amd) {
          define(["jquery"], function($3) {
            return factory($3, window, document);
          });
        } else if (typeof exports === "object") {
          module.exports = function(root, $3) {
            if (!root) {
              root = window;
            }
            if (!$3) {
              $3 = typeof window !== "undefined" ? require_jquery() : require_jquery()(root);
            }
            return factory($3, root, root.document);
          };
        } else {
          window.DataTable = factory(jQuery, window, document);
        }
      })(function($3, window2, document2, undefined2) {
        "use strict";
        var DataTable = function(selector, options) {
          if (this instanceof DataTable) {
            return $3(selector).DataTable(options);
          } else {
            options = selector;
          }
          this.$ = function(sSelector, oOpts) {
            return this.api(true).$(sSelector, oOpts);
          };
          this._ = function(sSelector, oOpts) {
            return this.api(true).rows(sSelector, oOpts).data();
          };
          this.api = function(traditional) {
            return traditional ? new _Api(
              _fnSettingsFromNode(this[_ext.iApiIndex])
            ) : new _Api(this);
          };
          this.fnAddData = function(data, redraw) {
            var api = this.api(true);
            var rows = Array.isArray(data) && (Array.isArray(data[0]) || $3.isPlainObject(data[0])) ? api.rows.add(data) : api.row.add(data);
            if (redraw === undefined2 || redraw) {
              api.draw();
            }
            return rows.flatten().toArray();
          };
          this.fnAdjustColumnSizing = function(bRedraw) {
            var api = this.api(true).columns.adjust();
            var settings = api.settings()[0];
            var scroll = settings.oScroll;
            if (bRedraw === undefined2 || bRedraw) {
              api.draw(false);
            } else if (scroll.sX !== "" || scroll.sY !== "") {
              _fnScrollDraw(settings);
            }
          };
          this.fnClearTable = function(bRedraw) {
            var api = this.api(true).clear();
            if (bRedraw === undefined2 || bRedraw) {
              api.draw();
            }
          };
          this.fnClose = function(nTr) {
            this.api(true).row(nTr).child.hide();
          };
          this.fnDeleteRow = function(target, callback, redraw) {
            var api = this.api(true);
            var rows = api.rows(target);
            var settings = rows.settings()[0];
            var data = settings.aoData[rows[0][0]];
            rows.remove();
            if (callback) {
              callback.call(this, settings, data);
            }
            if (redraw === undefined2 || redraw) {
              api.draw();
            }
            return data;
          };
          this.fnDestroy = function(remove) {
            this.api(true).destroy(remove);
          };
          this.fnDraw = function(complete) {
            this.api(true).draw(complete);
          };
          this.fnFilter = function(sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {
            var api = this.api(true);
            if (iColumn === null || iColumn === undefined2) {
              api.search(sInput, bRegex, bSmart, bCaseInsensitive);
            } else {
              api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);
            }
            api.draw();
          };
          this.fnGetData = function(src, col) {
            var api = this.api(true);
            if (src !== undefined2) {
              var type = src.nodeName ? src.nodeName.toLowerCase() : "";
              return col !== undefined2 || type == "td" || type == "th" ? api.cell(src, col).data() : api.row(src).data() || null;
            }
            return api.data().toArray();
          };
          this.fnGetNodes = function(iRow) {
            var api = this.api(true);
            return iRow !== undefined2 ? api.row(iRow).node() : api.rows().nodes().flatten().toArray();
          };
          this.fnGetPosition = function(node) {
            var api = this.api(true);
            var nodeName = node.nodeName.toUpperCase();
            if (nodeName == "TR") {
              return api.row(node).index();
            } else if (nodeName == "TD" || nodeName == "TH") {
              var cell = api.cell(node).index();
              return [
                cell.row,
                cell.columnVisible,
                cell.column
              ];
            }
            return null;
          };
          this.fnIsOpen = function(nTr) {
            return this.api(true).row(nTr).child.isShown();
          };
          this.fnOpen = function(nTr, mHtml, sClass) {
            return this.api(true).row(nTr).child(mHtml, sClass).show().child()[0];
          };
          this.fnPageChange = function(mAction, bRedraw) {
            var api = this.api(true).page(mAction);
            if (bRedraw === undefined2 || bRedraw) {
              api.draw(false);
            }
          };
          this.fnSetColumnVis = function(iCol, bShow, bRedraw) {
            var api = this.api(true).column(iCol).visible(bShow);
            if (bRedraw === undefined2 || bRedraw) {
              api.columns.adjust().draw();
            }
          };
          this.fnSettings = function() {
            return _fnSettingsFromNode(this[_ext.iApiIndex]);
          };
          this.fnSort = function(aaSort) {
            this.api(true).order(aaSort).draw();
          };
          this.fnSortListener = function(nNode, iColumn, fnCallback) {
            this.api(true).order.listener(nNode, iColumn, fnCallback);
          };
          this.fnUpdate = function(mData, mRow, iColumn, bRedraw, bAction) {
            var api = this.api(true);
            if (iColumn === undefined2 || iColumn === null) {
              api.row(mRow).data(mData);
            } else {
              api.cell(mRow, iColumn).data(mData);
            }
            if (bAction === undefined2 || bAction) {
              api.columns.adjust();
            }
            if (bRedraw === undefined2 || bRedraw) {
              api.draw();
            }
            return 0;
          };
          this.fnVersionCheck = _ext.fnVersionCheck;
          var _that = this;
          var emptyInit = options === undefined2;
          var len = this.length;
          if (emptyInit) {
            options = {};
          }
          this.oApi = this.internal = _ext.internal;
          for (var fn in DataTable.ext.internal) {
            if (fn) {
              this[fn] = _fnExternApiFunc(fn);
            }
          }
          this.each(function() {
            var o2 = {};
            var oInit = len > 1 ? _fnExtend(o2, options, true) : options;
            var i4 = 0, iLen, j4, jLen, k3, kLen;
            var sId = this.getAttribute("id");
            var bInitHandedOff = false;
            var defaults = DataTable.defaults;
            var $this = $3(this);
            if (this.nodeName.toLowerCase() != "table") {
              _fnLog(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
              return;
            }
            _fnCompatOpts(defaults);
            _fnCompatCols(defaults.column);
            _fnCamelToHungarian(defaults, defaults, true);
            _fnCamelToHungarian(defaults.column, defaults.column, true);
            _fnCamelToHungarian(defaults, $3.extend(oInit, $this.data()), true);
            var allSettings = DataTable.settings;
            for (i4 = 0, iLen = allSettings.length; i4 < iLen; i4++) {
              var s3 = allSettings[i4];
              if (s3.nTable == this || s3.nTHead && s3.nTHead.parentNode == this || s3.nTFoot && s3.nTFoot.parentNode == this) {
                var bRetrieve = oInit.bRetrieve !== undefined2 ? oInit.bRetrieve : defaults.bRetrieve;
                var bDestroy = oInit.bDestroy !== undefined2 ? oInit.bDestroy : defaults.bDestroy;
                if (emptyInit || bRetrieve) {
                  return s3.oInstance;
                } else if (bDestroy) {
                  s3.oInstance.fnDestroy();
                  break;
                } else {
                  _fnLog(s3, 0, "Cannot reinitialise DataTable", 3);
                  return;
                }
              }
              if (s3.sTableId == this.id) {
                allSettings.splice(i4, 1);
                break;
              }
            }
            if (sId === null || sId === "") {
              sId = "DataTables_Table_" + DataTable.ext._unique++;
              this.id = sId;
            }
            var oSettings = $3.extend(true, {}, DataTable.models.oSettings, {
              "sDestroyWidth": $this[0].style.width,
              "sInstance": sId,
              "sTableId": sId
            });
            oSettings.nTable = this;
            oSettings.oApi = _that.internal;
            oSettings.oInit = oInit;
            allSettings.push(oSettings);
            oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();
            _fnCompatOpts(oInit);
            _fnLanguageCompat(oInit.oLanguage);
            if (oInit.aLengthMenu && !oInit.iDisplayLength) {
              oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
            }
            oInit = _fnExtend($3.extend(true, {}, defaults), oInit);
            _fnMap(oSettings.oFeatures, oInit, [
              "bPaginate",
              "bLengthChange",
              "bFilter",
              "bSort",
              "bSortMulti",
              "bInfo",
              "bProcessing",
              "bAutoWidth",
              "bSortClasses",
              "bServerSide",
              "bDeferRender"
            ]);
            _fnMap(oSettings, oInit, [
              "asStripeClasses",
              "ajax",
              "fnServerData",
              "fnFormatNumber",
              "sServerMethod",
              "aaSorting",
              "aaSortingFixed",
              "aLengthMenu",
              "sPaginationType",
              "sAjaxSource",
              "sAjaxDataProp",
              "iStateDuration",
              "sDom",
              "bSortCellsTop",
              "iTabIndex",
              "fnStateLoadCallback",
              "fnStateSaveCallback",
              "renderer",
              "searchDelay",
              "rowId",
              ["iCookieDuration", "iStateDuration"],
              ["oSearch", "oPreviousSearch"],
              ["aoSearchCols", "aoPreSearchCols"],
              ["iDisplayLength", "_iDisplayLength"]
            ]);
            _fnMap(oSettings.oScroll, oInit, [
              ["sScrollX", "sX"],
              ["sScrollXInner", "sXInner"],
              ["sScrollY", "sY"],
              ["bScrollCollapse", "bCollapse"]
            ]);
            _fnMap(oSettings.oLanguage, oInit, "fnInfoCallback");
            _fnCallbackReg(oSettings, "aoDrawCallback", oInit.fnDrawCallback, "user");
            _fnCallbackReg(oSettings, "aoServerParams", oInit.fnServerParams, "user");
            _fnCallbackReg(oSettings, "aoStateSaveParams", oInit.fnStateSaveParams, "user");
            _fnCallbackReg(oSettings, "aoStateLoadParams", oInit.fnStateLoadParams, "user");
            _fnCallbackReg(oSettings, "aoStateLoaded", oInit.fnStateLoaded, "user");
            _fnCallbackReg(oSettings, "aoRowCallback", oInit.fnRowCallback, "user");
            _fnCallbackReg(oSettings, "aoRowCreatedCallback", oInit.fnCreatedRow, "user");
            _fnCallbackReg(oSettings, "aoHeaderCallback", oInit.fnHeaderCallback, "user");
            _fnCallbackReg(oSettings, "aoFooterCallback", oInit.fnFooterCallback, "user");
            _fnCallbackReg(oSettings, "aoInitComplete", oInit.fnInitComplete, "user");
            _fnCallbackReg(oSettings, "aoPreDrawCallback", oInit.fnPreDrawCallback, "user");
            oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);
            _fnBrowserDetect(oSettings);
            var oClasses = oSettings.oClasses;
            $3.extend(oClasses, DataTable.ext.classes, oInit.oClasses);
            $this.addClass(oClasses.sTable);
            if (oSettings.iInitDisplayStart === undefined2) {
              oSettings.iInitDisplayStart = oInit.iDisplayStart;
              oSettings._iDisplayStart = oInit.iDisplayStart;
            }
            if (oInit.iDeferLoading !== null) {
              oSettings.bDeferLoading = true;
              var tmp = Array.isArray(oInit.iDeferLoading);
              oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
              oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
            }
            var oLanguage = oSettings.oLanguage;
            $3.extend(true, oLanguage, oInit.oLanguage);
            if (oLanguage.sUrl) {
              $3.ajax({
                dataType: "json",
                url: oLanguage.sUrl,
                success: function(json) {
                  _fnCamelToHungarian(defaults.oLanguage, json);
                  _fnLanguageCompat(json);
                  $3.extend(true, oLanguage, json, oSettings.oInit.oLanguage);
                  _fnCallbackFire(oSettings, null, "i18n", [oSettings]);
                  _fnInitialise(oSettings);
                },
                error: function() {
                  _fnInitialise(oSettings);
                }
              });
              bInitHandedOff = true;
            } else {
              _fnCallbackFire(oSettings, null, "i18n", [oSettings]);
            }
            if (oInit.asStripeClasses === null) {
              oSettings.asStripeClasses = [
                oClasses.sStripeOdd,
                oClasses.sStripeEven
              ];
            }
            var stripeClasses = oSettings.asStripeClasses;
            var rowOne = $this.children("tbody").find("tr").eq(0);
            if ($3.inArray(true, $3.map(stripeClasses, function(el, i5) {
              return rowOne.hasClass(el);
            })) !== -1) {
              $3("tbody tr", this).removeClass(stripeClasses.join(" "));
              oSettings.asDestroyStripes = stripeClasses.slice();
            }
            var anThs = [];
            var aoColumnsInit;
            var nThead = this.getElementsByTagName("thead");
            if (nThead.length !== 0) {
              _fnDetectHeader(oSettings.aoHeader, nThead[0]);
              anThs = _fnGetUniqueThs(oSettings);
            }
            if (oInit.aoColumns === null) {
              aoColumnsInit = [];
              for (i4 = 0, iLen = anThs.length; i4 < iLen; i4++) {
                aoColumnsInit.push(null);
              }
            } else {
              aoColumnsInit = oInit.aoColumns;
            }
            for (i4 = 0, iLen = aoColumnsInit.length; i4 < iLen; i4++) {
              _fnAddColumn(oSettings, anThs ? anThs[i4] : null);
            }
            _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function(iCol, oDef) {
              _fnColumnOptions(oSettings, iCol, oDef);
            });
            if (rowOne.length) {
              var a3 = function(cell, name) {
                return cell.getAttribute("data-" + name) !== null ? name : null;
              };
              $3(rowOne[0]).children("th, td").each(function(i5, cell) {
                var col = oSettings.aoColumns[i5];
                if (col.mData === i5) {
                  var sort = a3(cell, "sort") || a3(cell, "order");
                  var filter = a3(cell, "filter") || a3(cell, "search");
                  if (sort !== null || filter !== null) {
                    col.mData = {
                      _: i5 + ".display",
                      sort: sort !== null ? i5 + ".@data-" + sort : undefined2,
                      type: sort !== null ? i5 + ".@data-" + sort : undefined2,
                      filter: filter !== null ? i5 + ".@data-" + filter : undefined2
                    };
                    _fnColumnOptions(oSettings, i5);
                  }
                }
              });
            }
            var features = oSettings.oFeatures;
            var loadedInit = function() {
              if (oInit.aaSorting === undefined2) {
                var sorting = oSettings.aaSorting;
                for (i4 = 0, iLen = sorting.length; i4 < iLen; i4++) {
                  sorting[i4][1] = oSettings.aoColumns[i4].asSorting[0];
                }
              }
              _fnSortingClasses(oSettings);
              if (features.bSort) {
                _fnCallbackReg(oSettings, "aoDrawCallback", function() {
                  if (oSettings.bSorted) {
                    var aSort = _fnSortFlatten(oSettings);
                    var sortedColumns = {};
                    $3.each(aSort, function(i5, val) {
                      sortedColumns[val.src] = val.dir;
                    });
                    _fnCallbackFire(oSettings, null, "order", [oSettings, aSort, sortedColumns]);
                    _fnSortAria(oSettings);
                  }
                });
              }
              _fnCallbackReg(oSettings, "aoDrawCallback", function() {
                if (oSettings.bSorted || _fnDataSource(oSettings) === "ssp" || features.bDeferRender) {
                  _fnSortingClasses(oSettings);
                }
              }, "sc");
              var captions = $this.children("caption").each(function() {
                this._captionSide = $3(this).css("caption-side");
              });
              var thead = $this.children("thead");
              if (thead.length === 0) {
                thead = $3("<thead/>").appendTo($this);
              }
              oSettings.nTHead = thead[0];
              var tbody = $this.children("tbody");
              if (tbody.length === 0) {
                tbody = $3("<tbody/>").insertAfter(thead);
              }
              oSettings.nTBody = tbody[0];
              var tfoot = $this.children("tfoot");
              if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "")) {
                tfoot = $3("<tfoot/>").appendTo($this);
              }
              if (tfoot.length === 0 || tfoot.children().length === 0) {
                $this.addClass(oClasses.sNoFooter);
              } else if (tfoot.length > 0) {
                oSettings.nTFoot = tfoot[0];
                _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);
              }
              if (oInit.aaData) {
                for (i4 = 0; i4 < oInit.aaData.length; i4++) {
                  _fnAddData(oSettings, oInit.aaData[i4]);
                }
              } else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == "dom") {
                _fnAddTr(oSettings, $3(oSettings.nTBody).children("tr"));
              }
              oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
              oSettings.bInitialised = true;
              if (bInitHandedOff === false) {
                _fnInitialise(oSettings);
              }
            };
            _fnCallbackReg(oSettings, "aoDrawCallback", _fnSaveState, "state_save");
            if (oInit.bStateSave) {
              features.bStateSave = true;
              _fnLoadState(oSettings, oInit, loadedInit);
            } else {
              loadedInit();
            }
          });
          _that = null;
          return this;
        };
        var _ext;
        var _Api;
        var _api_register;
        var _api_registerPlural;
        var _re_dic = {};
        var _re_new_lines = /[\r\n\u2028]/g;
        var _re_html = /<.*?>/g;
        var _re_date = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;
        var _re_escape_regex = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g");
        var _re_formatted_numeric = /['\u00A0,$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi;
        var _empty = function(d2) {
          return !d2 || d2 === true || d2 === "-" ? true : false;
        };
        var _intVal = function(s3) {
          var integer = parseInt(s3, 10);
          return !isNaN(integer) && isFinite(s3) ? integer : null;
        };
        var _numToDecimal = function(num2, decimalPoint) {
          if (!_re_dic[decimalPoint]) {
            _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), "g");
          }
          return typeof num2 === "string" && decimalPoint !== "." ? num2.replace(/\./g, "").replace(_re_dic[decimalPoint], ".") : num2;
        };
        var _isNumber = function(d2, decimalPoint, formatted) {
          var strType = typeof d2 === "string";
          if (_empty(d2)) {
            return true;
          }
          if (decimalPoint && strType) {
            d2 = _numToDecimal(d2, decimalPoint);
          }
          if (formatted && strType) {
            d2 = d2.replace(_re_formatted_numeric, "");
          }
          return !isNaN(parseFloat(d2)) && isFinite(d2);
        };
        var _isHtml = function(d2) {
          return _empty(d2) || typeof d2 === "string";
        };
        var _htmlNumeric = function(d2, decimalPoint, formatted) {
          if (_empty(d2)) {
            return true;
          }
          var html = _isHtml(d2);
          return !html ? null : _isNumber(_stripHtml(d2), decimalPoint, formatted) ? true : null;
        };
        var _pluck = function(a3, prop, prop2) {
          var out = [];
          var i4 = 0, ien = a3.length;
          if (prop2 !== undefined2) {
            for (; i4 < ien; i4++) {
              if (a3[i4] && a3[i4][prop]) {
                out.push(a3[i4][prop][prop2]);
              }
            }
          } else {
            for (; i4 < ien; i4++) {
              if (a3[i4]) {
                out.push(a3[i4][prop]);
              }
            }
          }
          return out;
        };
        var _pluck_order = function(a3, order, prop, prop2) {
          var out = [];
          var i4 = 0, ien = order.length;
          if (prop2 !== undefined2) {
            for (; i4 < ien; i4++) {
              if (a3[order[i4]][prop]) {
                out.push(a3[order[i4]][prop][prop2]);
              }
            }
          } else {
            for (; i4 < ien; i4++) {
              out.push(a3[order[i4]][prop]);
            }
          }
          return out;
        };
        var _range = function(len, start) {
          var out = [];
          var end;
          if (start === undefined2) {
            start = 0;
            end = len;
          } else {
            end = start;
            start = len;
          }
          for (var i4 = start; i4 < end; i4++) {
            out.push(i4);
          }
          return out;
        };
        var _removeEmpty = function(a3) {
          var out = [];
          for (var i4 = 0, ien = a3.length; i4 < ien; i4++) {
            if (a3[i4]) {
              out.push(a3[i4]);
            }
          }
          return out;
        };
        var _stripHtml = function(d2) {
          return d2.replace(_re_html, "");
        };
        var _areAllUnique = function(src) {
          if (src.length < 2) {
            return true;
          }
          var sorted = src.slice().sort();
          var last = sorted[0];
          for (var i4 = 1, ien = sorted.length; i4 < ien; i4++) {
            if (sorted[i4] === last) {
              return false;
            }
            last = sorted[i4];
          }
          return true;
        };
        var _unique = function(src) {
          if (_areAllUnique(src)) {
            return src.slice();
          }
          var out = [], val, i4, ien = src.length, j4, k3 = 0;
          again:
            for (i4 = 0; i4 < ien; i4++) {
              val = src[i4];
              for (j4 = 0; j4 < k3; j4++) {
                if (out[j4] === val) {
                  continue again;
                }
              }
              out.push(val);
              k3++;
            }
          return out;
        };
        var _flatten = function(out, val) {
          if (Array.isArray(val)) {
            for (var i4 = 0; i4 < val.length; i4++) {
              _flatten(out, val[i4]);
            }
          } else {
            out.push(val);
          }
          return out;
        };
        var _includes = function(search, start) {
          if (start === undefined2) {
            start = 0;
          }
          return this.indexOf(search, start) !== -1;
        };
        if (!Array.isArray) {
          Array.isArray = function(arg) {
            return Object.prototype.toString.call(arg) === "[object Array]";
          };
        }
        if (!Array.prototype.includes) {
          Array.prototype.includes = _includes;
        }
        if (!String.prototype.trim) {
          String.prototype.trim = function() {
            return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
          };
        }
        if (!String.prototype.includes) {
          String.prototype.includes = _includes;
        }
        DataTable.util = {
          throttle: function(fn, freq) {
            var frequency = freq !== undefined2 ? freq : 200, last, timer;
            return function() {
              var that = this, now = +new Date(), args = arguments;
              if (last && now < last + frequency) {
                clearTimeout(timer);
                timer = setTimeout(function() {
                  last = undefined2;
                  fn.apply(that, args);
                }, frequency);
              } else {
                last = now;
                fn.apply(that, args);
              }
            };
          },
          escapeRegex: function(val) {
            return val.replace(_re_escape_regex, "\\$1");
          },
          set: function(source) {
            if ($3.isPlainObject(source)) {
              return DataTable.util.set(source._);
            } else if (source === null) {
              return function() {
              };
            } else if (typeof source === "function") {
              return function(data, val, meta) {
                source(data, "set", val, meta);
              };
            } else if (typeof source === "string" && (source.indexOf(".") !== -1 || source.indexOf("[") !== -1 || source.indexOf("(") !== -1)) {
              var setData = function(data, val, src) {
                var a3 = _fnSplitObjNotation(src), b3;
                var aLast = a3[a3.length - 1];
                var arrayNotation, funcNotation, o2, innerSrc;
                for (var i4 = 0, iLen = a3.length - 1; i4 < iLen; i4++) {
                  if (a3[i4] === "__proto__" || a3[i4] === "constructor") {
                    throw new Error("Cannot set prototype values");
                  }
                  arrayNotation = a3[i4].match(__reArray);
                  funcNotation = a3[i4].match(__reFn);
                  if (arrayNotation) {
                    a3[i4] = a3[i4].replace(__reArray, "");
                    data[a3[i4]] = [];
                    b3 = a3.slice();
                    b3.splice(0, i4 + 1);
                    innerSrc = b3.join(".");
                    if (Array.isArray(val)) {
                      for (var j4 = 0, jLen = val.length; j4 < jLen; j4++) {
                        o2 = {};
                        setData(o2, val[j4], innerSrc);
                        data[a3[i4]].push(o2);
                      }
                    } else {
                      data[a3[i4]] = val;
                    }
                    return;
                  } else if (funcNotation) {
                    a3[i4] = a3[i4].replace(__reFn, "");
                    data = data[a3[i4]](val);
                  }
                  if (data[a3[i4]] === null || data[a3[i4]] === undefined2) {
                    data[a3[i4]] = {};
                  }
                  data = data[a3[i4]];
                }
                if (aLast.match(__reFn)) {
                  data = data[aLast.replace(__reFn, "")](val);
                } else {
                  data[aLast.replace(__reArray, "")] = val;
                }
              };
              return function(data, val) {
                return setData(data, val, source);
              };
            } else {
              return function(data, val) {
                data[source] = val;
              };
            }
          },
          get: function(source) {
            if ($3.isPlainObject(source)) {
              var o2 = {};
              $3.each(source, function(key, val) {
                if (val) {
                  o2[key] = DataTable.util.get(val);
                }
              });
              return function(data, type, row, meta) {
                var t3 = o2[type] || o2._;
                return t3 !== undefined2 ? t3(data, type, row, meta) : data;
              };
            } else if (source === null) {
              return function(data) {
                return data;
              };
            } else if (typeof source === "function") {
              return function(data, type, row, meta) {
                return source(data, type, row, meta);
              };
            } else if (typeof source === "string" && (source.indexOf(".") !== -1 || source.indexOf("[") !== -1 || source.indexOf("(") !== -1)) {
              var fetchData = function(data, type, src) {
                var arrayNotation, funcNotation, out, innerSrc;
                if (src !== "") {
                  var a3 = _fnSplitObjNotation(src);
                  for (var i4 = 0, iLen = a3.length; i4 < iLen; i4++) {
                    arrayNotation = a3[i4].match(__reArray);
                    funcNotation = a3[i4].match(__reFn);
                    if (arrayNotation) {
                      a3[i4] = a3[i4].replace(__reArray, "");
                      if (a3[i4] !== "") {
                        data = data[a3[i4]];
                      }
                      out = [];
                      a3.splice(0, i4 + 1);
                      innerSrc = a3.join(".");
                      if (Array.isArray(data)) {
                        for (var j4 = 0, jLen = data.length; j4 < jLen; j4++) {
                          out.push(fetchData(data[j4], type, innerSrc));
                        }
                      }
                      var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);
                      data = join === "" ? out : out.join(join);
                      break;
                    } else if (funcNotation) {
                      a3[i4] = a3[i4].replace(__reFn, "");
                      data = data[a3[i4]]();
                      continue;
                    }
                    if (data === null || data[a3[i4]] === undefined2) {
                      return undefined2;
                    }
                    data = data[a3[i4]];
                  }
                }
                return data;
              };
              return function(data, type) {
                return fetchData(data, type, source);
              };
            } else {
              return function(data, type) {
                return data[source];
              };
            }
          }
        };
        function _fnHungarianMap(o2) {
          var hungarian = "a aa ai ao as b fn i m o s ", match, newKey, map = {};
          $3.each(o2, function(key, val) {
            match = key.match(/^([^A-Z]+?)([A-Z])/);
            if (match && hungarian.indexOf(match[1] + " ") !== -1) {
              newKey = key.replace(match[0], match[2].toLowerCase());
              map[newKey] = key;
              if (match[1] === "o") {
                _fnHungarianMap(o2[key]);
              }
            }
          });
          o2._hungarianMap = map;
        }
        function _fnCamelToHungarian(src, user, force) {
          if (!src._hungarianMap) {
            _fnHungarianMap(src);
          }
          var hungarianKey;
          $3.each(user, function(key, val) {
            hungarianKey = src._hungarianMap[key];
            if (hungarianKey !== undefined2 && (force || user[hungarianKey] === undefined2)) {
              if (hungarianKey.charAt(0) === "o") {
                if (!user[hungarianKey]) {
                  user[hungarianKey] = {};
                }
                $3.extend(true, user[hungarianKey], user[key]);
                _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);
              } else {
                user[hungarianKey] = user[key];
              }
            }
          });
        }
        function _fnLanguageCompat(lang) {
          var defaults = DataTable.defaults.oLanguage;
          var defaultDecimal = defaults.sDecimal;
          if (defaultDecimal) {
            _addNumericSort(defaultDecimal);
          }
          if (lang) {
            var zeroRecords = lang.sZeroRecords;
            if (!lang.sEmptyTable && zeroRecords && defaults.sEmptyTable === "No data available in table") {
              _fnMap(lang, lang, "sZeroRecords", "sEmptyTable");
            }
            if (!lang.sLoadingRecords && zeroRecords && defaults.sLoadingRecords === "Loading...") {
              _fnMap(lang, lang, "sZeroRecords", "sLoadingRecords");
            }
            if (lang.sInfoThousands) {
              lang.sThousands = lang.sInfoThousands;
            }
            var decimal = lang.sDecimal;
            if (decimal && defaultDecimal !== decimal) {
              _addNumericSort(decimal);
            }
          }
        }
        var _fnCompatMap = function(o2, knew, old) {
          if (o2[knew] !== undefined2) {
            o2[old] = o2[knew];
          }
        };
        function _fnCompatOpts(init) {
          _fnCompatMap(init, "ordering", "bSort");
          _fnCompatMap(init, "orderMulti", "bSortMulti");
          _fnCompatMap(init, "orderClasses", "bSortClasses");
          _fnCompatMap(init, "orderCellsTop", "bSortCellsTop");
          _fnCompatMap(init, "order", "aaSorting");
          _fnCompatMap(init, "orderFixed", "aaSortingFixed");
          _fnCompatMap(init, "paging", "bPaginate");
          _fnCompatMap(init, "pagingType", "sPaginationType");
          _fnCompatMap(init, "pageLength", "iDisplayLength");
          _fnCompatMap(init, "searching", "bFilter");
          if (typeof init.sScrollX === "boolean") {
            init.sScrollX = init.sScrollX ? "100%" : "";
          }
          if (typeof init.scrollX === "boolean") {
            init.scrollX = init.scrollX ? "100%" : "";
          }
          var searchCols = init.aoSearchCols;
          if (searchCols) {
            for (var i4 = 0, ien = searchCols.length; i4 < ien; i4++) {
              if (searchCols[i4]) {
                _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i4]);
              }
            }
          }
        }
        function _fnCompatCols(init) {
          _fnCompatMap(init, "orderable", "bSortable");
          _fnCompatMap(init, "orderData", "aDataSort");
          _fnCompatMap(init, "orderSequence", "asSorting");
          _fnCompatMap(init, "orderDataType", "sortDataType");
          var dataSort = init.aDataSort;
          if (typeof dataSort === "number" && !Array.isArray(dataSort)) {
            init.aDataSort = [dataSort];
          }
        }
        function _fnBrowserDetect(settings) {
          if (!DataTable.__browser) {
            var browser = {};
            DataTable.__browser = browser;
            var n2 = $3("<div/>").css({
              position: "fixed",
              top: 0,
              left: $3(window2).scrollLeft() * -1,
              height: 1,
              width: 1,
              overflow: "hidden"
            }).append(
              $3("<div/>").css({
                position: "absolute",
                top: 1,
                left: 1,
                width: 100,
                overflow: "scroll"
              }).append(
                $3("<div/>").css({
                  width: "100%",
                  height: 10
                })
              )
            ).appendTo("body");
            var outer = n2.children();
            var inner = outer.children();
            browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
            browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
            browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;
            browser.bBounding = n2[0].getBoundingClientRect().width ? true : false;
            n2.remove();
          }
          $3.extend(settings.oBrowser, DataTable.__browser);
          settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
        }
        function _fnReduce(that, fn, init, start, end, inc) {
          var i4 = start, value, isSet = false;
          if (init !== undefined2) {
            value = init;
            isSet = true;
          }
          while (i4 !== end) {
            if (!that.hasOwnProperty(i4)) {
              continue;
            }
            value = isSet ? fn(value, that[i4], i4, that) : that[i4];
            isSet = true;
            i4 += inc;
          }
          return value;
        }
        function _fnAddColumn(oSettings, nTh) {
          var oDefaults = DataTable.defaults.column;
          var iCol = oSettings.aoColumns.length;
          var oCol = $3.extend({}, DataTable.models.oColumn, oDefaults, {
            "nTh": nTh ? nTh : document2.createElement("th"),
            "sTitle": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : "",
            "aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
            "mData": oDefaults.mData ? oDefaults.mData : iCol,
            idx: iCol
          });
          oSettings.aoColumns.push(oCol);
          var searchCols = oSettings.aoPreSearchCols;
          searchCols[iCol] = $3.extend({}, DataTable.models.oSearch, searchCols[iCol]);
          _fnColumnOptions(oSettings, iCol, $3(nTh).data());
        }
        function _fnColumnOptions(oSettings, iCol, oOptions) {
          var oCol = oSettings.aoColumns[iCol];
          var oClasses = oSettings.oClasses;
          var th = $3(oCol.nTh);
          if (!oCol.sWidthOrig) {
            oCol.sWidthOrig = th.attr("width") || null;
            var t3 = (th.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
            if (t3) {
              oCol.sWidthOrig = t3[1];
            }
          }
          if (oOptions !== undefined2 && oOptions !== null) {
            _fnCompatCols(oOptions);
            _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);
            if (oOptions.mDataProp !== undefined2 && !oOptions.mData) {
              oOptions.mData = oOptions.mDataProp;
            }
            if (oOptions.sType) {
              oCol._sManualType = oOptions.sType;
            }
            if (oOptions.className && !oOptions.sClass) {
              oOptions.sClass = oOptions.className;
            }
            if (oOptions.sClass) {
              th.addClass(oOptions.sClass);
            }
            var origClass = oCol.sClass;
            $3.extend(oCol, oOptions);
            _fnMap(oCol, oOptions, "sWidth", "sWidthOrig");
            if (origClass !== oCol.sClass) {
              oCol.sClass = origClass + " " + oCol.sClass;
            }
            if (oOptions.iDataSort !== undefined2) {
              oCol.aDataSort = [oOptions.iDataSort];
            }
            _fnMap(oCol, oOptions, "aDataSort");
          }
          var mDataSrc = oCol.mData;
          var mData = _fnGetObjectDataFn(mDataSrc);
          var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;
          var attrTest = function(src) {
            return typeof src === "string" && src.indexOf("@") !== -1;
          };
          oCol._bAttrSrc = $3.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));
          oCol._setter = null;
          oCol.fnGetData = function(rowData, type, meta) {
            var innerData = mData(rowData, type, undefined2, meta);
            return mRender && type ? mRender(innerData, type, rowData, meta) : innerData;
          };
          oCol.fnSetData = function(rowData, val, meta) {
            return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);
          };
          if (typeof mDataSrc !== "number") {
            oSettings._rowReadObject = true;
          }
          if (!oSettings.oFeatures.bSort) {
            oCol.bSortable = false;
            th.addClass(oClasses.sSortableNone);
          }
          var bAsc = $3.inArray("asc", oCol.asSorting) !== -1;
          var bDesc = $3.inArray("desc", oCol.asSorting) !== -1;
          if (!oCol.bSortable || !bAsc && !bDesc) {
            oCol.sSortingClass = oClasses.sSortableNone;
            oCol.sSortingClassJUI = "";
          } else if (bAsc && !bDesc) {
            oCol.sSortingClass = oClasses.sSortableAsc;
            oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
          } else if (!bAsc && bDesc) {
            oCol.sSortingClass = oClasses.sSortableDesc;
            oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
          } else {
            oCol.sSortingClass = oClasses.sSortable;
            oCol.sSortingClassJUI = oClasses.sSortJUI;
          }
        }
        function _fnAdjustColumnSizing(settings) {
          if (settings.oFeatures.bAutoWidth !== false) {
            var columns = settings.aoColumns;
            _fnCalculateColumnWidths(settings);
            for (var i4 = 0, iLen = columns.length; i4 < iLen; i4++) {
              columns[i4].nTh.style.width = columns[i4].sWidth;
            }
          }
          var scroll = settings.oScroll;
          if (scroll.sY !== "" || scroll.sX !== "") {
            _fnScrollDraw(settings);
          }
          _fnCallbackFire(settings, null, "column-sizing", [settings]);
        }
        function _fnVisibleToColumnIndex(oSettings, iMatch) {
          var aiVis = _fnGetColumns(oSettings, "bVisible");
          return typeof aiVis[iMatch] === "number" ? aiVis[iMatch] : null;
        }
        function _fnColumnIndexToVisible(oSettings, iMatch) {
          var aiVis = _fnGetColumns(oSettings, "bVisible");
          var iPos = $3.inArray(iMatch, aiVis);
          return iPos !== -1 ? iPos : null;
        }
        function _fnVisbleColumns(oSettings) {
          var vis = 0;
          $3.each(oSettings.aoColumns, function(i4, col) {
            if (col.bVisible && $3(col.nTh).css("display") !== "none") {
              vis++;
            }
          });
          return vis;
        }
        function _fnGetColumns(oSettings, sParam) {
          var a3 = [];
          $3.map(oSettings.aoColumns, function(val, i4) {
            if (val[sParam]) {
              a3.push(i4);
            }
          });
          return a3;
        }
        function _fnColumnTypes(settings) {
          var columns = settings.aoColumns;
          var data = settings.aoData;
          var types = DataTable.ext.type.detect;
          var i4, ien, j4, jen, k3, ken;
          var col, cell, detectedType, cache;
          for (i4 = 0, ien = columns.length; i4 < ien; i4++) {
            col = columns[i4];
            cache = [];
            if (!col.sType && col._sManualType) {
              col.sType = col._sManualType;
            } else if (!col.sType) {
              for (j4 = 0, jen = types.length; j4 < jen; j4++) {
                for (k3 = 0, ken = data.length; k3 < ken; k3++) {
                  if (cache[k3] === undefined2) {
                    cache[k3] = _fnGetCellData(settings, k3, i4, "type");
                  }
                  detectedType = types[j4](cache[k3], settings);
                  if (!detectedType && j4 !== types.length - 1) {
                    break;
                  }
                  if (detectedType === "html" && !_empty(cache[k3])) {
                    break;
                  }
                }
                if (detectedType) {
                  col.sType = detectedType;
                  break;
                }
              }
              if (!col.sType) {
                col.sType = "string";
              }
            }
          }
        }
        function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {
          var i4, iLen, j4, jLen, k3, kLen, def;
          var columns = oSettings.aoColumns;
          if (aoColDefs) {
            for (i4 = aoColDefs.length - 1; i4 >= 0; i4--) {
              def = aoColDefs[i4];
              var aTargets = def.target !== undefined2 ? def.target : def.targets !== undefined2 ? def.targets : def.aTargets;
              if (!Array.isArray(aTargets)) {
                aTargets = [aTargets];
              }
              for (j4 = 0, jLen = aTargets.length; j4 < jLen; j4++) {
                if (typeof aTargets[j4] === "number" && aTargets[j4] >= 0) {
                  while (columns.length <= aTargets[j4]) {
                    _fnAddColumn(oSettings);
                  }
                  fn(aTargets[j4], def);
                } else if (typeof aTargets[j4] === "number" && aTargets[j4] < 0) {
                  fn(columns.length + aTargets[j4], def);
                } else if (typeof aTargets[j4] === "string") {
                  for (k3 = 0, kLen = columns.length; k3 < kLen; k3++) {
                    if (aTargets[j4] == "_all" || $3(columns[k3].nTh).hasClass(aTargets[j4])) {
                      fn(k3, def);
                    }
                  }
                }
              }
            }
          }
          if (aoCols) {
            for (i4 = 0, iLen = aoCols.length; i4 < iLen; i4++) {
              fn(i4, aoCols[i4]);
            }
          }
        }
        function _fnAddData(oSettings, aDataIn, nTr, anTds) {
          var iRow = oSettings.aoData.length;
          var oData = $3.extend(true, {}, DataTable.models.oRow, {
            src: nTr ? "dom" : "data",
            idx: iRow
          });
          oData._aData = aDataIn;
          oSettings.aoData.push(oData);
          var nTd, sThisType;
          var columns = oSettings.aoColumns;
          for (var i4 = 0, iLen = columns.length; i4 < iLen; i4++) {
            columns[i4].sType = null;
          }
          oSettings.aiDisplayMaster.push(iRow);
          var id = oSettings.rowIdFn(aDataIn);
          if (id !== undefined2) {
            oSettings.aIds[id] = oData;
          }
          if (nTr || !oSettings.oFeatures.bDeferRender) {
            _fnCreateTr(oSettings, iRow, nTr, anTds);
          }
          return iRow;
        }
        function _fnAddTr(settings, trs) {
          var row;
          if (!(trs instanceof $3)) {
            trs = $3(trs);
          }
          return trs.map(function(i4, el) {
            row = _fnGetRowElements(settings, el);
            return _fnAddData(settings, row.data, el, row.cells);
          });
        }
        function _fnNodeToDataIndex(oSettings, n2) {
          return n2._DT_RowIndex !== undefined2 ? n2._DT_RowIndex : null;
        }
        function _fnNodeToColumnIndex(oSettings, iRow, n2) {
          return $3.inArray(n2, oSettings.aoData[iRow].anCells);
        }
        function _fnGetCellData(settings, rowIdx, colIdx, type) {
          if (type === "search") {
            type = "filter";
          } else if (type === "order") {
            type = "sort";
          }
          var draw = settings.iDraw;
          var col = settings.aoColumns[colIdx];
          var rowData = settings.aoData[rowIdx]._aData;
          var defaultContent = col.sDefaultContent;
          var cellData = col.fnGetData(rowData, type, {
            settings,
            row: rowIdx,
            col: colIdx
          });
          if (cellData === undefined2) {
            if (settings.iDrawError != draw && defaultContent === null) {
              _fnLog(settings, 0, "Requested unknown parameter " + (typeof col.mData == "function" ? "{function}" : "'" + col.mData + "'") + " for row " + rowIdx + ", column " + colIdx, 4);
              settings.iDrawError = draw;
            }
            return defaultContent;
          }
          if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined2) {
            cellData = defaultContent;
          } else if (typeof cellData === "function") {
            return cellData.call(rowData);
          }
          if (cellData === null && type === "display") {
            return "";
          }
          if (type === "filter") {
            var fomatters = DataTable.ext.type.search;
            if (fomatters[col.sType]) {
              cellData = fomatters[col.sType](cellData);
            }
          }
          return cellData;
        }
        function _fnSetCellData(settings, rowIdx, colIdx, val) {
          var col = settings.aoColumns[colIdx];
          var rowData = settings.aoData[rowIdx]._aData;
          col.fnSetData(rowData, val, {
            settings,
            row: rowIdx,
            col: colIdx
          });
        }
        var __reArray = /\[.*?\]$/;
        var __reFn = /\(\)$/;
        function _fnSplitObjNotation(str) {
          return $3.map(str.match(/(\\.|[^\.])+/g) || [""], function(s3) {
            return s3.replace(/\\\./g, ".");
          });
        }
        var _fnGetObjectDataFn = DataTable.util.get;
        var _fnSetObjectDataFn = DataTable.util.set;
        function _fnGetDataMaster(settings) {
          return _pluck(settings.aoData, "_aData");
        }
        function _fnClearTable(settings) {
          settings.aoData.length = 0;
          settings.aiDisplayMaster.length = 0;
          settings.aiDisplay.length = 0;
          settings.aIds = {};
        }
        function _fnDeleteIndex(a3, iTarget, splice) {
          var iTargetIndex = -1;
          for (var i4 = 0, iLen = a3.length; i4 < iLen; i4++) {
            if (a3[i4] == iTarget) {
              iTargetIndex = i4;
            } else if (a3[i4] > iTarget) {
              a3[i4]--;
            }
          }
          if (iTargetIndex != -1 && splice === undefined2) {
            a3.splice(iTargetIndex, 1);
          }
        }
        function _fnInvalidate(settings, rowIdx, src, colIdx) {
          var row = settings.aoData[rowIdx];
          var i4, ien;
          var cellWrite = function(cell, col) {
            while (cell.childNodes.length) {
              cell.removeChild(cell.firstChild);
            }
            cell.innerHTML = _fnGetCellData(settings, rowIdx, col, "display");
          };
          if (src === "dom" || (!src || src === "auto") && row.src === "dom") {
            row._aData = _fnGetRowElements(
              settings,
              row,
              colIdx,
              colIdx === undefined2 ? undefined2 : row._aData
            ).data;
          } else {
            var cells = row.anCells;
            if (cells) {
              if (colIdx !== undefined2) {
                cellWrite(cells[colIdx], colIdx);
              } else {
                for (i4 = 0, ien = cells.length; i4 < ien; i4++) {
                  cellWrite(cells[i4], i4);
                }
              }
            }
          }
          row._aSortData = null;
          row._aFilterData = null;
          var cols = settings.aoColumns;
          if (colIdx !== undefined2) {
            cols[colIdx].sType = null;
          } else {
            for (i4 = 0, ien = cols.length; i4 < ien; i4++) {
              cols[i4].sType = null;
            }
            _fnRowAttributes(settings, row);
          }
        }
        function _fnGetRowElements(settings, row, colIdx, d2) {
          var tds = [], td = row.firstChild, name, col, o2, i4 = 0, contents, columns = settings.aoColumns, objectRead = settings._rowReadObject;
          d2 = d2 !== undefined2 ? d2 : objectRead ? {} : [];
          var attr = function(str, td2) {
            if (typeof str === "string") {
              var idx = str.indexOf("@");
              if (idx !== -1) {
                var attr2 = str.substring(idx + 1);
                var setter = _fnSetObjectDataFn(str);
                setter(d2, td2.getAttribute(attr2));
              }
            }
          };
          var cellProcess = function(cell) {
            if (colIdx === undefined2 || colIdx === i4) {
              col = columns[i4];
              contents = cell.innerHTML.trim();
              if (col && col._bAttrSrc) {
                var setter = _fnSetObjectDataFn(col.mData._);
                setter(d2, contents);
                attr(col.mData.sort, cell);
                attr(col.mData.type, cell);
                attr(col.mData.filter, cell);
              } else {
                if (objectRead) {
                  if (!col._setter) {
                    col._setter = _fnSetObjectDataFn(col.mData);
                  }
                  col._setter(d2, contents);
                } else {
                  d2[i4] = contents;
                }
              }
            }
            i4++;
          };
          if (td) {
            while (td) {
              name = td.nodeName.toUpperCase();
              if (name == "TD" || name == "TH") {
                cellProcess(td);
                tds.push(td);
              }
              td = td.nextSibling;
            }
          } else {
            tds = row.anCells;
            for (var j4 = 0, jen = tds.length; j4 < jen; j4++) {
              cellProcess(tds[j4]);
            }
          }
          var rowNode = row.firstChild ? row : row.nTr;
          if (rowNode) {
            var id = rowNode.getAttribute("id");
            if (id) {
              _fnSetObjectDataFn(settings.rowId)(d2, id);
            }
          }
          return {
            data: d2,
            cells: tds
          };
        }
        function _fnCreateTr(oSettings, iRow, nTrIn, anTds) {
          var row = oSettings.aoData[iRow], rowData = row._aData, cells = [], nTr, nTd, oCol, i4, iLen, create;
          if (row.nTr === null) {
            nTr = nTrIn || document2.createElement("tr");
            row.nTr = nTr;
            row.anCells = cells;
            nTr._DT_RowIndex = iRow;
            _fnRowAttributes(oSettings, row);
            for (i4 = 0, iLen = oSettings.aoColumns.length; i4 < iLen; i4++) {
              oCol = oSettings.aoColumns[i4];
              create = nTrIn ? false : true;
              nTd = create ? document2.createElement(oCol.sCellType) : anTds[i4];
              nTd._DT_CellIndex = {
                row: iRow,
                column: i4
              };
              cells.push(nTd);
              if (create || (oCol.mRender || oCol.mData !== i4) && (!$3.isPlainObject(oCol.mData) || oCol.mData._ !== i4 + ".display")) {
                nTd.innerHTML = _fnGetCellData(oSettings, iRow, i4, "display");
              }
              if (oCol.sClass) {
                nTd.className += " " + oCol.sClass;
              }
              if (oCol.bVisible && !nTrIn) {
                nTr.appendChild(nTd);
              } else if (!oCol.bVisible && nTrIn) {
                nTd.parentNode.removeChild(nTd);
              }
              if (oCol.fnCreatedCell) {
                oCol.fnCreatedCell.call(
                  oSettings.oInstance,
                  nTd,
                  _fnGetCellData(oSettings, iRow, i4),
                  rowData,
                  iRow,
                  i4
                );
              }
            }
            _fnCallbackFire(oSettings, "aoRowCreatedCallback", null, [nTr, rowData, iRow, cells]);
          }
        }
        function _fnRowAttributes(settings, row) {
          var tr = row.nTr;
          var data = row._aData;
          if (tr) {
            var id = settings.rowIdFn(data);
            if (id) {
              tr.id = id;
            }
            if (data.DT_RowClass) {
              var a3 = data.DT_RowClass.split(" ");
              row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a3)) : a3;
              $3(tr).removeClass(row.__rowc.join(" ")).addClass(data.DT_RowClass);
            }
            if (data.DT_RowAttr) {
              $3(tr).attr(data.DT_RowAttr);
            }
            if (data.DT_RowData) {
              $3(tr).data(data.DT_RowData);
            }
          }
        }
        function _fnBuildHead(oSettings) {
          var i4, ien, cell, row, column;
          var thead = oSettings.nTHead;
          var tfoot = oSettings.nTFoot;
          var createHeader = $3("th, td", thead).length === 0;
          var classes = oSettings.oClasses;
          var columns = oSettings.aoColumns;
          if (createHeader) {
            row = $3("<tr/>").appendTo(thead);
          }
          for (i4 = 0, ien = columns.length; i4 < ien; i4++) {
            column = columns[i4];
            cell = $3(column.nTh).addClass(column.sClass);
            if (createHeader) {
              cell.appendTo(row);
            }
            if (oSettings.oFeatures.bSort) {
              cell.addClass(column.sSortingClass);
              if (column.bSortable !== false) {
                cell.attr("tabindex", oSettings.iTabIndex).attr("aria-controls", oSettings.sTableId);
                _fnSortAttachListener(oSettings, column.nTh, i4);
              }
            }
            if (column.sTitle != cell[0].innerHTML) {
              cell.html(column.sTitle);
            }
            _fnRenderer(oSettings, "header")(
              oSettings,
              cell,
              column,
              classes
            );
          }
          if (createHeader) {
            _fnDetectHeader(oSettings.aoHeader, thead);
          }
          $3(thead).children("tr").children("th, td").addClass(classes.sHeaderTH);
          $3(tfoot).children("tr").children("th, td").addClass(classes.sFooterTH);
          if (tfoot !== null) {
            var cells = oSettings.aoFooter[0];
            for (i4 = 0, ien = cells.length; i4 < ien; i4++) {
              column = columns[i4];
              column.nTf = cells[i4].cell;
              if (column.sClass) {
                $3(column.nTf).addClass(column.sClass);
              }
            }
          }
        }
        function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {
          var i4, iLen, j4, jLen, k3, kLen, n2, nLocalTr;
          var aoLocal = [];
          var aApplied = [];
          var iColumns = oSettings.aoColumns.length;
          var iRowspan, iColspan;
          if (!aoSource) {
            return;
          }
          if (bIncludeHidden === undefined2) {
            bIncludeHidden = false;
          }
          for (i4 = 0, iLen = aoSource.length; i4 < iLen; i4++) {
            aoLocal[i4] = aoSource[i4].slice();
            aoLocal[i4].nTr = aoSource[i4].nTr;
            for (j4 = iColumns - 1; j4 >= 0; j4--) {
              if (!oSettings.aoColumns[j4].bVisible && !bIncludeHidden) {
                aoLocal[i4].splice(j4, 1);
              }
            }
            aApplied.push([]);
          }
          for (i4 = 0, iLen = aoLocal.length; i4 < iLen; i4++) {
            nLocalTr = aoLocal[i4].nTr;
            if (nLocalTr) {
              while (n2 = nLocalTr.firstChild) {
                nLocalTr.removeChild(n2);
              }
            }
            for (j4 = 0, jLen = aoLocal[i4].length; j4 < jLen; j4++) {
              iRowspan = 1;
              iColspan = 1;
              if (aApplied[i4][j4] === undefined2) {
                nLocalTr.appendChild(aoLocal[i4][j4].cell);
                aApplied[i4][j4] = 1;
                while (aoLocal[i4 + iRowspan] !== undefined2 && aoLocal[i4][j4].cell == aoLocal[i4 + iRowspan][j4].cell) {
                  aApplied[i4 + iRowspan][j4] = 1;
                  iRowspan++;
                }
                while (aoLocal[i4][j4 + iColspan] !== undefined2 && aoLocal[i4][j4].cell == aoLocal[i4][j4 + iColspan].cell) {
                  for (k3 = 0; k3 < iRowspan; k3++) {
                    aApplied[i4 + k3][j4 + iColspan] = 1;
                  }
                  iColspan++;
                }
                $3(aoLocal[i4][j4].cell).attr("rowspan", iRowspan).attr("colspan", iColspan);
              }
            }
          }
        }
        function _fnDraw(oSettings, ajaxComplete) {
          _fnStart(oSettings);
          var aPreDraw = _fnCallbackFire(oSettings, "aoPreDrawCallback", "preDraw", [oSettings]);
          if ($3.inArray(false, aPreDraw) !== -1) {
            _fnProcessingDisplay(oSettings, false);
            return;
          }
          var anRows = [];
          var iRowCount = 0;
          var asStripeClasses = oSettings.asStripeClasses;
          var iStripes = asStripeClasses.length;
          var oLang = oSettings.oLanguage;
          var bServerSide = _fnDataSource(oSettings) == "ssp";
          var aiDisplay = oSettings.aiDisplay;
          var iDisplayStart = oSettings._iDisplayStart;
          var iDisplayEnd = oSettings.fnDisplayEnd();
          oSettings.bDrawing = true;
          if (oSettings.bDeferLoading) {
            oSettings.bDeferLoading = false;
            oSettings.iDraw++;
            _fnProcessingDisplay(oSettings, false);
          } else if (!bServerSide) {
            oSettings.iDraw++;
          } else if (!oSettings.bDestroying && !ajaxComplete) {
            _fnAjaxUpdate(oSettings);
            return;
          }
          if (aiDisplay.length !== 0) {
            var iStart = bServerSide ? 0 : iDisplayStart;
            var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
            for (var j4 = iStart; j4 < iEnd; j4++) {
              var iDataIndex = aiDisplay[j4];
              var aoData = oSettings.aoData[iDataIndex];
              if (aoData.nTr === null) {
                _fnCreateTr(oSettings, iDataIndex);
              }
              var nRow = aoData.nTr;
              if (iStripes !== 0) {
                var sStripe = asStripeClasses[iRowCount % iStripes];
                if (aoData._sRowStripe != sStripe) {
                  $3(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);
                  aoData._sRowStripe = sStripe;
                }
              }
              _fnCallbackFire(
                oSettings,
                "aoRowCallback",
                null,
                [nRow, aoData._aData, iRowCount, j4, iDataIndex]
              );
              anRows.push(nRow);
              iRowCount++;
            }
          } else {
            var sZero = oLang.sZeroRecords;
            if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == "ajax") {
              sZero = oLang.sLoadingRecords;
            } else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {
              sZero = oLang.sEmptyTable;
            }
            anRows[0] = $3("<tr/>", { "class": iStripes ? asStripeClasses[0] : "" }).append($3("<td />", {
              "valign": "top",
              "colSpan": _fnVisbleColumns(oSettings),
              "class": oSettings.oClasses.sRowEmpty
            }).html(sZero))[0];
          }
          _fnCallbackFire(oSettings, "aoHeaderCallback", "header", [
            $3(oSettings.nTHead).children("tr")[0],
            _fnGetDataMaster(oSettings),
            iDisplayStart,
            iDisplayEnd,
            aiDisplay
          ]);
          _fnCallbackFire(oSettings, "aoFooterCallback", "footer", [
            $3(oSettings.nTFoot).children("tr")[0],
            _fnGetDataMaster(oSettings),
            iDisplayStart,
            iDisplayEnd,
            aiDisplay
          ]);
          var body = $3(oSettings.nTBody);
          body.children().detach();
          body.append($3(anRows));
          _fnCallbackFire(oSettings, "aoDrawCallback", "draw", [oSettings]);
          oSettings.bSorted = false;
          oSettings.bFiltered = false;
          oSettings.bDrawing = false;
        }
        function _fnReDraw(settings, holdPosition) {
          var features = settings.oFeatures, sort = features.bSort, filter = features.bFilter;
          if (sort) {
            _fnSort(settings);
          }
          if (filter) {
            _fnFilterComplete(settings, settings.oPreviousSearch);
          } else {
            settings.aiDisplay = settings.aiDisplayMaster.slice();
          }
          if (holdPosition !== true) {
            settings._iDisplayStart = 0;
          }
          settings._drawHold = holdPosition;
          _fnDraw(settings);
          settings._drawHold = false;
        }
        function _fnAddOptionsHtml(oSettings) {
          var classes = oSettings.oClasses;
          var table = $3(oSettings.nTable);
          var holding = $3("<div/>").insertBefore(table);
          var features = oSettings.oFeatures;
          var insert = $3("<div/>", {
            id: oSettings.sTableId + "_wrapper",
            "class": classes.sWrapper + (oSettings.nTFoot ? "" : " " + classes.sNoFooter)
          });
          oSettings.nHolding = holding[0];
          oSettings.nTableWrapper = insert[0];
          oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
          var aDom = oSettings.sDom.split("");
          var featureNode, cOption, nNewNode, cNext, sAttr, j4;
          for (var i4 = 0; i4 < aDom.length; i4++) {
            featureNode = null;
            cOption = aDom[i4];
            if (cOption == "<") {
              nNewNode = $3("<div/>")[0];
              cNext = aDom[i4 + 1];
              if (cNext == "'" || cNext == '"') {
                sAttr = "";
                j4 = 2;
                while (aDom[i4 + j4] != cNext) {
                  sAttr += aDom[i4 + j4];
                  j4++;
                }
                if (sAttr == "H") {
                  sAttr = classes.sJUIHeader;
                } else if (sAttr == "F") {
                  sAttr = classes.sJUIFooter;
                }
                if (sAttr.indexOf(".") != -1) {
                  var aSplit = sAttr.split(".");
                  nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);
                  nNewNode.className = aSplit[1];
                } else if (sAttr.charAt(0) == "#") {
                  nNewNode.id = sAttr.substr(1, sAttr.length - 1);
                } else {
                  nNewNode.className = sAttr;
                }
                i4 += j4;
              }
              insert.append(nNewNode);
              insert = $3(nNewNode);
            } else if (cOption == ">") {
              insert = insert.parent();
            } else if (cOption == "l" && features.bPaginate && features.bLengthChange) {
              featureNode = _fnFeatureHtmlLength(oSettings);
            } else if (cOption == "f" && features.bFilter) {
              featureNode = _fnFeatureHtmlFilter(oSettings);
            } else if (cOption == "r" && features.bProcessing) {
              featureNode = _fnFeatureHtmlProcessing(oSettings);
            } else if (cOption == "t") {
              featureNode = _fnFeatureHtmlTable(oSettings);
            } else if (cOption == "i" && features.bInfo) {
              featureNode = _fnFeatureHtmlInfo(oSettings);
            } else if (cOption == "p" && features.bPaginate) {
              featureNode = _fnFeatureHtmlPaginate(oSettings);
            } else if (DataTable.ext.feature.length !== 0) {
              var aoFeatures = DataTable.ext.feature;
              for (var k3 = 0, kLen = aoFeatures.length; k3 < kLen; k3++) {
                if (cOption == aoFeatures[k3].cFeature) {
                  featureNode = aoFeatures[k3].fnInit(oSettings);
                  break;
                }
              }
            }
            if (featureNode) {
              var aanFeatures = oSettings.aanFeatures;
              if (!aanFeatures[cOption]) {
                aanFeatures[cOption] = [];
              }
              aanFeatures[cOption].push(featureNode);
              insert.append(featureNode);
            }
          }
          holding.replaceWith(insert);
          oSettings.nHolding = null;
        }
        function _fnDetectHeader(aLayout, nThead) {
          var nTrs = $3(nThead).children("tr");
          var nTr, nCell;
          var i4, k3, l3, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
          var bUnique;
          var fnShiftCol = function(a3, i5, j4) {
            var k4 = a3[i5];
            while (k4[j4]) {
              j4++;
            }
            return j4;
          };
          aLayout.splice(0, aLayout.length);
          for (i4 = 0, iLen = nTrs.length; i4 < iLen; i4++) {
            aLayout.push([]);
          }
          for (i4 = 0, iLen = nTrs.length; i4 < iLen; i4++) {
            nTr = nTrs[i4];
            iColumn = 0;
            nCell = nTr.firstChild;
            while (nCell) {
              if (nCell.nodeName.toUpperCase() == "TD" || nCell.nodeName.toUpperCase() == "TH") {
                iColspan = nCell.getAttribute("colspan") * 1;
                iRowspan = nCell.getAttribute("rowspan") * 1;
                iColspan = !iColspan || iColspan === 0 || iColspan === 1 ? 1 : iColspan;
                iRowspan = !iRowspan || iRowspan === 0 || iRowspan === 1 ? 1 : iRowspan;
                iColShifted = fnShiftCol(aLayout, i4, iColumn);
                bUnique = iColspan === 1 ? true : false;
                for (l3 = 0; l3 < iColspan; l3++) {
                  for (k3 = 0; k3 < iRowspan; k3++) {
                    aLayout[i4 + k3][iColShifted + l3] = {
                      "cell": nCell,
                      "unique": bUnique
                    };
                    aLayout[i4 + k3].nTr = nTr;
                  }
                }
              }
              nCell = nCell.nextSibling;
            }
          }
        }
        function _fnGetUniqueThs(oSettings, nHeader, aLayout) {
          var aReturn = [];
          if (!aLayout) {
            aLayout = oSettings.aoHeader;
            if (nHeader) {
              aLayout = [];
              _fnDetectHeader(aLayout, nHeader);
            }
          }
          for (var i4 = 0, iLen = aLayout.length; i4 < iLen; i4++) {
            for (var j4 = 0, jLen = aLayout[i4].length; j4 < jLen; j4++) {
              if (aLayout[i4][j4].unique && (!aReturn[j4] || !oSettings.bSortCellsTop)) {
                aReturn[j4] = aLayout[i4][j4].cell;
              }
            }
          }
          return aReturn;
        }
        function _fnStart(oSettings) {
          var bServerSide = _fnDataSource(oSettings) == "ssp";
          var iInitDisplayStart = oSettings.iInitDisplayStart;
          if (iInitDisplayStart !== undefined2 && iInitDisplayStart !== -1) {
            oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;
            oSettings.iInitDisplayStart = -1;
          }
        }
        function _fnBuildAjax(oSettings, data, fn) {
          _fnCallbackFire(oSettings, "aoServerParams", "serverParams", [data]);
          if (data && Array.isArray(data)) {
            var tmp = {};
            var rbracket = /(.*?)\[\]$/;
            $3.each(data, function(key, val) {
              var match = val.name.match(rbracket);
              if (match) {
                var name = match[0];
                if (!tmp[name]) {
                  tmp[name] = [];
                }
                tmp[name].push(val.value);
              } else {
                tmp[val.name] = val.value;
              }
            });
            data = tmp;
          }
          var ajaxData;
          var ajax = oSettings.ajax;
          var instance = oSettings.oInstance;
          var callback = function(json) {
            var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;
            if (json === null || typeof status === "number" && status == 204) {
              json = {};
              _fnAjaxDataSrc(oSettings, json, []);
            }
            var error2 = json.error || json.sError;
            if (error2) {
              _fnLog(oSettings, 0, error2);
            }
            oSettings.json = json;
            _fnCallbackFire(oSettings, null, "xhr", [oSettings, json, oSettings.jqXHR]);
            fn(json);
          };
          if ($3.isPlainObject(ajax) && ajax.data) {
            ajaxData = ajax.data;
            var newData = typeof ajaxData === "function" ? ajaxData(data, oSettings) : ajaxData;
            data = typeof ajaxData === "function" && newData ? newData : $3.extend(true, data, newData);
            delete ajax.data;
          }
          var baseAjax = {
            "data": data,
            "success": callback,
            "dataType": "json",
            "cache": false,
            "type": oSettings.sServerMethod,
            "error": function(xhr, error2, thrown) {
              var ret = _fnCallbackFire(oSettings, null, "xhr", [oSettings, null, oSettings.jqXHR]);
              if ($3.inArray(true, ret) === -1) {
                if (error2 == "parsererror") {
                  _fnLog(oSettings, 0, "Invalid JSON response", 1);
                } else if (xhr.readyState === 4) {
                  _fnLog(oSettings, 0, "Ajax error", 7);
                }
              }
              _fnProcessingDisplay(oSettings, false);
            }
          };
          oSettings.oAjaxData = data;
          _fnCallbackFire(oSettings, null, "preXhr", [oSettings, data]);
          if (oSettings.fnServerData) {
            oSettings.fnServerData.call(
              instance,
              oSettings.sAjaxSource,
              $3.map(data, function(val, key) {
                return { name: key, value: val };
              }),
              callback,
              oSettings
            );
          } else if (oSettings.sAjaxSource || typeof ajax === "string") {
            oSettings.jqXHR = $3.ajax($3.extend(baseAjax, {
              url: ajax || oSettings.sAjaxSource
            }));
          } else if (typeof ajax === "function") {
            oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);
          } else {
            oSettings.jqXHR = $3.ajax($3.extend(baseAjax, ajax));
            ajax.data = ajaxData;
          }
        }
        function _fnAjaxUpdate(settings) {
          settings.iDraw++;
          _fnProcessingDisplay(settings, true);
          _fnBuildAjax(
            settings,
            _fnAjaxParameters(settings),
            function(json) {
              _fnAjaxUpdateDraw(settings, json);
            }
          );
        }
        function _fnAjaxParameters(settings) {
          var columns = settings.aoColumns, columnCount = columns.length, features = settings.oFeatures, preSearch = settings.oPreviousSearch, preColSearch = settings.aoPreSearchCols, i4, data = [], dataProp, column, columnSearch, sort = _fnSortFlatten(settings), displayStart = settings._iDisplayStart, displayLength = features.bPaginate !== false ? settings._iDisplayLength : -1;
          var param = function(name, value) {
            data.push({ "name": name, "value": value });
          };
          param("sEcho", settings.iDraw);
          param("iColumns", columnCount);
          param("sColumns", _pluck(columns, "sName").join(","));
          param("iDisplayStart", displayStart);
          param("iDisplayLength", displayLength);
          var d2 = {
            draw: settings.iDraw,
            columns: [],
            order: [],
            start: displayStart,
            length: displayLength,
            search: {
              value: preSearch.sSearch,
              regex: preSearch.bRegex
            }
          };
          for (i4 = 0; i4 < columnCount; i4++) {
            column = columns[i4];
            columnSearch = preColSearch[i4];
            dataProp = typeof column.mData == "function" ? "function" : column.mData;
            d2.columns.push({
              data: dataProp,
              name: column.sName,
              searchable: column.bSearchable,
              orderable: column.bSortable,
              search: {
                value: columnSearch.sSearch,
                regex: columnSearch.bRegex
              }
            });
            param("mDataProp_" + i4, dataProp);
            if (features.bFilter) {
              param("sSearch_" + i4, columnSearch.sSearch);
              param("bRegex_" + i4, columnSearch.bRegex);
              param("bSearchable_" + i4, column.bSearchable);
            }
            if (features.bSort) {
              param("bSortable_" + i4, column.bSortable);
            }
          }
          if (features.bFilter) {
            param("sSearch", preSearch.sSearch);
            param("bRegex", preSearch.bRegex);
          }
          if (features.bSort) {
            $3.each(sort, function(i5, val) {
              d2.order.push({ column: val.col, dir: val.dir });
              param("iSortCol_" + i5, val.col);
              param("sSortDir_" + i5, val.dir);
            });
            param("iSortingCols", sort.length);
          }
          var legacy = DataTable.ext.legacy.ajax;
          if (legacy === null) {
            return settings.sAjaxSource ? data : d2;
          }
          return legacy ? data : d2;
        }
        function _fnAjaxUpdateDraw(settings, json) {
          var compat = function(old, modern) {
            return json[old] !== undefined2 ? json[old] : json[modern];
          };
          var data = _fnAjaxDataSrc(settings, json);
          var draw = compat("sEcho", "draw");
          var recordsTotal = compat("iTotalRecords", "recordsTotal");
          var recordsFiltered = compat("iTotalDisplayRecords", "recordsFiltered");
          if (draw !== undefined2) {
            if (draw * 1 < settings.iDraw) {
              return;
            }
            settings.iDraw = draw * 1;
          }
          if (!data) {
            data = [];
          }
          _fnClearTable(settings);
          settings._iRecordsTotal = parseInt(recordsTotal, 10);
          settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
          for (var i4 = 0, ien = data.length; i4 < ien; i4++) {
            _fnAddData(settings, data[i4]);
          }
          settings.aiDisplay = settings.aiDisplayMaster.slice();
          _fnDraw(settings, true);
          if (!settings._bInitComplete) {
            _fnInitComplete(settings, json);
          }
          _fnProcessingDisplay(settings, false);
        }
        function _fnAjaxDataSrc(oSettings, json, write) {
          var dataSrc = $3.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined2 ? oSettings.ajax.dataSrc : oSettings.sAjaxDataProp;
          if (!write) {
            if (dataSrc === "data") {
              return json.aaData || json[dataSrc];
            }
            return dataSrc !== "" ? _fnGetObjectDataFn(dataSrc)(json) : json;
          }
          _fnSetObjectDataFn(dataSrc)(json, write);
        }
        function _fnFeatureHtmlFilter(settings) {
          var classes = settings.oClasses;
          var tableId = settings.sTableId;
          var language = settings.oLanguage;
          var previousSearch = settings.oPreviousSearch;
          var features = settings.aanFeatures;
          var input = '<input type="search" class="' + classes.sFilterInput + '"/>';
          var str = language.sSearch;
          str = str.match(/_INPUT_/) ? str.replace("_INPUT_", input) : str + input;
          var filter = $3("<div/>", {
            "id": !features.f ? tableId + "_filter" : null,
            "class": classes.sFilter
          }).append($3("<label/>").append(str));
          var searchFn = function(event2) {
            var n2 = features.f;
            var val = !this.value ? "" : this.value;
            if (previousSearch.return && event2.key !== "Enter") {
              return;
            }
            if (val != previousSearch.sSearch) {
              _fnFilterComplete(settings, {
                "sSearch": val,
                "bRegex": previousSearch.bRegex,
                "bSmart": previousSearch.bSmart,
                "bCaseInsensitive": previousSearch.bCaseInsensitive,
                "return": previousSearch.return
              });
              settings._iDisplayStart = 0;
              _fnDraw(settings);
            }
          };
          var searchDelay = settings.searchDelay !== null ? settings.searchDelay : _fnDataSource(settings) === "ssp" ? 400 : 0;
          var jqFilter = $3("input", filter).val(previousSearch.sSearch).attr("placeholder", language.sSearchPlaceholder).on(
            "keyup.DT search.DT input.DT paste.DT cut.DT",
            searchDelay ? _fnThrottle(searchFn, searchDelay) : searchFn
          ).on("mouseup", function(e3) {
            setTimeout(function() {
              searchFn.call(jqFilter[0], e3);
            }, 10);
          }).on("keypress.DT", function(e3) {
            if (e3.keyCode == 13) {
              return false;
            }
          }).attr("aria-controls", tableId);
          $3(settings.nTable).on("search.dt.DT", function(ev, s3) {
            if (settings === s3) {
              try {
                if (jqFilter[0] !== document2.activeElement) {
                  jqFilter.val(previousSearch.sSearch);
                }
              } catch (e3) {
              }
            }
          });
          return filter[0];
        }
        function _fnFilterComplete(oSettings, oInput, iForce) {
          var oPrevSearch = oSettings.oPreviousSearch;
          var aoPrevSearch = oSettings.aoPreSearchCols;
          var fnSaveFilter = function(oFilter) {
            oPrevSearch.sSearch = oFilter.sSearch;
            oPrevSearch.bRegex = oFilter.bRegex;
            oPrevSearch.bSmart = oFilter.bSmart;
            oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
            oPrevSearch.return = oFilter.return;
          };
          var fnRegex = function(o2) {
            return o2.bEscapeRegex !== undefined2 ? !o2.bEscapeRegex : o2.bRegex;
          };
          _fnColumnTypes(oSettings);
          if (_fnDataSource(oSettings) != "ssp") {
            _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return);
            fnSaveFilter(oInput);
            for (var i4 = 0; i4 < aoPrevSearch.length; i4++) {
              _fnFilterColumn(
                oSettings,
                aoPrevSearch[i4].sSearch,
                i4,
                fnRegex(aoPrevSearch[i4]),
                aoPrevSearch[i4].bSmart,
                aoPrevSearch[i4].bCaseInsensitive
              );
            }
            _fnFilterCustom(oSettings);
          } else {
            fnSaveFilter(oInput);
          }
          oSettings.bFiltered = true;
          _fnCallbackFire(oSettings, null, "search", [oSettings]);
        }
        function _fnFilterCustom(settings) {
          var filters = DataTable.ext.search;
          var displayRows = settings.aiDisplay;
          var row, rowIdx;
          for (var i4 = 0, ien = filters.length; i4 < ien; i4++) {
            var rows = [];
            for (var j4 = 0, jen = displayRows.length; j4 < jen; j4++) {
              rowIdx = displayRows[j4];
              row = settings.aoData[rowIdx];
              if (filters[i4](settings, row._aFilterData, rowIdx, row._aData, j4)) {
                rows.push(rowIdx);
              }
            }
            displayRows.length = 0;
            $3.merge(displayRows, rows);
          }
        }
        function _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {
          if (searchStr === "") {
            return;
          }
          var data;
          var out = [];
          var display = settings.aiDisplay;
          var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);
          for (var i4 = 0; i4 < display.length; i4++) {
            data = settings.aoData[display[i4]]._aFilterData[colIdx];
            if (rpSearch.test(data)) {
              out.push(display[i4]);
            }
          }
          settings.aiDisplay = out;
        }
        function _fnFilter(settings, input, force, regex, smart, caseInsensitive) {
          var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);
          var prevSearch = settings.oPreviousSearch.sSearch;
          var displayMaster = settings.aiDisplayMaster;
          var display, invalidated, i4;
          var filtered = [];
          if (DataTable.ext.search.length !== 0) {
            force = true;
          }
          invalidated = _fnFilterData(settings);
          if (input.length <= 0) {
            settings.aiDisplay = displayMaster.slice();
          } else {
            if (invalidated || force || regex || prevSearch.length > input.length || input.indexOf(prevSearch) !== 0 || settings.bSorted) {
              settings.aiDisplay = displayMaster.slice();
            }
            display = settings.aiDisplay;
            for (i4 = 0; i4 < display.length; i4++) {
              if (rpSearch.test(settings.aoData[display[i4]]._sFilterRow)) {
                filtered.push(display[i4]);
              }
            }
            settings.aiDisplay = filtered;
          }
        }
        function _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {
          search = regex ? search : _fnEscapeRegex(search);
          if (smart) {
            var a3 = $3.map(search.match(/"[^"]+"|[^ ]+/g) || [""], function(word) {
              if (word.charAt(0) === '"') {
                var m3 = word.match(/^"(.*)"$/);
                word = m3 ? m3[1] : word;
              }
              return word.replace('"', "");
            });
            search = "^(?=.*?" + a3.join(")(?=.*?") + ").*$";
          }
          return new RegExp(search, caseInsensitive ? "i" : "");
        }
        var _fnEscapeRegex = DataTable.util.escapeRegex;
        var __filter_div = $3("<div>")[0];
        var __filter_div_textContent = __filter_div.textContent !== undefined2;
        function _fnFilterData(settings) {
          var columns = settings.aoColumns;
          var column;
          var i4, j4, ien, jen, filterData, cellData, row;
          var wasInvalidated = false;
          for (i4 = 0, ien = settings.aoData.length; i4 < ien; i4++) {
            row = settings.aoData[i4];
            if (!row._aFilterData) {
              filterData = [];
              for (j4 = 0, jen = columns.length; j4 < jen; j4++) {
                column = columns[j4];
                if (column.bSearchable) {
                  cellData = _fnGetCellData(settings, i4, j4, "filter");
                  if (cellData === null) {
                    cellData = "";
                  }
                  if (typeof cellData !== "string" && cellData.toString) {
                    cellData = cellData.toString();
                  }
                } else {
                  cellData = "";
                }
                if (cellData.indexOf && cellData.indexOf("&") !== -1) {
                  __filter_div.innerHTML = cellData;
                  cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;
                }
                if (cellData.replace) {
                  cellData = cellData.replace(/[\r\n\u2028]/g, "");
                }
                filterData.push(cellData);
              }
              row._aFilterData = filterData;
              row._sFilterRow = filterData.join("  ");
              wasInvalidated = true;
            }
          }
          return wasInvalidated;
        }
        function _fnSearchToCamel(obj) {
          return {
            search: obj.sSearch,
            smart: obj.bSmart,
            regex: obj.bRegex,
            caseInsensitive: obj.bCaseInsensitive
          };
        }
        function _fnSearchToHung(obj) {
          return {
            sSearch: obj.search,
            bSmart: obj.smart,
            bRegex: obj.regex,
            bCaseInsensitive: obj.caseInsensitive
          };
        }
        function _fnFeatureHtmlInfo(settings) {
          var tid = settings.sTableId, nodes = settings.aanFeatures.i, n2 = $3("<div/>", {
            "class": settings.oClasses.sInfo,
            "id": !nodes ? tid + "_info" : null
          });
          if (!nodes) {
            settings.aoDrawCallback.push({
              "fn": _fnUpdateInfo,
              "sName": "information"
            });
            n2.attr("role", "status").attr("aria-live", "polite");
            $3(settings.nTable).attr("aria-describedby", tid + "_info");
          }
          return n2[0];
        }
        function _fnUpdateInfo(settings) {
          var nodes = settings.aanFeatures.i;
          if (nodes.length === 0) {
            return;
          }
          var lang = settings.oLanguage, start = settings._iDisplayStart + 1, end = settings.fnDisplayEnd(), max = settings.fnRecordsTotal(), total = settings.fnRecordsDisplay(), out = total ? lang.sInfo : lang.sInfoEmpty;
          if (total !== max) {
            out += " " + lang.sInfoFiltered;
          }
          out += lang.sInfoPostFix;
          out = _fnInfoMacros(settings, out);
          var callback = lang.fnInfoCallback;
          if (callback !== null) {
            out = callback.call(
              settings.oInstance,
              settings,
              start,
              end,
              max,
              total,
              out
            );
          }
          $3(nodes).html(out);
        }
        function _fnInfoMacros(settings, str) {
          var formatter = settings.fnFormatNumber, start = settings._iDisplayStart + 1, len = settings._iDisplayLength, vis = settings.fnRecordsDisplay(), all = len === -1;
          return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));
        }
        function _fnInitialise(settings) {
          var i4, iLen, iAjaxStart = settings.iInitDisplayStart;
          var columns = settings.aoColumns, column;
          var features = settings.oFeatures;
          var deferLoading = settings.bDeferLoading;
          if (!settings.bInitialised) {
            setTimeout(function() {
              _fnInitialise(settings);
            }, 200);
            return;
          }
          _fnAddOptionsHtml(settings);
          _fnBuildHead(settings);
          _fnDrawHead(settings, settings.aoHeader);
          _fnDrawHead(settings, settings.aoFooter);
          _fnProcessingDisplay(settings, true);
          if (features.bAutoWidth) {
            _fnCalculateColumnWidths(settings);
          }
          for (i4 = 0, iLen = columns.length; i4 < iLen; i4++) {
            column = columns[i4];
            if (column.sWidth) {
              column.nTh.style.width = _fnStringToCss(column.sWidth);
            }
          }
          _fnCallbackFire(settings, null, "preInit", [settings]);
          _fnReDraw(settings);
          var dataSrc = _fnDataSource(settings);
          if (dataSrc != "ssp" || deferLoading) {
            if (dataSrc == "ajax") {
              _fnBuildAjax(settings, [], function(json) {
                var aData = _fnAjaxDataSrc(settings, json);
                for (i4 = 0; i4 < aData.length; i4++) {
                  _fnAddData(settings, aData[i4]);
                }
                settings.iInitDisplayStart = iAjaxStart;
                _fnReDraw(settings);
                _fnProcessingDisplay(settings, false);
                _fnInitComplete(settings, json);
              }, settings);
            } else {
              _fnProcessingDisplay(settings, false);
              _fnInitComplete(settings);
            }
          }
        }
        function _fnInitComplete(settings, json) {
          settings._bInitComplete = true;
          if (json || settings.oInit.aaData) {
            _fnAdjustColumnSizing(settings);
          }
          _fnCallbackFire(settings, null, "plugin-init", [settings, json]);
          _fnCallbackFire(settings, "aoInitComplete", "init", [settings, json]);
        }
        function _fnLengthChange(settings, val) {
          var len = parseInt(val, 10);
          settings._iDisplayLength = len;
          _fnLengthOverflow(settings);
          _fnCallbackFire(settings, null, "length", [settings, len]);
        }
        function _fnFeatureHtmlLength(settings) {
          var classes = settings.oClasses, tableId = settings.sTableId, menu = settings.aLengthMenu, d2 = Array.isArray(menu[0]), lengths = d2 ? menu[0] : menu, language = d2 ? menu[1] : menu;
          var select = $3("<select/>", {
            "name": tableId + "_length",
            "aria-controls": tableId,
            "class": classes.sLengthSelect
          });
          for (var i4 = 0, ien = lengths.length; i4 < ien; i4++) {
            select[0][i4] = new Option(
              typeof language[i4] === "number" ? settings.fnFormatNumber(language[i4]) : language[i4],
              lengths[i4]
            );
          }
          var div = $3("<div><label/></div>").addClass(classes.sLength);
          if (!settings.aanFeatures.l) {
            div[0].id = tableId + "_length";
          }
          div.children().append(
            settings.oLanguage.sLengthMenu.replace("_MENU_", select[0].outerHTML)
          );
          $3("select", div).val(settings._iDisplayLength).on("change.DT", function(e3) {
            _fnLengthChange(settings, $3(this).val());
            _fnDraw(settings);
          });
          $3(settings.nTable).on("length.dt.DT", function(e3, s3, len) {
            if (settings === s3) {
              $3("select", div).val(len);
            }
          });
          return div[0];
        }
        function _fnFeatureHtmlPaginate(settings) {
          var type = settings.sPaginationType, plugin = DataTable.ext.pager[type], modern = typeof plugin === "function", redraw = function(settings2) {
            _fnDraw(settings2);
          }, node = $3("<div/>").addClass(settings.oClasses.sPaging + type)[0], features = settings.aanFeatures;
          if (!modern) {
            plugin.fnInit(settings, node, redraw);
          }
          if (!features.p) {
            node.id = settings.sTableId + "_paginate";
            settings.aoDrawCallback.push({
              "fn": function(settings2) {
                if (modern) {
                  var start = settings2._iDisplayStart, len = settings2._iDisplayLength, visRecords = settings2.fnRecordsDisplay(), all = len === -1, page = all ? 0 : Math.ceil(start / len), pages = all ? 1 : Math.ceil(visRecords / len), buttons = plugin(page, pages), i4, ien;
                  for (i4 = 0, ien = features.p.length; i4 < ien; i4++) {
                    _fnRenderer(settings2, "pageButton")(
                      settings2,
                      features.p[i4],
                      i4,
                      buttons,
                      page,
                      pages
                    );
                  }
                } else {
                  plugin.fnUpdate(settings2, redraw);
                }
              },
              "sName": "pagination"
            });
          }
          return node;
        }
        function _fnPageChange(settings, action, redraw) {
          var start = settings._iDisplayStart, len = settings._iDisplayLength, records = settings.fnRecordsDisplay();
          if (records === 0 || len === -1) {
            start = 0;
          } else if (typeof action === "number") {
            start = action * len;
            if (start > records) {
              start = 0;
            }
          } else if (action == "first") {
            start = 0;
          } else if (action == "previous") {
            start = len >= 0 ? start - len : 0;
            if (start < 0) {
              start = 0;
            }
          } else if (action == "next") {
            if (start + len < records) {
              start += len;
            }
          } else if (action == "last") {
            start = Math.floor((records - 1) / len) * len;
          } else {
            _fnLog(settings, 0, "Unknown paging action: " + action, 5);
          }
          var changed = settings._iDisplayStart !== start;
          settings._iDisplayStart = start;
          if (changed) {
            _fnCallbackFire(settings, null, "page", [settings]);
            if (redraw) {
              _fnDraw(settings);
            }
          }
          return changed;
        }
        function _fnFeatureHtmlProcessing(settings) {
          return $3("<div/>", {
            "id": !settings.aanFeatures.r ? settings.sTableId + "_processing" : null,
            "class": settings.oClasses.sProcessing
          }).html(settings.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(settings.nTable)[0];
        }
        function _fnProcessingDisplay(settings, show) {
          if (settings.oFeatures.bProcessing) {
            $3(settings.aanFeatures.r).css("display", show ? "block" : "none");
          }
          _fnCallbackFire(settings, null, "processing", [settings, show]);
        }
        function _fnFeatureHtmlTable(settings) {
          var table = $3(settings.nTable);
          var scroll = settings.oScroll;
          if (scroll.sX === "" && scroll.sY === "") {
            return settings.nTable;
          }
          var scrollX = scroll.sX;
          var scrollY = scroll.sY;
          var classes = settings.oClasses;
          var caption = table.children("caption");
          var captionSide = caption.length ? caption[0]._captionSide : null;
          var headerClone = $3(table[0].cloneNode(false));
          var footerClone = $3(table[0].cloneNode(false));
          var footer = table.children("tfoot");
          var _div = "<div/>";
          var size = function(s3) {
            return !s3 ? null : _fnStringToCss(s3);
          };
          if (!footer.length) {
            footer = null;
          }
          var scroller = $3(_div, { "class": classes.sScrollWrapper }).append(
            $3(_div, { "class": classes.sScrollHead }).css({
              overflow: "hidden",
              position: "relative",
              border: 0,
              width: scrollX ? size(scrollX) : "100%"
            }).append(
              $3(_div, { "class": classes.sScrollHeadInner }).css({
                "box-sizing": "content-box",
                width: scroll.sXInner || "100%"
              }).append(
                headerClone.removeAttr("id").css("margin-left", 0).append(captionSide === "top" ? caption : null).append(
                  table.children("thead")
                )
              )
            )
          ).append(
            $3(_div, { "class": classes.sScrollBody }).css({
              position: "relative",
              overflow: "auto",
              width: size(scrollX)
            }).append(table)
          );
          if (footer) {
            scroller.append(
              $3(_div, { "class": classes.sScrollFoot }).css({
                overflow: "hidden",
                border: 0,
                width: scrollX ? size(scrollX) : "100%"
              }).append(
                $3(_div, { "class": classes.sScrollFootInner }).append(
                  footerClone.removeAttr("id").css("margin-left", 0).append(captionSide === "bottom" ? caption : null).append(
                    table.children("tfoot")
                  )
                )
              )
            );
          }
          var children = scroller.children();
          var scrollHead = children[0];
          var scrollBody = children[1];
          var scrollFoot = footer ? children[2] : null;
          if (scrollX) {
            $3(scrollBody).on("scroll.DT", function(e3) {
              var scrollLeft = this.scrollLeft;
              scrollHead.scrollLeft = scrollLeft;
              if (footer) {
                scrollFoot.scrollLeft = scrollLeft;
              }
            });
          }
          $3(scrollBody).css("max-height", scrollY);
          if (!scroll.bCollapse) {
            $3(scrollBody).css("height", scrollY);
          }
          settings.nScrollHead = scrollHead;
          settings.nScrollBody = scrollBody;
          settings.nScrollFoot = scrollFoot;
          settings.aoDrawCallback.push({
            "fn": _fnScrollDraw,
            "sName": "scrolling"
          });
          return scroller[0];
        }
        function _fnScrollDraw(settings) {
          var scroll = settings.oScroll, scrollX = scroll.sX, scrollXInner = scroll.sXInner, scrollY = scroll.sY, barWidth = scroll.iBarWidth, divHeader = $3(settings.nScrollHead), divHeaderStyle = divHeader[0].style, divHeaderInner = divHeader.children("div"), divHeaderInnerStyle = divHeaderInner[0].style, divHeaderTable = divHeaderInner.children("table"), divBodyEl = settings.nScrollBody, divBody = $3(divBodyEl), divBodyStyle = divBodyEl.style, divFooter = $3(settings.nScrollFoot), divFooterInner = divFooter.children("div"), divFooterTable = divFooterInner.children("table"), header = $3(settings.nTHead), table = $3(settings.nTable), tableEl = table[0], tableStyle = tableEl.style, footer = settings.nTFoot ? $3(settings.nTFoot) : null, browser = settings.oBrowser, ie67 = browser.bScrollOversize, dtHeaderCells = _pluck(settings.aoColumns, "nTh"), headerTrgEls, footerTrgEls, headerSrcEls, footerSrcEls, headerCopy, footerCopy, headerWidths = [], footerWidths = [], headerContent = [], footerContent = [], idx, correction, sanityWidth, zeroOut = function(nSizer) {
            var style = nSizer.style;
            style.paddingTop = "0";
            style.paddingBottom = "0";
            style.borderTopWidth = "0";
            style.borderBottomWidth = "0";
            style.height = 0;
          };
          var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
          if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined2) {
            settings.scrollBarVis = scrollBarVis;
            _fnAdjustColumnSizing(settings);
            return;
          } else {
            settings.scrollBarVis = scrollBarVis;
          }
          table.children("thead, tfoot").remove();
          if (footer) {
            footerCopy = footer.clone().prependTo(table);
            footerTrgEls = footer.find("tr");
            footerSrcEls = footerCopy.find("tr");
            footerCopy.find("[id]").removeAttr("id");
          }
          headerCopy = header.clone().prependTo(table);
          headerTrgEls = header.find("tr");
          headerSrcEls = headerCopy.find("tr");
          headerCopy.find("th, td").removeAttr("tabindex");
          headerCopy.find("[id]").removeAttr("id");
          if (!scrollX) {
            divBodyStyle.width = "100%";
            divHeader[0].style.width = "100%";
          }
          $3.each(_fnGetUniqueThs(settings, headerCopy), function(i4, el) {
            idx = _fnVisibleToColumnIndex(settings, i4);
            el.style.width = settings.aoColumns[idx].sWidth;
          });
          if (footer) {
            _fnApplyToChildren(function(n2) {
              n2.style.width = "";
            }, footerSrcEls);
          }
          sanityWidth = table.outerWidth();
          if (scrollX === "") {
            tableStyle.width = "100%";
            if (ie67 && (table.find("tbody").height() > divBodyEl.offsetHeight || divBody.css("overflow-y") == "scroll")) {
              tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);
            }
            sanityWidth = table.outerWidth();
          } else if (scrollXInner !== "") {
            tableStyle.width = _fnStringToCss(scrollXInner);
            sanityWidth = table.outerWidth();
          }
          _fnApplyToChildren(zeroOut, headerSrcEls);
          _fnApplyToChildren(function(nSizer) {
            var style = window2.getComputedStyle ? window2.getComputedStyle(nSizer).width : _fnStringToCss($3(nSizer).width());
            headerContent.push(nSizer.innerHTML);
            headerWidths.push(style);
          }, headerSrcEls);
          _fnApplyToChildren(function(nToSize, i4) {
            nToSize.style.width = headerWidths[i4];
          }, headerTrgEls);
          $3(headerSrcEls).css("height", 0);
          if (footer) {
            _fnApplyToChildren(zeroOut, footerSrcEls);
            _fnApplyToChildren(function(nSizer) {
              footerContent.push(nSizer.innerHTML);
              footerWidths.push(_fnStringToCss($3(nSizer).css("width")));
            }, footerSrcEls);
            _fnApplyToChildren(function(nToSize, i4) {
              nToSize.style.width = footerWidths[i4];
            }, footerTrgEls);
            $3(footerSrcEls).height(0);
          }
          _fnApplyToChildren(function(nSizer, i4) {
            nSizer.innerHTML = '<div class="dataTables_sizing">' + headerContent[i4] + "</div>";
            nSizer.childNodes[0].style.height = "0";
            nSizer.childNodes[0].style.overflow = "hidden";
            nSizer.style.width = headerWidths[i4];
          }, headerSrcEls);
          if (footer) {
            _fnApplyToChildren(function(nSizer, i4) {
              nSizer.innerHTML = '<div class="dataTables_sizing">' + footerContent[i4] + "</div>";
              nSizer.childNodes[0].style.height = "0";
              nSizer.childNodes[0].style.overflow = "hidden";
              nSizer.style.width = footerWidths[i4];
            }, footerSrcEls);
          }
          if (Math.round(table.outerWidth()) < Math.round(sanityWidth)) {
            correction = divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css("overflow-y") == "scroll" ? sanityWidth + barWidth : sanityWidth;
            if (ie67 && (divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css("overflow-y") == "scroll")) {
              tableStyle.width = _fnStringToCss(correction - barWidth);
            }
            if (scrollX === "" || scrollXInner !== "") {
              _fnLog(settings, 1, "Possible column misalignment", 6);
            }
          } else {
            correction = "100%";
          }
          divBodyStyle.width = _fnStringToCss(correction);
          divHeaderStyle.width = _fnStringToCss(correction);
          if (footer) {
            settings.nScrollFoot.style.width = _fnStringToCss(correction);
          }
          if (!scrollY) {
            if (ie67) {
              divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);
            }
          }
          var iOuterWidth = table.outerWidth();
          divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);
          divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);
          var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css("overflow-y") == "scroll";
          var padding = "padding" + (browser.bScrollbarLeft ? "Left" : "Right");
          divHeaderInnerStyle[padding] = bScrolling ? barWidth + "px" : "0px";
          if (footer) {
            divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);
            divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);
            divFooterInner[0].style[padding] = bScrolling ? barWidth + "px" : "0px";
          }
          table.children("colgroup").insertBefore(table.children("thead"));
          divBody.trigger("scroll");
          if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {
            divBodyEl.scrollTop = 0;
          }
        }
        function _fnApplyToChildren(fn, an1, an2) {
          var index = 0, i4 = 0, iLen = an1.length;
          var nNode1, nNode2;
          while (i4 < iLen) {
            nNode1 = an1[i4].firstChild;
            nNode2 = an2 ? an2[i4].firstChild : null;
            while (nNode1) {
              if (nNode1.nodeType === 1) {
                if (an2) {
                  fn(nNode1, nNode2, index);
                } else {
                  fn(nNode1, index);
                }
                index++;
              }
              nNode1 = nNode1.nextSibling;
              nNode2 = an2 ? nNode2.nextSibling : null;
            }
            i4++;
          }
        }
        var __re_html_remove = /<.*?>/g;
        function _fnCalculateColumnWidths(oSettings) {
          var table = oSettings.nTable, columns = oSettings.aoColumns, scroll = oSettings.oScroll, scrollY = scroll.sY, scrollX = scroll.sX, scrollXInner = scroll.sXInner, columnCount = columns.length, visibleColumns = _fnGetColumns(oSettings, "bVisible"), headerCells = $3("th", oSettings.nTHead), tableWidthAttr = table.getAttribute("width"), tableContainer = table.parentNode, userInputs = false, i4, column, columnIdx, width, outerWidth, browser = oSettings.oBrowser, ie67 = browser.bScrollOversize;
          var styleWidth = table.style.width;
          if (styleWidth && styleWidth.indexOf("%") !== -1) {
            tableWidthAttr = styleWidth;
          }
          for (i4 = 0; i4 < visibleColumns.length; i4++) {
            column = columns[visibleColumns[i4]];
            if (column.sWidth !== null) {
              column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);
              userInputs = true;
            }
          }
          if (ie67 || !userInputs && !scrollX && !scrollY && columnCount == _fnVisbleColumns(oSettings) && columnCount == headerCells.length) {
            for (i4 = 0; i4 < columnCount; i4++) {
              var colIdx = _fnVisibleToColumnIndex(oSettings, i4);
              if (colIdx !== null) {
                columns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i4).width());
              }
            }
          } else {
            var tmpTable = $3(table).clone().css("visibility", "hidden").removeAttr("id");
            tmpTable.find("tbody tr").remove();
            var tr = $3("<tr/>").appendTo(tmpTable.find("tbody"));
            tmpTable.find("thead, tfoot").remove();
            tmpTable.append($3(oSettings.nTHead).clone()).append($3(oSettings.nTFoot).clone());
            tmpTable.find("tfoot th, tfoot td").css("width", "");
            headerCells = _fnGetUniqueThs(oSettings, tmpTable.find("thead")[0]);
            for (i4 = 0; i4 < visibleColumns.length; i4++) {
              column = columns[visibleColumns[i4]];
              headerCells[i4].style.width = column.sWidthOrig !== null && column.sWidthOrig !== "" ? _fnStringToCss(column.sWidthOrig) : "";
              if (column.sWidthOrig && scrollX) {
                $3(headerCells[i4]).append($3("<div/>").css({
                  width: column.sWidthOrig,
                  margin: 0,
                  padding: 0,
                  border: 0,
                  height: 1
                }));
              }
            }
            if (oSettings.aoData.length) {
              for (i4 = 0; i4 < visibleColumns.length; i4++) {
                columnIdx = visibleColumns[i4];
                column = columns[columnIdx];
                $3(_fnGetWidestNode(oSettings, columnIdx)).clone(false).append(column.sContentPadding).appendTo(tr);
              }
            }
            $3("[name]", tmpTable).removeAttr("name");
            var holder = $3("<div/>").css(
              scrollX || scrollY ? {
                position: "absolute",
                top: 0,
                left: 0,
                height: 1,
                right: 0,
                overflow: "hidden"
              } : {}
            ).append(tmpTable).appendTo(tableContainer);
            if (scrollX && scrollXInner) {
              tmpTable.width(scrollXInner);
            } else if (scrollX) {
              tmpTable.css("width", "auto");
              tmpTable.removeAttr("width");
              if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {
                tmpTable.width(tableContainer.clientWidth);
              }
            } else if (scrollY) {
              tmpTable.width(tableContainer.clientWidth);
            } else if (tableWidthAttr) {
              tmpTable.width(tableWidthAttr);
            }
            var total = 0;
            for (i4 = 0; i4 < visibleColumns.length; i4++) {
              var cell = $3(headerCells[i4]);
              var border = cell.outerWidth() - cell.width();
              var bounding = browser.bBounding ? Math.ceil(headerCells[i4].getBoundingClientRect().width) : cell.outerWidth();
              total += bounding;
              columns[visibleColumns[i4]].sWidth = _fnStringToCss(bounding - border);
            }
            table.style.width = _fnStringToCss(total);
            holder.remove();
          }
          if (tableWidthAttr) {
            table.style.width = _fnStringToCss(tableWidthAttr);
          }
          if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {
            var bindResize = function() {
              $3(window2).on("resize.DT-" + oSettings.sInstance, _fnThrottle(function() {
                _fnAdjustColumnSizing(oSettings);
              }));
            };
            if (ie67) {
              setTimeout(bindResize, 1e3);
            } else {
              bindResize();
            }
            oSettings._reszEvt = true;
          }
        }
        var _fnThrottle = DataTable.util.throttle;
        function _fnConvertToWidth(width, parent) {
          if (!width) {
            return 0;
          }
          var n2 = $3("<div/>").css("width", _fnStringToCss(width)).appendTo(parent || document2.body);
          var val = n2[0].offsetWidth;
          n2.remove();
          return val;
        }
        function _fnGetWidestNode(settings, colIdx) {
          var idx = _fnGetMaxLenString(settings, colIdx);
          if (idx < 0) {
            return null;
          }
          var data = settings.aoData[idx];
          return !data.nTr ? $3("<td/>").html(_fnGetCellData(settings, idx, colIdx, "display"))[0] : data.anCells[colIdx];
        }
        function _fnGetMaxLenString(settings, colIdx) {
          var s3, max = -1, maxIdx = -1;
          for (var i4 = 0, ien = settings.aoData.length; i4 < ien; i4++) {
            s3 = _fnGetCellData(settings, i4, colIdx, "display") + "";
            s3 = s3.replace(__re_html_remove, "");
            s3 = s3.replace(/&nbsp;/g, " ");
            if (s3.length > max) {
              max = s3.length;
              maxIdx = i4;
            }
          }
          return maxIdx;
        }
        function _fnStringToCss(s3) {
          if (s3 === null) {
            return "0px";
          }
          if (typeof s3 == "number") {
            return s3 < 0 ? "0px" : s3 + "px";
          }
          return s3.match(/\d$/) ? s3 + "px" : s3;
        }
        function _fnSortFlatten(settings) {
          var i4, iLen, k3, kLen, aSort = [], aiOrig = [], aoColumns = settings.aoColumns, aDataSort, iCol, sType, srcCol, fixed = settings.aaSortingFixed, fixedObj = $3.isPlainObject(fixed), nestedSort = [], add2 = function(a3) {
            if (a3.length && !Array.isArray(a3[0])) {
              nestedSort.push(a3);
            } else {
              $3.merge(nestedSort, a3);
            }
          };
          if (Array.isArray(fixed)) {
            add2(fixed);
          }
          if (fixedObj && fixed.pre) {
            add2(fixed.pre);
          }
          add2(settings.aaSorting);
          if (fixedObj && fixed.post) {
            add2(fixed.post);
          }
          for (i4 = 0; i4 < nestedSort.length; i4++) {
            srcCol = nestedSort[i4][0];
            aDataSort = aoColumns[srcCol].aDataSort;
            for (k3 = 0, kLen = aDataSort.length; k3 < kLen; k3++) {
              iCol = aDataSort[k3];
              sType = aoColumns[iCol].sType || "string";
              if (nestedSort[i4]._idx === undefined2) {
                nestedSort[i4]._idx = $3.inArray(nestedSort[i4][1], aoColumns[iCol].asSorting);
              }
              aSort.push({
                src: srcCol,
                col: iCol,
                dir: nestedSort[i4][1],
                index: nestedSort[i4]._idx,
                type: sType,
                formatter: DataTable.ext.type.order[sType + "-pre"]
              });
            }
          }
          return aSort;
        }
        function _fnSort(oSettings) {
          var i4, ien, iLen, j4, jLen, k3, kLen, sDataType, nTh, aiOrig = [], oExtSort = DataTable.ext.type.order, aoData = oSettings.aoData, aoColumns = oSettings.aoColumns, aDataSort, data, iCol, sType, oSort, formatters = 0, sortCol, displayMaster = oSettings.aiDisplayMaster, aSort;
          _fnColumnTypes(oSettings);
          aSort = _fnSortFlatten(oSettings);
          for (i4 = 0, ien = aSort.length; i4 < ien; i4++) {
            sortCol = aSort[i4];
            if (sortCol.formatter) {
              formatters++;
            }
            _fnSortData(oSettings, sortCol.col);
          }
          if (_fnDataSource(oSettings) != "ssp" && aSort.length !== 0) {
            for (i4 = 0, iLen = displayMaster.length; i4 < iLen; i4++) {
              aiOrig[displayMaster[i4]] = i4;
            }
            if (formatters === aSort.length) {
              displayMaster.sort(function(a3, b3) {
                var x4, y3, k4, test, sort, len = aSort.length, dataA = aoData[a3]._aSortData, dataB = aoData[b3]._aSortData;
                for (k4 = 0; k4 < len; k4++) {
                  sort = aSort[k4];
                  x4 = dataA[sort.col];
                  y3 = dataB[sort.col];
                  test = x4 < y3 ? -1 : x4 > y3 ? 1 : 0;
                  if (test !== 0) {
                    return sort.dir === "asc" ? test : -test;
                  }
                }
                x4 = aiOrig[a3];
                y3 = aiOrig[b3];
                return x4 < y3 ? -1 : x4 > y3 ? 1 : 0;
              });
            } else {
              displayMaster.sort(function(a3, b3) {
                var x4, y3, k4, l3, test, sort, fn, len = aSort.length, dataA = aoData[a3]._aSortData, dataB = aoData[b3]._aSortData;
                for (k4 = 0; k4 < len; k4++) {
                  sort = aSort[k4];
                  x4 = dataA[sort.col];
                  y3 = dataB[sort.col];
                  fn = oExtSort[sort.type + "-" + sort.dir] || oExtSort["string-" + sort.dir];
                  test = fn(x4, y3);
                  if (test !== 0) {
                    return test;
                  }
                }
                x4 = aiOrig[a3];
                y3 = aiOrig[b3];
                return x4 < y3 ? -1 : x4 > y3 ? 1 : 0;
              });
            }
          }
          oSettings.bSorted = true;
        }
        function _fnSortAria(settings) {
          var label;
          var nextSort;
          var columns = settings.aoColumns;
          var aSort = _fnSortFlatten(settings);
          var oAria = settings.oLanguage.oAria;
          for (var i4 = 0, iLen = columns.length; i4 < iLen; i4++) {
            var col = columns[i4];
            var asSorting = col.asSorting;
            var sTitle = col.ariaTitle || col.sTitle.replace(/<.*?>/g, "");
            var th = col.nTh;
            th.removeAttribute("aria-sort");
            if (col.bSortable) {
              if (aSort.length > 0 && aSort[0].col == i4) {
                th.setAttribute("aria-sort", aSort[0].dir == "asc" ? "ascending" : "descending");
                nextSort = asSorting[aSort[0].index + 1] || asSorting[0];
              } else {
                nextSort = asSorting[0];
              }
              label = sTitle + (nextSort === "asc" ? oAria.sSortAscending : oAria.sSortDescending);
            } else {
              label = sTitle;
            }
            th.setAttribute("aria-label", label);
          }
        }
        function _fnSortListener(settings, colIdx, append, callback) {
          var col = settings.aoColumns[colIdx];
          var sorting = settings.aaSorting;
          var asSorting = col.asSorting;
          var nextSortIdx;
          var next = function(a3, overflow) {
            var idx = a3._idx;
            if (idx === undefined2) {
              idx = $3.inArray(a3[1], asSorting);
            }
            return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;
          };
          if (typeof sorting[0] === "number") {
            sorting = settings.aaSorting = [sorting];
          }
          if (append && settings.oFeatures.bSortMulti) {
            var sortIdx = $3.inArray(colIdx, _pluck(sorting, "0"));
            if (sortIdx !== -1) {
              nextSortIdx = next(sorting[sortIdx], true);
              if (nextSortIdx === null && sorting.length === 1) {
                nextSortIdx = 0;
              }
              if (nextSortIdx === null) {
                sorting.splice(sortIdx, 1);
              } else {
                sorting[sortIdx][1] = asSorting[nextSortIdx];
                sorting[sortIdx]._idx = nextSortIdx;
              }
            } else {
              sorting.push([colIdx, asSorting[0], 0]);
              sorting[sorting.length - 1]._idx = 0;
            }
          } else if (sorting.length && sorting[0][0] == colIdx) {
            nextSortIdx = next(sorting[0]);
            sorting.length = 1;
            sorting[0][1] = asSorting[nextSortIdx];
            sorting[0]._idx = nextSortIdx;
          } else {
            sorting.length = 0;
            sorting.push([colIdx, asSorting[0]]);
            sorting[0]._idx = 0;
          }
          _fnReDraw(settings);
          if (typeof callback == "function") {
            callback(settings);
          }
        }
        function _fnSortAttachListener(settings, attachTo, colIdx, callback) {
          var col = settings.aoColumns[colIdx];
          _fnBindAction(attachTo, {}, function(e3) {
            if (col.bSortable === false) {
              return;
            }
            if (settings.oFeatures.bProcessing) {
              _fnProcessingDisplay(settings, true);
              setTimeout(function() {
                _fnSortListener(settings, colIdx, e3.shiftKey, callback);
                if (_fnDataSource(settings) !== "ssp") {
                  _fnProcessingDisplay(settings, false);
                }
              }, 0);
            } else {
              _fnSortListener(settings, colIdx, e3.shiftKey, callback);
            }
          });
        }
        function _fnSortingClasses(settings) {
          var oldSort = settings.aLastSort;
          var sortClass = settings.oClasses.sSortColumn;
          var sort = _fnSortFlatten(settings);
          var features = settings.oFeatures;
          var i4, ien, colIdx;
          if (features.bSort && features.bSortClasses) {
            for (i4 = 0, ien = oldSort.length; i4 < ien; i4++) {
              colIdx = oldSort[i4].src;
              $3(_pluck(settings.aoData, "anCells", colIdx)).removeClass(sortClass + (i4 < 2 ? i4 + 1 : 3));
            }
            for (i4 = 0, ien = sort.length; i4 < ien; i4++) {
              colIdx = sort[i4].src;
              $3(_pluck(settings.aoData, "anCells", colIdx)).addClass(sortClass + (i4 < 2 ? i4 + 1 : 3));
            }
          }
          settings.aLastSort = sort;
        }
        function _fnSortData(settings, idx) {
          var column = settings.aoColumns[idx];
          var customSort = DataTable.ext.order[column.sSortDataType];
          var customData;
          if (customSort) {
            customData = customSort.call(
              settings.oInstance,
              settings,
              idx,
              _fnColumnIndexToVisible(settings, idx)
            );
          }
          var row, cellData;
          var formatter = DataTable.ext.type.order[column.sType + "-pre"];
          for (var i4 = 0, ien = settings.aoData.length; i4 < ien; i4++) {
            row = settings.aoData[i4];
            if (!row._aSortData) {
              row._aSortData = [];
            }
            if (!row._aSortData[idx] || customSort) {
              cellData = customSort ? customData[i4] : _fnGetCellData(settings, i4, idx, "sort");
              row._aSortData[idx] = formatter ? formatter(cellData) : cellData;
            }
          }
        }
        function _fnSaveState(settings) {
          if (settings._bLoadingState) {
            return;
          }
          var state = {
            time: +new Date(),
            start: settings._iDisplayStart,
            length: settings._iDisplayLength,
            order: $3.extend(true, [], settings.aaSorting),
            search: _fnSearchToCamel(settings.oPreviousSearch),
            columns: $3.map(settings.aoColumns, function(col, i4) {
              return {
                visible: col.bVisible,
                search: _fnSearchToCamel(settings.aoPreSearchCols[i4])
              };
            })
          };
          settings.oSavedState = state;
          _fnCallbackFire(settings, "aoStateSaveParams", "stateSaveParams", [settings, state]);
          if (settings.oFeatures.bStateSave && !settings.bDestroying) {
            settings.fnStateSaveCallback.call(settings.oInstance, settings, state);
          }
        }
        function _fnLoadState(settings, oInit, callback) {
          if (!settings.oFeatures.bStateSave) {
            callback();
            return;
          }
          var loaded = function(state2) {
            _fnImplementState(settings, state2, callback);
          };
          var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);
          if (state !== undefined2) {
            _fnImplementState(settings, state, callback);
          }
          return true;
        }
        function _fnImplementState(settings, s3, callback) {
          var i4, ien;
          var columns = settings.aoColumns;
          settings._bLoadingState = true;
          var api = settings._bInitComplete ? new DataTable.Api(settings) : null;
          if (!s3 || !s3.time) {
            settings._bLoadingState = false;
            callback();
            return;
          }
          var abStateLoad = _fnCallbackFire(settings, "aoStateLoadParams", "stateLoadParams", [settings, s3]);
          if ($3.inArray(false, abStateLoad) !== -1) {
            settings._bLoadingState = false;
            callback();
            return;
          }
          var duration = settings.iStateDuration;
          if (duration > 0 && s3.time < +new Date() - duration * 1e3) {
            settings._bLoadingState = false;
            callback();
            return;
          }
          if (s3.columns && columns.length !== s3.columns.length) {
            settings._bLoadingState = false;
            callback();
            return;
          }
          settings.oLoadedState = $3.extend(true, {}, s3);
          if (s3.length !== undefined2) {
            if (api) {
              api.page.len(s3.length);
            } else {
              settings._iDisplayLength = s3.length;
            }
          }
          if (s3.start !== undefined2) {
            if (api === null) {
              settings._iDisplayStart = s3.start;
              settings.iInitDisplayStart = s3.start;
            } else {
              _fnPageChange(settings, s3.start / settings._iDisplayLength);
            }
          }
          if (s3.order !== undefined2) {
            settings.aaSorting = [];
            $3.each(s3.order, function(i5, col2) {
              settings.aaSorting.push(
                col2[0] >= columns.length ? [0, col2[1]] : col2
              );
            });
          }
          if (s3.search !== undefined2) {
            $3.extend(settings.oPreviousSearch, _fnSearchToHung(s3.search));
          }
          if (s3.columns) {
            for (i4 = 0, ien = s3.columns.length; i4 < ien; i4++) {
              var col = s3.columns[i4];
              if (col.visible !== undefined2) {
                if (api) {
                  api.column(i4).visible(col.visible, false);
                } else {
                  columns[i4].bVisible = col.visible;
                }
              }
              if (col.search !== undefined2) {
                $3.extend(settings.aoPreSearchCols[i4], _fnSearchToHung(col.search));
              }
            }
            if (api) {
              api.columns.adjust();
            }
          }
          settings._bLoadingState = false;
          _fnCallbackFire(settings, "aoStateLoaded", "stateLoaded", [settings, s3]);
          callback();
        }
        ;
        function _fnSettingsFromNode(table) {
          var settings = DataTable.settings;
          var idx = $3.inArray(table, _pluck(settings, "nTable"));
          return idx !== -1 ? settings[idx] : null;
        }
        function _fnLog(settings, level, msg, tn2) {
          msg = "DataTables warning: " + (settings ? "table id=" + settings.sTableId + " - " : "") + msg;
          if (tn2) {
            msg += ". For more information about this error, please see http://datatables.net/tn/" + tn2;
          }
          if (!level) {
            var ext = DataTable.ext;
            var type = ext.sErrMode || ext.errMode;
            if (settings) {
              _fnCallbackFire(settings, null, "error", [settings, tn2, msg]);
            }
            if (type == "alert") {
              alert(msg);
            } else if (type == "throw") {
              throw new Error(msg);
            } else if (typeof type == "function") {
              type(settings, tn2, msg);
            }
          } else if (window2.console && console.log) {
            console.log(msg);
          }
        }
        function _fnMap(ret, src, name, mappedName) {
          if (Array.isArray(name)) {
            $3.each(name, function(i4, val) {
              if (Array.isArray(val)) {
                _fnMap(ret, src, val[0], val[1]);
              } else {
                _fnMap(ret, src, val);
              }
            });
            return;
          }
          if (mappedName === undefined2) {
            mappedName = name;
          }
          if (src[name] !== undefined2) {
            ret[mappedName] = src[name];
          }
        }
        function _fnExtend(out, extender, breakRefs) {
          var val;
          for (var prop in extender) {
            if (extender.hasOwnProperty(prop)) {
              val = extender[prop];
              if ($3.isPlainObject(val)) {
                if (!$3.isPlainObject(out[prop])) {
                  out[prop] = {};
                }
                $3.extend(true, out[prop], val);
              } else if (breakRefs && prop !== "data" && prop !== "aaData" && Array.isArray(val)) {
                out[prop] = val.slice();
              } else {
                out[prop] = val;
              }
            }
          }
          return out;
        }
        function _fnBindAction(n2, oData, fn) {
          $3(n2).on("click.DT", oData, function(e3) {
            $3(n2).trigger("blur");
            fn(e3);
          }).on("keypress.DT", oData, function(e3) {
            if (e3.which === 13) {
              e3.preventDefault();
              fn(e3);
            }
          }).on("selectstart.DT", function() {
            return false;
          });
        }
        function _fnCallbackReg(oSettings, sStore, fn, sName) {
          if (fn) {
            oSettings[sStore].push({
              "fn": fn,
              "sName": sName
            });
          }
        }
        function _fnCallbackFire(settings, callbackArr, eventName, args) {
          var ret = [];
          if (callbackArr) {
            ret = $3.map(settings[callbackArr].slice().reverse(), function(val, i4) {
              return val.fn.apply(settings.oInstance, args);
            });
          }
          if (eventName !== null) {
            var e3 = $3.Event(eventName + ".dt");
            $3(settings.nTable).trigger(e3, args);
            ret.push(e3.result);
          }
          return ret;
        }
        function _fnLengthOverflow(settings) {
          var start = settings._iDisplayStart, end = settings.fnDisplayEnd(), len = settings._iDisplayLength;
          if (start >= end) {
            start = end - len;
          }
          start -= start % len;
          if (len === -1 || start < 0) {
            start = 0;
          }
          settings._iDisplayStart = start;
        }
        function _fnRenderer(settings, type) {
          var renderer = settings.renderer;
          var host = DataTable.ext.renderer[type];
          if ($3.isPlainObject(renderer) && renderer[type]) {
            return host[renderer[type]] || host._;
          } else if (typeof renderer === "string") {
            return host[renderer] || host._;
          }
          return host._;
        }
        function _fnDataSource(settings) {
          if (settings.oFeatures.bServerSide) {
            return "ssp";
          } else if (settings.ajax || settings.sAjaxSource) {
            return "ajax";
          }
          return "dom";
        }
        var __apiStruct = [];
        var __arrayProto = Array.prototype;
        var _toSettings = function(mixed) {
          var idx, jq;
          var settings = DataTable.settings;
          var tables = $3.map(settings, function(el, i4) {
            return el.nTable;
          });
          if (!mixed) {
            return [];
          } else if (mixed.nTable && mixed.oApi) {
            return [mixed];
          } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === "table") {
            idx = $3.inArray(mixed, tables);
            return idx !== -1 ? [settings[idx]] : null;
          } else if (mixed && typeof mixed.settings === "function") {
            return mixed.settings().toArray();
          } else if (typeof mixed === "string") {
            jq = $3(mixed);
          } else if (mixed instanceof $3) {
            jq = mixed;
          }
          if (jq) {
            return jq.map(function(i4) {
              idx = $3.inArray(this, tables);
              return idx !== -1 ? settings[idx] : null;
            }).toArray();
          }
        };
        _Api = function(context, data) {
          if (!(this instanceof _Api)) {
            return new _Api(context, data);
          }
          var settings = [];
          var ctxSettings = function(o2) {
            var a3 = _toSettings(o2);
            if (a3) {
              settings.push.apply(settings, a3);
            }
          };
          if (Array.isArray(context)) {
            for (var i4 = 0, ien = context.length; i4 < ien; i4++) {
              ctxSettings(context[i4]);
            }
          } else {
            ctxSettings(context);
          }
          this.context = _unique(settings);
          if (data) {
            $3.merge(this, data);
          }
          this.selector = {
            rows: null,
            cols: null,
            opts: null
          };
          _Api.extend(this, this, __apiStruct);
        };
        DataTable.Api = _Api;
        $3.extend(_Api.prototype, {
          any: function() {
            return this.count() !== 0;
          },
          concat: __arrayProto.concat,
          context: [],
          count: function() {
            return this.flatten().length;
          },
          each: function(fn) {
            for (var i4 = 0, ien = this.length; i4 < ien; i4++) {
              fn.call(this, this[i4], i4, this);
            }
            return this;
          },
          eq: function(idx) {
            var ctx = this.context;
            return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;
          },
          filter: function(fn) {
            var a3 = [];
            if (__arrayProto.filter) {
              a3 = __arrayProto.filter.call(this, fn, this);
            } else {
              for (var i4 = 0, ien = this.length; i4 < ien; i4++) {
                if (fn.call(this, this[i4], i4, this)) {
                  a3.push(this[i4]);
                }
              }
            }
            return new _Api(this.context, a3);
          },
          flatten: function() {
            var a3 = [];
            return new _Api(this.context, a3.concat.apply(a3, this.toArray()));
          },
          join: __arrayProto.join,
          indexOf: __arrayProto.indexOf || function(obj, start) {
            for (var i4 = start || 0, ien = this.length; i4 < ien; i4++) {
              if (this[i4] === obj) {
                return i4;
              }
            }
            return -1;
          },
          iterator: function(flatten, type, fn, alwaysNew) {
            var a3 = [], ret, i4, ien, j4, jen, context = this.context, rows, items, item, selector = this.selector;
            if (typeof flatten === "string") {
              alwaysNew = fn;
              fn = type;
              type = flatten;
              flatten = false;
            }
            for (i4 = 0, ien = context.length; i4 < ien; i4++) {
              var apiInst = new _Api(context[i4]);
              if (type === "table") {
                ret = fn.call(apiInst, context[i4], i4);
                if (ret !== undefined2) {
                  a3.push(ret);
                }
              } else if (type === "columns" || type === "rows") {
                ret = fn.call(apiInst, context[i4], this[i4], i4);
                if (ret !== undefined2) {
                  a3.push(ret);
                }
              } else if (type === "column" || type === "column-rows" || type === "row" || type === "cell") {
                items = this[i4];
                if (type === "column-rows") {
                  rows = _selector_row_indexes(context[i4], selector.opts);
                }
                for (j4 = 0, jen = items.length; j4 < jen; j4++) {
                  item = items[j4];
                  if (type === "cell") {
                    ret = fn.call(apiInst, context[i4], item.row, item.column, i4, j4);
                  } else {
                    ret = fn.call(apiInst, context[i4], item, i4, j4, rows);
                  }
                  if (ret !== undefined2) {
                    a3.push(ret);
                  }
                }
              }
            }
            if (a3.length || alwaysNew) {
              var api = new _Api(context, flatten ? a3.concat.apply([], a3) : a3);
              var apiSelector = api.selector;
              apiSelector.rows = selector.rows;
              apiSelector.cols = selector.cols;
              apiSelector.opts = selector.opts;
              return api;
            }
            return this;
          },
          lastIndexOf: __arrayProto.lastIndexOf || function(obj, start) {
            return this.indexOf.apply(this.toArray.reverse(), arguments);
          },
          length: 0,
          map: function(fn) {
            var a3 = [];
            if (__arrayProto.map) {
              a3 = __arrayProto.map.call(this, fn, this);
            } else {
              for (var i4 = 0, ien = this.length; i4 < ien; i4++) {
                a3.push(fn.call(this, this[i4], i4));
              }
            }
            return new _Api(this.context, a3);
          },
          pluck: function(prop) {
            let fn = DataTable.util.get(prop);
            return this.map(function(el) {
              return fn(el);
            });
          },
          pop: __arrayProto.pop,
          push: __arrayProto.push,
          reduce: __arrayProto.reduce || function(fn, init) {
            return _fnReduce(this, fn, init, 0, this.length, 1);
          },
          reduceRight: __arrayProto.reduceRight || function(fn, init) {
            return _fnReduce(this, fn, init, this.length - 1, -1, -1);
          },
          reverse: __arrayProto.reverse,
          selector: null,
          shift: __arrayProto.shift,
          slice: function() {
            return new _Api(this.context, this);
          },
          sort: __arrayProto.sort,
          splice: __arrayProto.splice,
          toArray: function() {
            return __arrayProto.slice.call(this);
          },
          to$: function() {
            return $3(this);
          },
          toJQuery: function() {
            return $3(this);
          },
          unique: function() {
            return new _Api(this.context, _unique(this));
          },
          unshift: __arrayProto.unshift
        });
        _Api.extend = function(scope, obj, ext) {
          if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {
            return;
          }
          var i4, ien, struct, methodScoping = function(scope2, fn, struc) {
            return function() {
              var ret = fn.apply(scope2, arguments);
              _Api.extend(ret, ret, struc.methodExt);
              return ret;
            };
          };
          for (i4 = 0, ien = ext.length; i4 < ien; i4++) {
            struct = ext[i4];
            obj[struct.name] = struct.type === "function" ? methodScoping(scope, struct.val, struct) : struct.type === "object" ? {} : struct.val;
            obj[struct.name].__dt_wrapper = true;
            _Api.extend(scope, obj[struct.name], struct.propExt);
          }
        };
        _Api.register = _api_register = function(name, val) {
          if (Array.isArray(name)) {
            for (var j4 = 0, jen = name.length; j4 < jen; j4++) {
              _Api.register(name[j4], val);
            }
            return;
          }
          var i4, ien, heir = name.split("."), struct = __apiStruct, key, method;
          var find = function(src2, name2) {
            for (var i5 = 0, ien2 = src2.length; i5 < ien2; i5++) {
              if (src2[i5].name === name2) {
                return src2[i5];
              }
            }
            return null;
          };
          for (i4 = 0, ien = heir.length; i4 < ien; i4++) {
            method = heir[i4].indexOf("()") !== -1;
            key = method ? heir[i4].replace("()", "") : heir[i4];
            var src = find(struct, key);
            if (!src) {
              src = {
                name: key,
                val: {},
                methodExt: [],
                propExt: [],
                type: "object"
              };
              struct.push(src);
            }
            if (i4 === ien - 1) {
              src.val = val;
              src.type = typeof val === "function" ? "function" : $3.isPlainObject(val) ? "object" : "other";
            } else {
              struct = method ? src.methodExt : src.propExt;
            }
          }
        };
        _Api.registerPlural = _api_registerPlural = function(pluralName, singularName, val) {
          _Api.register(pluralName, val);
          _Api.register(singularName, function() {
            var ret = val.apply(this, arguments);
            if (ret === this) {
              return this;
            } else if (ret instanceof _Api) {
              return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) : ret[0] : undefined2;
            }
            return ret;
          });
        };
        var __table_selector = function(selector, a3) {
          if (Array.isArray(selector)) {
            return $3.map(selector, function(item) {
              return __table_selector(item, a3);
            });
          }
          if (typeof selector === "number") {
            return [a3[selector]];
          }
          var nodes = $3.map(a3, function(el, i4) {
            return el.nTable;
          });
          return $3(nodes).filter(selector).map(function(i4) {
            var idx = $3.inArray(this, nodes);
            return a3[idx];
          }).toArray();
        };
        _api_register("tables()", function(selector) {
          return selector !== undefined2 && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;
        });
        _api_register("table()", function(selector) {
          var tables = this.tables(selector);
          var ctx = tables.context;
          return ctx.length ? new _Api(ctx[0]) : tables;
        });
        _api_registerPlural("tables().nodes()", "table().node()", function() {
          return this.iterator("table", function(ctx) {
            return ctx.nTable;
          }, 1);
        });
        _api_registerPlural("tables().body()", "table().body()", function() {
          return this.iterator("table", function(ctx) {
            return ctx.nTBody;
          }, 1);
        });
        _api_registerPlural("tables().header()", "table().header()", function() {
          return this.iterator("table", function(ctx) {
            return ctx.nTHead;
          }, 1);
        });
        _api_registerPlural("tables().footer()", "table().footer()", function() {
          return this.iterator("table", function(ctx) {
            return ctx.nTFoot;
          }, 1);
        });
        _api_registerPlural("tables().containers()", "table().container()", function() {
          return this.iterator("table", function(ctx) {
            return ctx.nTableWrapper;
          }, 1);
        });
        _api_register("draw()", function(paging) {
          return this.iterator("table", function(settings) {
            if (paging === "page") {
              _fnDraw(settings);
            } else {
              if (typeof paging === "string") {
                paging = paging === "full-hold" ? false : true;
              }
              _fnReDraw(settings, paging === false);
            }
          });
        });
        _api_register("page()", function(action) {
          if (action === undefined2) {
            return this.page.info().page;
          }
          return this.iterator("table", function(settings) {
            _fnPageChange(settings, action);
          });
        });
        _api_register("page.info()", function(action) {
          if (this.context.length === 0) {
            return undefined2;
          }
          var settings = this.context[0], start = settings._iDisplayStart, len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1, visRecords = settings.fnRecordsDisplay(), all = len === -1;
          return {
            "page": all ? 0 : Math.floor(start / len),
            "pages": all ? 1 : Math.ceil(visRecords / len),
            "start": start,
            "end": settings.fnDisplayEnd(),
            "length": len,
            "recordsTotal": settings.fnRecordsTotal(),
            "recordsDisplay": visRecords,
            "serverSide": _fnDataSource(settings) === "ssp"
          };
        });
        _api_register("page.len()", function(len) {
          if (len === undefined2) {
            return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined2;
          }
          return this.iterator("table", function(settings) {
            _fnLengthChange(settings, len);
          });
        });
        var __reload = function(settings, holdPosition, callback) {
          if (callback) {
            var api = new _Api(settings);
            api.one("draw", function() {
              callback(api.ajax.json());
            });
          }
          if (_fnDataSource(settings) == "ssp") {
            _fnReDraw(settings, holdPosition);
          } else {
            _fnProcessingDisplay(settings, true);
            var xhr = settings.jqXHR;
            if (xhr && xhr.readyState !== 4) {
              xhr.abort();
            }
            _fnBuildAjax(settings, [], function(json) {
              _fnClearTable(settings);
              var data = _fnAjaxDataSrc(settings, json);
              for (var i4 = 0, ien = data.length; i4 < ien; i4++) {
                _fnAddData(settings, data[i4]);
              }
              _fnReDraw(settings, holdPosition);
              _fnProcessingDisplay(settings, false);
            });
          }
        };
        _api_register("ajax.json()", function() {
          var ctx = this.context;
          if (ctx.length > 0) {
            return ctx[0].json;
          }
        });
        _api_register("ajax.params()", function() {
          var ctx = this.context;
          if (ctx.length > 0) {
            return ctx[0].oAjaxData;
          }
        });
        _api_register("ajax.reload()", function(callback, resetPaging) {
          return this.iterator("table", function(settings) {
            __reload(settings, resetPaging === false, callback);
          });
        });
        _api_register("ajax.url()", function(url) {
          var ctx = this.context;
          if (url === undefined2) {
            if (ctx.length === 0) {
              return undefined2;
            }
            ctx = ctx[0];
            return ctx.ajax ? $3.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax : ctx.sAjaxSource;
          }
          return this.iterator("table", function(settings) {
            if ($3.isPlainObject(settings.ajax)) {
              settings.ajax.url = url;
            } else {
              settings.ajax = url;
            }
          });
        });
        _api_register("ajax.url().load()", function(callback, resetPaging) {
          return this.iterator("table", function(ctx) {
            __reload(ctx, resetPaging === false, callback);
          });
        });
        var _selector_run = function(type, selector, selectFn, settings, opts) {
          var out = [], res, a3, i4, ien, j4, jen, selectorType = typeof selector;
          if (!selector || selectorType === "string" || selectorType === "function" || selector.length === undefined2) {
            selector = [selector];
          }
          for (i4 = 0, ien = selector.length; i4 < ien; i4++) {
            a3 = selector[i4] && selector[i4].split && !selector[i4].match(/[\[\(:]/) ? selector[i4].split(",") : [selector[i4]];
            for (j4 = 0, jen = a3.length; j4 < jen; j4++) {
              res = selectFn(typeof a3[j4] === "string" ? a3[j4].trim() : a3[j4]);
              if (res && res.length) {
                out = out.concat(res);
              }
            }
          }
          var ext = _ext.selector[type];
          if (ext.length) {
            for (i4 = 0, ien = ext.length; i4 < ien; i4++) {
              out = ext[i4](settings, opts, out);
            }
          }
          return _unique(out);
        };
        var _selector_opts = function(opts) {
          if (!opts) {
            opts = {};
          }
          if (opts.filter && opts.search === undefined2) {
            opts.search = opts.filter;
          }
          return $3.extend({
            search: "none",
            order: "current",
            page: "all"
          }, opts);
        };
        var _selector_first = function(inst) {
          for (var i4 = 0, ien = inst.length; i4 < ien; i4++) {
            if (inst[i4].length > 0) {
              inst[0] = inst[i4];
              inst[0].length = 1;
              inst.length = 1;
              inst.context = [inst.context[i4]];
              return inst;
            }
          }
          inst.length = 0;
          return inst;
        };
        var _selector_row_indexes = function(settings, opts) {
          var i4, ien, tmp, a3 = [], displayFiltered = settings.aiDisplay, displayMaster = settings.aiDisplayMaster;
          var search = opts.search, order = opts.order, page = opts.page;
          if (_fnDataSource(settings) == "ssp") {
            return search === "removed" ? [] : _range(0, displayMaster.length);
          } else if (page == "current") {
            for (i4 = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i4 < ien; i4++) {
              a3.push(displayFiltered[i4]);
            }
          } else if (order == "current" || order == "applied") {
            if (search == "none") {
              a3 = displayMaster.slice();
            } else if (search == "applied") {
              a3 = displayFiltered.slice();
            } else if (search == "removed") {
              var displayFilteredMap = {};
              for (var i4 = 0, ien = displayFiltered.length; i4 < ien; i4++) {
                displayFilteredMap[displayFiltered[i4]] = null;
              }
              a3 = $3.map(displayMaster, function(el) {
                return !displayFilteredMap.hasOwnProperty(el) ? el : null;
              });
            }
          } else if (order == "index" || order == "original") {
            for (i4 = 0, ien = settings.aoData.length; i4 < ien; i4++) {
              if (search == "none") {
                a3.push(i4);
              } else {
                tmp = $3.inArray(i4, displayFiltered);
                if (tmp === -1 && search == "removed" || tmp >= 0 && search == "applied") {
                  a3.push(i4);
                }
              }
            }
          }
          return a3;
        };
        var __row_selector = function(settings, selector, opts) {
          var rows;
          var run = function(sel) {
            var selInt = _intVal(sel);
            var i4, ien;
            var aoData = settings.aoData;
            if (selInt !== null && !opts) {
              return [selInt];
            }
            if (!rows) {
              rows = _selector_row_indexes(settings, opts);
            }
            if (selInt !== null && $3.inArray(selInt, rows) !== -1) {
              return [selInt];
            } else if (sel === null || sel === undefined2 || sel === "") {
              return rows;
            }
            if (typeof sel === "function") {
              return $3.map(rows, function(idx) {
                var row = aoData[idx];
                return sel(idx, row._aData, row.nTr) ? idx : null;
              });
            }
            if (sel.nodeName) {
              var rowIdx = sel._DT_RowIndex;
              var cellIdx = sel._DT_CellIndex;
              if (rowIdx !== undefined2) {
                return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];
              } else if (cellIdx) {
                return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];
              } else {
                var host = $3(sel).closest("*[data-dt-row]");
                return host.length ? [host.data("dt-row")] : [];
              }
            }
            if (typeof sel === "string" && sel.charAt(0) === "#") {
              var rowObj = settings.aIds[sel.replace(/^#/, "")];
              if (rowObj !== undefined2) {
                return [rowObj.idx];
              }
            }
            var nodes = _removeEmpty(
              _pluck_order(settings.aoData, rows, "nTr")
            );
            return $3(nodes).filter(sel).map(function() {
              return this._DT_RowIndex;
            }).toArray();
          };
          return _selector_run("row", selector, run, settings, opts);
        };
        _api_register("rows()", function(selector, opts) {
          if (selector === undefined2) {
            selector = "";
          } else if ($3.isPlainObject(selector)) {
            opts = selector;
            selector = "";
          }
          opts = _selector_opts(opts);
          var inst = this.iterator("table", function(settings) {
            return __row_selector(settings, selector, opts);
          }, 1);
          inst.selector.rows = selector;
          inst.selector.opts = opts;
          return inst;
        });
        _api_register("rows().nodes()", function() {
          return this.iterator("row", function(settings, row) {
            return settings.aoData[row].nTr || undefined2;
          }, 1);
        });
        _api_register("rows().data()", function() {
          return this.iterator(true, "rows", function(settings, rows) {
            return _pluck_order(settings.aoData, rows, "_aData");
          }, 1);
        });
        _api_registerPlural("rows().cache()", "row().cache()", function(type) {
          return this.iterator("row", function(settings, row) {
            var r3 = settings.aoData[row];
            return type === "search" ? r3._aFilterData : r3._aSortData;
          }, 1);
        });
        _api_registerPlural("rows().invalidate()", "row().invalidate()", function(src) {
          return this.iterator("row", function(settings, row) {
            _fnInvalidate(settings, row, src);
          });
        });
        _api_registerPlural("rows().indexes()", "row().index()", function() {
          return this.iterator("row", function(settings, row) {
            return row;
          }, 1);
        });
        _api_registerPlural("rows().ids()", "row().id()", function(hash) {
          var a3 = [];
          var context = this.context;
          for (var i4 = 0, ien = context.length; i4 < ien; i4++) {
            for (var j4 = 0, jen = this[i4].length; j4 < jen; j4++) {
              var id = context[i4].rowIdFn(context[i4].aoData[this[i4][j4]]._aData);
              a3.push((hash === true ? "#" : "") + id);
            }
          }
          return new _Api(context, a3);
        });
        _api_registerPlural("rows().remove()", "row().remove()", function() {
          var that = this;
          this.iterator("row", function(settings, row, thatIdx) {
            var data = settings.aoData;
            var rowData = data[row];
            var i4, ien, j4, jen;
            var loopRow, loopCells;
            data.splice(row, 1);
            for (i4 = 0, ien = data.length; i4 < ien; i4++) {
              loopRow = data[i4];
              loopCells = loopRow.anCells;
              if (loopRow.nTr !== null) {
                loopRow.nTr._DT_RowIndex = i4;
              }
              if (loopCells !== null) {
                for (j4 = 0, jen = loopCells.length; j4 < jen; j4++) {
                  loopCells[j4]._DT_CellIndex.row = i4;
                }
              }
            }
            _fnDeleteIndex(settings.aiDisplayMaster, row);
            _fnDeleteIndex(settings.aiDisplay, row);
            _fnDeleteIndex(that[thatIdx], row, false);
            if (settings._iRecordsDisplay > 0) {
              settings._iRecordsDisplay--;
            }
            _fnLengthOverflow(settings);
            var id = settings.rowIdFn(rowData._aData);
            if (id !== undefined2) {
              delete settings.aIds[id];
            }
          });
          this.iterator("table", function(settings) {
            for (var i4 = 0, ien = settings.aoData.length; i4 < ien; i4++) {
              settings.aoData[i4].idx = i4;
            }
          });
          return this;
        });
        _api_register("rows.add()", function(rows) {
          var newRows = this.iterator("table", function(settings) {
            var row, i4, ien;
            var out = [];
            for (i4 = 0, ien = rows.length; i4 < ien; i4++) {
              row = rows[i4];
              if (row.nodeName && row.nodeName.toUpperCase() === "TR") {
                out.push(_fnAddTr(settings, row)[0]);
              } else {
                out.push(_fnAddData(settings, row));
              }
            }
            return out;
          }, 1);
          var modRows = this.rows(-1);
          modRows.pop();
          $3.merge(modRows, newRows);
          return modRows;
        });
        _api_register("row()", function(selector, opts) {
          return _selector_first(this.rows(selector, opts));
        });
        _api_register("row().data()", function(data) {
          var ctx = this.context;
          if (data === undefined2) {
            return ctx.length && this.length ? ctx[0].aoData[this[0]]._aData : undefined2;
          }
          var row = ctx[0].aoData[this[0]];
          row._aData = data;
          if (Array.isArray(data) && row.nTr && row.nTr.id) {
            _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);
          }
          _fnInvalidate(ctx[0], this[0], "data");
          return this;
        });
        _api_register("row().node()", function() {
          var ctx = this.context;
          return ctx.length && this.length ? ctx[0].aoData[this[0]].nTr || null : null;
        });
        _api_register("row.add()", function(row) {
          if (row instanceof $3 && row.length) {
            row = row[0];
          }
          var rows = this.iterator("table", function(settings) {
            if (row.nodeName && row.nodeName.toUpperCase() === "TR") {
              return _fnAddTr(settings, row)[0];
            }
            return _fnAddData(settings, row);
          });
          return this.row(rows[0]);
        });
        $3(document2).on("plugin-init.dt", function(e3, context) {
          var api = new _Api(context);
          api.on("stateSaveParams", function(e4, settings, d2) {
            var idFn = settings.rowIdFn;
            var data = settings.aoData;
            var ids = [];
            for (var i4 = 0; i4 < data.length; i4++) {
              if (data[i4]._detailsShow) {
                ids.push("#" + idFn(data[i4]._aData));
              }
            }
            d2.childRows = ids;
          });
          var loaded = api.state.loaded();
          if (loaded && loaded.childRows) {
            api.rows($3.map(loaded.childRows, function(id) {
              return id.replace(/:/g, "\\:");
            })).every(function() {
              _fnCallbackFire(context, null, "requestChild", [this]);
            });
          }
        });
        var __details_add = function(ctx, row, data, klass) {
          var rows = [];
          var addRow = function(r3, k3) {
            if (Array.isArray(r3) || r3 instanceof $3) {
              for (var i4 = 0, ien = r3.length; i4 < ien; i4++) {
                addRow(r3[i4], k3);
              }
              return;
            }
            if (r3.nodeName && r3.nodeName.toLowerCase() === "tr") {
              rows.push(r3);
            } else {
              var created = $3("<tr><td></td></tr>").addClass(k3);
              $3("td", created).addClass(k3).html(r3)[0].colSpan = _fnVisbleColumns(ctx);
              rows.push(created[0]);
            }
          };
          addRow(data, klass);
          if (row._details) {
            row._details.detach();
          }
          row._details = $3(rows);
          if (row._detailsShow) {
            row._details.insertAfter(row.nTr);
          }
        };
        var __details_state = DataTable.util.throttle(
          function(ctx) {
            _fnSaveState(ctx[0]);
          },
          500
        );
        var __details_remove = function(api, idx) {
          var ctx = api.context;
          if (ctx.length) {
            var row = ctx[0].aoData[idx !== undefined2 ? idx : api[0]];
            if (row && row._details) {
              row._details.remove();
              row._detailsShow = undefined2;
              row._details = undefined2;
              $3(row.nTr).removeClass("dt-hasChild");
              __details_state(ctx);
            }
          }
        };
        var __details_display = function(api, show) {
          var ctx = api.context;
          if (ctx.length && api.length) {
            var row = ctx[0].aoData[api[0]];
            if (row._details) {
              row._detailsShow = show;
              if (show) {
                row._details.insertAfter(row.nTr);
                $3(row.nTr).addClass("dt-hasChild");
              } else {
                row._details.detach();
                $3(row.nTr).removeClass("dt-hasChild");
              }
              _fnCallbackFire(ctx[0], null, "childRow", [show, api.row(api[0])]);
              __details_events(ctx[0]);
              __details_state(ctx);
            }
          }
        };
        var __details_events = function(settings) {
          var api = new _Api(settings);
          var namespace = ".dt.DT_details";
          var drawEvent = "draw" + namespace;
          var colvisEvent = "column-sizing" + namespace;
          var destroyEvent = "destroy" + namespace;
          var data = settings.aoData;
          api.off(drawEvent + " " + colvisEvent + " " + destroyEvent);
          if (_pluck(data, "_details").length > 0) {
            api.on(drawEvent, function(e3, ctx) {
              if (settings !== ctx) {
                return;
              }
              api.rows({ page: "current" }).eq(0).each(function(idx) {
                var row = data[idx];
                if (row._detailsShow) {
                  row._details.insertAfter(row.nTr);
                }
              });
            });
            api.on(colvisEvent, function(e3, ctx, idx, vis) {
              if (settings !== ctx) {
                return;
              }
              var row, visible = _fnVisbleColumns(ctx);
              for (var i4 = 0, ien = data.length; i4 < ien; i4++) {
                row = data[i4];
                if (row._details) {
                  row._details.children("td[colspan]").attr("colspan", visible);
                }
              }
            });
            api.on(destroyEvent, function(e3, ctx) {
              if (settings !== ctx) {
                return;
              }
              for (var i4 = 0, ien = data.length; i4 < ien; i4++) {
                if (data[i4]._details) {
                  __details_remove(api, i4);
                }
              }
            });
          }
        };
        var _emp = "";
        var _child_obj = _emp + "row().child";
        var _child_mth = _child_obj + "()";
        _api_register(_child_mth, function(data, klass) {
          var ctx = this.context;
          if (data === undefined2) {
            return ctx.length && this.length ? ctx[0].aoData[this[0]]._details : undefined2;
          } else if (data === true) {
            this.child.show();
          } else if (data === false) {
            __details_remove(this);
          } else if (ctx.length && this.length) {
            __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);
          }
          return this;
        });
        _api_register([
          _child_obj + ".show()",
          _child_mth + ".show()"
        ], function(show) {
          __details_display(this, true);
          return this;
        });
        _api_register([
          _child_obj + ".hide()",
          _child_mth + ".hide()"
        ], function() {
          __details_display(this, false);
          return this;
        });
        _api_register([
          _child_obj + ".remove()",
          _child_mth + ".remove()"
        ], function() {
          __details_remove(this);
          return this;
        });
        _api_register(_child_obj + ".isShown()", function() {
          var ctx = this.context;
          if (ctx.length && this.length) {
            return ctx[0].aoData[this[0]]._detailsShow || false;
          }
          return false;
        });
        var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;
        var __columnData = function(settings, column, r1, r22, rows) {
          var a3 = [];
          for (var row = 0, ien = rows.length; row < ien; row++) {
            a3.push(_fnGetCellData(settings, rows[row], column));
          }
          return a3;
        };
        var __column_selector = function(settings, selector, opts) {
          var columns = settings.aoColumns, names = _pluck(columns, "sName"), nodes = _pluck(columns, "nTh");
          var run = function(s3) {
            var selInt = _intVal(s3);
            if (s3 === "") {
              return _range(columns.length);
            }
            if (selInt !== null) {
              return [
                selInt >= 0 ? selInt : columns.length + selInt
              ];
            }
            if (typeof s3 === "function") {
              var rows = _selector_row_indexes(settings, opts);
              return $3.map(columns, function(col, idx2) {
                return s3(
                  idx2,
                  __columnData(settings, idx2, 0, 0, rows),
                  nodes[idx2]
                ) ? idx2 : null;
              });
            }
            var match = typeof s3 === "string" ? s3.match(__re_column_selector) : "";
            if (match) {
              switch (match[2]) {
                case "visIdx":
                case "visible":
                  var idx = parseInt(match[1], 10);
                  if (idx < 0) {
                    var visColumns = $3.map(columns, function(col, i4) {
                      return col.bVisible ? i4 : null;
                    });
                    return [visColumns[visColumns.length + idx]];
                  }
                  return [_fnVisibleToColumnIndex(settings, idx)];
                case "name":
                  return $3.map(names, function(name, i4) {
                    return name === match[1] ? i4 : null;
                  });
                default:
                  return [];
              }
            }
            if (s3.nodeName && s3._DT_CellIndex) {
              return [s3._DT_CellIndex.column];
            }
            var jqResult = $3(nodes).filter(s3).map(function() {
              return $3.inArray(this, nodes);
            }).toArray();
            if (jqResult.length || !s3.nodeName) {
              return jqResult;
            }
            var host = $3(s3).closest("*[data-dt-column]");
            return host.length ? [host.data("dt-column")] : [];
          };
          return _selector_run("column", selector, run, settings, opts);
        };
        var __setColumnVis = function(settings, column, vis) {
          var cols = settings.aoColumns, col = cols[column], data = settings.aoData, row, cells, i4, ien, tr;
          if (vis === undefined2) {
            return col.bVisible;
          }
          if (col.bVisible === vis) {
            return;
          }
          if (vis) {
            var insertBefore = $3.inArray(true, _pluck(cols, "bVisible"), column + 1);
            for (i4 = 0, ien = data.length; i4 < ien; i4++) {
              tr = data[i4].nTr;
              cells = data[i4].anCells;
              if (tr) {
                tr.insertBefore(cells[column], cells[insertBefore] || null);
              }
            }
          } else {
            $3(_pluck(settings.aoData, "anCells", column)).detach();
          }
          col.bVisible = vis;
        };
        _api_register("columns()", function(selector, opts) {
          if (selector === undefined2) {
            selector = "";
          } else if ($3.isPlainObject(selector)) {
            opts = selector;
            selector = "";
          }
          opts = _selector_opts(opts);
          var inst = this.iterator("table", function(settings) {
            return __column_selector(settings, selector, opts);
          }, 1);
          inst.selector.cols = selector;
          inst.selector.opts = opts;
          return inst;
        });
        _api_registerPlural("columns().header()", "column().header()", function(selector, opts) {
          return this.iterator("column", function(settings, column) {
            return settings.aoColumns[column].nTh;
          }, 1);
        });
        _api_registerPlural("columns().footer()", "column().footer()", function(selector, opts) {
          return this.iterator("column", function(settings, column) {
            return settings.aoColumns[column].nTf;
          }, 1);
        });
        _api_registerPlural("columns().data()", "column().data()", function() {
          return this.iterator("column-rows", __columnData, 1);
        });
        _api_registerPlural("columns().dataSrc()", "column().dataSrc()", function() {
          return this.iterator("column", function(settings, column) {
            return settings.aoColumns[column].mData;
          }, 1);
        });
        _api_registerPlural("columns().cache()", "column().cache()", function(type) {
          return this.iterator("column-rows", function(settings, column, i4, j4, rows) {
            return _pluck_order(
              settings.aoData,
              rows,
              type === "search" ? "_aFilterData" : "_aSortData",
              column
            );
          }, 1);
        });
        _api_registerPlural("columns().nodes()", "column().nodes()", function() {
          return this.iterator("column-rows", function(settings, column, i4, j4, rows) {
            return _pluck_order(settings.aoData, rows, "anCells", column);
          }, 1);
        });
        _api_registerPlural("columns().visible()", "column().visible()", function(vis, calc) {
          var that = this;
          var ret = this.iterator("column", function(settings, column) {
            if (vis === undefined2) {
              return settings.aoColumns[column].bVisible;
            }
            __setColumnVis(settings, column, vis);
          });
          if (vis !== undefined2) {
            this.iterator("table", function(settings) {
              _fnDrawHead(settings, settings.aoHeader);
              _fnDrawHead(settings, settings.aoFooter);
              if (!settings.aiDisplay.length) {
                $3(settings.nTBody).find("td[colspan]").attr("colspan", _fnVisbleColumns(settings));
              }
              _fnSaveState(settings);
              that.iterator("column", function(settings2, column) {
                _fnCallbackFire(settings2, null, "column-visibility", [settings2, column, vis, calc]);
              });
              if (calc === undefined2 || calc) {
                that.columns.adjust();
              }
            });
          }
          return ret;
        });
        _api_registerPlural("columns().indexes()", "column().index()", function(type) {
          return this.iterator("column", function(settings, column) {
            return type === "visible" ? _fnColumnIndexToVisible(settings, column) : column;
          }, 1);
        });
        _api_register("columns.adjust()", function() {
          return this.iterator("table", function(settings) {
            _fnAdjustColumnSizing(settings);
          }, 1);
        });
        _api_register("column.index()", function(type, idx) {
          if (this.context.length !== 0) {
            var ctx = this.context[0];
            if (type === "fromVisible" || type === "toData") {
              return _fnVisibleToColumnIndex(ctx, idx);
            } else if (type === "fromData" || type === "toVisible") {
              return _fnColumnIndexToVisible(ctx, idx);
            }
          }
        });
        _api_register("column()", function(selector, opts) {
          return _selector_first(this.columns(selector, opts));
        });
        var __cell_selector = function(settings, selector, opts) {
          var data = settings.aoData;
          var rows = _selector_row_indexes(settings, opts);
          var cells = _removeEmpty(_pluck_order(data, rows, "anCells"));
          var allCells = $3(_flatten([], cells));
          var row;
          var columns = settings.aoColumns.length;
          var a3, i4, ien, j4, o2, host;
          var run = function(s3) {
            var fnSelector = typeof s3 === "function";
            if (s3 === null || s3 === undefined2 || fnSelector) {
              a3 = [];
              for (i4 = 0, ien = rows.length; i4 < ien; i4++) {
                row = rows[i4];
                for (j4 = 0; j4 < columns; j4++) {
                  o2 = {
                    row,
                    column: j4
                  };
                  if (fnSelector) {
                    host = data[row];
                    if (s3(o2, _fnGetCellData(settings, row, j4), host.anCells ? host.anCells[j4] : null)) {
                      a3.push(o2);
                    }
                  } else {
                    a3.push(o2);
                  }
                }
              }
              return a3;
            }
            if ($3.isPlainObject(s3)) {
              return s3.column !== undefined2 && s3.row !== undefined2 && $3.inArray(s3.row, rows) !== -1 ? [s3] : [];
            }
            var jqResult = allCells.filter(s3).map(function(i5, el) {
              return {
                row: el._DT_CellIndex.row,
                column: el._DT_CellIndex.column
              };
            }).toArray();
            if (jqResult.length || !s3.nodeName) {
              return jqResult;
            }
            host = $3(s3).closest("*[data-dt-row]");
            return host.length ? [{
              row: host.data("dt-row"),
              column: host.data("dt-column")
            }] : [];
          };
          return _selector_run("cell", selector, run, settings, opts);
        };
        _api_register("cells()", function(rowSelector, columnSelector, opts) {
          if ($3.isPlainObject(rowSelector)) {
            if (rowSelector.row === undefined2) {
              opts = rowSelector;
              rowSelector = null;
            } else {
              opts = columnSelector;
              columnSelector = null;
            }
          }
          if ($3.isPlainObject(columnSelector)) {
            opts = columnSelector;
            columnSelector = null;
          }
          if (columnSelector === null || columnSelector === undefined2) {
            return this.iterator("table", function(settings) {
              return __cell_selector(settings, rowSelector, _selector_opts(opts));
            });
          }
          var internalOpts = opts ? {
            page: opts.page,
            order: opts.order,
            search: opts.search
          } : {};
          var columns = this.columns(columnSelector, internalOpts);
          var rows = this.rows(rowSelector, internalOpts);
          var i4, ien, j4, jen;
          var cellsNoOpts = this.iterator("table", function(settings, idx) {
            var a3 = [];
            for (i4 = 0, ien = rows[idx].length; i4 < ien; i4++) {
              for (j4 = 0, jen = columns[idx].length; j4 < jen; j4++) {
                a3.push({
                  row: rows[idx][i4],
                  column: columns[idx][j4]
                });
              }
            }
            return a3;
          }, 1);
          var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;
          $3.extend(cells.selector, {
            cols: columnSelector,
            rows: rowSelector,
            opts
          });
          return cells;
        });
        _api_registerPlural("cells().nodes()", "cell().node()", function() {
          return this.iterator("cell", function(settings, row, column) {
            var data = settings.aoData[row];
            return data && data.anCells ? data.anCells[column] : undefined2;
          }, 1);
        });
        _api_register("cells().data()", function() {
          return this.iterator("cell", function(settings, row, column) {
            return _fnGetCellData(settings, row, column);
          }, 1);
        });
        _api_registerPlural("cells().cache()", "cell().cache()", function(type) {
          type = type === "search" ? "_aFilterData" : "_aSortData";
          return this.iterator("cell", function(settings, row, column) {
            return settings.aoData[row][type][column];
          }, 1);
        });
        _api_registerPlural("cells().render()", "cell().render()", function(type) {
          return this.iterator("cell", function(settings, row, column) {
            return _fnGetCellData(settings, row, column, type);
          }, 1);
        });
        _api_registerPlural("cells().indexes()", "cell().index()", function() {
          return this.iterator("cell", function(settings, row, column) {
            return {
              row,
              column,
              columnVisible: _fnColumnIndexToVisible(settings, column)
            };
          }, 1);
        });
        _api_registerPlural("cells().invalidate()", "cell().invalidate()", function(src) {
          return this.iterator("cell", function(settings, row, column) {
            _fnInvalidate(settings, row, src, column);
          });
        });
        _api_register("cell()", function(rowSelector, columnSelector, opts) {
          return _selector_first(this.cells(rowSelector, columnSelector, opts));
        });
        _api_register("cell().data()", function(data) {
          var ctx = this.context;
          var cell = this[0];
          if (data === undefined2) {
            return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined2;
          }
          _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);
          _fnInvalidate(ctx[0], cell[0].row, "data", cell[0].column);
          return this;
        });
        _api_register("order()", function(order, dir) {
          var ctx = this.context;
          if (order === undefined2) {
            return ctx.length !== 0 ? ctx[0].aaSorting : undefined2;
          }
          if (typeof order === "number") {
            order = [[order, dir]];
          } else if (order.length && !Array.isArray(order[0])) {
            order = Array.prototype.slice.call(arguments);
          }
          return this.iterator("table", function(settings) {
            settings.aaSorting = order.slice();
          });
        });
        _api_register("order.listener()", function(node, column, callback) {
          return this.iterator("table", function(settings) {
            _fnSortAttachListener(settings, node, column, callback);
          });
        });
        _api_register("order.fixed()", function(set) {
          if (!set) {
            var ctx = this.context;
            var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined2;
            return Array.isArray(fixed) ? { pre: fixed } : fixed;
          }
          return this.iterator("table", function(settings) {
            settings.aaSortingFixed = $3.extend(true, {}, set);
          });
        });
        _api_register([
          "columns().order()",
          "column().order()"
        ], function(dir) {
          var that = this;
          return this.iterator("table", function(settings, i4) {
            var sort = [];
            $3.each(that[i4], function(j4, col) {
              sort.push([col, dir]);
            });
            settings.aaSorting = sort;
          });
        });
        _api_register("search()", function(input, regex, smart, caseInsen) {
          var ctx = this.context;
          if (input === undefined2) {
            return ctx.length !== 0 ? ctx[0].oPreviousSearch.sSearch : undefined2;
          }
          return this.iterator("table", function(settings) {
            if (!settings.oFeatures.bFilter) {
              return;
            }
            _fnFilterComplete(settings, $3.extend({}, settings.oPreviousSearch, {
              "sSearch": input + "",
              "bRegex": regex === null ? false : regex,
              "bSmart": smart === null ? true : smart,
              "bCaseInsensitive": caseInsen === null ? true : caseInsen
            }), 1);
          });
        });
        _api_registerPlural(
          "columns().search()",
          "column().search()",
          function(input, regex, smart, caseInsen) {
            return this.iterator("column", function(settings, column) {
              var preSearch = settings.aoPreSearchCols;
              if (input === undefined2) {
                return preSearch[column].sSearch;
              }
              if (!settings.oFeatures.bFilter) {
                return;
              }
              $3.extend(preSearch[column], {
                "sSearch": input + "",
                "bRegex": regex === null ? false : regex,
                "bSmart": smart === null ? true : smart,
                "bCaseInsensitive": caseInsen === null ? true : caseInsen
              });
              _fnFilterComplete(settings, settings.oPreviousSearch, 1);
            });
          }
        );
        _api_register("state()", function() {
          return this.context.length ? this.context[0].oSavedState : null;
        });
        _api_register("state.clear()", function() {
          return this.iterator("table", function(settings) {
            settings.fnStateSaveCallback.call(settings.oInstance, settings, {});
          });
        });
        _api_register("state.loaded()", function() {
          return this.context.length ? this.context[0].oLoadedState : null;
        });
        _api_register("state.save()", function() {
          return this.iterator("table", function(settings) {
            _fnSaveState(settings);
          });
        });
        DataTable.versionCheck = DataTable.fnVersionCheck = function(version) {
          var aThis = DataTable.version.split(".");
          var aThat = version.split(".");
          var iThis, iThat;
          for (var i4 = 0, iLen = aThat.length; i4 < iLen; i4++) {
            iThis = parseInt(aThis[i4], 10) || 0;
            iThat = parseInt(aThat[i4], 10) || 0;
            if (iThis === iThat) {
              continue;
            }
            return iThis > iThat;
          }
          return true;
        };
        DataTable.isDataTable = DataTable.fnIsDataTable = function(table) {
          var t3 = $3(table).get(0);
          var is = false;
          if (table instanceof DataTable.Api) {
            return true;
          }
          $3.each(DataTable.settings, function(i4, o2) {
            var head = o2.nScrollHead ? $3("table", o2.nScrollHead)[0] : null;
            var foot = o2.nScrollFoot ? $3("table", o2.nScrollFoot)[0] : null;
            if (o2.nTable === t3 || head === t3 || foot === t3) {
              is = true;
            }
          });
          return is;
        };
        DataTable.tables = DataTable.fnTables = function(visible) {
          var api = false;
          if ($3.isPlainObject(visible)) {
            api = visible.api;
            visible = visible.visible;
          }
          var a3 = $3.map(DataTable.settings, function(o2) {
            if (!visible || visible && $3(o2.nTable).is(":visible")) {
              return o2.nTable;
            }
          });
          return api ? new _Api(a3) : a3;
        };
        DataTable.camelToHungarian = _fnCamelToHungarian;
        _api_register("$()", function(selector, opts) {
          var rows = this.rows(opts).nodes(), jqRows = $3(rows);
          return $3([].concat(
            jqRows.filter(selector).toArray(),
            jqRows.find(selector).toArray()
          ));
        });
        $3.each(["on", "one", "off"], function(i4, key) {
          _api_register(key + "()", function() {
            var args = Array.prototype.slice.call(arguments);
            args[0] = $3.map(args[0].split(/\s/), function(e3) {
              return !e3.match(/\.dt\b/) ? e3 + ".dt" : e3;
            }).join(" ");
            var inst = $3(this.tables().nodes());
            inst[key].apply(inst, args);
            return this;
          });
        });
        _api_register("clear()", function() {
          return this.iterator("table", function(settings) {
            _fnClearTable(settings);
          });
        });
        _api_register("settings()", function() {
          return new _Api(this.context, this.context);
        });
        _api_register("init()", function() {
          var ctx = this.context;
          return ctx.length ? ctx[0].oInit : null;
        });
        _api_register("data()", function() {
          return this.iterator("table", function(settings) {
            return _pluck(settings.aoData, "_aData");
          }).flatten();
        });
        _api_register("destroy()", function(remove) {
          remove = remove || false;
          return this.iterator("table", function(settings) {
            var classes = settings.oClasses;
            var table = settings.nTable;
            var tbody = settings.nTBody;
            var thead = settings.nTHead;
            var tfoot = settings.nTFoot;
            var jqTable = $3(table);
            var jqTbody = $3(tbody);
            var jqWrapper = $3(settings.nTableWrapper);
            var rows = $3.map(settings.aoData, function(r3) {
              return r3.nTr;
            });
            var i4, ien;
            settings.bDestroying = true;
            _fnCallbackFire(settings, "aoDestroyCallback", "destroy", [settings]);
            if (!remove) {
              new _Api(settings).columns().visible(true);
            }
            jqWrapper.off(".DT").find(":not(tbody *)").off(".DT");
            $3(window2).off(".DT-" + settings.sInstance);
            if (table != thead.parentNode) {
              jqTable.children("thead").detach();
              jqTable.append(thead);
            }
            if (tfoot && table != tfoot.parentNode) {
              jqTable.children("tfoot").detach();
              jqTable.append(tfoot);
            }
            settings.aaSorting = [];
            settings.aaSortingFixed = [];
            _fnSortingClasses(settings);
            $3(rows).removeClass(settings.asStripeClasses.join(" "));
            $3("th, td", thead).removeClass(
              classes.sSortable + " " + classes.sSortableAsc + " " + classes.sSortableDesc + " " + classes.sSortableNone
            );
            jqTbody.children().detach();
            jqTbody.append(rows);
            var orig = settings.nTableWrapper.parentNode;
            var removedMethod = remove ? "remove" : "detach";
            jqTable[removedMethod]();
            jqWrapper[removedMethod]();
            if (!remove && orig) {
              orig.insertBefore(table, settings.nTableReinsertBefore);
              jqTable.css("width", settings.sDestroyWidth).removeClass(classes.sTable);
              ien = settings.asDestroyStripes.length;
              if (ien) {
                jqTbody.children().each(function(i5) {
                  $3(this).addClass(settings.asDestroyStripes[i5 % ien]);
                });
              }
            }
            var idx = $3.inArray(settings, DataTable.settings);
            if (idx !== -1) {
              DataTable.settings.splice(idx, 1);
            }
          });
        });
        $3.each(["column", "row", "cell"], function(i4, type) {
          _api_register(type + "s().every()", function(fn) {
            var opts = this.selector.opts;
            var api = this;
            return this.iterator(type, function(settings, arg1, arg2, arg3, arg4) {
              fn.call(
                api[type](
                  arg1,
                  type === "cell" ? arg2 : opts,
                  type === "cell" ? opts : undefined2
                ),
                arg1,
                arg2,
                arg3,
                arg4
              );
            });
          });
        });
        _api_register("i18n()", function(token, def, plural) {
          var ctx = this.context[0];
          var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);
          if (resolved === undefined2) {
            resolved = def;
          }
          if (plural !== undefined2 && $3.isPlainObject(resolved)) {
            resolved = resolved[plural] !== undefined2 ? resolved[plural] : resolved._;
          }
          return resolved.replace("%d", plural);
        });
        DataTable.version = "1.12.1";
        DataTable.settings = [];
        DataTable.models = {};
        DataTable.models.oSearch = {
          "bCaseInsensitive": true,
          "sSearch": "",
          "bRegex": false,
          "bSmart": true,
          "return": false
        };
        DataTable.models.oRow = {
          "nTr": null,
          "anCells": null,
          "_aData": [],
          "_aSortData": null,
          "_aFilterData": null,
          "_sFilterRow": null,
          "_sRowStripe": "",
          "src": null,
          "idx": -1
        };
        DataTable.models.oColumn = {
          "idx": null,
          "aDataSort": null,
          "asSorting": null,
          "bSearchable": null,
          "bSortable": null,
          "bVisible": null,
          "_sManualType": null,
          "_bAttrSrc": false,
          "fnCreatedCell": null,
          "fnGetData": null,
          "fnSetData": null,
          "mData": null,
          "mRender": null,
          "nTh": null,
          "nTf": null,
          "sClass": null,
          "sContentPadding": null,
          "sDefaultContent": null,
          "sName": null,
          "sSortDataType": "std",
          "sSortingClass": null,
          "sSortingClassJUI": null,
          "sTitle": null,
          "sType": null,
          "sWidth": null,
          "sWidthOrig": null
        };
        DataTable.defaults = {
          "aaData": null,
          "aaSorting": [[0, "asc"]],
          "aaSortingFixed": [],
          "ajax": null,
          "aLengthMenu": [10, 25, 50, 100],
          "aoColumns": null,
          "aoColumnDefs": null,
          "aoSearchCols": [],
          "asStripeClasses": null,
          "bAutoWidth": true,
          "bDeferRender": false,
          "bDestroy": false,
          "bFilter": true,
          "bInfo": true,
          "bLengthChange": true,
          "bPaginate": true,
          "bProcessing": false,
          "bRetrieve": false,
          "bScrollCollapse": false,
          "bServerSide": false,
          "bSort": true,
          "bSortMulti": true,
          "bSortCellsTop": false,
          "bSortClasses": true,
          "bStateSave": false,
          "fnCreatedRow": null,
          "fnDrawCallback": null,
          "fnFooterCallback": null,
          "fnFormatNumber": function(toFormat) {
            return toFormat.toString().replace(
              /\B(?=(\d{3})+(?!\d))/g,
              this.oLanguage.sThousands
            );
          },
          "fnHeaderCallback": null,
          "fnInfoCallback": null,
          "fnInitComplete": null,
          "fnPreDrawCallback": null,
          "fnRowCallback": null,
          "fnServerData": null,
          "fnServerParams": null,
          "fnStateLoadCallback": function(settings) {
            try {
              return JSON.parse(
                (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
                  "DataTables_" + settings.sInstance + "_" + location.pathname
                )
              );
            } catch (e3) {
              return {};
            }
          },
          "fnStateLoadParams": null,
          "fnStateLoaded": null,
          "fnStateSaveCallback": function(settings, data) {
            try {
              (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
                "DataTables_" + settings.sInstance + "_" + location.pathname,
                JSON.stringify(data)
              );
            } catch (e3) {
            }
          },
          "fnStateSaveParams": null,
          "iStateDuration": 7200,
          "iDeferLoading": null,
          "iDisplayLength": 10,
          "iDisplayStart": 0,
          "iTabIndex": 0,
          "oClasses": {},
          "oLanguage": {
            "oAria": {
              "sSortAscending": ": activate to sort column ascending",
              "sSortDescending": ": activate to sort column descending"
            },
            "oPaginate": {
              "sFirst": "First",
              "sLast": "Last",
              "sNext": "Next",
              "sPrevious": "Previous"
            },
            "sEmptyTable": "No data available in table",
            "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
            "sInfoEmpty": "Showing 0 to 0 of 0 entries",
            "sInfoFiltered": "(filtered from _MAX_ total entries)",
            "sInfoPostFix": "",
            "sDecimal": "",
            "sThousands": ",",
            "sLengthMenu": "Show _MENU_ entries",
            "sLoadingRecords": "Loading...",
            "sProcessing": "",
            "sSearch": "Search:",
            "sSearchPlaceholder": "",
            "sUrl": "",
            "sZeroRecords": "No matching records found"
          },
          "oSearch": $3.extend({}, DataTable.models.oSearch),
          "sAjaxDataProp": "data",
          "sAjaxSource": null,
          "sDom": "lfrtip",
          "searchDelay": null,
          "sPaginationType": "simple_numbers",
          "sScrollX": "",
          "sScrollXInner": "",
          "sScrollY": "",
          "sServerMethod": "GET",
          "renderer": null,
          "rowId": "DT_RowId"
        };
        _fnHungarianMap(DataTable.defaults);
        DataTable.defaults.column = {
          "aDataSort": null,
          "iDataSort": -1,
          "asSorting": ["asc", "desc"],
          "bSearchable": true,
          "bSortable": true,
          "bVisible": true,
          "fnCreatedCell": null,
          "mData": null,
          "mRender": null,
          "sCellType": "td",
          "sClass": "",
          "sContentPadding": "",
          "sDefaultContent": null,
          "sName": "",
          "sSortDataType": "std",
          "sTitle": null,
          "sType": null,
          "sWidth": null
        };
        _fnHungarianMap(DataTable.defaults.column);
        DataTable.models.oSettings = {
          "oFeatures": {
            "bAutoWidth": null,
            "bDeferRender": null,
            "bFilter": null,
            "bInfo": null,
            "bLengthChange": null,
            "bPaginate": null,
            "bProcessing": null,
            "bServerSide": null,
            "bSort": null,
            "bSortMulti": null,
            "bSortClasses": null,
            "bStateSave": null
          },
          "oScroll": {
            "bCollapse": null,
            "iBarWidth": 0,
            "sX": null,
            "sXInner": null,
            "sY": null
          },
          "oLanguage": {
            "fnInfoCallback": null
          },
          "oBrowser": {
            "bScrollOversize": false,
            "bScrollbarLeft": false,
            "bBounding": false,
            "barWidth": 0
          },
          "ajax": null,
          "aanFeatures": [],
          "aoData": [],
          "aiDisplay": [],
          "aiDisplayMaster": [],
          "aIds": {},
          "aoColumns": [],
          "aoHeader": [],
          "aoFooter": [],
          "oPreviousSearch": {},
          "aoPreSearchCols": [],
          "aaSorting": null,
          "aaSortingFixed": [],
          "asStripeClasses": null,
          "asDestroyStripes": [],
          "sDestroyWidth": 0,
          "aoRowCallback": [],
          "aoHeaderCallback": [],
          "aoFooterCallback": [],
          "aoDrawCallback": [],
          "aoRowCreatedCallback": [],
          "aoPreDrawCallback": [],
          "aoInitComplete": [],
          "aoStateSaveParams": [],
          "aoStateLoadParams": [],
          "aoStateLoaded": [],
          "sTableId": "",
          "nTable": null,
          "nTHead": null,
          "nTFoot": null,
          "nTBody": null,
          "nTableWrapper": null,
          "bDeferLoading": false,
          "bInitialised": false,
          "aoOpenRows": [],
          "sDom": null,
          "searchDelay": null,
          "sPaginationType": "two_button",
          "iStateDuration": 0,
          "aoStateSave": [],
          "aoStateLoad": [],
          "oSavedState": null,
          "oLoadedState": null,
          "sAjaxSource": null,
          "sAjaxDataProp": null,
          "jqXHR": null,
          "json": undefined2,
          "oAjaxData": undefined2,
          "fnServerData": null,
          "aoServerParams": [],
          "sServerMethod": null,
          "fnFormatNumber": null,
          "aLengthMenu": null,
          "iDraw": 0,
          "bDrawing": false,
          "iDrawError": -1,
          "_iDisplayLength": 10,
          "_iDisplayStart": 0,
          "_iRecordsTotal": 0,
          "_iRecordsDisplay": 0,
          "oClasses": {},
          "bFiltered": false,
          "bSorted": false,
          "bSortCellsTop": null,
          "oInit": null,
          "aoDestroyCallback": [],
          "fnRecordsTotal": function() {
            return _fnDataSource(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;
          },
          "fnRecordsDisplay": function() {
            return _fnDataSource(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length;
          },
          "fnDisplayEnd": function() {
            var len = this._iDisplayLength, start = this._iDisplayStart, calc = start + len, records = this.aiDisplay.length, features = this.oFeatures, paginate = features.bPaginate;
            if (features.bServerSide) {
              return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);
            } else {
              return !paginate || calc > records || len === -1 ? records : calc;
            }
          },
          "oInstance": null,
          "sInstance": null,
          "iTabIndex": 0,
          "nScrollHead": null,
          "nScrollFoot": null,
          "aLastSort": [],
          "oPlugins": {},
          "rowIdFn": null,
          "rowId": null
        };
        DataTable.ext = _ext = {
          buttons: {},
          classes: {},
          builder: "-source-",
          errMode: "alert",
          feature: [],
          search: [],
          selector: {
            cell: [],
            column: [],
            row: []
          },
          internal: {},
          legacy: {
            ajax: null
          },
          pager: {},
          renderer: {
            pageButton: {},
            header: {}
          },
          order: {},
          type: {
            detect: [],
            search: {},
            order: {}
          },
          _unique: 0,
          fnVersionCheck: DataTable.fnVersionCheck,
          iApiIndex: 0,
          oJUIClasses: {},
          sVersion: DataTable.version
        };
        $3.extend(_ext, {
          afnFiltering: _ext.search,
          aTypes: _ext.type.detect,
          ofnSearch: _ext.type.search,
          oSort: _ext.type.order,
          afnSortData: _ext.order,
          aoFeatures: _ext.feature,
          oApi: _ext.internal,
          oStdClasses: _ext.classes,
          oPagination: _ext.pager
        });
        $3.extend(DataTable.ext.classes, {
          "sTable": "dataTable",
          "sNoFooter": "no-footer",
          "sPageButton": "paginate_button",
          "sPageButtonActive": "current",
          "sPageButtonDisabled": "disabled",
          "sStripeOdd": "odd",
          "sStripeEven": "even",
          "sRowEmpty": "dataTables_empty",
          "sWrapper": "dataTables_wrapper",
          "sFilter": "dataTables_filter",
          "sInfo": "dataTables_info",
          "sPaging": "dataTables_paginate paging_",
          "sLength": "dataTables_length",
          "sProcessing": "dataTables_processing",
          "sSortAsc": "sorting_asc",
          "sSortDesc": "sorting_desc",
          "sSortable": "sorting",
          "sSortableAsc": "sorting_desc_disabled",
          "sSortableDesc": "sorting_asc_disabled",
          "sSortableNone": "sorting_disabled",
          "sSortColumn": "sorting_",
          "sFilterInput": "",
          "sLengthSelect": "",
          "sScrollWrapper": "dataTables_scroll",
          "sScrollHead": "dataTables_scrollHead",
          "sScrollHeadInner": "dataTables_scrollHeadInner",
          "sScrollBody": "dataTables_scrollBody",
          "sScrollFoot": "dataTables_scrollFoot",
          "sScrollFootInner": "dataTables_scrollFootInner",
          "sHeaderTH": "",
          "sFooterTH": "",
          "sSortJUIAsc": "",
          "sSortJUIDesc": "",
          "sSortJUI": "",
          "sSortJUIAscAllowed": "",
          "sSortJUIDescAllowed": "",
          "sSortJUIWrapper": "",
          "sSortIcon": "",
          "sJUIHeader": "",
          "sJUIFooter": ""
        });
        var extPagination = DataTable.ext.pager;
        function _numbers(page, pages) {
          var numbers = [], buttons = extPagination.numbers_length, half = Math.floor(buttons / 2), i4 = 1;
          if (pages <= buttons) {
            numbers = _range(0, pages);
          } else if (page <= half) {
            numbers = _range(0, buttons - 2);
            numbers.push("ellipsis");
            numbers.push(pages - 1);
          } else if (page >= pages - 1 - half) {
            numbers = _range(pages - (buttons - 2), pages);
            numbers.splice(0, 0, "ellipsis");
            numbers.splice(0, 0, 0);
          } else {
            numbers = _range(page - half + 2, page + half - 1);
            numbers.push("ellipsis");
            numbers.push(pages - 1);
            numbers.splice(0, 0, "ellipsis");
            numbers.splice(0, 0, 0);
          }
          numbers.DT_el = "span";
          return numbers;
        }
        $3.extend(extPagination, {
          simple: function(page, pages) {
            return ["previous", "next"];
          },
          full: function(page, pages) {
            return ["first", "previous", "next", "last"];
          },
          numbers: function(page, pages) {
            return [_numbers(page, pages)];
          },
          simple_numbers: function(page, pages) {
            return ["previous", _numbers(page, pages), "next"];
          },
          full_numbers: function(page, pages) {
            return ["first", "previous", _numbers(page, pages), "next", "last"];
          },
          first_last_numbers: function(page, pages) {
            return ["first", _numbers(page, pages), "last"];
          },
          _numbers,
          numbers_length: 7
        });
        $3.extend(true, DataTable.ext.renderer, {
          pageButton: {
            _: function(settings, host, idx, buttons, page, pages) {
              var classes = settings.oClasses;
              var lang = settings.oLanguage.oPaginate;
              var aria = settings.oLanguage.oAria.paginate || {};
              var btnDisplay, btnClass, counter = 0;
              var attach = function(container, buttons2) {
                var i4, ien, node, button, tabIndex;
                var disabledClass = classes.sPageButtonDisabled;
                var clickHandler = function(e3) {
                  _fnPageChange(settings, e3.data.action, true);
                };
                for (i4 = 0, ien = buttons2.length; i4 < ien; i4++) {
                  button = buttons2[i4];
                  if (Array.isArray(button)) {
                    var inner = $3("<" + (button.DT_el || "div") + "/>").appendTo(container);
                    attach(inner, button);
                  } else {
                    btnDisplay = null;
                    btnClass = button;
                    tabIndex = settings.iTabIndex;
                    switch (button) {
                      case "ellipsis":
                        container.append('<span class="ellipsis">&#x2026;</span>');
                        break;
                      case "first":
                        btnDisplay = lang.sFirst;
                        if (page === 0) {
                          tabIndex = -1;
                          btnClass += " " + disabledClass;
                        }
                        break;
                      case "previous":
                        btnDisplay = lang.sPrevious;
                        if (page === 0) {
                          tabIndex = -1;
                          btnClass += " " + disabledClass;
                        }
                        break;
                      case "next":
                        btnDisplay = lang.sNext;
                        if (pages === 0 || page === pages - 1) {
                          tabIndex = -1;
                          btnClass += " " + disabledClass;
                        }
                        break;
                      case "last":
                        btnDisplay = lang.sLast;
                        if (pages === 0 || page === pages - 1) {
                          tabIndex = -1;
                          btnClass += " " + disabledClass;
                        }
                        break;
                      default:
                        btnDisplay = settings.fnFormatNumber(button + 1);
                        btnClass = page === button ? classes.sPageButtonActive : "";
                        break;
                    }
                    if (btnDisplay !== null) {
                      node = $3("<a>", {
                        "class": classes.sPageButton + " " + btnClass,
                        "aria-controls": settings.sTableId,
                        "aria-label": aria[button],
                        "data-dt-idx": counter,
                        "tabindex": tabIndex,
                        "id": idx === 0 && typeof button === "string" ? settings.sTableId + "_" + button : null
                      }).html(btnDisplay).appendTo(container);
                      _fnBindAction(
                        node,
                        { action: button },
                        clickHandler
                      );
                      counter++;
                    }
                  }
                }
              };
              var activeEl;
              try {
                activeEl = $3(host).find(document2.activeElement).data("dt-idx");
              } catch (e3) {
              }
              attach($3(host).empty(), buttons);
              if (activeEl !== undefined2) {
                $3(host).find("[data-dt-idx=" + activeEl + "]").trigger("focus");
              }
            }
          }
        });
        $3.extend(DataTable.ext.type.detect, [
          function(d2, settings) {
            var decimal = settings.oLanguage.sDecimal;
            return _isNumber(d2, decimal) ? "num" + decimal : null;
          },
          function(d2, settings) {
            if (d2 && !(d2 instanceof Date) && !_re_date.test(d2)) {
              return null;
            }
            var parsed = Date.parse(d2);
            return parsed !== null && !isNaN(parsed) || _empty(d2) ? "date" : null;
          },
          function(d2, settings) {
            var decimal = settings.oLanguage.sDecimal;
            return _isNumber(d2, decimal, true) ? "num-fmt" + decimal : null;
          },
          function(d2, settings) {
            var decimal = settings.oLanguage.sDecimal;
            return _htmlNumeric(d2, decimal) ? "html-num" + decimal : null;
          },
          function(d2, settings) {
            var decimal = settings.oLanguage.sDecimal;
            return _htmlNumeric(d2, decimal, true) ? "html-num-fmt" + decimal : null;
          },
          function(d2, settings) {
            return _empty(d2) || typeof d2 === "string" && d2.indexOf("<") !== -1 ? "html" : null;
          }
        ]);
        $3.extend(DataTable.ext.type.search, {
          html: function(data) {
            return _empty(data) ? data : typeof data === "string" ? data.replace(_re_new_lines, " ").replace(_re_html, "") : "";
          },
          string: function(data) {
            return _empty(data) ? data : typeof data === "string" ? data.replace(_re_new_lines, " ") : data;
          }
        });
        var __numericReplace = function(d2, decimalPlace, re1, re2) {
          if (d2 !== 0 && (!d2 || d2 === "-")) {
            return -Infinity;
          }
          if (decimalPlace) {
            d2 = _numToDecimal(d2, decimalPlace);
          }
          if (d2.replace) {
            if (re1) {
              d2 = d2.replace(re1, "");
            }
            if (re2) {
              d2 = d2.replace(re2, "");
            }
          }
          return d2 * 1;
        };
        function _addNumericSort(decimalPlace) {
          $3.each(
            {
              "num": function(d2) {
                return __numericReplace(d2, decimalPlace);
              },
              "num-fmt": function(d2) {
                return __numericReplace(d2, decimalPlace, _re_formatted_numeric);
              },
              "html-num": function(d2) {
                return __numericReplace(d2, decimalPlace, _re_html);
              },
              "html-num-fmt": function(d2) {
                return __numericReplace(d2, decimalPlace, _re_html, _re_formatted_numeric);
              }
            },
            function(key, fn) {
              _ext.type.order[key + decimalPlace + "-pre"] = fn;
              if (key.match(/^html\-/)) {
                _ext.type.search[key + decimalPlace] = _ext.type.search.html;
              }
            }
          );
        }
        $3.extend(_ext.type.order, {
          "date-pre": function(d2) {
            var ts = Date.parse(d2);
            return isNaN(ts) ? -Infinity : ts;
          },
          "html-pre": function(a3) {
            return _empty(a3) ? "" : a3.replace ? a3.replace(/<.*?>/g, "").toLowerCase() : a3 + "";
          },
          "string-pre": function(a3) {
            return _empty(a3) ? "" : typeof a3 === "string" ? a3.toLowerCase() : !a3.toString ? "" : a3.toString();
          },
          "string-asc": function(x4, y3) {
            return x4 < y3 ? -1 : x4 > y3 ? 1 : 0;
          },
          "string-desc": function(x4, y3) {
            return x4 < y3 ? 1 : x4 > y3 ? -1 : 0;
          }
        });
        _addNumericSort("");
        $3.extend(true, DataTable.ext.renderer, {
          header: {
            _: function(settings, cell, column, classes) {
              $3(settings.nTable).on("order.dt.DT", function(e3, ctx, sorting, columns) {
                if (settings !== ctx) {
                  return;
                }
                var colIdx = column.idx;
                cell.removeClass(
                  classes.sSortAsc + " " + classes.sSortDesc
                ).addClass(
                  columns[colIdx] == "asc" ? classes.sSortAsc : columns[colIdx] == "desc" ? classes.sSortDesc : column.sSortingClass
                );
              });
            },
            jqueryui: function(settings, cell, column, classes) {
              $3("<div/>").addClass(classes.sSortJUIWrapper).append(cell.contents()).append(
                $3("<span/>").addClass(classes.sSortIcon + " " + column.sSortingClassJUI)
              ).appendTo(cell);
              $3(settings.nTable).on("order.dt.DT", function(e3, ctx, sorting, columns) {
                if (settings !== ctx) {
                  return;
                }
                var colIdx = column.idx;
                cell.removeClass(classes.sSortAsc + " " + classes.sSortDesc).addClass(
                  columns[colIdx] == "asc" ? classes.sSortAsc : columns[colIdx] == "desc" ? classes.sSortDesc : column.sSortingClass
                );
                cell.find("span." + classes.sSortIcon).removeClass(
                  classes.sSortJUIAsc + " " + classes.sSortJUIDesc + " " + classes.sSortJUI + " " + classes.sSortJUIAscAllowed + " " + classes.sSortJUIDescAllowed
                ).addClass(
                  columns[colIdx] == "asc" ? classes.sSortJUIAsc : columns[colIdx] == "desc" ? classes.sSortJUIDesc : column.sSortingClassJUI
                );
              });
            }
          }
        });
        var __htmlEscapeEntities = function(d2) {
          if (Array.isArray(d2)) {
            d2 = d2.join(",");
          }
          return typeof d2 === "string" ? d2.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : d2;
        };
        function __mld(dt2, momentFn, luxonFn, dateFn, arg1) {
          if (window2.moment) {
            return dt2[momentFn](arg1);
          } else if (window2.luxon) {
            return dt2[luxonFn](arg1);
          }
          return dateFn ? dt2[dateFn](arg1) : dt2;
        }
        var __mlWarning = false;
        function __mldObj(d2, format, locale) {
          var dt2;
          if (window2.moment) {
            dt2 = window2.moment.utc(d2, format, locale, true);
            if (!dt2.isValid()) {
              return null;
            }
          } else if (window2.luxon) {
            dt2 = format ? window2.luxon.DateTime.fromFormat(d2, format) : window2.luxon.DateTime.fromISO(d2);
            if (!dt2.isValid) {
              return null;
            }
            dt2.setLocale(locale);
          } else if (!format) {
            dt2 = new Date(d2);
          } else {
            if (!__mlWarning) {
              alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17");
            }
            __mlWarning = true;
          }
          return dt2;
        }
        function __mlHelper(localeString) {
          return function(from, to, locale, def) {
            if (arguments.length === 0) {
              locale = "en";
              to = null;
              from = null;
            } else if (arguments.length === 1) {
              locale = "en";
              to = from;
              from = null;
            } else if (arguments.length === 2) {
              locale = to;
              to = from;
              from = null;
            }
            var typeName = "datetime-" + to;
            if (!DataTable.ext.type.order[typeName]) {
              DataTable.ext.type.detect.unshift(function(d2) {
                return d2 === typeName ? typeName : false;
              });
              DataTable.ext.type.order[typeName + "-asc"] = function(a3, b3) {
                var x4 = a3.valueOf();
                var y3 = b3.valueOf();
                return x4 === y3 ? 0 : x4 < y3 ? -1 : 1;
              };
              DataTable.ext.type.order[typeName + "-desc"] = function(a3, b3) {
                var x4 = a3.valueOf();
                var y3 = b3.valueOf();
                return x4 === y3 ? 0 : x4 > y3 ? -1 : 1;
              };
            }
            return function(d2, type) {
              if (d2 === null || d2 === undefined2) {
                if (def === "--now") {
                  var local = new Date();
                  d2 = new Date(Date.UTC(
                    local.getFullYear(),
                    local.getMonth(),
                    local.getDate(),
                    local.getHours(),
                    local.getMinutes(),
                    local.getSeconds()
                  ));
                } else {
                  d2 = "";
                }
              }
              if (type === "type") {
                return typeName;
              }
              if (d2 === "") {
                return type !== "sort" ? "" : __mldObj("0000-01-01 00:00:00", null, locale);
              }
              if (to !== null && from === to && type !== "sort" && type !== "type" && !(d2 instanceof Date)) {
                return d2;
              }
              var dt2 = __mldObj(d2, from, locale);
              if (dt2 === null) {
                return d2;
              }
              if (type === "sort") {
                return dt2;
              }
              var formatted = to === null ? __mld(dt2, "toDate", "toJSDate", "")[localeString]() : __mld(dt2, "format", "toFormat", "toISOString", to);
              return type === "display" ? __htmlEscapeEntities(formatted) : formatted;
            };
          };
        }
        var __thousands = ",";
        var __decimal = ".";
        if (Intl) {
          try {
            var num = new Intl.NumberFormat().formatToParts(100000.1);
            for (var i3 = 0; i3 < num.length; i3++) {
              if (num[i3].type === "group") {
                __thousands = num[i3].value;
              } else if (num[i3].type === "decimal") {
                __decimal = num[i3].value;
              }
            }
          } catch (e3) {
          }
        }
        DataTable.datetime = function(format, locale) {
          var typeName = "datetime-detect-" + format;
          if (!locale) {
            locale = "en";
          }
          if (!DataTable.ext.type.order[typeName]) {
            DataTable.ext.type.detect.unshift(function(d2) {
              var dt2 = __mldObj(d2, format, locale);
              return d2 === "" || dt2 ? typeName : false;
            });
            DataTable.ext.type.order[typeName + "-pre"] = function(d2) {
              return __mldObj(d2, format, locale) || 0;
            };
          }
        };
        DataTable.render = {
          date: __mlHelper("toLocaleDateString"),
          datetime: __mlHelper("toLocaleString"),
          time: __mlHelper("toLocaleTimeString"),
          number: function(thousands, decimal, precision, prefix, postfix) {
            if (thousands === null || thousands === undefined2) {
              thousands = __thousands;
            }
            if (decimal === null || decimal === undefined2) {
              decimal = __decimal;
            }
            return {
              display: function(d2) {
                if (typeof d2 !== "number" && typeof d2 !== "string") {
                  return d2;
                }
                if (d2 === "" || d2 === null) {
                  return d2;
                }
                var negative = d2 < 0 ? "-" : "";
                var flo = parseFloat(d2);
                if (isNaN(flo)) {
                  return __htmlEscapeEntities(d2);
                }
                flo = flo.toFixed(precision);
                d2 = Math.abs(flo);
                var intPart = parseInt(d2, 10);
                var floatPart = precision ? decimal + (d2 - intPart).toFixed(precision).substring(2) : "";
                if (intPart === 0 && parseFloat(floatPart) === 0) {
                  negative = "";
                }
                return negative + (prefix || "") + intPart.toString().replace(
                  /\B(?=(\d{3})+(?!\d))/g,
                  thousands
                ) + floatPart + (postfix || "");
              }
            };
          },
          text: function() {
            return {
              display: __htmlEscapeEntities,
              filter: __htmlEscapeEntities
            };
          }
        };
        function _fnExternApiFunc(fn) {
          return function() {
            var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(
              Array.prototype.slice.call(arguments)
            );
            return DataTable.ext.internal[fn].apply(this, args);
          };
        }
        $3.extend(DataTable.ext.internal, {
          _fnExternApiFunc,
          _fnBuildAjax,
          _fnAjaxUpdate,
          _fnAjaxParameters,
          _fnAjaxUpdateDraw,
          _fnAjaxDataSrc,
          _fnAddColumn,
          _fnColumnOptions,
          _fnAdjustColumnSizing,
          _fnVisibleToColumnIndex,
          _fnColumnIndexToVisible,
          _fnVisbleColumns,
          _fnGetColumns,
          _fnColumnTypes,
          _fnApplyColumnDefs,
          _fnHungarianMap,
          _fnCamelToHungarian,
          _fnLanguageCompat,
          _fnBrowserDetect,
          _fnAddData,
          _fnAddTr,
          _fnNodeToDataIndex,
          _fnNodeToColumnIndex,
          _fnGetCellData,
          _fnSetCellData,
          _fnSplitObjNotation,
          _fnGetObjectDataFn,
          _fnSetObjectDataFn,
          _fnGetDataMaster,
          _fnClearTable,
          _fnDeleteIndex,
          _fnInvalidate,
          _fnGetRowElements,
          _fnCreateTr,
          _fnBuildHead,
          _fnDrawHead,
          _fnDraw,
          _fnReDraw,
          _fnAddOptionsHtml,
          _fnDetectHeader,
          _fnGetUniqueThs,
          _fnFeatureHtmlFilter,
          _fnFilterComplete,
          _fnFilterCustom,
          _fnFilterColumn,
          _fnFilter,
          _fnFilterCreateSearch,
          _fnEscapeRegex,
          _fnFilterData,
          _fnFeatureHtmlInfo,
          _fnUpdateInfo,
          _fnInfoMacros,
          _fnInitialise,
          _fnInitComplete,
          _fnLengthChange,
          _fnFeatureHtmlLength,
          _fnFeatureHtmlPaginate,
          _fnPageChange,
          _fnFeatureHtmlProcessing,
          _fnProcessingDisplay,
          _fnFeatureHtmlTable,
          _fnScrollDraw,
          _fnApplyToChildren,
          _fnCalculateColumnWidths,
          _fnThrottle,
          _fnConvertToWidth,
          _fnGetWidestNode,
          _fnGetMaxLenString,
          _fnStringToCss,
          _fnSortFlatten,
          _fnSort,
          _fnSortAria,
          _fnSortListener,
          _fnSortAttachListener,
          _fnSortingClasses,
          _fnSortData,
          _fnSaveState,
          _fnLoadState,
          _fnImplementState,
          _fnSettingsFromNode,
          _fnLog,
          _fnMap,
          _fnBindAction,
          _fnCallbackReg,
          _fnCallbackFire,
          _fnLengthOverflow,
          _fnRenderer,
          _fnDataSource,
          _fnRowAttributes,
          _fnExtend,
          _fnCalculateEnd: function() {
          }
        });
        $3.fn.dataTable = DataTable;
        DataTable.$ = $3;
        $3.fn.dataTableSettings = DataTable.settings;
        $3.fn.dataTableExt = DataTable.ext;
        $3.fn.DataTable = function(opts) {
          return $3(this).dataTable(opts).api();
        };
        $3.each(DataTable, function(prop, val) {
          $3.fn.DataTable[prop] = val;
        });
        return DataTable;
      });
    }
  });

  // node_modules/datatables.net-bs4/js/dataTables.bootstrap4.js
  var require_dataTables_bootstrap4 = __commonJS({
    "node_modules/datatables.net-bs4/js/dataTables.bootstrap4.js"(exports, module) {
      (function(factory) {
        if (typeof define === "function" && define.amd) {
          define(["jquery", "datatables.net"], function($3) {
            return factory($3, window, document);
          });
        } else if (typeof exports === "object") {
          module.exports = function(root, $3) {
            if (!root) {
              root = window;
            }
            if (!$3 || !$3.fn.dataTable) {
              $3 = require_jquery_dataTables()(root, $3).$;
            }
            return factory($3, root, root.document);
          };
        } else {
          factory(jQuery, window, document);
        }
      })(function($3, window2, document2, undefined2) {
        "use strict";
        var DataTable = $3.fn.dataTable;
        $3.extend(true, DataTable.defaults, {
          dom: "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
          renderer: "bootstrap"
        });
        $3.extend(DataTable.ext.classes, {
          sWrapper: "dataTables_wrapper dt-bootstrap4",
          sFilterInput: "form-control form-control-sm",
          sLengthSelect: "custom-select custom-select-sm form-control form-control-sm",
          sProcessing: "dataTables_processing card",
          sPageButton: "paginate_button page-item"
        });
        DataTable.ext.renderer.pageButton.bootstrap = function(settings, host, idx, buttons, page, pages) {
          var api = new DataTable.Api(settings);
          var classes = settings.oClasses;
          var lang = settings.oLanguage.oPaginate;
          var aria = settings.oLanguage.oAria.paginate || {};
          var btnDisplay, btnClass, counter = 0;
          var attach = function(container, buttons2) {
            var i3, ien, node, button;
            var clickHandler = function(e3) {
              e3.preventDefault();
              if (!$3(e3.currentTarget).hasClass("disabled") && api.page() != e3.data.action) {
                api.page(e3.data.action).draw("page");
              }
            };
            for (i3 = 0, ien = buttons2.length; i3 < ien; i3++) {
              button = buttons2[i3];
              if (Array.isArray(button)) {
                attach(container, button);
              } else {
                btnDisplay = "";
                btnClass = "";
                switch (button) {
                  case "ellipsis":
                    btnDisplay = "&#x2026;";
                    btnClass = "disabled";
                    break;
                  case "first":
                    btnDisplay = lang.sFirst;
                    btnClass = button + (page > 0 ? "" : " disabled");
                    break;
                  case "previous":
                    btnDisplay = lang.sPrevious;
                    btnClass = button + (page > 0 ? "" : " disabled");
                    break;
                  case "next":
                    btnDisplay = lang.sNext;
                    btnClass = button + (page < pages - 1 ? "" : " disabled");
                    break;
                  case "last":
                    btnDisplay = lang.sLast;
                    btnClass = button + (page < pages - 1 ? "" : " disabled");
                    break;
                  default:
                    btnDisplay = button + 1;
                    btnClass = page === button ? "active" : "";
                    break;
                }
                if (btnDisplay) {
                  node = $3("<li>", {
                    "class": classes.sPageButton + " " + btnClass,
                    "id": idx === 0 && typeof button === "string" ? settings.sTableId + "_" + button : null
                  }).append(
                    $3("<a>", {
                      "href": "#",
                      "aria-controls": settings.sTableId,
                      "aria-label": aria[button],
                      "data-dt-idx": counter,
                      "tabindex": settings.iTabIndex,
                      "class": "page-link"
                    }).html(btnDisplay)
                  ).appendTo(container);
                  settings.oApi._fnBindAction(
                    node,
                    { action: button },
                    clickHandler
                  );
                  counter++;
                }
              }
            }
          };
          var activeEl;
          try {
            activeEl = $3(host).find(document2.activeElement).data("dt-idx");
          } catch (e3) {
          }
          attach(
            $3(host).empty().html('<ul class="pagination"/>').children("ul"),
            buttons
          );
          if (activeEl !== undefined2) {
            $3(host).find("[data-dt-idx=" + activeEl + "]").trigger("focus");
          }
        };
        return DataTable;
      });
    }
  });

  // node_modules/datatables.net-responsive/js/dataTables.responsive.js
  var require_dataTables_responsive = __commonJS({
    "node_modules/datatables.net-responsive/js/dataTables.responsive.js"(exports, module) {
      (function(factory) {
        if (typeof define === "function" && define.amd) {
          define(["jquery", "datatables.net"], function($3) {
            return factory($3, window, document);
          });
        } else if (typeof exports === "object") {
          module.exports = function(root, $3) {
            if (!root) {
              root = window;
            }
            if (!$3 || !$3.fn.dataTable) {
              $3 = require_jquery_dataTables()(root, $3).$;
            }
            return factory($3, root, root.document);
          };
        } else {
          factory(jQuery, window, document);
        }
      })(function($3, window2, document2, undefined2) {
        "use strict";
        var DataTable = $3.fn.dataTable;
        var Responsive = function(settings, opts) {
          if (!DataTable.versionCheck || !DataTable.versionCheck("1.10.10")) {
            throw "DataTables Responsive requires DataTables 1.10.10 or newer";
          }
          this.s = {
            dt: new DataTable.Api(settings),
            columns: [],
            current: []
          };
          if (this.s.dt.settings()[0].responsive) {
            return;
          }
          if (opts && typeof opts.details === "string") {
            opts.details = { type: opts.details };
          } else if (opts && opts.details === false) {
            opts.details = { type: false };
          } else if (opts && opts.details === true) {
            opts.details = { type: "inline" };
          }
          this.c = $3.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);
          settings.responsive = this;
          this._constructor();
        };
        $3.extend(Responsive.prototype, {
          _constructor: function() {
            var that = this;
            var dt2 = this.s.dt;
            var dtPrivateSettings = dt2.settings()[0];
            var oldWindowWidth = $3(window2).innerWidth();
            dt2.settings()[0]._responsive = this;
            $3(window2).on("resize.dtr orientationchange.dtr", DataTable.util.throttle(function() {
              var width = $3(window2).innerWidth();
              if (width !== oldWindowWidth) {
                that._resize();
                oldWindowWidth = width;
              }
            }));
            dtPrivateSettings.oApi._fnCallbackReg(dtPrivateSettings, "aoRowCreatedCallback", function(tr, data, idx) {
              if ($3.inArray(false, that.s.current) !== -1) {
                $3(">td, >th", tr).each(function(i3) {
                  var idx2 = dt2.column.index("toData", i3);
                  if (that.s.current[idx2] === false) {
                    $3(this).css("display", "none");
                  }
                });
              }
            });
            dt2.on("destroy.dtr", function() {
              dt2.off(".dtr");
              $3(dt2.table().body()).off(".dtr");
              $3(window2).off("resize.dtr orientationchange.dtr");
              dt2.cells(".dtr-control").nodes().to$().removeClass("dtr-control");
              $3.each(that.s.current, function(i3, val) {
                if (val === false) {
                  that._setColumnVis(i3, true);
                }
              });
            });
            this.c.breakpoints.sort(function(a3, b3) {
              return a3.width < b3.width ? 1 : a3.width > b3.width ? -1 : 0;
            });
            this._classLogic();
            this._resizeAuto();
            var details = this.c.details;
            if (details.type !== false) {
              that._detailsInit();
              dt2.on("column-visibility.dtr", function() {
                if (that._timer) {
                  clearTimeout(that._timer);
                }
                that._timer = setTimeout(function() {
                  that._timer = null;
                  that._classLogic();
                  that._resizeAuto();
                  that._resize(true);
                  that._redrawChildren();
                }, 100);
              });
              dt2.on("draw.dtr", function() {
                that._redrawChildren();
              });
              $3(dt2.table().node()).addClass("dtr-" + details.type);
            }
            dt2.on("column-reorder.dtr", function(e3, settings, details2) {
              that._classLogic();
              that._resizeAuto();
              that._resize(true);
            });
            dt2.on("column-sizing.dtr", function() {
              that._resizeAuto();
              that._resize();
            });
            dt2.on("column-calc.dt", function(e3, d2) {
              var curr = that.s.current;
              for (var i3 = 0; i3 < curr.length; i3++) {
                var idx = d2.visible.indexOf(i3);
                if (curr[i3] === false && idx >= 0) {
                  d2.visible.splice(idx, 1);
                }
              }
            });
            dt2.on("preXhr.dtr", function() {
              var rowIds = [];
              dt2.rows().every(function() {
                if (this.child.isShown()) {
                  rowIds.push(this.id(true));
                }
              });
              dt2.one("draw.dtr", function() {
                that._resizeAuto();
                that._resize();
                dt2.rows(rowIds).every(function() {
                  that._detailsDisplay(this, false);
                });
              });
            });
            dt2.on("draw.dtr", function() {
              that._controlClass();
            }).on("init.dtr", function(e3, settings, details2) {
              if (e3.namespace !== "dt") {
                return;
              }
              that._resizeAuto();
              that._resize();
              if ($3.inArray(false, that.s.current)) {
                dt2.columns.adjust();
              }
            });
            this._resize();
          },
          _columnsVisiblity: function(breakpoint) {
            var dt2 = this.s.dt;
            var columns = this.s.columns;
            var i3, ien;
            var order = columns.map(function(col, idx) {
              return {
                columnIdx: idx,
                priority: col.priority
              };
            }).sort(function(a3, b3) {
              if (a3.priority !== b3.priority) {
                return a3.priority - b3.priority;
              }
              return a3.columnIdx - b3.columnIdx;
            });
            var display = $3.map(columns, function(col, i4) {
              if (dt2.column(i4).visible() === false) {
                return "not-visible";
              }
              return col.auto && col.minWidth === null ? false : col.auto === true ? "-" : $3.inArray(breakpoint, col.includeIn) !== -1;
            });
            var requiredWidth = 0;
            for (i3 = 0, ien = display.length; i3 < ien; i3++) {
              if (display[i3] === true) {
                requiredWidth += columns[i3].minWidth;
              }
            }
            var scrolling = dt2.settings()[0].oScroll;
            var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;
            var widthAvailable = dt2.table().container().offsetWidth - bar;
            var usedWidth = widthAvailable - requiredWidth;
            for (i3 = 0, ien = display.length; i3 < ien; i3++) {
              if (columns[i3].control) {
                usedWidth -= columns[i3].minWidth;
              }
            }
            var empty = false;
            for (i3 = 0, ien = order.length; i3 < ien; i3++) {
              var colIdx = order[i3].columnIdx;
              if (display[colIdx] === "-" && !columns[colIdx].control && columns[colIdx].minWidth) {
                if (empty || usedWidth - columns[colIdx].minWidth < 0) {
                  empty = true;
                  display[colIdx] = false;
                } else {
                  display[colIdx] = true;
                }
                usedWidth -= columns[colIdx].minWidth;
              }
            }
            var showControl = false;
            for (i3 = 0, ien = columns.length; i3 < ien; i3++) {
              if (!columns[i3].control && !columns[i3].never && display[i3] === false) {
                showControl = true;
                break;
              }
            }
            for (i3 = 0, ien = columns.length; i3 < ien; i3++) {
              if (columns[i3].control) {
                display[i3] = showControl;
              }
              if (display[i3] === "not-visible") {
                display[i3] = false;
              }
            }
            if ($3.inArray(true, display) === -1) {
              display[0] = true;
            }
            return display;
          },
          _classLogic: function() {
            var that = this;
            var calc = {};
            var breakpoints = this.c.breakpoints;
            var dt2 = this.s.dt;
            var columns = dt2.columns().eq(0).map(function(i3) {
              var column2 = this.column(i3);
              var className = column2.header().className;
              var priority = dt2.settings()[0].aoColumns[i3].responsivePriority;
              var dataPriority = column2.header().getAttribute("data-priority");
              if (priority === undefined2) {
                priority = dataPriority === undefined2 || dataPriority === null ? 1e4 : dataPriority * 1;
              }
              return {
                className,
                includeIn: [],
                auto: false,
                control: false,
                never: className.match(/\b(dtr\-)?never\b/) ? true : false,
                priority
              };
            });
            var add2 = function(colIdx, name) {
              var includeIn = columns[colIdx].includeIn;
              if ($3.inArray(name, includeIn) === -1) {
                includeIn.push(name);
              }
            };
            var column = function(colIdx, name, operator, matched) {
              var size, i3, ien;
              if (!operator) {
                columns[colIdx].includeIn.push(name);
              } else if (operator === "max-") {
                size = that._find(name).width;
                for (i3 = 0, ien = breakpoints.length; i3 < ien; i3++) {
                  if (breakpoints[i3].width <= size) {
                    add2(colIdx, breakpoints[i3].name);
                  }
                }
              } else if (operator === "min-") {
                size = that._find(name).width;
                for (i3 = 0, ien = breakpoints.length; i3 < ien; i3++) {
                  if (breakpoints[i3].width >= size) {
                    add2(colIdx, breakpoints[i3].name);
                  }
                }
              } else if (operator === "not-") {
                for (i3 = 0, ien = breakpoints.length; i3 < ien; i3++) {
                  if (breakpoints[i3].name.indexOf(matched) === -1) {
                    add2(colIdx, breakpoints[i3].name);
                  }
                }
              }
            };
            columns.each(function(col, i3) {
              var classNames = col.className.split(" ");
              var hasClass = false;
              for (var k3 = 0, ken = classNames.length; k3 < ken; k3++) {
                var className = classNames[k3].trim();
                if (className === "all" || className === "dtr-all") {
                  hasClass = true;
                  col.includeIn = $3.map(breakpoints, function(a3) {
                    return a3.name;
                  });
                  return;
                } else if (className === "none" || className === "dtr-none" || col.never) {
                  hasClass = true;
                  return;
                } else if (className === "control" || className === "dtr-control") {
                  hasClass = true;
                  col.control = true;
                  return;
                }
                $3.each(breakpoints, function(j4, breakpoint) {
                  var brokenPoint = breakpoint.name.split("-");
                  var re = new RegExp("(min\\-|max\\-|not\\-)?(" + brokenPoint[0] + ")(\\-[_a-zA-Z0-9])?");
                  var match = className.match(re);
                  if (match) {
                    hasClass = true;
                    if (match[2] === brokenPoint[0] && match[3] === "-" + brokenPoint[1]) {
                      column(i3, breakpoint.name, match[1], match[2] + match[3]);
                    } else if (match[2] === brokenPoint[0] && !match[3]) {
                      column(i3, breakpoint.name, match[1], match[2]);
                    }
                  }
                });
              }
              if (!hasClass) {
                col.auto = true;
              }
            });
            this.s.columns = columns;
          },
          _controlClass: function() {
            if (this.c.details.type === "inline") {
              var dt2 = this.s.dt;
              var columnsVis = this.s.current;
              var firstVisible = $3.inArray(true, columnsVis);
              dt2.cells(
                null,
                function(idx) {
                  return idx !== firstVisible;
                },
                { page: "current" }
              ).nodes().to$().filter(".dtr-control").removeClass("dtr-control");
              dt2.cells(null, firstVisible, { page: "current" }).nodes().to$().addClass("dtr-control");
            }
          },
          _detailsDisplay: function(row, update) {
            var that = this;
            var dt2 = this.s.dt;
            var details = this.c.details;
            if (details && details.type !== false) {
              var renderer = typeof details.renderer === "string" ? Responsive.renderer[details.renderer]() : details.renderer;
              var res = details.display(row, update, function() {
                return renderer(
                  dt2,
                  row[0],
                  that._detailsObj(row[0])
                );
              });
              if (res === true || res === false) {
                $3(dt2.table().node()).triggerHandler("responsive-display.dt", [dt2, row, res, update]);
              }
            }
          },
          _detailsInit: function() {
            var that = this;
            var dt2 = this.s.dt;
            var details = this.c.details;
            if (details.type === "inline") {
              details.target = "td.dtr-control, th.dtr-control";
            }
            dt2.on("draw.dtr", function() {
              that._tabIndexes();
            });
            that._tabIndexes();
            $3(dt2.table().body()).on("keyup.dtr", "td, th", function(e3) {
              if (e3.keyCode === 13 && $3(this).data("dtr-keyboard")) {
                $3(this).click();
              }
            });
            var target = details.target;
            var selector = typeof target === "string" ? target : "td, th";
            if (target !== undefined2 || target !== null) {
              $3(dt2.table().body()).on("click.dtr mousedown.dtr mouseup.dtr", selector, function(e3) {
                if (!$3(dt2.table().node()).hasClass("collapsed")) {
                  return;
                }
                if ($3.inArray($3(this).closest("tr").get(0), dt2.rows().nodes().toArray()) === -1) {
                  return;
                }
                if (typeof target === "number") {
                  var targetIdx = target < 0 ? dt2.columns().eq(0).length + target : target;
                  if (dt2.cell(this).index().column !== targetIdx) {
                    return;
                  }
                }
                var row = dt2.row($3(this).closest("tr"));
                if (e3.type === "click") {
                  that._detailsDisplay(row, false);
                } else if (e3.type === "mousedown") {
                  $3(this).css("outline", "none");
                } else if (e3.type === "mouseup") {
                  $3(this).trigger("blur").css("outline", "");
                }
              });
            }
          },
          _detailsObj: function(rowIdx) {
            var that = this;
            var dt2 = this.s.dt;
            return $3.map(this.s.columns, function(col, i3) {
              if (col.never || col.control) {
                return;
              }
              var dtCol = dt2.settings()[0].aoColumns[i3];
              return {
                className: dtCol.sClass,
                columnIndex: i3,
                data: dt2.cell(rowIdx, i3).render(that.c.orthogonal),
                hidden: dt2.column(i3).visible() && !that.s.current[i3],
                rowIndex: rowIdx,
                title: dtCol.sTitle !== null ? dtCol.sTitle : $3(dt2.column(i3).header()).text()
              };
            });
          },
          _find: function(name) {
            var breakpoints = this.c.breakpoints;
            for (var i3 = 0, ien = breakpoints.length; i3 < ien; i3++) {
              if (breakpoints[i3].name === name) {
                return breakpoints[i3];
              }
            }
          },
          _redrawChildren: function() {
            var that = this;
            var dt2 = this.s.dt;
            dt2.rows({ page: "current" }).iterator("row", function(settings, idx) {
              var row = dt2.row(idx);
              that._detailsDisplay(dt2.row(idx), true);
            });
          },
          _resize: function(forceRedraw) {
            var that = this;
            var dt2 = this.s.dt;
            var width = $3(window2).innerWidth();
            var breakpoints = this.c.breakpoints;
            var breakpoint = breakpoints[0].name;
            var columns = this.s.columns;
            var i3, ien;
            var oldVis = this.s.current.slice();
            for (i3 = breakpoints.length - 1; i3 >= 0; i3--) {
              if (width <= breakpoints[i3].width) {
                breakpoint = breakpoints[i3].name;
                break;
              }
            }
            var columnsVis = this._columnsVisiblity(breakpoint);
            this.s.current = columnsVis;
            var collapsedClass = false;
            for (i3 = 0, ien = columns.length; i3 < ien; i3++) {
              if (columnsVis[i3] === false && !columns[i3].never && !columns[i3].control && !dt2.column(i3).visible() === false) {
                collapsedClass = true;
                break;
              }
            }
            $3(dt2.table().node()).toggleClass("collapsed", collapsedClass);
            var changed = false;
            var visible = 0;
            dt2.columns().eq(0).each(function(colIdx, i4) {
              if (columnsVis[i4] === true) {
                visible++;
              }
              if (forceRedraw || columnsVis[i4] !== oldVis[i4]) {
                changed = true;
                that._setColumnVis(colIdx, columnsVis[i4]);
              }
            });
            if (changed) {
              this._redrawChildren();
              $3(dt2.table().node()).trigger("responsive-resize.dt", [dt2, this.s.current]);
              if (dt2.page.info().recordsDisplay === 0) {
                $3("td", dt2.table().body()).eq(0).attr("colspan", visible);
              }
            }
            that._controlClass();
          },
          _resizeAuto: function() {
            var dt2 = this.s.dt;
            var columns = this.s.columns;
            if (!this.c.auto) {
              return;
            }
            if ($3.inArray(true, $3.map(columns, function(c3) {
              return c3.auto;
            })) === -1) {
              return;
            }
            if (!$3.isEmptyObject(_childNodeStore)) {
              $3.each(_childNodeStore, function(key) {
                var idx = key.split("-");
                _childNodesRestore(dt2, idx[0] * 1, idx[1] * 1);
              });
            }
            var tableWidth = dt2.table().node().offsetWidth;
            var columnWidths = dt2.columns;
            var clonedTable = dt2.table().node().cloneNode(false);
            var clonedHeader = $3(dt2.table().header().cloneNode(false)).appendTo(clonedTable);
            var clonedBody = $3(dt2.table().body()).clone(false, false).empty().appendTo(clonedTable);
            clonedTable.style.width = "auto";
            var headerCells = dt2.columns().header().filter(function(idx) {
              return dt2.column(idx).visible();
            }).to$().clone(false).css("display", "table-cell").css("width", "auto").css("min-width", 0);
            $3(clonedBody).append($3(dt2.rows({ page: "current" }).nodes()).clone(false)).find("th, td").css("display", "");
            var footer = dt2.table().footer();
            if (footer) {
              var clonedFooter = $3(footer.cloneNode(false)).appendTo(clonedTable);
              var footerCells = dt2.columns().footer().filter(function(idx) {
                return dt2.column(idx).visible();
              }).to$().clone(false).css("display", "table-cell");
              $3("<tr/>").append(footerCells).appendTo(clonedFooter);
            }
            $3("<tr/>").append(headerCells).appendTo(clonedHeader);
            if (this.c.details.type === "inline") {
              $3(clonedTable).addClass("dtr-inline collapsed");
            }
            $3(clonedTable).find("[name]").removeAttr("name");
            $3(clonedTable).css("position", "relative");
            var inserted = $3("<div/>").css({
              width: 1,
              height: 1,
              overflow: "hidden",
              clear: "both"
            }).append(clonedTable);
            inserted.insertBefore(dt2.table().node());
            headerCells.each(function(i3) {
              var idx = dt2.column.index("fromVisible", i3);
              columns[idx].minWidth = this.offsetWidth || 0;
            });
            inserted.remove();
          },
          _responsiveOnlyHidden: function() {
            var dt2 = this.s.dt;
            return $3.map(this.s.current, function(v3, i3) {
              if (dt2.column(i3).visible() === false) {
                return true;
              }
              return v3;
            });
          },
          _setColumnVis: function(col, showHide) {
            var dt2 = this.s.dt;
            var display = showHide ? "" : "none";
            $3(dt2.column(col).header()).css("display", display).toggleClass("dtr-hidden", !showHide);
            $3(dt2.column(col).footer()).css("display", display).toggleClass("dtr-hidden", !showHide);
            dt2.column(col).nodes().to$().css("display", display).toggleClass("dtr-hidden", !showHide);
            if (!$3.isEmptyObject(_childNodeStore)) {
              dt2.cells(null, col).indexes().each(function(idx) {
                _childNodesRestore(dt2, idx.row, idx.column);
              });
            }
          },
          _tabIndexes: function() {
            var dt2 = this.s.dt;
            var cells = dt2.cells({ page: "current" }).nodes().to$();
            var ctx = dt2.settings()[0];
            var target = this.c.details.target;
            cells.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");
            if (typeof target === "number") {
              dt2.cells(null, target, { page: "current" }).nodes().to$().attr("tabIndex", ctx.iTabIndex).data("dtr-keyboard", 1);
            } else {
              if (target === "td:first-child, th:first-child") {
                target = ">td:first-child, >th:first-child";
              }
              $3(target, dt2.rows({ page: "current" }).nodes()).attr("tabIndex", ctx.iTabIndex).data("dtr-keyboard", 1);
            }
          }
        });
        Responsive.breakpoints = [
          { name: "desktop", width: Infinity },
          { name: "tablet-l", width: 1024 },
          { name: "tablet-p", width: 768 },
          { name: "mobile-l", width: 480 },
          { name: "mobile-p", width: 320 }
        ];
        Responsive.display = {
          childRow: function(row, update, render) {
            if (update) {
              if ($3(row.node()).hasClass("parent")) {
                row.child(render(), "child").show();
                return true;
              }
            } else {
              if (!row.child.isShown()) {
                row.child(render(), "child").show();
                $3(row.node()).addClass("parent");
                return true;
              } else {
                row.child(false);
                $3(row.node()).removeClass("parent");
                return false;
              }
            }
          },
          childRowImmediate: function(row, update, render) {
            if (!update && row.child.isShown() || !row.responsive.hasHidden()) {
              row.child(false);
              $3(row.node()).removeClass("parent");
              return false;
            } else {
              row.child(render(), "child").show();
              $3(row.node()).addClass("parent");
              return true;
            }
          },
          modal: function(options) {
            return function(row, update, render) {
              if (!update) {
                var close = function() {
                  modal.remove();
                  $3(document2).off("keypress.dtr");
                };
                var modal = $3('<div class="dtr-modal"/>').append(
                  $3('<div class="dtr-modal-display"/>').append(
                    $3('<div class="dtr-modal-content"/>').append(render())
                  ).append(
                    $3('<div class="dtr-modal-close">&times;</div>').click(function() {
                      close();
                    })
                  )
                ).append(
                  $3('<div class="dtr-modal-background"/>').click(function() {
                    close();
                  })
                ).appendTo("body");
                $3(document2).on("keyup.dtr", function(e3) {
                  if (e3.keyCode === 27) {
                    e3.stopPropagation();
                    close();
                  }
                });
              } else {
                $3("div.dtr-modal-content").empty().append(render());
              }
              if (options && options.header) {
                $3("div.dtr-modal-content").prepend(
                  "<h2>" + options.header(row) + "</h2>"
                );
              }
            };
          }
        };
        var _childNodeStore = {};
        function _childNodes(dt2, row, col) {
          var name = row + "-" + col;
          if (_childNodeStore[name]) {
            return _childNodeStore[name];
          }
          var nodes = [];
          var children = dt2.cell(row, col).node().childNodes;
          for (var i3 = 0, ien = children.length; i3 < ien; i3++) {
            nodes.push(children[i3]);
          }
          _childNodeStore[name] = nodes;
          return nodes;
        }
        function _childNodesRestore(dt2, row, col) {
          var name = row + "-" + col;
          if (!_childNodeStore[name]) {
            return;
          }
          var node = dt2.cell(row, col).node();
          var store = _childNodeStore[name];
          var parent = store[0].parentNode;
          var parentChildren = parent.childNodes;
          var a3 = [];
          for (var i3 = 0, ien = parentChildren.length; i3 < ien; i3++) {
            a3.push(parentChildren[i3]);
          }
          for (var j4 = 0, jen = a3.length; j4 < jen; j4++) {
            node.appendChild(a3[j4]);
          }
          _childNodeStore[name] = undefined2;
        }
        Responsive.renderer = {
          listHiddenNodes: function() {
            return function(api, rowIdx, columns) {
              var ul = $3('<ul data-dtr-index="' + rowIdx + '" class="dtr-details"/>');
              var found = false;
              var data = $3.each(columns, function(i3, col) {
                if (col.hidden) {
                  var klass = col.className ? 'class="' + col.className + '"' : "";
                  $3(
                    "<li " + klass + ' data-dtr-index="' + col.columnIndex + '" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><span class="dtr-title">' + col.title + "</span> </li>"
                  ).append($3('<span class="dtr-data"/>').append(_childNodes(api, col.rowIndex, col.columnIndex))).appendTo(ul);
                  found = true;
                }
              });
              return found ? ul : false;
            };
          },
          listHidden: function() {
            return function(api, rowIdx, columns) {
              var data = $3.map(columns, function(col) {
                var klass = col.className ? 'class="' + col.className + '"' : "";
                return col.hidden ? "<li " + klass + ' data-dtr-index="' + col.columnIndex + '" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><span class="dtr-title">' + col.title + '</span> <span class="dtr-data">' + col.data + "</span></li>" : "";
              }).join("");
              return data ? $3('<ul data-dtr-index="' + rowIdx + '" class="dtr-details"/>').append(data) : false;
            };
          },
          tableAll: function(options) {
            options = $3.extend({
              tableClass: ""
            }, options);
            return function(api, rowIdx, columns) {
              var data = $3.map(columns, function(col) {
                var klass = col.className ? 'class="' + col.className + '"' : "";
                return "<tr " + klass + ' data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>";
              }).join("");
              return $3('<table class="' + options.tableClass + ' dtr-details" width="100%"/>').append(data);
            };
          }
        };
        Responsive.defaults = {
          breakpoints: Responsive.breakpoints,
          auto: true,
          details: {
            display: Responsive.display.childRow,
            renderer: Responsive.renderer.listHidden(),
            target: 0,
            type: "inline"
          },
          orthogonal: "display"
        };
        var Api = $3.fn.dataTable.Api;
        Api.register("responsive()", function() {
          return this;
        });
        Api.register("responsive.index()", function(li) {
          li = $3(li);
          return {
            column: li.data("dtr-index"),
            row: li.parent().data("dtr-index")
          };
        });
        Api.register("responsive.rebuild()", function() {
          return this.iterator("table", function(ctx) {
            if (ctx._responsive) {
              ctx._responsive._classLogic();
            }
          });
        });
        Api.register("responsive.recalc()", function() {
          return this.iterator("table", function(ctx) {
            if (ctx._responsive) {
              ctx._responsive._resizeAuto();
              ctx._responsive._resize();
            }
          });
        });
        Api.register("responsive.hasHidden()", function() {
          var ctx = this.context[0];
          return ctx._responsive ? $3.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1 : false;
        });
        Api.registerPlural("columns().responsiveHidden()", "column().responsiveHidden()", function() {
          return this.iterator("column", function(settings, column) {
            return settings._responsive ? settings._responsive._responsiveOnlyHidden()[column] : false;
          }, 1);
        });
        Responsive.version = "2.2.9";
        $3.fn.dataTable.Responsive = Responsive;
        $3.fn.DataTable.Responsive = Responsive;
        $3(document2).on("preInit.dt.dtr", function(e3, settings, json) {
          if (e3.namespace !== "dt") {
            return;
          }
          if ($3(settings.nTable).hasClass("responsive") || $3(settings.nTable).hasClass("dt-responsive") || settings.oInit.responsive || DataTable.defaults.responsive) {
            var init = settings.oInit.responsive;
            if (init !== false) {
              new Responsive(settings, $3.isPlainObject(init) ? init : {});
            }
          }
        });
        return Responsive;
      });
    }
  });

  // node_modules/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js
  var require_responsive_bootstrap4_min = __commonJS({
    "node_modules/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"(exports, module) {
      var $jscomp = $jscomp || {};
      $jscomp.scope = {};
      $jscomp.findInternal = function(a3, b3, c3) {
        a3 instanceof String && (a3 = String(a3));
        for (var e3 = a3.length, d2 = 0; d2 < e3; d2++) {
          var f3 = a3[d2];
          if (b3.call(c3, f3, d2, a3))
            return { i: d2, v: f3 };
        }
        return { i: -1, v: void 0 };
      };
      $jscomp.ASSUME_ES5 = false;
      $jscomp.ASSUME_NO_NATIVE_MAP = false;
      $jscomp.ASSUME_NO_NATIVE_SET = false;
      $jscomp.SIMPLE_FROUND_POLYFILL = false;
      $jscomp.ISOLATE_POLYFILLS = false;
      $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a3, b3, c3) {
        if (a3 == Array.prototype || a3 == Object.prototype)
          return a3;
        a3[b3] = c3.value;
        return a3;
      };
      $jscomp.getGlobal = function(a3) {
        a3 = ["object" == typeof globalThis && globalThis, a3, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
        for (var b3 = 0; b3 < a3.length; ++b3) {
          var c3 = a3[b3];
          if (c3 && c3.Math == Math)
            return c3;
        }
        throw Error("Cannot find global object");
      };
      $jscomp.global = $jscomp.getGlobal(exports);
      $jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
      $jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
      $jscomp.polyfills = {};
      $jscomp.propertyToPolyfillSymbol = {};
      $jscomp.POLYFILL_PREFIX = "$jscp$";
      $jscomp.polyfill = function(a3, b3, c3, e3) {
        b3 && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(a3, b3, c3, e3) : $jscomp.polyfillUnisolated(a3, b3, c3, e3));
      };
      $jscomp.polyfillUnisolated = function(a3, b3, c3, e3) {
        c3 = $jscomp.global;
        a3 = a3.split(".");
        for (e3 = 0; e3 < a3.length - 1; e3++) {
          var d2 = a3[e3];
          if (!(d2 in c3))
            return;
          c3 = c3[d2];
        }
        a3 = a3[a3.length - 1];
        e3 = c3[a3];
        b3 = b3(e3);
        b3 != e3 && null != b3 && $jscomp.defineProperty(c3, a3, { configurable: true, writable: true, value: b3 });
      };
      $jscomp.polyfillIsolated = function(a3, b3, c3, e3) {
        var d2 = a3.split(".");
        a3 = 1 === d2.length;
        e3 = d2[0];
        e3 = !a3 && e3 in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
        for (var f3 = 0; f3 < d2.length - 1; f3++) {
          var g4 = d2[f3];
          if (!(g4 in e3))
            return;
          e3 = e3[g4];
        }
        d2 = d2[d2.length - 1];
        c3 = $jscomp.IS_SYMBOL_NATIVE && "es6" === c3 ? e3[d2] : null;
        b3 = b3(c3);
        null != b3 && (a3 ? $jscomp.defineProperty($jscomp.polyfills, d2, { configurable: true, writable: true, value: b3 }) : b3 !== c3 && ($jscomp.propertyToPolyfillSymbol[d2] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(d2) : $jscomp.POLYFILL_PREFIX + d2, d2 = $jscomp.propertyToPolyfillSymbol[d2], $jscomp.defineProperty(e3, d2, { configurable: true, writable: true, value: b3 })));
      };
      $jscomp.polyfill("Array.prototype.find", function(a3) {
        return a3 ? a3 : function(b3, c3) {
          return $jscomp.findInternal(this, b3, c3).v;
        };
      }, "es6", "es3");
      (function(a3) {
        "function" === typeof define && define.amd ? define(["jquery", "datatables.net-bs4", "datatables.net-responsive"], function(b3) {
          return a3(b3, window, document);
        }) : "object" === typeof exports ? module.exports = function(b3, c3) {
          b3 || (b3 = window);
          c3 && c3.fn.dataTable || (c3 = require_dataTables_bootstrap4()(b3, c3).$);
          c3.fn.dataTable.Responsive || require_dataTables_responsive()(b3, c3);
          return a3(c3, b3, b3.document);
        } : a3(jQuery, window, document);
      })(function(a3, b3, c3, e3) {
        b3 = a3.fn.dataTable;
        c3 = b3.Responsive.display;
        var d2 = c3.modal, f3 = a3('<div class="modal fade dtr-bs-modal" role="dialog"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button></div><div class="modal-body"/></div></div></div>');
        c3.modal = function(g4) {
          return function(k3, h3, l3) {
            if (!a3.fn.modal)
              d2(k3, h3, l3);
            else if (!h3) {
              if (g4 && g4.header) {
                h3 = f3.find("div.modal-header");
                var m3 = h3.find("button").detach();
                h3.empty().append('<h4 class="modal-title">' + g4.header(k3) + "</h4>").append(m3);
              }
              f3.find("div.modal-body").empty().append(l3());
              f3.appendTo("body").modal();
            }
          };
        };
        return b3.Responsive;
      });
    }
  });

  // node_modules/admin-lte/plugins/sweetalert2/sweetalert2.min.js
  var require_sweetalert2_min = __commonJS({
    "node_modules/admin-lte/plugins/sweetalert2/sweetalert2.min.js"(exports, module) {
      !function(e3, t3) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = t3() : "function" == typeof define && define.amd ? define(t3) : (e3 = e3 || self).Sweetalert2 = t3();
      }(exports, function() {
        "use strict";
        var p3 = { awaitingPromise: /* @__PURE__ */ new WeakMap(), promise: /* @__PURE__ */ new WeakMap(), innerParams: /* @__PURE__ */ new WeakMap(), domCache: /* @__PURE__ */ new WeakMap() };
        var e3 = (e4) => {
          const t4 = {};
          for (const n3 in e4)
            t4[e4[n3]] = "swal2-" + e4[n3];
          return t4;
        };
        const m3 = e3(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error", "no-war"]), o2 = e3(["success", "warning", "info", "question", "error"]), D2 = "SweetAlert2:", q3 = (e4) => e4.charAt(0).toUpperCase() + e4.slice(1), r3 = (e4) => {
          console.warn("".concat(D2, " ").concat("object" == typeof e4 ? e4.join(" ") : e4));
        }, l3 = (e4) => {
          console.error("".concat(D2, " ").concat(e4));
        }, V3 = [], N3 = (e4, t4) => {
          e4 = '"'.concat(e4, '" is deprecated and will be removed in the next major release. Please use "').concat(t4, '" instead.'), V3.includes(e4) || (V3.push(e4), r3(e4));
        }, R = (e4) => "function" == typeof e4 ? e4() : e4, F3 = (e4) => e4 && "function" == typeof e4.toPromise, u3 = (e4) => F3(e4) ? e4.toPromise() : Promise.resolve(e4), U2 = (e4) => e4 && Promise.resolve(e4) === e4;
        const g4 = () => document.body.querySelector(".".concat(m3.container)), t3 = (e4) => {
          const t4 = g4();
          return t4 ? t4.querySelector(e4) : null;
        }, n2 = (e4) => t3(".".concat(e4)), h3 = () => n2(m3.popup), W2 = () => n2(m3.icon), z3 = () => n2(m3.title), K2 = () => n2(m3["html-container"]), _3 = () => n2(m3.image), Y = () => n2(m3["progress-steps"]), Z2 = () => n2(m3["validation-message"]), f3 = () => t3(".".concat(m3.actions, " .").concat(m3.confirm)), b3 = () => t3(".".concat(m3.actions, " .").concat(m3.deny));
        const d2 = () => t3(".".concat(m3.loader)), y3 = () => t3(".".concat(m3.actions, " .").concat(m3.cancel)), X2 = () => n2(m3.actions), $3 = () => n2(m3.footer), J2 = () => n2(m3["timer-progress-bar"]), G2 = () => n2(m3.close), Q2 = () => {
          const e4 = Array.from(h3().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort((e5, t5) => {
            e5 = parseInt(e5.getAttribute("tabindex")), t5 = parseInt(t5.getAttribute("tabindex"));
            return t5 < e5 ? 1 : e5 < t5 ? -1 : 0;
          });
          var t4 = Array.from(h3().querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n')).filter((e5) => "-1" !== e5.getAttribute("tabindex"));
          return ((t5) => {
            const n3 = [];
            for (let e5 = 0; e5 < t5.length; e5++)
              -1 === n3.indexOf(t5[e5]) && n3.push(t5[e5]);
            return n3;
          })(e4.concat(t4)).filter((e5) => x4(e5));
        }, ee = () => s3(document.body, m3.shown) && !s3(document.body, m3["toast-shown"]) && !s3(document.body, m3["no-backdrop"]), te = () => h3() && s3(h3(), m3.toast);
        function ne(e4) {
          var t4 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
          const n3 = J2();
          x4(n3) && (t4 && (n3.style.transition = "none", n3.style.width = "100%"), setTimeout(() => {
            n3.style.transition = "width ".concat(e4 / 1e3, "s linear"), n3.style.width = "0%";
          }, 10));
        }
        const i3 = { previousBodyPadding: null }, v3 = (t4, e4) => {
          if (t4.textContent = "", e4) {
            const n3 = new DOMParser(), o3 = n3.parseFromString(e4, "text/html");
            Array.from(o3.querySelector("head").childNodes).forEach((e5) => {
              t4.appendChild(e5);
            }), Array.from(o3.querySelector("body").childNodes).forEach((e5) => {
              t4.appendChild(e5);
            });
          }
        }, s3 = (t4, e4) => {
          if (!e4)
            return false;
          var n3 = e4.split(/\s+/);
          for (let e5 = 0; e5 < n3.length; e5++)
            if (!t4.classList.contains(n3[e5]))
              return false;
          return true;
        }, oe = (t4, n3) => {
          Array.from(t4.classList).forEach((e4) => {
            Object.values(m3).includes(e4) || Object.values(o2).includes(e4) || Object.values(n3.showClass).includes(e4) || t4.classList.remove(e4);
          });
        }, w4 = (e4, t4, n3) => {
          if (oe(e4, t4), t4.customClass && t4.customClass[n3]) {
            if ("string" != typeof t4.customClass[n3] && !t4.customClass[n3].forEach)
              return r3("Invalid type of customClass.".concat(n3, '! Expected string or iterable object, got "').concat(typeof t4.customClass[n3], '"'));
            C3(e4, t4.customClass[n3]);
          }
        }, ie = (e4, t4) => {
          if (!t4)
            return null;
          switch (t4) {
            case "select":
            case "textarea":
            case "file":
              return e4.querySelector(".".concat(m3.popup, " > .").concat(m3[t4]));
            case "checkbox":
              return e4.querySelector(".".concat(m3.popup, " > .").concat(m3.checkbox, " input"));
            case "radio":
              return e4.querySelector(".".concat(m3.popup, " > .").concat(m3.radio, " input:checked")) || e4.querySelector(".".concat(m3.popup, " > .").concat(m3.radio, " input:first-child"));
            case "range":
              return e4.querySelector(".".concat(m3.popup, " > .").concat(m3.range, " input"));
            default:
              return e4.querySelector(".".concat(m3.popup, " > .").concat(m3.input));
          }
        }, re = (e4) => {
          var t4;
          e4.focus(), "file" !== e4.type && (t4 = e4.value, e4.value = "", e4.value = t4);
        }, ae = (e4, t4, n3) => {
          e4 && t4 && (t4 = "string" == typeof t4 ? t4.split(/\s+/).filter(Boolean) : t4).forEach((t5) => {
            Array.isArray(e4) ? e4.forEach((e5) => {
              n3 ? e5.classList.add(t5) : e5.classList.remove(t5);
            }) : n3 ? e4.classList.add(t5) : e4.classList.remove(t5);
          });
        }, C3 = (e4, t4) => {
          ae(e4, t4, true);
        }, A3 = (e4, t4) => {
          ae(e4, t4, false);
        }, k3 = (e4, t4) => {
          var n3 = Array.from(e4.children);
          for (let e5 = 0; e5 < n3.length; e5++) {
            var o3 = n3[e5];
            if (o3 instanceof HTMLElement && s3(o3, t4))
              return o3;
          }
        }, a3 = (e4, t4, n3) => {
          (n3 = n3 === "".concat(parseInt(n3)) ? parseInt(n3) : n3) || 0 === parseInt(n3) ? e4.style[t4] = "number" == typeof n3 ? "".concat(n3, "px") : n3 : e4.style.removeProperty(t4);
        }, B3 = function(e4) {
          e4.style.display = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "flex";
        }, P2 = (e4) => {
          e4.style.display = "none";
        }, se = (e4, t4, n3, o3) => {
          const i4 = e4.querySelector(t4);
          i4 && (i4.style[n3] = o3);
        }, ce = function(e4, t4) {
          var n3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : "flex";
          t4 ? B3(e4, n3) : P2(e4);
        }, x4 = (e4) => !(!e4 || !(e4.offsetWidth || e4.offsetHeight || e4.getClientRects().length)), le = () => !x4(f3()) && !x4(b3()) && !x4(y3()), ue = (e4) => !!(e4.scrollHeight > e4.clientHeight), de = (e4) => {
          const t4 = window.getComputedStyle(e4);
          var e4 = parseFloat(t4.getPropertyValue("animation-duration") || "0"), n3 = parseFloat(t4.getPropertyValue("transition-duration") || "0");
          return 0 < e4 || 0 < n3;
        }, pe = 100, E = {}, me = () => {
          E.previousActiveElement instanceof HTMLElement ? (E.previousActiveElement.focus(), E.previousActiveElement = null) : document.body && document.body.focus();
        }, ge = (o3) => new Promise((e4) => {
          if (!o3)
            return e4();
          var t4 = window.scrollX, n3 = window.scrollY;
          E.restoreFocusTimeout = setTimeout(() => {
            me(), e4();
          }, pe), window.scrollTo(t4, n3);
        }), he = () => "undefined" == typeof window || "undefined" == typeof document, fe = '\n <div aria-labelledby="'.concat(m3.title, '" aria-describedby="').concat(m3["html-container"], '" class="').concat(m3.popup, '" tabindex="-1">\n   <button type="button" class="').concat(m3.close, '"></button>\n   <ul class="').concat(m3["progress-steps"], '"></ul>\n   <div class="').concat(m3.icon, '"></div>\n   <img class="').concat(m3.image, '" />\n   <h2 class="').concat(m3.title, '" id="').concat(m3.title, '"></h2>\n   <div class="').concat(m3["html-container"], '" id="').concat(m3["html-container"], '"></div>\n   <input class="').concat(m3.input, '" />\n   <input type="file" class="').concat(m3.file, '" />\n   <div class="').concat(m3.range, '">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="').concat(m3.select, '"></select>\n   <div class="').concat(m3.radio, '"></div>\n   <label for="').concat(m3.checkbox, '" class="').concat(m3.checkbox, '">\n     <input type="checkbox" />\n     <span class="').concat(m3.label, '"></span>\n   </label>\n   <textarea class="').concat(m3.textarea, '"></textarea>\n   <div class="').concat(m3["validation-message"], '" id="').concat(m3["validation-message"], '"></div>\n   <div class="').concat(m3.actions, '">\n     <div class="').concat(m3.loader, '"></div>\n     <button type="button" class="').concat(m3.confirm, '"></button>\n     <button type="button" class="').concat(m3.deny, '"></button>\n     <button type="button" class="').concat(m3.cancel, '"></button>\n   </div>\n   <div class="').concat(m3.footer, '"></div>\n   <div class="').concat(m3["timer-progress-bar-container"], '">\n     <div class="').concat(m3["timer-progress-bar"], '"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g, ""), be = () => {
          const e4 = g4();
          return !!e4 && (e4.remove(), A3([document.documentElement, document.body], [m3["no-backdrop"], m3["toast-shown"], m3["has-column"]]), true);
        }, c3 = () => {
          E.currentInstance.resetValidationMessage();
        }, ye = () => {
          const e4 = h3(), t4 = k3(e4, m3.input), n3 = k3(e4, m3.file), o3 = e4.querySelector(".".concat(m3.range, " input")), i4 = e4.querySelector(".".concat(m3.range, " output")), r4 = k3(e4, m3.select), a4 = e4.querySelector(".".concat(m3.checkbox, " input")), s4 = k3(e4, m3.textarea);
          t4.oninput = c3, n3.onchange = c3, r4.onchange = c3, a4.onchange = c3, s4.oninput = c3, o3.oninput = () => {
            c3(), i4.value = o3.value;
          }, o3.onchange = () => {
            c3(), i4.value = o3.value;
          };
        }, ve = (e4) => "string" == typeof e4 ? document.querySelector(e4) : e4, we = (e4) => {
          const t4 = h3();
          t4.setAttribute("role", e4.toast ? "alert" : "dialog"), t4.setAttribute("aria-live", e4.toast ? "polite" : "assertive"), e4.toast || t4.setAttribute("aria-modal", "true");
        }, Ce = (e4) => {
          "rtl" === window.getComputedStyle(e4).direction && C3(g4(), m3.rtl);
        }, Ae = (e4, t4) => {
          if (e4 instanceof HTMLElement)
            t4.appendChild(e4);
          else if ("object" == typeof e4) {
            var n3 = e4, o3 = t4;
            if (n3.jquery)
              ke(o3, n3);
            else
              v3(o3, n3.toString());
          } else
            e4 && v3(t4, e4);
        }, ke = (t4, n3) => {
          if (t4.textContent = "", 0 in n3)
            for (let e4 = 0; e4 in n3; e4++)
              t4.appendChild(n3[e4].cloneNode(true));
          else
            t4.appendChild(n3.cloneNode(true));
        }, Be = (() => {
          if (!he()) {
            var e4 = document.createElement("div"), t4 = { WebkitAnimation: "webkitAnimationEnd", animation: "animationend" };
            for (const n3 in t4)
              if (Object.prototype.hasOwnProperty.call(t4, n3) && void 0 !== e4.style[n3])
                return t4[n3];
          }
          return false;
        })(), Pe = (e4, t4) => {
          var n3, o3, i4, r4, a4, s4 = X2(), c4 = d2();
          (t4.showConfirmButton || t4.showDenyButton || t4.showCancelButton ? B3 : P2)(s4), w4(s4, t4, "actions"), s4 = s4, n3 = c4, o3 = t4, i4 = f3(), r4 = b3(), a4 = y3(), xe(i4, "confirm", o3), xe(r4, "deny", o3), xe(a4, "cancel", o3), function(e5, t5, n4, o4) {
            if (!o4.buttonsStyling)
              return A3([e5, t5, n4], m3.styled);
            C3([e5, t5, n4], m3.styled), o4.confirmButtonColor && (e5.style.backgroundColor = o4.confirmButtonColor, C3(e5, m3["default-outline"]));
            o4.denyButtonColor && (t5.style.backgroundColor = o4.denyButtonColor, C3(t5, m3["default-outline"]));
            o4.cancelButtonColor && (n4.style.backgroundColor = o4.cancelButtonColor, C3(n4, m3["default-outline"]));
          }(i4, r4, a4, o3), o3.reverseButtons && (o3.toast ? (s4.insertBefore(a4, i4), s4.insertBefore(r4, i4)) : (s4.insertBefore(a4, n3), s4.insertBefore(r4, n3), s4.insertBefore(i4, n3))), v3(c4, t4.loaderHtml), w4(c4, t4, "loader");
        };
        function xe(e4, t4, n3) {
          ce(e4, n3["show".concat(q3(t4), "Button")], "inline-block"), v3(e4, n3["".concat(t4, "ButtonText")]), e4.setAttribute("aria-label", n3["".concat(t4, "ButtonAriaLabel")]), e4.className = m3[t4], w4(e4, n3, "".concat(t4, "Button")), C3(e4, n3["".concat(t4, "ButtonClass")]);
        }
        const Ee = (e4, t4) => {
          const n3 = G2();
          v3(n3, t4.closeButtonHtml), w4(n3, t4, "closeButton"), ce(n3, t4.showCloseButton), n3.setAttribute("aria-label", t4.closeButtonAriaLabel);
        }, Te = (e4, t4) => {
          var n3, o3, i4 = g4();
          i4 && (o3 = i4, "string" == typeof (n3 = t4.backdrop) ? o3.style.background = n3 : n3 || C3([document.documentElement, document.body], m3["no-backdrop"]), o3 = i4, (n3 = t4.position) in m3 ? C3(o3, m3[n3]) : (r3('The "position" parameter is not valid, defaulting to "center"'), C3(o3, m3.center)), n3 = i4, (o3 = t4.grow) && "string" == typeof o3 && (o3 = "grow-".concat(o3)) in m3 && C3(n3, m3[o3]), w4(i4, t4, "container"));
        };
        const Le = ["input", "file", "range", "select", "radio", "checkbox", "textarea"], Se = (e4, a4) => {
          const s4 = h3();
          var t4, e4 = p3.innerParams.get(e4);
          const c4 = !e4 || a4.input !== e4.input;
          Le.forEach((e5) => {
            const t5 = k3(s4, m3[e5]);
            {
              var n3 = e5, o3 = a4.inputAttributes;
              const i4 = ie(h3(), n3);
              if (i4) {
                Oe(i4);
                for (const r4 in o3)
                  i4.setAttribute(r4, o3[r4]);
              }
            }
            t5.className = m3[e5], c4 && P2(t5);
          }), a4.input && (c4 && ((e5) => {
            if (!T4[e5.input])
              return l3('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(e5.input, '"'));
            const t5 = He(e5.input), n3 = T4[e5.input](t5, e5);
            B3(t5), setTimeout(() => {
              re(n3);
            });
          })(a4), e4 = a4, t4 = He(e4.input), "object" == typeof e4.customClass && C3(t4, e4.customClass.input));
        }, Oe = (t4) => {
          for (let e4 = 0; e4 < t4.attributes.length; e4++) {
            var n3 = t4.attributes[e4].name;
            ["type", "value", "style"].includes(n3) || t4.removeAttribute(n3);
          }
        }, Me = (e4, t4) => {
          e4.placeholder && !t4.inputPlaceholder || (e4.placeholder = t4.inputPlaceholder);
        }, je = (e4, t4, n3) => {
          if (n3.inputLabel) {
            e4.id = m3.input;
            const i4 = document.createElement("label");
            var o3 = m3["input-label"];
            i4.setAttribute("for", e4.id), i4.className = o3, "object" == typeof n3.customClass && C3(i4, n3.customClass.inputLabel), i4.innerText = n3.inputLabel, t4.insertAdjacentElement("beforebegin", i4);
          }
        }, He = (e4) => k3(h3(), m3[e4] || m3.input), Ie = (e4, t4) => {
          ["string", "number"].includes(typeof t4) ? e4.value = "".concat(t4) : U2(t4) || r3('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof t4, '"'));
        }, T4 = {}, De = (T4.text = T4.email = T4.password = T4.number = T4.tel = T4.url = (e4, t4) => (Ie(e4, t4.inputValue), je(e4, e4, t4), Me(e4, t4), e4.type = t4.input, e4), T4.file = (e4, t4) => (je(e4, e4, t4), Me(e4, t4), e4), T4.range = (e4, t4) => {
          const n3 = e4.querySelector("input");
          var o3 = e4.querySelector("output");
          return Ie(n3, t4.inputValue), n3.type = t4.input, Ie(o3, t4.inputValue), je(n3, e4, t4), e4;
        }, T4.select = (e4, t4) => {
          if (e4.textContent = "", t4.inputPlaceholder) {
            const n3 = document.createElement("option");
            v3(n3, t4.inputPlaceholder), n3.value = "", n3.disabled = true, n3.selected = true, e4.appendChild(n3);
          }
          return je(e4, e4, t4), e4;
        }, T4.radio = (e4) => (e4.textContent = "", e4), T4.checkbox = (e4, t4) => {
          const n3 = ie(h3(), "checkbox");
          n3.value = "1", n3.id = m3.checkbox, n3.checked = Boolean(t4.inputValue);
          e4 = e4.querySelector("span");
          return v3(e4, t4.inputPlaceholder), n3;
        }, T4.textarea = (n3, e4) => {
          Ie(n3, e4.inputValue), Me(n3, e4), je(n3, n3, e4);
          return setTimeout(() => {
            if ("MutationObserver" in window) {
              const t4 = parseInt(window.getComputedStyle(h3()).width);
              new MutationObserver(() => {
                var e5 = n3.offsetWidth + (e5 = n3, parseInt(window.getComputedStyle(e5).marginLeft) + parseInt(window.getComputedStyle(e5).marginRight));
                e5 > t4 ? h3().style.width = "".concat(e5, "px") : h3().style.width = null;
              }).observe(n3, { attributes: true, attributeFilter: ["style"] });
            }
          }), n3;
        }, (e4, t4) => {
          const n3 = K2();
          w4(n3, t4, "htmlContainer"), t4.html ? (Ae(t4.html, n3), B3(n3, "block")) : t4.text ? (n3.textContent = t4.text, B3(n3, "block")) : P2(n3), Se(e4, t4);
        }), qe = (e4, t4) => {
          var n3 = $3();
          ce(n3, t4.footer), t4.footer && Ae(t4.footer, n3), w4(n3, t4, "footer");
        }, Ve = (e4, t4) => {
          var e4 = p3.innerParams.get(e4), n3 = W2();
          e4 && t4.icon === e4.icon ? (We(n3, t4), Ne(n3, t4)) : t4.icon || t4.iconHtml ? t4.icon && -1 === Object.keys(o2).indexOf(t4.icon) ? (l3('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(t4.icon, '"')), P2(n3)) : (B3(n3), We(n3, t4), Ne(n3, t4), C3(n3, t4.showClass.icon)) : P2(n3);
        }, Ne = (e4, t4) => {
          for (const n3 in o2)
            t4.icon !== n3 && A3(e4, o2[n3]);
          C3(e4, o2[t4.icon]), ze(e4, t4), Re(), w4(e4, t4, "icon");
        }, Re = () => {
          const e4 = h3();
          var t4 = window.getComputedStyle(e4).getPropertyValue("background-color");
          const n3 = e4.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
          for (let e5 = 0; e5 < n3.length; e5++)
            n3[e5].style.backgroundColor = t4;
        }, Fe = '\n  <div class="swal2-success-circular-line-left"></div>\n  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n  <div class="swal2-success-circular-line-right"></div>\n', Ue = '\n  <span class="swal2-x-mark">\n    <span class="swal2-x-mark-line-left"></span>\n    <span class="swal2-x-mark-line-right"></span>\n  </span>\n', We = (e4, t4) => {
          let n3 = e4.innerHTML, o3;
          var i4;
          t4.iconHtml ? o3 = Ke(t4.iconHtml) : "success" === t4.icon ? (o3 = Fe, n3 = n3.replace(/ style=".*?"/g, "")) : o3 = "error" === t4.icon ? Ue : (i4 = { question: "?", warning: "!", info: "i" }, Ke(i4[t4.icon])), n3.trim() !== o3.trim() && v3(e4, o3);
        }, ze = (e4, t4) => {
          if (t4.iconColor) {
            e4.style.color = t4.iconColor, e4.style.borderColor = t4.iconColor;
            for (const n3 of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"])
              se(e4, n3, "backgroundColor", t4.iconColor);
            se(e4, ".swal2-success-ring", "borderColor", t4.iconColor);
          }
        }, Ke = (e4) => '<div class="'.concat(m3["icon-content"], '">').concat(e4, "</div>"), _e = (e4, t4) => {
          const n3 = _3();
          if (!t4.imageUrl)
            return P2(n3);
          B3(n3, ""), n3.setAttribute("src", t4.imageUrl), n3.setAttribute("alt", t4.imageAlt), a3(n3, "width", t4.imageWidth), a3(n3, "height", t4.imageHeight), n3.className = m3.image, w4(n3, t4, "image");
        }, Ye = (e4, t4) => {
          var n3 = g4();
          const o3 = h3();
          t4.toast ? (a3(n3, "width", t4.width), o3.style.width = "100%", o3.insertBefore(d2(), W2())) : a3(o3, "width", t4.width), a3(o3, "padding", t4.padding), t4.color && (o3.style.color = t4.color), t4.background && (o3.style.background = t4.background), P2(Z2());
          n3 = o3;
          (n3.className = "".concat(m3.popup, " ").concat(x4(n3) ? t4.showClass.popup : ""), t4.toast) ? (C3([document.documentElement, document.body], m3["toast-shown"]), C3(n3, m3.toast)) : C3(n3, m3.modal);
          w4(n3, t4, "popup"), "string" == typeof t4.customClass && C3(n3, t4.customClass);
          t4.icon && C3(n3, m3["icon-".concat(t4.icon)]);
        }, Ze = (e4, n3) => {
          const o3 = Y();
          if (!n3.progressSteps || 0 === n3.progressSteps.length)
            return P2(o3);
          B3(o3), o3.textContent = "", n3.currentProgressStep >= n3.progressSteps.length && r3("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), n3.progressSteps.forEach((e5, t4) => {
            var e5 = ((e6) => {
              const t5 = document.createElement("li");
              return C3(t5, m3["progress-step"]), v3(t5, e6), t5;
            })(e5);
            o3.appendChild(e5), t4 === n3.currentProgressStep && C3(e5, m3["active-progress-step"]), t4 !== n3.progressSteps.length - 1 && (e5 = ((e6) => {
              const t5 = document.createElement("li");
              if (C3(t5, m3["progress-step-line"]), e6.progressStepsDistance)
                a3(t5, "width", e6.progressStepsDistance);
              return t5;
            })(n3), o3.appendChild(e5));
          });
        }, Xe = (e4, t4) => {
          const n3 = z3();
          ce(n3, t4.title || t4.titleText, "block"), t4.title && Ae(t4.title, n3), t4.titleText && (n3.innerText = t4.titleText), w4(n3, t4, "title");
        }, $e = (e4, t4) => {
          Ye(e4, t4), Te(e4, t4), Ze(e4, t4), Ve(e4, t4), _e(e4, t4), Xe(e4, t4), Ee(e4, t4), De(e4, t4), Pe(e4, t4), qe(e4, t4), "function" == typeof t4.didRender && t4.didRender(h3());
        };
        function Je() {
          var e4, t4 = p3.innerParams.get(this);
          if (t4) {
            const n3 = p3.domCache.get(this);
            P2(n3.loader), te() ? t4.icon && B3(W2()) : (t4 = n3, (e4 = t4.popup.getElementsByClassName(t4.loader.getAttribute("data-button-to-replace"))).length ? B3(e4[0], "inline-block") : le() && P2(t4.actions)), A3([n3.popup, n3.actions], m3.loading), n3.popup.removeAttribute("aria-busy"), n3.popup.removeAttribute("data-loading"), n3.confirmButton.disabled = false, n3.denyButton.disabled = false, n3.cancelButton.disabled = false;
          }
        }
        const Ge = () => f3() && f3().click();
        const L3 = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }), Qe = (e4) => {
          e4.keydownTarget && e4.keydownHandlerAdded && (e4.keydownTarget.removeEventListener("keydown", e4.keydownHandler, { capture: e4.keydownListenerCapture }), e4.keydownHandlerAdded = false);
        }, et = (e4, t4, n3) => {
          const o3 = Q2();
          if (o3.length)
            return (t4 += n3) === o3.length ? t4 = 0 : -1 === t4 && (t4 = o3.length - 1), o3[t4].focus();
          h3().focus();
        }, tt = ["ArrowRight", "ArrowDown"], nt = ["ArrowLeft", "ArrowUp"], ot = (e4, n3, t4) => {
          var o3 = p3.innerParams.get(e4);
          if (o3 && (!n3.isComposing && 229 !== n3.keyCode)) {
            if (o3.stopKeydownPropagation && n3.stopPropagation(), "Enter" === n3.key)
              e4 = e4, s4 = n3, i4 = o3, R(i4.allowEnterKey) && s4.target && e4.getInput() && s4.target instanceof HTMLElement && s4.target.outerHTML === e4.getInput().outerHTML && (["textarea", "file"].includes(i4.input) || (Ge(), s4.preventDefault()));
            else if ("Tab" === n3.key) {
              e4 = n3;
              var i4 = o3;
              var r4 = e4.target, a4 = Q2();
              let t5 = -1;
              for (let e5 = 0; e5 < a4.length; e5++)
                if (r4 === a4[e5]) {
                  t5 = e5;
                  break;
                }
              e4.shiftKey ? et(i4, t5, -1) : et(i4, t5, 1);
              e4.stopPropagation(), e4.preventDefault();
            } else if ([...tt, ...nt].includes(n3.key)) {
              var s4 = n3.key;
              const l4 = f3(), u4 = b3(), d3 = y3();
              if (!(document.activeElement instanceof HTMLElement) || [l4, u4, d3].includes(document.activeElement)) {
                var c4 = tt.includes(s4) ? "nextElementSibling" : "previousElementSibling";
                let t5 = document.activeElement;
                for (let e5 = 0; e5 < X2().children.length; e5++) {
                  if (!(t5 = t5[c4]))
                    return;
                  if (t5 instanceof HTMLButtonElement && x4(t5))
                    break;
                }
                t5 instanceof HTMLButtonElement && t5.focus();
              }
            } else if ("Escape" === n3.key) {
              e4 = n3, n3 = o3, o3 = t4;
              if (R(n3.allowEscapeKey)) {
                e4.preventDefault();
                o3(L3.esc);
              }
            }
          }
        };
        var it = { swalPromiseResolve: /* @__PURE__ */ new WeakMap(), swalPromiseReject: /* @__PURE__ */ new WeakMap() };
        const rt = () => {
          const e4 = Array.from(document.body.children);
          e4.forEach((e5) => {
            e5 === g4() || e5.contains(g4()) || (e5.hasAttribute("aria-hidden") && e5.setAttribute("data-previous-aria-hidden", e5.getAttribute("aria-hidden")), e5.setAttribute("aria-hidden", "true"));
          });
        }, at = () => {
          const e4 = Array.from(document.body.children);
          e4.forEach((e5) => {
            e5.hasAttribute("data-previous-aria-hidden") ? (e5.setAttribute("aria-hidden", e5.getAttribute("data-previous-aria-hidden")), e5.removeAttribute("data-previous-aria-hidden")) : e5.removeAttribute("aria-hidden");
          });
        }, st = () => {
          if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || "MacIntel" === navigator.platform && 1 < navigator.maxTouchPoints) && !s3(document.body, m3.iosfix)) {
            var e4, t4 = document.body.scrollTop;
            document.body.style.top = "".concat(-1 * t4, "px"), C3(document.body, m3.iosfix);
            {
              const n3 = g4();
              let t5;
              n3.ontouchstart = (e5) => {
                t5 = ct(e5);
              }, n3.ontouchmove = (e5) => {
                t5 && (e5.preventDefault(), e5.stopPropagation());
              };
            }
            {
              const o3 = navigator.userAgent, i4 = !!o3.match(/iPad/i) || !!o3.match(/iPhone/i), r4 = !!o3.match(/WebKit/i), a4 = i4 && r4 && !o3.match(/CriOS/i);
              a4 && (e4 = 44, h3().scrollHeight > window.innerHeight - 44 && (g4().style.paddingBottom = "".concat(44, "px")));
            }
          }
        }, ct = (e4) => {
          var t4, n3 = e4.target, o3 = g4();
          return !((t4 = e4).touches && t4.touches.length && "stylus" === t4.touches[0].touchType || (t4 = e4).touches && 1 < t4.touches.length) && (n3 === o3 || !ue(o3) && n3 instanceof HTMLElement && "INPUT" !== n3.tagName && "TEXTAREA" !== n3.tagName && (!ue(K2()) || !K2().contains(n3)));
        }, lt = () => {
          var e4;
          s3(document.body, m3.iosfix) && (e4 = parseInt(document.body.style.top, 10), A3(document.body, m3.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * e4);
        }, ut = () => {
          null === i3.previousBodyPadding && document.body.scrollHeight > window.innerHeight && (i3.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(i3.previousBodyPadding + (() => {
            const e4 = document.createElement("div");
            e4.className = m3["scrollbar-measure"], document.body.appendChild(e4);
            var t4 = e4.getBoundingClientRect().width - e4.clientWidth;
            return document.body.removeChild(e4), t4;
          })(), "px"));
        }, dt2 = () => {
          null !== i3.previousBodyPadding && (document.body.style.paddingRight = "".concat(i3.previousBodyPadding, "px"), i3.previousBodyPadding = null);
        };
        function pt(e4, t4, n3, o3) {
          te() ? ft(e4, o3) : (ge(n3).then(() => ft(e4, o3)), Qe(E)), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (t4.setAttribute("style", "display:none !important"), t4.removeAttribute("class"), t4.innerHTML = "") : t4.remove(), ee() && (dt2(), lt(), at()), A3([document.documentElement, document.body], [m3.shown, m3["height-auto"], m3["no-backdrop"], m3["toast-shown"]]);
        }
        function mt(e4) {
          e4 = void 0 !== (n3 = e4) ? Object.assign({ isConfirmed: false, isDenied: false, isDismissed: false }, n3) : { isConfirmed: false, isDenied: false, isDismissed: true };
          const t4 = it.swalPromiseResolve.get(this);
          var n3 = ((e5) => {
            const t5 = h3();
            if (!t5)
              return false;
            const n4 = p3.innerParams.get(e5);
            if (!n4 || s3(t5, n4.hideClass.popup))
              return false;
            A3(t5, n4.showClass.popup), C3(t5, n4.hideClass.popup);
            const o3 = g4();
            return A3(o3, n4.showClass.backdrop), C3(o3, n4.hideClass.backdrop), ht(e5, t5, n4), true;
          })(this);
          this.isAwaitingPromise() ? e4.isDismissed || (gt(this), t4(e4)) : n3 && t4(e4);
        }
        const gt = (e4) => {
          e4.isAwaitingPromise() && (p3.awaitingPromise.delete(e4), p3.innerParams.get(e4) || e4._destroy());
        }, ht = (e4, t4, n3) => {
          var o3, i4, r4, a4 = g4(), s4 = Be && de(t4);
          "function" == typeof n3.willClose && n3.willClose(t4), s4 ? (s4 = e4, o3 = t4, t4 = a4, i4 = n3.returnFocus, r4 = n3.didClose, E.swalCloseEventFinishedCallback = pt.bind(null, s4, t4, i4, r4), o3.addEventListener(Be, function(e5) {
            e5.target === o3 && (E.swalCloseEventFinishedCallback(), delete E.swalCloseEventFinishedCallback);
          })) : pt(e4, a4, n3.returnFocus, n3.didClose);
        }, ft = (e4, t4) => {
          setTimeout(() => {
            "function" == typeof t4 && t4.bind(e4.params)(), e4._destroy();
          });
        };
        function bt(e4, t4, n3) {
          const o3 = p3.domCache.get(e4);
          t4.forEach((e5) => {
            o3[e5].disabled = n3;
          });
        }
        function yt(e4, t4) {
          if (e4)
            if ("radio" === e4.type) {
              const n3 = e4.parentNode.parentNode, o3 = n3.querySelectorAll("input");
              for (let e5 = 0; e5 < o3.length; e5++)
                o3[e5].disabled = t4;
            } else
              e4.disabled = t4;
        }
        const S2 = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: false, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", color: void 0, backdrop: true, heightAuto: true, allowOutsideClick: true, allowEscapeKey: true, allowEnterKey: true, stopKeydownPropagation: true, keydownListenerCapture: false, showConfirmButton: true, showDenyButton: false, showCancelButton: false, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: true, reverseButtons: false, focusConfirm: true, focusDeny: false, focusCancel: false, returnFocus: true, showCloseButton: false, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: false, showLoaderOnDeny: false, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: false, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoTrim: true, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: false, validationMessage: void 0, grow: false, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, willOpen: void 0, didOpen: void 0, didRender: void 0, willClose: void 0, didClose: void 0, didDestroy: void 0, scrollbarPadding: true }, vt = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"], wt = {}, Ct = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"], At = (e4) => Object.prototype.hasOwnProperty.call(S2, e4), kt = (e4) => -1 !== vt.indexOf(e4), Bt = (e4) => wt[e4], Pt = (e4) => {
          !e4.backdrop && e4.allowOutsideClick && r3('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
          for (const n3 in e4)
            t4 = n3, At(t4) || r3('Unknown parameter "'.concat(t4, '"')), e4.toast && (t4 = n3, Ct.includes(t4) && r3('The parameter "'.concat(t4, '" is incompatible with toasts'))), t4 = n3, Bt(t4) && N3(t4, Bt(t4));
          var t4;
        };
        const xt = (e4) => {
          e4.isAwaitingPromise() ? (Et(p3, e4), p3.awaitingPromise.set(e4, true)) : (Et(it, e4), Et(p3, e4));
        }, Et = (e4, t4) => {
          for (const n3 in e4)
            e4[n3].delete(t4);
        };
        e3 = Object.freeze({ hideLoading: Je, disableLoading: Je, getInput: function(e4) {
          var t4 = p3.innerParams.get(e4 || this);
          return (e4 = p3.domCache.get(e4 || this)) ? ie(e4.popup, t4.input) : null;
        }, close: mt, isAwaitingPromise: function() {
          return !!p3.awaitingPromise.get(this);
        }, rejectPromise: function(e4) {
          const t4 = it.swalPromiseReject.get(this);
          gt(this), t4 && t4(e4);
        }, handleAwaitingPromise: gt, closePopup: mt, closeModal: mt, closeToast: mt, enableButtons: function() {
          bt(this, ["confirmButton", "denyButton", "cancelButton"], false);
        }, disableButtons: function() {
          bt(this, ["confirmButton", "denyButton", "cancelButton"], true);
        }, enableInput: function() {
          yt(this.getInput(), false);
        }, disableInput: function() {
          yt(this.getInput(), true);
        }, showValidationMessage: function(e4) {
          const t4 = p3.domCache.get(this);
          var n3 = p3.innerParams.get(this);
          v3(t4.validationMessage, e4), t4.validationMessage.className = m3["validation-message"], n3.customClass && n3.customClass.validationMessage && C3(t4.validationMessage, n3.customClass.validationMessage), B3(t4.validationMessage);
          const o3 = this.getInput();
          o3 && (o3.setAttribute("aria-invalid", true), o3.setAttribute("aria-describedby", m3["validation-message"]), re(o3), C3(o3, m3.inputerror));
        }, resetValidationMessage: function() {
          var e4 = p3.domCache.get(this);
          e4.validationMessage && P2(e4.validationMessage);
          const t4 = this.getInput();
          t4 && (t4.removeAttribute("aria-invalid"), t4.removeAttribute("aria-describedby"), A3(t4, m3.inputerror));
        }, getProgressSteps: function() {
          return p3.domCache.get(this).progressSteps;
        }, update: function(e4) {
          var t4 = h3(), n3 = p3.innerParams.get(this);
          if (!t4 || s3(t4, n3.hideClass.popup))
            return r3("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
          t4 = ((t5) => {
            const n4 = {};
            return Object.keys(t5).forEach((e5) => {
              if (kt(e5))
                n4[e5] = t5[e5];
              else
                r3("Invalid parameter to update: ".concat(e5));
            }), n4;
          })(e4), n3 = Object.assign({}, n3, t4), $e(this, n3), p3.innerParams.set(this, n3), Object.defineProperties(this, { params: { value: Object.assign({}, this.params, e4), writable: false, enumerable: true } });
        }, _destroy: function() {
          var e4 = p3.domCache.get(this);
          const t4 = p3.innerParams.get(this);
          t4 ? (e4.popup && E.swalCloseEventFinishedCallback && (E.swalCloseEventFinishedCallback(), delete E.swalCloseEventFinishedCallback), "function" == typeof t4.didDestroy && t4.didDestroy(), e4 = this, xt(e4), delete e4.params, delete E.keydownHandler, delete E.keydownTarget, delete E.currentInstance) : xt(this);
        } });
        const O2 = (e4) => {
          let t4 = h3();
          t4 || new An(), t4 = h3();
          var n3 = d2();
          if (te())
            P2(W2());
          else {
            var o3 = t4;
            const i4 = X2(), r4 = d2();
            !e4 && x4(f3()) && (e4 = f3());
            B3(i4), e4 && (P2(e4), r4.setAttribute("data-button-to-replace", e4.className));
            r4.parentNode.insertBefore(r4, e4), C3([o3, i4], m3.loading);
          }
          B3(n3), t4.setAttribute("data-loading", "true"), t4.setAttribute("aria-busy", "true"), t4.focus();
        }, Tt = (t4, n3) => {
          const o3 = h3(), i4 = (e4) => St[n3.input](o3, Ot(e4), n3);
          F3(n3.inputOptions) || U2(n3.inputOptions) ? (O2(f3()), u3(n3.inputOptions).then((e4) => {
            t4.hideLoading(), i4(e4);
          })) : "object" == typeof n3.inputOptions ? i4(n3.inputOptions) : l3("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof n3.inputOptions));
        }, Lt = (t4, n3) => {
          const o3 = t4.getInput();
          P2(o3), u3(n3.inputValue).then((e4) => {
            o3.value = "number" === n3.input ? parseFloat(e4) || 0 : "".concat(e4), B3(o3), o3.focus(), t4.hideLoading();
          }).catch((e4) => {
            l3("Error in inputValue promise: ".concat(e4)), o3.value = "", B3(o3), o3.focus(), t4.hideLoading();
          });
        }, St = { select: (e4, t4, i4) => {
          const r4 = k3(e4, m3.select), a4 = (e5, t5, n3) => {
            const o3 = document.createElement("option");
            o3.value = n3, v3(o3, t5), o3.selected = Mt(n3, i4.inputValue), e5.appendChild(o3);
          };
          t4.forEach((e5) => {
            var t5 = e5[0];
            const n3 = e5[1];
            if (Array.isArray(n3)) {
              const o3 = document.createElement("optgroup");
              o3.label = t5, o3.disabled = false, r4.appendChild(o3), n3.forEach((e6) => a4(o3, e6[1], e6[0]));
            } else
              a4(r4, n3, t5);
          }), r4.focus();
        }, radio: (e4, t4, r4) => {
          const a4 = k3(e4, m3.radio), n3 = (t4.forEach((e5) => {
            var t5 = e5[0], e5 = e5[1];
            const n4 = document.createElement("input"), o3 = document.createElement("label"), i4 = (n4.type = "radio", n4.name = m3.radio, n4.value = t5, Mt(t5, r4.inputValue) && (n4.checked = true), document.createElement("span"));
            v3(i4, e5), i4.className = m3.label, o3.appendChild(n4), o3.appendChild(i4), a4.appendChild(o3);
          }), a4.querySelectorAll("input"));
          n3.length && n3[0].focus();
        } }, Ot = (n3) => {
          const o3 = [];
          return "undefined" != typeof Map && n3 instanceof Map ? n3.forEach((e4, t4) => {
            let n4 = e4;
            "object" == typeof n4 && (n4 = Ot(n4)), o3.push([t4, n4]);
          }) : Object.keys(n3).forEach((e4) => {
            let t4 = n3[e4];
            "object" == typeof t4 && (t4 = Ot(t4)), o3.push([e4, t4]);
          }), o3;
        }, Mt = (e4, t4) => t4 && t4.toString() === e4.toString(), jt = (e4, t4) => {
          var n3 = p3.innerParams.get(e4);
          if (n3.input) {
            var o3 = ((e5, t5) => {
              const n4 = e5.getInput();
              if (!n4)
                return null;
              switch (t5.input) {
                case "checkbox":
                  return n4.checked ? 1 : 0;
                case "radio":
                  return (o4 = n4).checked ? o4.value : null;
                case "file":
                  return (o4 = n4).files.length ? null !== o4.getAttribute("multiple") ? o4.files : o4.files[0] : null;
                default:
                  return t5.inputAutoTrim ? n4.value.trim() : n4.value;
              }
              var o4;
            })(e4, n3);
            if (n3.inputValidator) {
              var i4 = e4;
              var r4 = o3;
              var a4 = t4;
              const s4 = p3.innerParams.get(i4), c4 = (i4.disableInput(), Promise.resolve().then(() => u3(s4.inputValidator(r4, s4.validationMessage))));
              c4.then((e5) => {
                i4.enableButtons(), i4.enableInput(), e5 ? i4.showValidationMessage(e5) : ("deny" === a4 ? Ht : qt)(i4, r4);
              });
            } else
              e4.getInput().checkValidity() ? ("deny" === t4 ? Ht : qt)(e4, o3) : (e4.enableButtons(), e4.showValidationMessage(n3.validationMessage));
          } else
            l3('The "input" parameter is needed to be set when using returnInputValueOn'.concat(q3(t4)));
        }, Ht = (t4, n3) => {
          const e4 = p3.innerParams.get(t4 || void 0);
          if (e4.showLoaderOnDeny && O2(b3()), e4.preDeny) {
            p3.awaitingPromise.set(t4 || void 0, true);
            const o3 = Promise.resolve().then(() => u3(e4.preDeny(n3, e4.validationMessage)));
            o3.then((e5) => {
              false === e5 ? (t4.hideLoading(), gt(t4)) : t4.close({ isDenied: true, value: void 0 === e5 ? n3 : e5 });
            }).catch((e5) => Dt(t4 || void 0, e5));
          } else
            t4.close({ isDenied: true, value: n3 });
        }, It = (e4, t4) => {
          e4.close({ isConfirmed: true, value: t4 });
        }, Dt = (e4, t4) => {
          e4.rejectPromise(t4);
        }, qt = (t4, n3) => {
          const e4 = p3.innerParams.get(t4 || void 0);
          if (e4.showLoaderOnConfirm && O2(), e4.preConfirm) {
            t4.resetValidationMessage(), p3.awaitingPromise.set(t4 || void 0, true);
            const o3 = Promise.resolve().then(() => u3(e4.preConfirm(n3, e4.validationMessage)));
            o3.then((e5) => {
              x4(Z2()) || false === e5 ? (t4.hideLoading(), gt(t4)) : It(t4, void 0 === e5 ? n3 : e5);
            }).catch((e5) => Dt(t4 || void 0, e5));
          } else
            It(t4, n3);
        }, Vt = (n3, e4, o3) => {
          e4.popup.onclick = () => {
            var e5, t4 = p3.innerParams.get(n3);
            t4 && ((e5 = t4).showConfirmButton || e5.showDenyButton || e5.showCancelButton || e5.showCloseButton || t4.timer || t4.input) || o3(L3.close);
          };
        };
        let Nt = false;
        const Rt = (t4) => {
          t4.popup.onmousedown = () => {
            t4.container.onmouseup = function(e4) {
              t4.container.onmouseup = void 0, e4.target === t4.container && (Nt = true);
            };
          };
        }, Ft = (t4) => {
          t4.container.onmousedown = () => {
            t4.popup.onmouseup = function(e4) {
              t4.popup.onmouseup = void 0, e4.target !== t4.popup && !t4.popup.contains(e4.target) || (Nt = true);
            };
          };
        }, Ut = (n3, o3, i4) => {
          o3.container.onclick = (e4) => {
            var t4 = p3.innerParams.get(n3);
            Nt ? Nt = false : e4.target === o3.container && R(t4.allowOutsideClick) && i4(L3.backdrop);
          };
        }, Wt = (e4) => "object" == typeof e4 && e4.jquery, zt = (e4) => e4 instanceof Element || Wt(e4);
        const Kt = () => {
          if (E.timeout) {
            {
              const n3 = J2();
              var e4 = parseInt(window.getComputedStyle(n3).width), t4 = (n3.style.removeProperty("transition"), n3.style.width = "100%", parseInt(window.getComputedStyle(n3).width)), e4 = e4 / t4 * 100;
              n3.style.removeProperty("transition"), n3.style.width = "".concat(e4, "%");
            }
            return E.timeout.stop();
          }
        }, _t = () => {
          var e4;
          if (E.timeout)
            return e4 = E.timeout.start(), ne(e4), e4;
        };
        let Yt = false;
        const Zt = {};
        const Xt = (t4) => {
          for (let e4 = t4.target; e4 && e4 !== document; e4 = e4.parentNode)
            for (const o3 in Zt) {
              var n3 = e4.getAttribute(o3);
              if (n3)
                return void Zt[o3].fire({ template: n3 });
            }
        };
        var $t = Object.freeze({ isValidParameter: At, isUpdatableParameter: kt, isDeprecatedParameter: Bt, argsToParams: (n3) => {
          const o3 = {};
          return "object" != typeof n3[0] || zt(n3[0]) ? ["title", "html", "icon"].forEach((e4, t4) => {
            t4 = n3[t4];
            "string" == typeof t4 || zt(t4) ? o3[e4] = t4 : void 0 !== t4 && l3("Unexpected type of ".concat(e4, '! Expected "string" or "Element", got ').concat(typeof t4));
          }) : Object.assign(o3, n3[0]), o3;
        }, isVisible: () => x4(h3()), clickConfirm: Ge, clickDeny: () => b3() && b3().click(), clickCancel: () => y3() && y3().click(), getContainer: g4, getPopup: h3, getTitle: z3, getHtmlContainer: K2, getImage: _3, getIcon: W2, getInputLabel: () => n2(m3["input-label"]), getCloseButton: G2, getActions: X2, getConfirmButton: f3, getDenyButton: b3, getCancelButton: y3, getLoader: d2, getFooter: $3, getTimerProgressBar: J2, getFocusableElements: Q2, getValidationMessage: Z2, isLoading: () => h3().hasAttribute("data-loading"), fire: function() {
          for (var e4 = arguments.length, t4 = new Array(e4), n3 = 0; n3 < e4; n3++)
            t4[n3] = arguments[n3];
          return new this(...t4);
        }, mixin: function(n3) {
          class e4 extends this {
            _main(e5, t4) {
              return super._main(e5, Object.assign({}, n3, t4));
            }
          }
          return e4;
        }, showLoading: O2, enableLoading: O2, getTimerLeft: () => E.timeout && E.timeout.getTimerLeft(), stopTimer: Kt, resumeTimer: _t, toggleTimer: () => {
          var e4 = E.timeout;
          return e4 && (e4.running ? Kt : _t)();
        }, increaseTimer: (e4) => {
          if (E.timeout)
            return e4 = E.timeout.increase(e4), ne(e4, true), e4;
        }, isTimerRunning: () => E.timeout && E.timeout.isRunning(), bindClickHandler: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "data-swal-template";
          Zt[e4] = this, Yt || (document.body.addEventListener("click", Xt), Yt = true);
        } });
        class Jt {
          constructor(e4, t4) {
            this.callback = e4, this.remaining = t4, this.running = false, this.start();
          }
          start() {
            return this.running || (this.running = true, this.started = new Date(), this.id = setTimeout(this.callback, this.remaining)), this.remaining;
          }
          stop() {
            return this.running && (this.running = false, clearTimeout(this.id), this.remaining -= new Date().getTime() - this.started.getTime()), this.remaining;
          }
          increase(e4) {
            var t4 = this.running;
            return t4 && this.stop(), this.remaining += e4, t4 && this.start(), this.remaining;
          }
          getTimerLeft() {
            return this.running && (this.stop(), this.start()), this.remaining;
          }
          isRunning() {
            return this.running;
          }
        }
        const Gt = ["swal-title", "swal-html", "swal-footer"], Qt = (e4) => {
          const n3 = {}, t4 = Array.from(e4.querySelectorAll("swal-param"));
          return t4.forEach((e5) => {
            M2(e5, ["name", "value"]);
            var t5 = e5.getAttribute("name"), e5 = e5.getAttribute("value");
            "boolean" == typeof S2[t5] && "false" === e5 && (n3[t5] = false), "object" == typeof S2[t5] && (n3[t5] = JSON.parse(e5));
          }), n3;
        }, en2 = (e4) => {
          const n3 = {}, t4 = Array.from(e4.querySelectorAll("swal-button"));
          return t4.forEach((e5) => {
            M2(e5, ["type", "color", "aria-label"]);
            var t5 = e5.getAttribute("type");
            n3["".concat(t5, "ButtonText")] = e5.innerHTML, n3["show".concat(q3(t5), "Button")] = true, e5.hasAttribute("color") && (n3["".concat(t5, "ButtonColor")] = e5.getAttribute("color")), e5.hasAttribute("aria-label") && (n3["".concat(t5, "ButtonAriaLabel")] = e5.getAttribute("aria-label"));
          }), n3;
        }, tn2 = (e4) => {
          const t4 = {}, n3 = e4.querySelector("swal-image");
          return n3 && (M2(n3, ["src", "width", "height", "alt"]), n3.hasAttribute("src") && (t4.imageUrl = n3.getAttribute("src")), n3.hasAttribute("width") && (t4.imageWidth = n3.getAttribute("width")), n3.hasAttribute("height") && (t4.imageHeight = n3.getAttribute("height")), n3.hasAttribute("alt") && (t4.imageAlt = n3.getAttribute("alt"))), t4;
        }, nn2 = (e4) => {
          const t4 = {}, n3 = e4.querySelector("swal-icon");
          return n3 && (M2(n3, ["type", "color"]), n3.hasAttribute("type") && (t4.icon = n3.getAttribute("type")), n3.hasAttribute("color") && (t4.iconColor = n3.getAttribute("color")), t4.iconHtml = n3.innerHTML), t4;
        }, on = (e4) => {
          const n3 = {}, t4 = e4.querySelector("swal-input"), o3 = (t4 && (M2(t4, ["type", "label", "placeholder", "value"]), n3.input = t4.getAttribute("type") || "text", t4.hasAttribute("label") && (n3.inputLabel = t4.getAttribute("label")), t4.hasAttribute("placeholder") && (n3.inputPlaceholder = t4.getAttribute("placeholder")), t4.hasAttribute("value") && (n3.inputValue = t4.getAttribute("value"))), Array.from(e4.querySelectorAll("swal-input-option")));
          return o3.length && (n3.inputOptions = {}, o3.forEach((e5) => {
            M2(e5, ["value"]);
            var t5 = e5.getAttribute("value"), e5 = e5.innerHTML;
            n3.inputOptions[t5] = e5;
          })), n3;
        }, rn = (e4, t4) => {
          const n3 = {};
          for (const o3 in t4) {
            const i4 = t4[o3], r4 = e4.querySelector(i4);
            r4 && (M2(r4, []), n3[i4.replace(/^swal-/, "")] = r4.innerHTML.trim());
          }
          return n3;
        }, an = (e4) => {
          const t4 = Gt.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
          Array.from(e4.children).forEach((e5) => {
            e5 = e5.tagName.toLowerCase();
            t4.includes(e5) || r3("Unrecognized element <".concat(e5, ">"));
          });
        }, M2 = (t4, n3) => {
          Array.from(t4.attributes).forEach((e4) => {
            -1 === n3.indexOf(e4.name) && r3(['Unrecognized attribute "'.concat(e4.name, '" on <').concat(t4.tagName.toLowerCase(), ">."), "".concat(n3.length ? "Allowed attributes are: ".concat(n3.join(", ")) : "To set the value, use HTML within the element.")]);
          });
        }, sn = 10, cn = (e4) => {
          const t4 = h3();
          if (e4.target === t4) {
            const n3 = g4();
            t4.removeEventListener(Be, cn), n3.style.overflowY = "auto";
          }
        }, ln = (e4, t4) => {
          Be && de(t4) ? (e4.style.overflowY = "hidden", t4.addEventListener(Be, cn)) : e4.style.overflowY = "auto";
        }, un = (e4, t4, n3) => {
          st(), t4 && "hidden" !== n3 && ut(), setTimeout(() => {
            e4.scrollTop = 0;
          });
        }, dn = (e4, t4, n3) => {
          C3(e4, n3.showClass.backdrop), t4.style.setProperty("opacity", "0", "important"), B3(t4, "grid"), setTimeout(() => {
            C3(t4, n3.showClass.popup), t4.style.removeProperty("opacity");
          }, sn), C3([document.documentElement, document.body], m3.shown), n3.heightAuto && n3.backdrop && !n3.toast && C3([document.documentElement, document.body], m3["height-auto"]);
        };
        var pn = { email: (e4, t4) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(e4) ? Promise.resolve() : Promise.resolve(t4 || "Invalid email address"), url: (e4, t4) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(e4) ? Promise.resolve() : Promise.resolve(t4 || "Invalid URL") };
        function mn(e4) {
          (t4 = e4).inputValidator || Object.keys(pn).forEach((e5) => {
            t4.input === e5 && (t4.inputValidator = pn[e5]);
          }), e4.showLoaderOnConfirm && !e4.preConfirm && r3("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"), (n3 = e4).target && ("string" != typeof n3.target || document.querySelector(n3.target)) && ("string" == typeof n3.target || n3.target.appendChild) || (r3('Target parameter is not valid, defaulting to "body"'), n3.target = "body"), "string" == typeof e4.title && (e4.title = e4.title.split("\n").join("<br />"));
          var t4, n3 = e4, e4 = be();
          if (he())
            l3("SweetAlert2 requires document to initialize");
          else {
            const o3 = document.createElement("div"), i4 = (o3.className = m3.container, e4 && C3(o3, m3["no-transition"]), v3(o3, fe), ve(n3.target));
            i4.appendChild(o3), we(n3), Ce(i4), ye();
          }
        }
        let j4;
        class H3 {
          constructor() {
            if ("undefined" != typeof window) {
              j4 = this;
              for (var e4 = arguments.length, t4 = new Array(e4), n3 = 0; n3 < e4; n3++)
                t4[n3] = arguments[n3];
              var o3 = Object.freeze(this.constructor.argsToParams(t4)), o3 = (Object.defineProperties(this, { params: { value: o3, writable: false, enumerable: true, configurable: true } }), j4._main(j4.params));
              p3.promise.set(this, o3);
            }
          }
          _main(e4) {
            var t4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, e4 = (Pt(Object.assign({}, t4, e4)), E.currentInstance && (E.currentInstance._destroy(), ee() && at()), E.currentInstance = j4, hn(e4, t4)), t4 = (mn(e4), Object.freeze(e4), E.timeout && (E.timeout.stop(), delete E.timeout), clearTimeout(E.restoreFocusTimeout), fn(j4));
            return $e(j4, e4), p3.innerParams.set(j4, e4), gn(j4, t4, e4);
          }
          then(e4) {
            const t4 = p3.promise.get(this);
            return t4.then(e4);
          }
          finally(e4) {
            const t4 = p3.promise.get(this);
            return t4.finally(e4);
          }
        }
        const gn = (l4, u4, d3) => new Promise((e4, t4) => {
          const n3 = (e5) => {
            l4.close({ isDismissed: true, dismiss: e5 });
          };
          var o3, i4, r4;
          it.swalPromiseResolve.set(l4, e4), it.swalPromiseReject.set(l4, t4), u4.confirmButton.onclick = () => {
            var e5, t5;
            e5 = l4, t5 = p3.innerParams.get(e5), e5.disableButtons(), t5.input ? jt(e5, "confirm") : qt(e5, true);
          }, u4.denyButton.onclick = () => {
            var e5, t5;
            e5 = l4, t5 = p3.innerParams.get(e5), e5.disableButtons(), t5.returnInputValueOnDeny ? jt(e5, "deny") : Ht(e5, false);
          }, u4.cancelButton.onclick = () => {
            var e5, t5;
            e5 = l4, t5 = n3, e5.disableButtons(), t5(L3.cancel);
          }, u4.closeButton.onclick = () => {
            n3(L3.close);
          }, e4 = l4, t4 = u4, r4 = n3, p3.innerParams.get(e4).toast ? Vt(e4, t4, r4) : (Rt(t4), Ft(t4), Ut(e4, t4, r4)), o3 = l4, e4 = E, t4 = d3, i4 = n3, Qe(e4), t4.toast || (e4.keydownHandler = (e5) => ot(o3, e5, i4), e4.keydownTarget = t4.keydownListenerCapture ? window : h3(), e4.keydownListenerCapture = t4.keydownListenerCapture, e4.keydownTarget.addEventListener("keydown", e4.keydownHandler, { capture: e4.keydownListenerCapture }), e4.keydownHandlerAdded = true), r4 = l4, "select" === (t4 = d3).input || "radio" === t4.input ? Tt(r4, t4) : ["text", "email", "number", "tel", "textarea"].includes(t4.input) && (F3(t4.inputValue) || U2(t4.inputValue)) && (O2(f3()), Lt(r4, t4));
          {
            var a4 = d3;
            const s4 = g4(), c4 = h3();
            "function" == typeof a4.willOpen && a4.willOpen(c4), e4 = window.getComputedStyle(document.body).overflowY, dn(s4, c4, a4), setTimeout(() => {
              ln(s4, c4);
            }, sn), ee() && (un(s4, a4.scrollbarPadding, e4), rt()), te() || E.previousActiveElement || (E.previousActiveElement = document.activeElement), "function" == typeof a4.didOpen && setTimeout(() => a4.didOpen(c4)), A3(s4, m3["no-transition"]);
          }
          bn(E, d3, n3), yn(u4, d3), setTimeout(() => {
            u4.container.scrollTop = 0;
          });
        }), hn = (e4, t4) => {
          var n3 = ((e5) => {
            e5 = "string" == typeof e5.template ? document.querySelector(e5.template) : e5.template;
            if (!e5)
              return {};
            e5 = e5.content, an(e5), e5 = Object.assign(Qt(e5), en2(e5), tn2(e5), nn2(e5), on(e5), rn(e5, Gt));
            return e5;
          })(e4);
          const o3 = Object.assign({}, S2, t4, n3, e4);
          return o3.showClass = Object.assign({}, S2.showClass, o3.showClass), o3.hideClass = Object.assign({}, S2.hideClass, o3.hideClass), o3;
        }, fn = (e4) => {
          var t4 = { popup: h3(), container: g4(), actions: X2(), confirmButton: f3(), denyButton: b3(), cancelButton: y3(), loader: d2(), closeButton: G2(), validationMessage: Z2(), progressSteps: Y() };
          return p3.domCache.set(e4, t4), t4;
        }, bn = (e4, t4, n3) => {
          var o3 = J2();
          P2(o3), t4.timer && (e4.timeout = new Jt(() => {
            n3("timer"), delete e4.timeout;
          }, t4.timer), t4.timerProgressBar && (B3(o3), w4(o3, t4, "timerProgressBar"), setTimeout(() => {
            e4.timeout && e4.timeout.running && ne(t4.timer);
          })));
        }, yn = (e4, t4) => {
          t4.toast || (R(t4.allowEnterKey) ? vn(e4, t4) || et(t4, -1, 1) : wn());
        }, vn = (e4, t4) => t4.focusDeny && x4(e4.denyButton) ? (e4.denyButton.focus(), true) : t4.focusCancel && x4(e4.cancelButton) ? (e4.cancelButton.focus(), true) : !(!t4.focusConfirm || !x4(e4.confirmButton)) && (e4.confirmButton.focus(), true), wn = () => {
          document.activeElement instanceof HTMLElement && "function" == typeof document.activeElement.blur && document.activeElement.blur();
        };
        if ("undefined" != typeof window && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|xn--p1ai)$/) && Math.random() < 0.1) {
          const I3 = document.createElement("div");
          I3.className = "leave-russia-now-and-apply-your-skills-to-the-world";
          var Cn = (Cn = [{ text: "\u0412 \u043D\u0438\u0436\u0435\u043F\u0440\u0438\u0432\u0435\u0434\u0451\u043D\u043D\u043E\u043C \u0432\u0438\u0434\u0435\u043E \u043E\u0431\u044A\u044F\u0441\u043D\u044F\u0435\u0442\u0441\u044F \u043A\u0430\u043A \u043A\u0430\u0436\u0434\u044B\u0439 \u0438\u0437 \u043D\u0430\u0441 \u043C\u043E\u0436\u0435\u0442 \u043F\u043E\u043C\u043E\u0447\u044C \u0432 \u0442\u043E\u043C,\n        <strong>\u0447\u0442\u043E\u0431\u044B \u044D\u0442\u0430 \u0431\u0435\u0441\u0441\u043C\u044B\u0441\u043B\u0435\u043D\u043D\u0430\u044F \u0438 \u0431\u0435\u0441\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u043D\u0430\u044F \u0432\u043E\u0439\u043D\u0430 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0430\u0441\u044C</strong>:", id: "4CfDhaRkw7I" }, { text: "\u042D\u043C\u043F\u0430\u0442\u0438\u044F - \u0433\u043B\u0430\u0432\u043D\u043E\u0435 <strong>\u0447\u0435\u043B\u043E\u0432\u0435\u0447\u0435\u0441\u043A\u043E\u0435</strong> \u0447\u0443\u0432\u0441\u0442\u0432\u043E. \u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u0441\u043E\u043F\u0435\u0440\u0435\u0436\u0438\u0432\u0430\u0442\u044C. <strong>\u0421\u043F\u043E\u0441\u043E\u0431\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0441\u0435\u0431\u044F \u043D\u0430 \u043C\u0435\u0441\u0442\u043E \u0434\u0440\u0443\u0433\u043E\u0433\u043E.</strong>", id: "s-GLAIY4DXA" }])[Math.floor(Math.random() * Cn.length)];
          v3(I3, "\n      <div>\n        \u0415\u0441\u043B\u0438 \u043C\u044B \u043D\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043C \u0432\u043E\u0439\u043D\u0443, \u043E\u043D\u0430 \u043F\u0440\u0438\u0434\u0435\u0442 \u0432 \u0434\u043E\u043C <strong>\u043A\u0430\u0436\u0434\u043E\u0433\u043E \u0438\u0437 \u043D\u0430\u0441</strong> \u0438 \u0435\u0451 \u043F\u043E\u0441\u043B\u0435\u0434\u0441\u0442\u0432\u0438\u044F \u0431\u0443\u0434\u0443\u0442 <strong>\u0443\u0436\u0430\u0441\u0430\u044E\u0449\u0438\u043C\u0438</strong>.\n      </div>\n      <div>\n        \u041F\u0443\u0442\u0438\u043D\u0441\u043A\u0438\u0439 \u0440\u0435\u0436\u0438\u043C \u0437\u0430 20 \u0441 \u043B\u0438\u0448\u043D\u0438\u043C \u043B\u0435\u0442 \u0441\u0432\u043E\u0435\u0433\u043E \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043E\u0432\u0430\u043D\u0438\u044F \u0432\u0434\u043E\u043B\u0431\u0438\u043B \u043D\u0430\u043C, \u0447\u0442\u043E \u043C\u044B \u0431\u0435\u0441\u0441\u0438\u043B\u044C\u043D\u044B \u0438 \u043E\u0434\u0438\u043D \u0447\u0435\u043B\u043E\u0432\u0435\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u043D\u0438\u0447\u0435\u0433\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C. <strong>\u042D\u0442\u043E \u043D\u0435 \u0442\u0430\u043A!</strong>\n      </div>\n      <div>\n        ".concat(Cn.text, '\n      </div>\n      <iframe width="560" height="315" src="https://www.youtube.com/embed/').concat(Cn.id, '" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n      <div>\n        \u041D\u0435\u0442 \u0432\u043E\u0439\u043D\u0435!\n      </div>\n      '));
          const kn = document.createElement("button");
          kn.innerHTML = "&times;", kn.onclick = () => I3.remove(), I3.appendChild(kn), window.addEventListener("load", () => {
            setTimeout(() => {
              document.body.appendChild(I3);
            }, 1e3);
          });
        }
        Object.assign(H3.prototype, e3), Object.assign(H3, $t), Object.keys(e3).forEach((e4) => {
          H3[e4] = function() {
            if (j4)
              return j4[e4](...arguments);
          };
        }), H3.DismissReason = L3, H3.version = "11.4.33";
        const An = H3;
        return An.default = An;
      }), void 0 !== exports && exports.Sweetalert2 && (exports.swal = exports.sweetAlert = exports.Swal = exports.SweetAlert = exports.Sweetalert2);
    }
  });

  // node_modules/admin-lte/plugins/select2/js/select2.min.js
  var require_select2_min = __commonJS({
    "node_modules/admin-lte/plugins/select2/js/select2.min.js"(exports, module) {
      !function(n2) {
        "function" == typeof define && define.amd ? define(["jquery"], n2) : "object" == typeof module && module.exports ? module.exports = function(e3, t3) {
          return void 0 === t3 && (t3 = "undefined" != typeof window ? require_jquery() : require_jquery()(e3)), n2(t3), t3;
        } : n2(jQuery);
      }(function(u3) {
        var e3 = function() {
          if (u3 && u3.fn && u3.fn.select2 && u3.fn.select2.amd)
            var e4 = u3.fn.select2.amd;
          var t4, n2, r3, h3, o2, s3, f3, g4, m3, v3, y3, _3, i3, a3, b3;
          function w4(e5, t5) {
            return i3.call(e5, t5);
          }
          function l3(e5, t5) {
            var n3, r4, i4, o3, s4, a4, l4, c4, u4, d2, p3, h4 = t5 && t5.split("/"), f4 = y3.map, g5 = f4 && f4["*"] || {};
            if (e5) {
              for (s4 = (e5 = e5.split("/")).length - 1, y3.nodeIdCompat && b3.test(e5[s4]) && (e5[s4] = e5[s4].replace(b3, "")), "." === e5[0].charAt(0) && h4 && (e5 = h4.slice(0, h4.length - 1).concat(e5)), u4 = 0; u4 < e5.length; u4++)
                if ("." === (p3 = e5[u4]))
                  e5.splice(u4, 1), --u4;
                else if (".." === p3) {
                  if (0 === u4 || 1 === u4 && ".." === e5[2] || ".." === e5[u4 - 1])
                    continue;
                  0 < u4 && (e5.splice(u4 - 1, 2), u4 -= 2);
                }
              e5 = e5.join("/");
            }
            if ((h4 || g5) && f4) {
              for (u4 = (n3 = e5.split("/")).length; 0 < u4; --u4) {
                if (r4 = n3.slice(0, u4).join("/"), h4) {
                  for (d2 = h4.length; 0 < d2; --d2)
                    if (i4 = (i4 = f4[h4.slice(0, d2).join("/")]) && i4[r4]) {
                      o3 = i4, a4 = u4;
                      break;
                    }
                }
                if (o3)
                  break;
                !l4 && g5 && g5[r4] && (l4 = g5[r4], c4 = u4);
              }
              !o3 && l4 && (o3 = l4, a4 = c4), o3 && (n3.splice(0, a4, o3), e5 = n3.join("/"));
            }
            return e5;
          }
          function A3(t5, n3) {
            return function() {
              var e5 = a3.call(arguments, 0);
              return "string" != typeof e5[0] && 1 === e5.length && e5.push(null), s3.apply(h3, e5.concat([t5, n3]));
            };
          }
          function x4(t5) {
            return function(e5) {
              m3[t5] = e5;
            };
          }
          function D2(e5) {
            if (w4(v3, e5)) {
              var t5 = v3[e5];
              delete v3[e5], _3[e5] = true, o2.apply(h3, t5);
            }
            if (!w4(m3, e5) && !w4(_3, e5))
              throw new Error("No " + e5);
            return m3[e5];
          }
          function c3(e5) {
            var t5, n3 = e5 ? e5.indexOf("!") : -1;
            return -1 < n3 && (t5 = e5.substring(0, n3), e5 = e5.substring(n3 + 1, e5.length)), [t5, e5];
          }
          function S2(e5) {
            return e5 ? c3(e5) : [];
          }
          return e4 && e4.requirejs || (e4 ? n2 = e4 : e4 = {}, m3 = {}, v3 = {}, y3 = {}, _3 = {}, i3 = Object.prototype.hasOwnProperty, a3 = [].slice, b3 = /\.js$/, f3 = function(e5, t5) {
            var n3, r4, i4 = c3(e5), o3 = i4[0], s4 = t5[1];
            return e5 = i4[1], o3 && (n3 = D2(o3 = l3(o3, s4))), o3 ? e5 = n3 && n3.normalize ? n3.normalize(e5, (r4 = s4, function(e6) {
              return l3(e6, r4);
            })) : l3(e5, s4) : (o3 = (i4 = c3(e5 = l3(e5, s4)))[0], e5 = i4[1], o3 && (n3 = D2(o3))), { f: o3 ? o3 + "!" + e5 : e5, n: e5, pr: o3, p: n3 };
          }, g4 = { require: function(e5) {
            return A3(e5);
          }, exports: function(e5) {
            var t5 = m3[e5];
            return void 0 !== t5 ? t5 : m3[e5] = {};
          }, module: function(e5) {
            return { id: e5, uri: "", exports: m3[e5], config: (t5 = e5, function() {
              return y3 && y3.config && y3.config[t5] || {};
            }) };
            var t5;
          } }, o2 = function(e5, t5, n3, r4) {
            var i4, o3, s4, a4, l4, c4, u4, d2 = [], p3 = typeof n3;
            if (c4 = S2(r4 = r4 || e5), "undefined" == p3 || "function" == p3) {
              for (t5 = !t5.length && n3.length ? ["require", "exports", "module"] : t5, l4 = 0; l4 < t5.length; l4 += 1)
                if ("require" === (o3 = (a4 = f3(t5[l4], c4)).f))
                  d2[l4] = g4.require(e5);
                else if ("exports" === o3)
                  d2[l4] = g4.exports(e5), u4 = true;
                else if ("module" === o3)
                  i4 = d2[l4] = g4.module(e5);
                else if (w4(m3, o3) || w4(v3, o3) || w4(_3, o3))
                  d2[l4] = D2(o3);
                else {
                  if (!a4.p)
                    throw new Error(e5 + " missing " + o3);
                  a4.p.load(a4.n, A3(r4, true), x4(o3), {}), d2[l4] = m3[o3];
                }
              s4 = n3 ? n3.apply(m3[e5], d2) : void 0, e5 && (i4 && i4.exports !== h3 && i4.exports !== m3[e5] ? m3[e5] = i4.exports : s4 === h3 && u4 || (m3[e5] = s4));
            } else
              e5 && (m3[e5] = n3);
          }, t4 = n2 = s3 = function(e5, t5, n3, r4, i4) {
            if ("string" == typeof e5)
              return g4[e5] ? g4[e5](t5) : D2(f3(e5, S2(t5)).f);
            if (!e5.splice) {
              if ((y3 = e5).deps && s3(y3.deps, y3.callback), !t5)
                return;
              t5.splice ? (e5 = t5, t5 = n3, n3 = null) : e5 = h3;
            }
            return t5 = t5 || function() {
            }, "function" == typeof n3 && (n3 = r4, r4 = i4), r4 ? o2(h3, e5, t5, n3) : setTimeout(function() {
              o2(h3, e5, t5, n3);
            }, 4), s3;
          }, s3.config = function(e5) {
            return s3(e5);
          }, t4._defined = m3, (r3 = function(e5, t5, n3) {
            if ("string" != typeof e5)
              throw new Error("See almond README: incorrect module build, no module name");
            t5.splice || (n3 = t5, t5 = []), w4(m3, e5) || w4(v3, e5) || (v3[e5] = [e5, t5, n3]);
          }).amd = { jQuery: true }, e4.requirejs = t4, e4.require = n2, e4.define = r3), e4.define("almond", function() {
          }), e4.define("jquery", [], function() {
            var e5 = u3 || $;
            return null == e5 && console && console.error && console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."), e5;
          }), e4.define("select2/utils", ["jquery"], function(o3) {
            var i4 = {};
            function u4(e6) {
              var t5 = e6.prototype, n4 = [];
              for (var r4 in t5) {
                "function" == typeof t5[r4] && "constructor" !== r4 && n4.push(r4);
              }
              return n4;
            }
            i4.Extend = function(e6, t5) {
              var n4 = {}.hasOwnProperty;
              function r4() {
                this.constructor = e6;
              }
              for (var i5 in t5)
                n4.call(t5, i5) && (e6[i5] = t5[i5]);
              return r4.prototype = t5.prototype, e6.prototype = new r4(), e6.__super__ = t5.prototype, e6;
            }, i4.Decorate = function(r4, i5) {
              var e6 = u4(i5), t5 = u4(r4);
              function o4() {
                var e7 = Array.prototype.unshift, t6 = i5.prototype.constructor.length, n5 = r4.prototype.constructor;
                0 < t6 && (e7.call(arguments, r4.prototype.constructor), n5 = i5.prototype.constructor), n5.apply(this, arguments);
              }
              i5.displayName = r4.displayName, o4.prototype = new function() {
                this.constructor = o4;
              }();
              for (var n4 = 0; n4 < t5.length; n4++) {
                var s4 = t5[n4];
                o4.prototype[s4] = r4.prototype[s4];
              }
              function a4(e7) {
                var t6 = function() {
                };
                e7 in o4.prototype && (t6 = o4.prototype[e7]);
                var n5 = i5.prototype[e7];
                return function() {
                  return Array.prototype.unshift.call(arguments, t6), n5.apply(this, arguments);
                };
              }
              for (var l4 = 0; l4 < e6.length; l4++) {
                var c4 = e6[l4];
                o4.prototype[c4] = a4(c4);
              }
              return o4;
            };
            function e5() {
              this.listeners = {};
            }
            e5.prototype.on = function(e6, t5) {
              this.listeners = this.listeners || {}, e6 in this.listeners ? this.listeners[e6].push(t5) : this.listeners[e6] = [t5];
            }, e5.prototype.trigger = function(e6) {
              var t5 = Array.prototype.slice, n4 = t5.call(arguments, 1);
              this.listeners = this.listeners || {}, null == n4 && (n4 = []), 0 === n4.length && n4.push({}), (n4[0]._type = e6) in this.listeners && this.invoke(this.listeners[e6], t5.call(arguments, 1)), "*" in this.listeners && this.invoke(this.listeners["*"], arguments);
            }, e5.prototype.invoke = function(e6, t5) {
              for (var n4 = 0, r4 = e6.length; n4 < r4; n4++)
                e6[n4].apply(this, t5);
            }, i4.Observable = e5, i4.generateChars = function(e6) {
              for (var t5 = "", n4 = 0; n4 < e6; n4++) {
                t5 += Math.floor(36 * Math.random()).toString(36);
              }
              return t5;
            }, i4.bind = function(e6, t5) {
              return function() {
                e6.apply(t5, arguments);
              };
            }, i4._convertData = function(e6) {
              for (var t5 in e6) {
                var n4 = t5.split("-"), r4 = e6;
                if (1 !== n4.length) {
                  for (var i5 = 0; i5 < n4.length; i5++) {
                    var o4 = n4[i5];
                    (o4 = o4.substring(0, 1).toLowerCase() + o4.substring(1)) in r4 || (r4[o4] = {}), i5 == n4.length - 1 && (r4[o4] = e6[t5]), r4 = r4[o4];
                  }
                  delete e6[t5];
                }
              }
              return e6;
            }, i4.hasScroll = function(e6, t5) {
              var n4 = o3(t5), r4 = t5.style.overflowX, i5 = t5.style.overflowY;
              return (r4 !== i5 || "hidden" !== i5 && "visible" !== i5) && ("scroll" === r4 || "scroll" === i5 || (n4.innerHeight() < t5.scrollHeight || n4.innerWidth() < t5.scrollWidth));
            }, i4.escapeMarkup = function(e6) {
              var t5 = { "\\": "&#92;", "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#47;" };
              return "string" != typeof e6 ? e6 : String(e6).replace(/[&<>"'\/\\]/g, function(e7) {
                return t5[e7];
              });
            }, i4.appendMany = function(e6, t5) {
              if ("1.7" === o3.fn.jquery.substr(0, 3)) {
                var n4 = o3();
                o3.map(t5, function(e7) {
                  n4 = n4.add(e7);
                }), t5 = n4;
              }
              e6.append(t5);
            }, i4.__cache = {};
            var n3 = 0;
            return i4.GetUniqueElementId = function(e6) {
              var t5 = e6.getAttribute("data-select2-id");
              return null == t5 && (e6.id ? (t5 = e6.id, e6.setAttribute("data-select2-id", t5)) : (e6.setAttribute("data-select2-id", ++n3), t5 = n3.toString())), t5;
            }, i4.StoreData = function(e6, t5, n4) {
              var r4 = i4.GetUniqueElementId(e6);
              i4.__cache[r4] || (i4.__cache[r4] = {}), i4.__cache[r4][t5] = n4;
            }, i4.GetData = function(e6, t5) {
              var n4 = i4.GetUniqueElementId(e6);
              return t5 ? i4.__cache[n4] && null != i4.__cache[n4][t5] ? i4.__cache[n4][t5] : o3(e6).data(t5) : i4.__cache[n4];
            }, i4.RemoveData = function(e6) {
              var t5 = i4.GetUniqueElementId(e6);
              null != i4.__cache[t5] && delete i4.__cache[t5], e6.removeAttribute("data-select2-id");
            }, i4;
          }), e4.define("select2/results", ["jquery", "./utils"], function(h4, f4) {
            function r4(e5, t5, n3) {
              this.$element = e5, this.data = n3, this.options = t5, r4.__super__.constructor.call(this);
            }
            return f4.Extend(r4, f4.Observable), r4.prototype.render = function() {
              var e5 = h4('<ul class="select2-results__options" role="listbox"></ul>');
              return this.options.get("multiple") && e5.attr("aria-multiselectable", "true"), this.$results = e5;
            }, r4.prototype.clear = function() {
              this.$results.empty();
            }, r4.prototype.displayMessage = function(e5) {
              var t5 = this.options.get("escapeMarkup");
              this.clear(), this.hideLoading();
              var n3 = h4('<li role="alert" aria-live="assertive" class="select2-results__option"></li>'), r5 = this.options.get("translations").get(e5.message);
              n3.append(t5(r5(e5.args))), n3[0].className += " select2-results__message", this.$results.append(n3);
            }, r4.prototype.hideMessages = function() {
              this.$results.find(".select2-results__message").remove();
            }, r4.prototype.append = function(e5) {
              this.hideLoading();
              var t5 = [];
              if (null != e5.results && 0 !== e5.results.length) {
                e5.results = this.sort(e5.results);
                for (var n3 = 0; n3 < e5.results.length; n3++) {
                  var r5 = e5.results[n3], i4 = this.option(r5);
                  t5.push(i4);
                }
                this.$results.append(t5);
              } else
                0 === this.$results.children().length && this.trigger("results:message", { message: "noResults" });
            }, r4.prototype.position = function(e5, t5) {
              t5.find(".select2-results").append(e5);
            }, r4.prototype.sort = function(e5) {
              return this.options.get("sorter")(e5);
            }, r4.prototype.highlightFirstItem = function() {
              var e5 = this.$results.find(".select2-results__option[aria-selected]"), t5 = e5.filter("[aria-selected=true]");
              0 < t5.length ? t5.first().trigger("mouseenter") : e5.first().trigger("mouseenter"), this.ensureHighlightVisible();
            }, r4.prototype.setClasses = function() {
              var t5 = this;
              this.data.current(function(e5) {
                var r5 = h4.map(e5, function(e6) {
                  return e6.id.toString();
                });
                t5.$results.find(".select2-results__option[aria-selected]").each(function() {
                  var e6 = h4(this), t6 = f4.GetData(this, "data"), n3 = "" + t6.id;
                  null != t6.element && t6.element.selected || null == t6.element && -1 < h4.inArray(n3, r5) ? e6.attr("aria-selected", "true") : e6.attr("aria-selected", "false");
                });
              });
            }, r4.prototype.showLoading = function(e5) {
              this.hideLoading();
              var t5 = { disabled: true, loading: true, text: this.options.get("translations").get("searching")(e5) }, n3 = this.option(t5);
              n3.className += " loading-results", this.$results.prepend(n3);
            }, r4.prototype.hideLoading = function() {
              this.$results.find(".loading-results").remove();
            }, r4.prototype.option = function(e5) {
              var t5 = document.createElement("li");
              t5.className = "select2-results__option";
              var n3 = { role: "option", "aria-selected": "false" }, r5 = window.Element.prototype.matches || window.Element.prototype.msMatchesSelector || window.Element.prototype.webkitMatchesSelector;
              for (var i4 in (null != e5.element && r5.call(e5.element, ":disabled") || null == e5.element && e5.disabled) && (delete n3["aria-selected"], n3["aria-disabled"] = "true"), null == e5.id && delete n3["aria-selected"], null != e5._resultId && (t5.id = e5._resultId), e5.title && (t5.title = e5.title), e5.children && (n3.role = "group", n3["aria-label"] = e5.text, delete n3["aria-selected"]), n3) {
                var o3 = n3[i4];
                t5.setAttribute(i4, o3);
              }
              if (e5.children) {
                var s4 = h4(t5), a4 = document.createElement("strong");
                a4.className = "select2-results__group";
                h4(a4);
                this.template(e5, a4);
                for (var l4 = [], c4 = 0; c4 < e5.children.length; c4++) {
                  var u4 = e5.children[c4], d2 = this.option(u4);
                  l4.push(d2);
                }
                var p3 = h4("<ul></ul>", { class: "select2-results__options select2-results__options--nested" });
                p3.append(l4), s4.append(a4), s4.append(p3);
              } else
                this.template(e5, t5);
              return f4.StoreData(t5, "data", e5), t5;
            }, r4.prototype.bind = function(t5, e5) {
              var l4 = this, n3 = t5.id + "-results";
              this.$results.attr("id", n3), t5.on("results:all", function(e6) {
                l4.clear(), l4.append(e6.data), t5.isOpen() && (l4.setClasses(), l4.highlightFirstItem());
              }), t5.on("results:append", function(e6) {
                l4.append(e6.data), t5.isOpen() && l4.setClasses();
              }), t5.on("query", function(e6) {
                l4.hideMessages(), l4.showLoading(e6);
              }), t5.on("select", function() {
                t5.isOpen() && (l4.setClasses(), l4.options.get("scrollAfterSelect") && l4.highlightFirstItem());
              }), t5.on("unselect", function() {
                t5.isOpen() && (l4.setClasses(), l4.options.get("scrollAfterSelect") && l4.highlightFirstItem());
              }), t5.on("open", function() {
                l4.$results.attr("aria-expanded", "true"), l4.$results.attr("aria-hidden", "false"), l4.setClasses(), l4.ensureHighlightVisible();
              }), t5.on("close", function() {
                l4.$results.attr("aria-expanded", "false"), l4.$results.attr("aria-hidden", "true"), l4.$results.removeAttr("aria-activedescendant");
              }), t5.on("results:toggle", function() {
                var e6 = l4.getHighlightedResults();
                0 !== e6.length && e6.trigger("mouseup");
              }), t5.on("results:select", function() {
                var e6 = l4.getHighlightedResults();
                if (0 !== e6.length) {
                  var t6 = f4.GetData(e6[0], "data");
                  "true" == e6.attr("aria-selected") ? l4.trigger("close", {}) : l4.trigger("select", { data: t6 });
                }
              }), t5.on("results:previous", function() {
                var e6 = l4.getHighlightedResults(), t6 = l4.$results.find("[aria-selected]"), n4 = t6.index(e6);
                if (!(n4 <= 0)) {
                  var r5 = n4 - 1;
                  0 === e6.length && (r5 = 0);
                  var i4 = t6.eq(r5);
                  i4.trigger("mouseenter");
                  var o3 = l4.$results.offset().top, s4 = i4.offset().top, a4 = l4.$results.scrollTop() + (s4 - o3);
                  0 === r5 ? l4.$results.scrollTop(0) : s4 - o3 < 0 && l4.$results.scrollTop(a4);
                }
              }), t5.on("results:next", function() {
                var e6 = l4.getHighlightedResults(), t6 = l4.$results.find("[aria-selected]"), n4 = t6.index(e6) + 1;
                if (!(n4 >= t6.length)) {
                  var r5 = t6.eq(n4);
                  r5.trigger("mouseenter");
                  var i4 = l4.$results.offset().top + l4.$results.outerHeight(false), o3 = r5.offset().top + r5.outerHeight(false), s4 = l4.$results.scrollTop() + o3 - i4;
                  0 === n4 ? l4.$results.scrollTop(0) : i4 < o3 && l4.$results.scrollTop(s4);
                }
              }), t5.on("results:focus", function(e6) {
                e6.element.addClass("select2-results__option--highlighted");
              }), t5.on("results:message", function(e6) {
                l4.displayMessage(e6);
              }), h4.fn.mousewheel && this.$results.on("mousewheel", function(e6) {
                var t6 = l4.$results.scrollTop(), n4 = l4.$results.get(0).scrollHeight - t6 + e6.deltaY, r5 = 0 < e6.deltaY && t6 - e6.deltaY <= 0, i4 = e6.deltaY < 0 && n4 <= l4.$results.height();
                r5 ? (l4.$results.scrollTop(0), e6.preventDefault(), e6.stopPropagation()) : i4 && (l4.$results.scrollTop(l4.$results.get(0).scrollHeight - l4.$results.height()), e6.preventDefault(), e6.stopPropagation());
              }), this.$results.on("mouseup", ".select2-results__option[aria-selected]", function(e6) {
                var t6 = h4(this), n4 = f4.GetData(this, "data");
                "true" !== t6.attr("aria-selected") ? l4.trigger("select", { originalEvent: e6, data: n4 }) : l4.options.get("multiple") ? l4.trigger("unselect", { originalEvent: e6, data: n4 }) : l4.trigger("close", {});
              }), this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function(e6) {
                var t6 = f4.GetData(this, "data");
                l4.getHighlightedResults().removeClass("select2-results__option--highlighted"), l4.trigger("results:focus", { data: t6, element: h4(this) });
              });
            }, r4.prototype.getHighlightedResults = function() {
              return this.$results.find(".select2-results__option--highlighted");
            }, r4.prototype.destroy = function() {
              this.$results.remove();
            }, r4.prototype.ensureHighlightVisible = function() {
              var e5 = this.getHighlightedResults();
              if (0 !== e5.length) {
                var t5 = this.$results.find("[aria-selected]").index(e5), n3 = this.$results.offset().top, r5 = e5.offset().top, i4 = this.$results.scrollTop() + (r5 - n3), o3 = r5 - n3;
                i4 -= 2 * e5.outerHeight(false), t5 <= 2 ? this.$results.scrollTop(0) : (o3 > this.$results.outerHeight() || o3 < 0) && this.$results.scrollTop(i4);
              }
            }, r4.prototype.template = function(e5, t5) {
              var n3 = this.options.get("templateResult"), r5 = this.options.get("escapeMarkup"), i4 = n3(e5, t5);
              null == i4 ? t5.style.display = "none" : "string" == typeof i4 ? t5.innerHTML = r5(i4) : h4(t5).append(i4);
            }, r4;
          }), e4.define("select2/keys", [], function() {
            return { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46 };
          }), e4.define("select2/selection/base", ["jquery", "../utils", "../keys"], function(n3, r4, i4) {
            function o3(e5, t5) {
              this.$element = e5, this.options = t5, o3.__super__.constructor.call(this);
            }
            return r4.Extend(o3, r4.Observable), o3.prototype.render = function() {
              var e5 = n3('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');
              return this._tabindex = 0, null != r4.GetData(this.$element[0], "old-tabindex") ? this._tabindex = r4.GetData(this.$element[0], "old-tabindex") : null != this.$element.attr("tabindex") && (this._tabindex = this.$element.attr("tabindex")), e5.attr("title", this.$element.attr("title")), e5.attr("tabindex", this._tabindex), e5.attr("aria-disabled", "false"), this.$selection = e5;
            }, o3.prototype.bind = function(e5, t5) {
              var n4 = this, r5 = e5.id + "-results";
              this.container = e5, this.$selection.on("focus", function(e6) {
                n4.trigger("focus", e6);
              }), this.$selection.on("blur", function(e6) {
                n4._handleBlur(e6);
              }), this.$selection.on("keydown", function(e6) {
                n4.trigger("keypress", e6), e6.which === i4.SPACE && e6.preventDefault();
              }), e5.on("results:focus", function(e6) {
                n4.$selection.attr("aria-activedescendant", e6.data._resultId);
              }), e5.on("selection:update", function(e6) {
                n4.update(e6.data);
              }), e5.on("open", function() {
                n4.$selection.attr("aria-expanded", "true"), n4.$selection.attr("aria-owns", r5), n4._attachCloseHandler(e5);
              }), e5.on("close", function() {
                n4.$selection.attr("aria-expanded", "false"), n4.$selection.removeAttr("aria-activedescendant"), n4.$selection.removeAttr("aria-owns"), n4.$selection.trigger("focus"), n4._detachCloseHandler(e5);
              }), e5.on("enable", function() {
                n4.$selection.attr("tabindex", n4._tabindex), n4.$selection.attr("aria-disabled", "false");
              }), e5.on("disable", function() {
                n4.$selection.attr("tabindex", "-1"), n4.$selection.attr("aria-disabled", "true");
              });
            }, o3.prototype._handleBlur = function(e5) {
              var t5 = this;
              window.setTimeout(function() {
                document.activeElement == t5.$selection[0] || n3.contains(t5.$selection[0], document.activeElement) || t5.trigger("blur", e5);
              }, 1);
            }, o3.prototype._attachCloseHandler = function(e5) {
              n3(document.body).on("mousedown.select2." + e5.id, function(e6) {
                var t5 = n3(e6.target).closest(".select2");
                n3(".select2.select2-container--open").each(function() {
                  this != t5[0] && r4.GetData(this, "element").select2("close");
                });
              });
            }, o3.prototype._detachCloseHandler = function(e5) {
              n3(document.body).off("mousedown.select2." + e5.id);
            }, o3.prototype.position = function(e5, t5) {
              t5.find(".selection").append(e5);
            }, o3.prototype.destroy = function() {
              this._detachCloseHandler(this.container);
            }, o3.prototype.update = function(e5) {
              throw new Error("The `update` method must be defined in child classes.");
            }, o3.prototype.isEnabled = function() {
              return !this.isDisabled();
            }, o3.prototype.isDisabled = function() {
              return this.options.get("disabled");
            }, o3;
          }), e4.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function(e5, t5, n3, r4) {
            function i4() {
              i4.__super__.constructor.apply(this, arguments);
            }
            return n3.Extend(i4, t5), i4.prototype.render = function() {
              var e6 = i4.__super__.render.call(this);
              return e6.addClass("select2-selection--single"), e6.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'), e6;
            }, i4.prototype.bind = function(t6, e6) {
              var n4 = this;
              i4.__super__.bind.apply(this, arguments);
              var r5 = t6.id + "-container";
              this.$selection.find(".select2-selection__rendered").attr("id", r5).attr("role", "textbox").attr("aria-readonly", "true"), this.$selection.attr("aria-labelledby", r5), this.$selection.on("mousedown", function(e7) {
                1 === e7.which && n4.trigger("toggle", { originalEvent: e7 });
              }), this.$selection.on("focus", function(e7) {
              }), this.$selection.on("blur", function(e7) {
              }), t6.on("focus", function(e7) {
                t6.isOpen() || n4.$selection.trigger("focus");
              });
            }, i4.prototype.clear = function() {
              var e6 = this.$selection.find(".select2-selection__rendered");
              e6.empty(), e6.removeAttr("title");
            }, i4.prototype.display = function(e6, t6) {
              var n4 = this.options.get("templateSelection");
              return this.options.get("escapeMarkup")(n4(e6, t6));
            }, i4.prototype.selectionContainer = function() {
              return e5("<span></span>");
            }, i4.prototype.update = function(e6) {
              if (0 !== e6.length) {
                var t6 = e6[0], n4 = this.$selection.find(".select2-selection__rendered"), r5 = this.display(t6, n4);
                n4.empty().append(r5);
                var i5 = t6.title || t6.text;
                i5 ? n4.attr("title", i5) : n4.removeAttr("title");
              } else
                this.clear();
            }, i4;
          }), e4.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function(i4, e5, l4) {
            function n3(e6, t5) {
              n3.__super__.constructor.apply(this, arguments);
            }
            return l4.Extend(n3, e5), n3.prototype.render = function() {
              var e6 = n3.__super__.render.call(this);
              return e6.addClass("select2-selection--multiple"), e6.html('<ul class="select2-selection__rendered"></ul>'), e6;
            }, n3.prototype.bind = function(e6, t5) {
              var r4 = this;
              n3.__super__.bind.apply(this, arguments), this.$selection.on("click", function(e7) {
                r4.trigger("toggle", { originalEvent: e7 });
              }), this.$selection.on("click", ".select2-selection__choice__remove", function(e7) {
                if (!r4.isDisabled()) {
                  var t6 = i4(this).parent(), n4 = l4.GetData(t6[0], "data");
                  r4.trigger("unselect", { originalEvent: e7, data: n4 });
                }
              });
            }, n3.prototype.clear = function() {
              var e6 = this.$selection.find(".select2-selection__rendered");
              e6.empty(), e6.removeAttr("title");
            }, n3.prototype.display = function(e6, t5) {
              var n4 = this.options.get("templateSelection");
              return this.options.get("escapeMarkup")(n4(e6, t5));
            }, n3.prototype.selectionContainer = function() {
              return i4('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>');
            }, n3.prototype.update = function(e6) {
              if (this.clear(), 0 !== e6.length) {
                for (var t5 = [], n4 = 0; n4 < e6.length; n4++) {
                  var r4 = e6[n4], i5 = this.selectionContainer(), o3 = this.display(r4, i5);
                  i5.append(o3);
                  var s4 = r4.title || r4.text;
                  s4 && i5.attr("title", s4), l4.StoreData(i5[0], "data", r4), t5.push(i5);
                }
                var a4 = this.$selection.find(".select2-selection__rendered");
                l4.appendMany(a4, t5);
              }
            }, n3;
          }), e4.define("select2/selection/placeholder", ["../utils"], function(e5) {
            function t5(e6, t6, n3) {
              this.placeholder = this.normalizePlaceholder(n3.get("placeholder")), e6.call(this, t6, n3);
            }
            return t5.prototype.normalizePlaceholder = function(e6, t6) {
              return "string" == typeof t6 && (t6 = { id: "", text: t6 }), t6;
            }, t5.prototype.createPlaceholder = function(e6, t6) {
              var n3 = this.selectionContainer();
              return n3.html(this.display(t6)), n3.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"), n3;
            }, t5.prototype.update = function(e6, t6) {
              var n3 = 1 == t6.length && t6[0].id != this.placeholder.id;
              if (1 < t6.length || n3)
                return e6.call(this, t6);
              this.clear();
              var r4 = this.createPlaceholder(this.placeholder);
              this.$selection.find(".select2-selection__rendered").append(r4);
            }, t5;
          }), e4.define("select2/selection/allowClear", ["jquery", "../keys", "../utils"], function(i4, r4, a4) {
            function e5() {
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              var r5 = this;
              e6.call(this, t5, n3), null == this.placeholder && this.options.get("debug") && window.console && console.error && console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."), this.$selection.on("mousedown", ".select2-selection__clear", function(e7) {
                r5._handleClear(e7);
              }), t5.on("keypress", function(e7) {
                r5._handleKeyboardClear(e7, t5);
              });
            }, e5.prototype._handleClear = function(e6, t5) {
              if (!this.isDisabled()) {
                var n3 = this.$selection.find(".select2-selection__clear");
                if (0 !== n3.length) {
                  t5.stopPropagation();
                  var r5 = a4.GetData(n3[0], "data"), i5 = this.$element.val();
                  this.$element.val(this.placeholder.id);
                  var o3 = { data: r5 };
                  if (this.trigger("clear", o3), o3.prevented)
                    this.$element.val(i5);
                  else {
                    for (var s4 = 0; s4 < r5.length; s4++)
                      if (o3 = { data: r5[s4] }, this.trigger("unselect", o3), o3.prevented)
                        return void this.$element.val(i5);
                    this.$element.trigger("input").trigger("change"), this.trigger("toggle", {});
                  }
                }
              }
            }, e5.prototype._handleKeyboardClear = function(e6, t5, n3) {
              n3.isOpen() || t5.which != r4.DELETE && t5.which != r4.BACKSPACE || this._handleClear(t5);
            }, e5.prototype.update = function(e6, t5) {
              if (e6.call(this, t5), !(0 < this.$selection.find(".select2-selection__placeholder").length || 0 === t5.length)) {
                var n3 = this.options.get("translations").get("removeAllItems"), r5 = i4('<span class="select2-selection__clear" title="' + n3() + '">&times;</span>');
                a4.StoreData(r5[0], "data", t5), this.$selection.find(".select2-selection__rendered").prepend(r5);
              }
            }, e5;
          }), e4.define("select2/selection/search", ["jquery", "../utils", "../keys"], function(r4, a4, l4) {
            function e5(e6, t5, n3) {
              e6.call(this, t5, n3);
            }
            return e5.prototype.render = function(e6) {
              var t5 = r4('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="searchbox" aria-autocomplete="list" /></li>');
              this.$searchContainer = t5, this.$search = t5.find("input");
              var n3 = e6.call(this);
              return this._transferTabIndex(), n3;
            }, e5.prototype.bind = function(e6, t5, n3) {
              var r5 = this, i4 = t5.id + "-results";
              e6.call(this, t5, n3), t5.on("open", function() {
                r5.$search.attr("aria-controls", i4), r5.$search.trigger("focus");
              }), t5.on("close", function() {
                r5.$search.val(""), r5.$search.removeAttr("aria-controls"), r5.$search.removeAttr("aria-activedescendant"), r5.$search.trigger("focus");
              }), t5.on("enable", function() {
                r5.$search.prop("disabled", false), r5._transferTabIndex();
              }), t5.on("disable", function() {
                r5.$search.prop("disabled", true);
              }), t5.on("focus", function(e7) {
                r5.$search.trigger("focus");
              }), t5.on("results:focus", function(e7) {
                e7.data._resultId ? r5.$search.attr("aria-activedescendant", e7.data._resultId) : r5.$search.removeAttr("aria-activedescendant");
              }), this.$selection.on("focusin", ".select2-search--inline", function(e7) {
                r5.trigger("focus", e7);
              }), this.$selection.on("focusout", ".select2-search--inline", function(e7) {
                r5._handleBlur(e7);
              }), this.$selection.on("keydown", ".select2-search--inline", function(e7) {
                if (e7.stopPropagation(), r5.trigger("keypress", e7), r5._keyUpPrevented = e7.isDefaultPrevented(), e7.which === l4.BACKSPACE && "" === r5.$search.val()) {
                  var t6 = r5.$searchContainer.prev(".select2-selection__choice");
                  if (0 < t6.length) {
                    var n4 = a4.GetData(t6[0], "data");
                    r5.searchRemoveChoice(n4), e7.preventDefault();
                  }
                }
              }), this.$selection.on("click", ".select2-search--inline", function(e7) {
                r5.$search.val() && e7.stopPropagation();
              });
              var o3 = document.documentMode, s4 = o3 && o3 <= 11;
              this.$selection.on("input.searchcheck", ".select2-search--inline", function(e7) {
                s4 ? r5.$selection.off("input.search input.searchcheck") : r5.$selection.off("keyup.search");
              }), this.$selection.on("keyup.search input.search", ".select2-search--inline", function(e7) {
                if (s4 && "input" === e7.type)
                  r5.$selection.off("input.search input.searchcheck");
                else {
                  var t6 = e7.which;
                  t6 != l4.SHIFT && t6 != l4.CTRL && t6 != l4.ALT && t6 != l4.TAB && r5.handleSearch(e7);
                }
              });
            }, e5.prototype._transferTabIndex = function(e6) {
              this.$search.attr("tabindex", this.$selection.attr("tabindex")), this.$selection.attr("tabindex", "-1");
            }, e5.prototype.createPlaceholder = function(e6, t5) {
              this.$search.attr("placeholder", t5.text);
            }, e5.prototype.update = function(e6, t5) {
              var n3 = this.$search[0] == document.activeElement;
              this.$search.attr("placeholder", ""), e6.call(this, t5), this.$selection.find(".select2-selection__rendered").append(this.$searchContainer), this.resizeSearch(), n3 && this.$search.trigger("focus");
            }, e5.prototype.handleSearch = function() {
              if (this.resizeSearch(), !this._keyUpPrevented) {
                var e6 = this.$search.val();
                this.trigger("query", { term: e6 });
              }
              this._keyUpPrevented = false;
            }, e5.prototype.searchRemoveChoice = function(e6, t5) {
              this.trigger("unselect", { data: t5 }), this.$search.val(t5.text), this.handleSearch();
            }, e5.prototype.resizeSearch = function() {
              this.$search.css("width", "25px");
              var e6 = "";
              "" !== this.$search.attr("placeholder") ? e6 = this.$selection.find(".select2-selection__rendered").width() : e6 = 0.75 * (this.$search.val().length + 1) + "em";
              this.$search.css("width", e6);
            }, e5;
          }), e4.define("select2/selection/eventRelay", ["jquery"], function(s4) {
            function e5() {
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              var r4 = this, i4 = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting", "clear", "clearing"], o3 = ["opening", "closing", "selecting", "unselecting", "clearing"];
              e6.call(this, t5, n3), t5.on("*", function(e7, t6) {
                if (-1 !== s4.inArray(e7, i4)) {
                  t6 = t6 || {};
                  var n4 = s4.Event("select2:" + e7, { params: t6 });
                  r4.$element.trigger(n4), -1 !== s4.inArray(e7, o3) && (t6.prevented = n4.isDefaultPrevented());
                }
              });
            }, e5;
          }), e4.define("select2/translation", ["jquery", "require"], function(t5, n3) {
            function r4(e5) {
              this.dict = e5 || {};
            }
            return r4.prototype.all = function() {
              return this.dict;
            }, r4.prototype.get = function(e5) {
              return this.dict[e5];
            }, r4.prototype.extend = function(e5) {
              this.dict = t5.extend({}, e5.all(), this.dict);
            }, r4._cache = {}, r4.loadPath = function(e5) {
              if (!(e5 in r4._cache)) {
                var t6 = n3(e5);
                r4._cache[e5] = t6;
              }
              return new r4(r4._cache[e5]);
            }, r4;
          }), e4.define("select2/diacritics", [], function() {
            return { "\u24B6": "A", "\uFF21": "A", "\xC0": "A", "\xC1": "A", "\xC2": "A", "\u1EA6": "A", "\u1EA4": "A", "\u1EAA": "A", "\u1EA8": "A", "\xC3": "A", "\u0100": "A", "\u0102": "A", "\u1EB0": "A", "\u1EAE": "A", "\u1EB4": "A", "\u1EB2": "A", "\u0226": "A", "\u01E0": "A", "\xC4": "A", "\u01DE": "A", "\u1EA2": "A", "\xC5": "A", "\u01FA": "A", "\u01CD": "A", "\u0200": "A", "\u0202": "A", "\u1EA0": "A", "\u1EAC": "A", "\u1EB6": "A", "\u1E00": "A", "\u0104": "A", "\u023A": "A", "\u2C6F": "A", "\uA732": "AA", "\xC6": "AE", "\u01FC": "AE", "\u01E2": "AE", "\uA734": "AO", "\uA736": "AU", "\uA738": "AV", "\uA73A": "AV", "\uA73C": "AY", "\u24B7": "B", "\uFF22": "B", "\u1E02": "B", "\u1E04": "B", "\u1E06": "B", "\u0243": "B", "\u0182": "B", "\u0181": "B", "\u24B8": "C", "\uFF23": "C", "\u0106": "C", "\u0108": "C", "\u010A": "C", "\u010C": "C", "\xC7": "C", "\u1E08": "C", "\u0187": "C", "\u023B": "C", "\uA73E": "C", "\u24B9": "D", "\uFF24": "D", "\u1E0A": "D", "\u010E": "D", "\u1E0C": "D", "\u1E10": "D", "\u1E12": "D", "\u1E0E": "D", "\u0110": "D", "\u018B": "D", "\u018A": "D", "\u0189": "D", "\uA779": "D", "\u01F1": "DZ", "\u01C4": "DZ", "\u01F2": "Dz", "\u01C5": "Dz", "\u24BA": "E", "\uFF25": "E", "\xC8": "E", "\xC9": "E", "\xCA": "E", "\u1EC0": "E", "\u1EBE": "E", "\u1EC4": "E", "\u1EC2": "E", "\u1EBC": "E", "\u0112": "E", "\u1E14": "E", "\u1E16": "E", "\u0114": "E", "\u0116": "E", "\xCB": "E", "\u1EBA": "E", "\u011A": "E", "\u0204": "E", "\u0206": "E", "\u1EB8": "E", "\u1EC6": "E", "\u0228": "E", "\u1E1C": "E", "\u0118": "E", "\u1E18": "E", "\u1E1A": "E", "\u0190": "E", "\u018E": "E", "\u24BB": "F", "\uFF26": "F", "\u1E1E": "F", "\u0191": "F", "\uA77B": "F", "\u24BC": "G", "\uFF27": "G", "\u01F4": "G", "\u011C": "G", "\u1E20": "G", "\u011E": "G", "\u0120": "G", "\u01E6": "G", "\u0122": "G", "\u01E4": "G", "\u0193": "G", "\uA7A0": "G", "\uA77D": "G", "\uA77E": "G", "\u24BD": "H", "\uFF28": "H", "\u0124": "H", "\u1E22": "H", "\u1E26": "H", "\u021E": "H", "\u1E24": "H", "\u1E28": "H", "\u1E2A": "H", "\u0126": "H", "\u2C67": "H", "\u2C75": "H", "\uA78D": "H", "\u24BE": "I", "\uFF29": "I", "\xCC": "I", "\xCD": "I", "\xCE": "I", "\u0128": "I", "\u012A": "I", "\u012C": "I", "\u0130": "I", "\xCF": "I", "\u1E2E": "I", "\u1EC8": "I", "\u01CF": "I", "\u0208": "I", "\u020A": "I", "\u1ECA": "I", "\u012E": "I", "\u1E2C": "I", "\u0197": "I", "\u24BF": "J", "\uFF2A": "J", "\u0134": "J", "\u0248": "J", "\u24C0": "K", "\uFF2B": "K", "\u1E30": "K", "\u01E8": "K", "\u1E32": "K", "\u0136": "K", "\u1E34": "K", "\u0198": "K", "\u2C69": "K", "\uA740": "K", "\uA742": "K", "\uA744": "K", "\uA7A2": "K", "\u24C1": "L", "\uFF2C": "L", "\u013F": "L", "\u0139": "L", "\u013D": "L", "\u1E36": "L", "\u1E38": "L", "\u013B": "L", "\u1E3C": "L", "\u1E3A": "L", "\u0141": "L", "\u023D": "L", "\u2C62": "L", "\u2C60": "L", "\uA748": "L", "\uA746": "L", "\uA780": "L", "\u01C7": "LJ", "\u01C8": "Lj", "\u24C2": "M", "\uFF2D": "M", "\u1E3E": "M", "\u1E40": "M", "\u1E42": "M", "\u2C6E": "M", "\u019C": "M", "\u24C3": "N", "\uFF2E": "N", "\u01F8": "N", "\u0143": "N", "\xD1": "N", "\u1E44": "N", "\u0147": "N", "\u1E46": "N", "\u0145": "N", "\u1E4A": "N", "\u1E48": "N", "\u0220": "N", "\u019D": "N", "\uA790": "N", "\uA7A4": "N", "\u01CA": "NJ", "\u01CB": "Nj", "\u24C4": "O", "\uFF2F": "O", "\xD2": "O", "\xD3": "O", "\xD4": "O", "\u1ED2": "O", "\u1ED0": "O", "\u1ED6": "O", "\u1ED4": "O", "\xD5": "O", "\u1E4C": "O", "\u022C": "O", "\u1E4E": "O", "\u014C": "O", "\u1E50": "O", "\u1E52": "O", "\u014E": "O", "\u022E": "O", "\u0230": "O", "\xD6": "O", "\u022A": "O", "\u1ECE": "O", "\u0150": "O", "\u01D1": "O", "\u020C": "O", "\u020E": "O", "\u01A0": "O", "\u1EDC": "O", "\u1EDA": "O", "\u1EE0": "O", "\u1EDE": "O", "\u1EE2": "O", "\u1ECC": "O", "\u1ED8": "O", "\u01EA": "O", "\u01EC": "O", "\xD8": "O", "\u01FE": "O", "\u0186": "O", "\u019F": "O", "\uA74A": "O", "\uA74C": "O", "\u0152": "OE", "\u01A2": "OI", "\uA74E": "OO", "\u0222": "OU", "\u24C5": "P", "\uFF30": "P", "\u1E54": "P", "\u1E56": "P", "\u01A4": "P", "\u2C63": "P", "\uA750": "P", "\uA752": "P", "\uA754": "P", "\u24C6": "Q", "\uFF31": "Q", "\uA756": "Q", "\uA758": "Q", "\u024A": "Q", "\u24C7": "R", "\uFF32": "R", "\u0154": "R", "\u1E58": "R", "\u0158": "R", "\u0210": "R", "\u0212": "R", "\u1E5A": "R", "\u1E5C": "R", "\u0156": "R", "\u1E5E": "R", "\u024C": "R", "\u2C64": "R", "\uA75A": "R", "\uA7A6": "R", "\uA782": "R", "\u24C8": "S", "\uFF33": "S", "\u1E9E": "S", "\u015A": "S", "\u1E64": "S", "\u015C": "S", "\u1E60": "S", "\u0160": "S", "\u1E66": "S", "\u1E62": "S", "\u1E68": "S", "\u0218": "S", "\u015E": "S", "\u2C7E": "S", "\uA7A8": "S", "\uA784": "S", "\u24C9": "T", "\uFF34": "T", "\u1E6A": "T", "\u0164": "T", "\u1E6C": "T", "\u021A": "T", "\u0162": "T", "\u1E70": "T", "\u1E6E": "T", "\u0166": "T", "\u01AC": "T", "\u01AE": "T", "\u023E": "T", "\uA786": "T", "\uA728": "TZ", "\u24CA": "U", "\uFF35": "U", "\xD9": "U", "\xDA": "U", "\xDB": "U", "\u0168": "U", "\u1E78": "U", "\u016A": "U", "\u1E7A": "U", "\u016C": "U", "\xDC": "U", "\u01DB": "U", "\u01D7": "U", "\u01D5": "U", "\u01D9": "U", "\u1EE6": "U", "\u016E": "U", "\u0170": "U", "\u01D3": "U", "\u0214": "U", "\u0216": "U", "\u01AF": "U", "\u1EEA": "U", "\u1EE8": "U", "\u1EEE": "U", "\u1EEC": "U", "\u1EF0": "U", "\u1EE4": "U", "\u1E72": "U", "\u0172": "U", "\u1E76": "U", "\u1E74": "U", "\u0244": "U", "\u24CB": "V", "\uFF36": "V", "\u1E7C": "V", "\u1E7E": "V", "\u01B2": "V", "\uA75E": "V", "\u0245": "V", "\uA760": "VY", "\u24CC": "W", "\uFF37": "W", "\u1E80": "W", "\u1E82": "W", "\u0174": "W", "\u1E86": "W", "\u1E84": "W", "\u1E88": "W", "\u2C72": "W", "\u24CD": "X", "\uFF38": "X", "\u1E8A": "X", "\u1E8C": "X", "\u24CE": "Y", "\uFF39": "Y", "\u1EF2": "Y", "\xDD": "Y", "\u0176": "Y", "\u1EF8": "Y", "\u0232": "Y", "\u1E8E": "Y", "\u0178": "Y", "\u1EF6": "Y", "\u1EF4": "Y", "\u01B3": "Y", "\u024E": "Y", "\u1EFE": "Y", "\u24CF": "Z", "\uFF3A": "Z", "\u0179": "Z", "\u1E90": "Z", "\u017B": "Z", "\u017D": "Z", "\u1E92": "Z", "\u1E94": "Z", "\u01B5": "Z", "\u0224": "Z", "\u2C7F": "Z", "\u2C6B": "Z", "\uA762": "Z", "\u24D0": "a", "\uFF41": "a", "\u1E9A": "a", "\xE0": "a", "\xE1": "a", "\xE2": "a", "\u1EA7": "a", "\u1EA5": "a", "\u1EAB": "a", "\u1EA9": "a", "\xE3": "a", "\u0101": "a", "\u0103": "a", "\u1EB1": "a", "\u1EAF": "a", "\u1EB5": "a", "\u1EB3": "a", "\u0227": "a", "\u01E1": "a", "\xE4": "a", "\u01DF": "a", "\u1EA3": "a", "\xE5": "a", "\u01FB": "a", "\u01CE": "a", "\u0201": "a", "\u0203": "a", "\u1EA1": "a", "\u1EAD": "a", "\u1EB7": "a", "\u1E01": "a", "\u0105": "a", "\u2C65": "a", "\u0250": "a", "\uA733": "aa", "\xE6": "ae", "\u01FD": "ae", "\u01E3": "ae", "\uA735": "ao", "\uA737": "au", "\uA739": "av", "\uA73B": "av", "\uA73D": "ay", "\u24D1": "b", "\uFF42": "b", "\u1E03": "b", "\u1E05": "b", "\u1E07": "b", "\u0180": "b", "\u0183": "b", "\u0253": "b", "\u24D2": "c", "\uFF43": "c", "\u0107": "c", "\u0109": "c", "\u010B": "c", "\u010D": "c", "\xE7": "c", "\u1E09": "c", "\u0188": "c", "\u023C": "c", "\uA73F": "c", "\u2184": "c", "\u24D3": "d", "\uFF44": "d", "\u1E0B": "d", "\u010F": "d", "\u1E0D": "d", "\u1E11": "d", "\u1E13": "d", "\u1E0F": "d", "\u0111": "d", "\u018C": "d", "\u0256": "d", "\u0257": "d", "\uA77A": "d", "\u01F3": "dz", "\u01C6": "dz", "\u24D4": "e", "\uFF45": "e", "\xE8": "e", "\xE9": "e", "\xEA": "e", "\u1EC1": "e", "\u1EBF": "e", "\u1EC5": "e", "\u1EC3": "e", "\u1EBD": "e", "\u0113": "e", "\u1E15": "e", "\u1E17": "e", "\u0115": "e", "\u0117": "e", "\xEB": "e", "\u1EBB": "e", "\u011B": "e", "\u0205": "e", "\u0207": "e", "\u1EB9": "e", "\u1EC7": "e", "\u0229": "e", "\u1E1D": "e", "\u0119": "e", "\u1E19": "e", "\u1E1B": "e", "\u0247": "e", "\u025B": "e", "\u01DD": "e", "\u24D5": "f", "\uFF46": "f", "\u1E1F": "f", "\u0192": "f", "\uA77C": "f", "\u24D6": "g", "\uFF47": "g", "\u01F5": "g", "\u011D": "g", "\u1E21": "g", "\u011F": "g", "\u0121": "g", "\u01E7": "g", "\u0123": "g", "\u01E5": "g", "\u0260": "g", "\uA7A1": "g", "\u1D79": "g", "\uA77F": "g", "\u24D7": "h", "\uFF48": "h", "\u0125": "h", "\u1E23": "h", "\u1E27": "h", "\u021F": "h", "\u1E25": "h", "\u1E29": "h", "\u1E2B": "h", "\u1E96": "h", "\u0127": "h", "\u2C68": "h", "\u2C76": "h", "\u0265": "h", "\u0195": "hv", "\u24D8": "i", "\uFF49": "i", "\xEC": "i", "\xED": "i", "\xEE": "i", "\u0129": "i", "\u012B": "i", "\u012D": "i", "\xEF": "i", "\u1E2F": "i", "\u1EC9": "i", "\u01D0": "i", "\u0209": "i", "\u020B": "i", "\u1ECB": "i", "\u012F": "i", "\u1E2D": "i", "\u0268": "i", "\u0131": "i", "\u24D9": "j", "\uFF4A": "j", "\u0135": "j", "\u01F0": "j", "\u0249": "j", "\u24DA": "k", "\uFF4B": "k", "\u1E31": "k", "\u01E9": "k", "\u1E33": "k", "\u0137": "k", "\u1E35": "k", "\u0199": "k", "\u2C6A": "k", "\uA741": "k", "\uA743": "k", "\uA745": "k", "\uA7A3": "k", "\u24DB": "l", "\uFF4C": "l", "\u0140": "l", "\u013A": "l", "\u013E": "l", "\u1E37": "l", "\u1E39": "l", "\u013C": "l", "\u1E3D": "l", "\u1E3B": "l", "\u017F": "l", "\u0142": "l", "\u019A": "l", "\u026B": "l", "\u2C61": "l", "\uA749": "l", "\uA781": "l", "\uA747": "l", "\u01C9": "lj", "\u24DC": "m", "\uFF4D": "m", "\u1E3F": "m", "\u1E41": "m", "\u1E43": "m", "\u0271": "m", "\u026F": "m", "\u24DD": "n", "\uFF4E": "n", "\u01F9": "n", "\u0144": "n", "\xF1": "n", "\u1E45": "n", "\u0148": "n", "\u1E47": "n", "\u0146": "n", "\u1E4B": "n", "\u1E49": "n", "\u019E": "n", "\u0272": "n", "\u0149": "n", "\uA791": "n", "\uA7A5": "n", "\u01CC": "nj", "\u24DE": "o", "\uFF4F": "o", "\xF2": "o", "\xF3": "o", "\xF4": "o", "\u1ED3": "o", "\u1ED1": "o", "\u1ED7": "o", "\u1ED5": "o", "\xF5": "o", "\u1E4D": "o", "\u022D": "o", "\u1E4F": "o", "\u014D": "o", "\u1E51": "o", "\u1E53": "o", "\u014F": "o", "\u022F": "o", "\u0231": "o", "\xF6": "o", "\u022B": "o", "\u1ECF": "o", "\u0151": "o", "\u01D2": "o", "\u020D": "o", "\u020F": "o", "\u01A1": "o", "\u1EDD": "o", "\u1EDB": "o", "\u1EE1": "o", "\u1EDF": "o", "\u1EE3": "o", "\u1ECD": "o", "\u1ED9": "o", "\u01EB": "o", "\u01ED": "o", "\xF8": "o", "\u01FF": "o", "\u0254": "o", "\uA74B": "o", "\uA74D": "o", "\u0275": "o", "\u0153": "oe", "\u01A3": "oi", "\u0223": "ou", "\uA74F": "oo", "\u24DF": "p", "\uFF50": "p", "\u1E55": "p", "\u1E57": "p", "\u01A5": "p", "\u1D7D": "p", "\uA751": "p", "\uA753": "p", "\uA755": "p", "\u24E0": "q", "\uFF51": "q", "\u024B": "q", "\uA757": "q", "\uA759": "q", "\u24E1": "r", "\uFF52": "r", "\u0155": "r", "\u1E59": "r", "\u0159": "r", "\u0211": "r", "\u0213": "r", "\u1E5B": "r", "\u1E5D": "r", "\u0157": "r", "\u1E5F": "r", "\u024D": "r", "\u027D": "r", "\uA75B": "r", "\uA7A7": "r", "\uA783": "r", "\u24E2": "s", "\uFF53": "s", "\xDF": "s", "\u015B": "s", "\u1E65": "s", "\u015D": "s", "\u1E61": "s", "\u0161": "s", "\u1E67": "s", "\u1E63": "s", "\u1E69": "s", "\u0219": "s", "\u015F": "s", "\u023F": "s", "\uA7A9": "s", "\uA785": "s", "\u1E9B": "s", "\u24E3": "t", "\uFF54": "t", "\u1E6B": "t", "\u1E97": "t", "\u0165": "t", "\u1E6D": "t", "\u021B": "t", "\u0163": "t", "\u1E71": "t", "\u1E6F": "t", "\u0167": "t", "\u01AD": "t", "\u0288": "t", "\u2C66": "t", "\uA787": "t", "\uA729": "tz", "\u24E4": "u", "\uFF55": "u", "\xF9": "u", "\xFA": "u", "\xFB": "u", "\u0169": "u", "\u1E79": "u", "\u016B": "u", "\u1E7B": "u", "\u016D": "u", "\xFC": "u", "\u01DC": "u", "\u01D8": "u", "\u01D6": "u", "\u01DA": "u", "\u1EE7": "u", "\u016F": "u", "\u0171": "u", "\u01D4": "u", "\u0215": "u", "\u0217": "u", "\u01B0": "u", "\u1EEB": "u", "\u1EE9": "u", "\u1EEF": "u", "\u1EED": "u", "\u1EF1": "u", "\u1EE5": "u", "\u1E73": "u", "\u0173": "u", "\u1E77": "u", "\u1E75": "u", "\u0289": "u", "\u24E5": "v", "\uFF56": "v", "\u1E7D": "v", "\u1E7F": "v", "\u028B": "v", "\uA75F": "v", "\u028C": "v", "\uA761": "vy", "\u24E6": "w", "\uFF57": "w", "\u1E81": "w", "\u1E83": "w", "\u0175": "w", "\u1E87": "w", "\u1E85": "w", "\u1E98": "w", "\u1E89": "w", "\u2C73": "w", "\u24E7": "x", "\uFF58": "x", "\u1E8B": "x", "\u1E8D": "x", "\u24E8": "y", "\uFF59": "y", "\u1EF3": "y", "\xFD": "y", "\u0177": "y", "\u1EF9": "y", "\u0233": "y", "\u1E8F": "y", "\xFF": "y", "\u1EF7": "y", "\u1E99": "y", "\u1EF5": "y", "\u01B4": "y", "\u024F": "y", "\u1EFF": "y", "\u24E9": "z", "\uFF5A": "z", "\u017A": "z", "\u1E91": "z", "\u017C": "z", "\u017E": "z", "\u1E93": "z", "\u1E95": "z", "\u01B6": "z", "\u0225": "z", "\u0240": "z", "\u2C6C": "z", "\uA763": "z", "\u0386": "\u0391", "\u0388": "\u0395", "\u0389": "\u0397", "\u038A": "\u0399", "\u03AA": "\u0399", "\u038C": "\u039F", "\u038E": "\u03A5", "\u03AB": "\u03A5", "\u038F": "\u03A9", "\u03AC": "\u03B1", "\u03AD": "\u03B5", "\u03AE": "\u03B7", "\u03AF": "\u03B9", "\u03CA": "\u03B9", "\u0390": "\u03B9", "\u03CC": "\u03BF", "\u03CD": "\u03C5", "\u03CB": "\u03C5", "\u03B0": "\u03C5", "\u03CE": "\u03C9", "\u03C2": "\u03C3", "\u2019": "'" };
          }), e4.define("select2/data/base", ["../utils"], function(r4) {
            function n3(e5, t5) {
              n3.__super__.constructor.call(this);
            }
            return r4.Extend(n3, r4.Observable), n3.prototype.current = function(e5) {
              throw new Error("The `current` method must be defined in child classes.");
            }, n3.prototype.query = function(e5, t5) {
              throw new Error("The `query` method must be defined in child classes.");
            }, n3.prototype.bind = function(e5, t5) {
            }, n3.prototype.destroy = function() {
            }, n3.prototype.generateResultId = function(e5, t5) {
              var n4 = e5.id + "-result-";
              return n4 += r4.generateChars(4), null != t5.id ? n4 += "-" + t5.id.toString() : n4 += "-" + r4.generateChars(4), n4;
            }, n3;
          }), e4.define("select2/data/select", ["./base", "../utils", "jquery"], function(e5, a4, l4) {
            function n3(e6, t5) {
              this.$element = e6, this.options = t5, n3.__super__.constructor.call(this);
            }
            return a4.Extend(n3, e5), n3.prototype.current = function(e6) {
              var n4 = [], r4 = this;
              this.$element.find(":selected").each(function() {
                var e7 = l4(this), t5 = r4.item(e7);
                n4.push(t5);
              }), e6(n4);
            }, n3.prototype.select = function(i4) {
              var o3 = this;
              if (i4.selected = true, l4(i4.element).is("option"))
                return i4.element.selected = true, void this.$element.trigger("input").trigger("change");
              if (this.$element.prop("multiple"))
                this.current(function(e7) {
                  var t5 = [];
                  (i4 = [i4]).push.apply(i4, e7);
                  for (var n4 = 0; n4 < i4.length; n4++) {
                    var r4 = i4[n4].id;
                    -1 === l4.inArray(r4, t5) && t5.push(r4);
                  }
                  o3.$element.val(t5), o3.$element.trigger("input").trigger("change");
                });
              else {
                var e6 = i4.id;
                this.$element.val(e6), this.$element.trigger("input").trigger("change");
              }
            }, n3.prototype.unselect = function(i4) {
              var o3 = this;
              if (this.$element.prop("multiple")) {
                if (i4.selected = false, l4(i4.element).is("option"))
                  return i4.element.selected = false, void this.$element.trigger("input").trigger("change");
                this.current(function(e6) {
                  for (var t5 = [], n4 = 0; n4 < e6.length; n4++) {
                    var r4 = e6[n4].id;
                    r4 !== i4.id && -1 === l4.inArray(r4, t5) && t5.push(r4);
                  }
                  o3.$element.val(t5), o3.$element.trigger("input").trigger("change");
                });
              }
            }, n3.prototype.bind = function(e6, t5) {
              var n4 = this;
              (this.container = e6).on("select", function(e7) {
                n4.select(e7.data);
              }), e6.on("unselect", function(e7) {
                n4.unselect(e7.data);
              });
            }, n3.prototype.destroy = function() {
              this.$element.find("*").each(function() {
                a4.RemoveData(this);
              });
            }, n3.prototype.query = function(r4, e6) {
              var i4 = [], o3 = this;
              this.$element.children().each(function() {
                var e7 = l4(this);
                if (e7.is("option") || e7.is("optgroup")) {
                  var t5 = o3.item(e7), n4 = o3.matches(r4, t5);
                  null !== n4 && i4.push(n4);
                }
              }), e6({ results: i4 });
            }, n3.prototype.addOptions = function(e6) {
              a4.appendMany(this.$element, e6);
            }, n3.prototype.option = function(e6) {
              var t5;
              e6.children ? (t5 = document.createElement("optgroup")).label = e6.text : void 0 !== (t5 = document.createElement("option")).textContent ? t5.textContent = e6.text : t5.innerText = e6.text, void 0 !== e6.id && (t5.value = e6.id), e6.disabled && (t5.disabled = true), e6.selected && (t5.selected = true), e6.title && (t5.title = e6.title);
              var n4 = l4(t5), r4 = this._normalizeItem(e6);
              return r4.element = t5, a4.StoreData(t5, "data", r4), n4;
            }, n3.prototype.item = function(e6) {
              var t5 = {};
              if (null != (t5 = a4.GetData(e6[0], "data")))
                return t5;
              if (e6.is("option"))
                t5 = { id: e6.val(), text: e6.text(), disabled: e6.prop("disabled"), selected: e6.prop("selected"), title: e6.prop("title") };
              else if (e6.is("optgroup")) {
                t5 = { text: e6.prop("label"), children: [], title: e6.prop("title") };
                for (var n4 = e6.children("option"), r4 = [], i4 = 0; i4 < n4.length; i4++) {
                  var o3 = l4(n4[i4]), s4 = this.item(o3);
                  r4.push(s4);
                }
                t5.children = r4;
              }
              return (t5 = this._normalizeItem(t5)).element = e6[0], a4.StoreData(e6[0], "data", t5), t5;
            }, n3.prototype._normalizeItem = function(e6) {
              e6 !== Object(e6) && (e6 = { id: e6, text: e6 });
              return null != (e6 = l4.extend({}, { text: "" }, e6)).id && (e6.id = e6.id.toString()), null != e6.text && (e6.text = e6.text.toString()), null == e6._resultId && e6.id && null != this.container && (e6._resultId = this.generateResultId(this.container, e6)), l4.extend({}, { selected: false, disabled: false }, e6);
            }, n3.prototype.matches = function(e6, t5) {
              return this.options.get("matcher")(e6, t5);
            }, n3;
          }), e4.define("select2/data/array", ["./select", "../utils", "jquery"], function(e5, f4, g5) {
            function r4(e6, t5) {
              this._dataToConvert = t5.get("data") || [], r4.__super__.constructor.call(this, e6, t5);
            }
            return f4.Extend(r4, e5), r4.prototype.bind = function(e6, t5) {
              r4.__super__.bind.call(this, e6, t5), this.addOptions(this.convertToOptions(this._dataToConvert));
            }, r4.prototype.select = function(n3) {
              var e6 = this.$element.find("option").filter(function(e7, t5) {
                return t5.value == n3.id.toString();
              });
              0 === e6.length && (e6 = this.option(n3), this.addOptions(e6)), r4.__super__.select.call(this, n3);
            }, r4.prototype.convertToOptions = function(e6) {
              var t5 = this, n3 = this.$element.find("option"), r5 = n3.map(function() {
                return t5.item(g5(this)).id;
              }).get(), i4 = [];
              function o3(e7) {
                return function() {
                  return g5(this).val() == e7.id;
                };
              }
              for (var s4 = 0; s4 < e6.length; s4++) {
                var a4 = this._normalizeItem(e6[s4]);
                if (0 <= g5.inArray(a4.id, r5)) {
                  var l4 = n3.filter(o3(a4)), c4 = this.item(l4), u4 = g5.extend(true, {}, a4, c4), d2 = this.option(u4);
                  l4.replaceWith(d2);
                } else {
                  var p3 = this.option(a4);
                  if (a4.children) {
                    var h4 = this.convertToOptions(a4.children);
                    f4.appendMany(p3, h4);
                  }
                  i4.push(p3);
                }
              }
              return i4;
            }, r4;
          }), e4.define("select2/data/ajax", ["./array", "../utils", "jquery"], function(e5, t5, o3) {
            function n3(e6, t6) {
              this.ajaxOptions = this._applyDefaults(t6.get("ajax")), null != this.ajaxOptions.processResults && (this.processResults = this.ajaxOptions.processResults), n3.__super__.constructor.call(this, e6, t6);
            }
            return t5.Extend(n3, e5), n3.prototype._applyDefaults = function(e6) {
              var t6 = { data: function(e7) {
                return o3.extend({}, e7, { q: e7.term });
              }, transport: function(e7, t7, n4) {
                var r4 = o3.ajax(e7);
                return r4.then(t7), r4.fail(n4), r4;
              } };
              return o3.extend({}, t6, e6, true);
            }, n3.prototype.processResults = function(e6) {
              return e6;
            }, n3.prototype.query = function(n4, r4) {
              var i4 = this;
              null != this._request && (o3.isFunction(this._request.abort) && this._request.abort(), this._request = null);
              var t6 = o3.extend({ type: "GET" }, this.ajaxOptions);
              function e6() {
                var e7 = t6.transport(t6, function(e8) {
                  var t7 = i4.processResults(e8, n4);
                  i4.options.get("debug") && window.console && console.error && (t7 && t7.results && o3.isArray(t7.results) || console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")), r4(t7);
                }, function() {
                  "status" in e7 && (0 === e7.status || "0" === e7.status) || i4.trigger("results:message", { message: "errorLoading" });
                });
                i4._request = e7;
              }
              "function" == typeof t6.url && (t6.url = t6.url.call(this.$element, n4)), "function" == typeof t6.data && (t6.data = t6.data.call(this.$element, n4)), this.ajaxOptions.delay && null != n4.term ? (this._queryTimeout && window.clearTimeout(this._queryTimeout), this._queryTimeout = window.setTimeout(e6, this.ajaxOptions.delay)) : e6();
            }, n3;
          }), e4.define("select2/data/tags", ["jquery"], function(u4) {
            function e5(e6, t5, n3) {
              var r4 = n3.get("tags"), i4 = n3.get("createTag");
              void 0 !== i4 && (this.createTag = i4);
              var o3 = n3.get("insertTag");
              if (void 0 !== o3 && (this.insertTag = o3), e6.call(this, t5, n3), u4.isArray(r4))
                for (var s4 = 0; s4 < r4.length; s4++) {
                  var a4 = r4[s4], l4 = this._normalizeItem(a4), c4 = this.option(l4);
                  this.$element.append(c4);
                }
            }
            return e5.prototype.query = function(e6, c4, u5) {
              var d2 = this;
              this._removeOldTags(), null != c4.term && null == c4.page ? e6.call(this, c4, function e7(t5, n3) {
                for (var r4 = t5.results, i4 = 0; i4 < r4.length; i4++) {
                  var o3 = r4[i4], s4 = null != o3.children && !e7({ results: o3.children }, true);
                  if ((o3.text || "").toUpperCase() === (c4.term || "").toUpperCase() || s4)
                    return !n3 && (t5.data = r4, void u5(t5));
                }
                if (n3)
                  return true;
                var a4 = d2.createTag(c4);
                if (null != a4) {
                  var l4 = d2.option(a4);
                  l4.attr("data-select2-tag", true), d2.addOptions([l4]), d2.insertTag(r4, a4);
                }
                t5.results = r4, u5(t5);
              }) : e6.call(this, c4, u5);
            }, e5.prototype.createTag = function(e6, t5) {
              var n3 = u4.trim(t5.term);
              return "" === n3 ? null : { id: n3, text: n3 };
            }, e5.prototype.insertTag = function(e6, t5, n3) {
              t5.unshift(n3);
            }, e5.prototype._removeOldTags = function(e6) {
              this.$element.find("option[data-select2-tag]").each(function() {
                this.selected || u4(this).remove();
              });
            }, e5;
          }), e4.define("select2/data/tokenizer", ["jquery"], function(d2) {
            function e5(e6, t5, n3) {
              var r4 = n3.get("tokenizer");
              void 0 !== r4 && (this.tokenizer = r4), e6.call(this, t5, n3);
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              e6.call(this, t5, n3), this.$search = t5.dropdown.$search || t5.selection.$search || n3.find(".select2-search__field");
            }, e5.prototype.query = function(e6, t5, n3) {
              var i4 = this;
              t5.term = t5.term || "";
              var r4 = this.tokenizer(t5, this.options, function(e7) {
                var t6, n4 = i4._normalizeItem(e7);
                if (!i4.$element.find("option").filter(function() {
                  return d2(this).val() === n4.id;
                }).length) {
                  var r5 = i4.option(n4);
                  r5.attr("data-select2-tag", true), i4._removeOldTags(), i4.addOptions([r5]);
                }
                t6 = n4, i4.trigger("select", { data: t6 });
              });
              r4.term !== t5.term && (this.$search.length && (this.$search.val(r4.term), this.$search.trigger("focus")), t5.term = r4.term), e6.call(this, t5, n3);
            }, e5.prototype.tokenizer = function(e6, t5, n3, r4) {
              for (var i4 = n3.get("tokenSeparators") || [], o3 = t5.term, s4 = 0, a4 = this.createTag || function(e7) {
                return { id: e7.term, text: e7.term };
              }; s4 < o3.length; ) {
                var l4 = o3[s4];
                if (-1 !== d2.inArray(l4, i4)) {
                  var c4 = o3.substr(0, s4), u4 = a4(d2.extend({}, t5, { term: c4 }));
                  null != u4 ? (r4(u4), o3 = o3.substr(s4 + 1) || "", s4 = 0) : s4++;
                } else
                  s4++;
              }
              return { term: o3 };
            }, e5;
          }), e4.define("select2/data/minimumInputLength", [], function() {
            function e5(e6, t5, n3) {
              this.minimumInputLength = n3.get("minimumInputLength"), e6.call(this, t5, n3);
            }
            return e5.prototype.query = function(e6, t5, n3) {
              t5.term = t5.term || "", t5.term.length < this.minimumInputLength ? this.trigger("results:message", { message: "inputTooShort", args: { minimum: this.minimumInputLength, input: t5.term, params: t5 } }) : e6.call(this, t5, n3);
            }, e5;
          }), e4.define("select2/data/maximumInputLength", [], function() {
            function e5(e6, t5, n3) {
              this.maximumInputLength = n3.get("maximumInputLength"), e6.call(this, t5, n3);
            }
            return e5.prototype.query = function(e6, t5, n3) {
              t5.term = t5.term || "", 0 < this.maximumInputLength && t5.term.length > this.maximumInputLength ? this.trigger("results:message", { message: "inputTooLong", args: { maximum: this.maximumInputLength, input: t5.term, params: t5 } }) : e6.call(this, t5, n3);
            }, e5;
          }), e4.define("select2/data/maximumSelectionLength", [], function() {
            function e5(e6, t5, n3) {
              this.maximumSelectionLength = n3.get("maximumSelectionLength"), e6.call(this, t5, n3);
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              var r4 = this;
              e6.call(this, t5, n3), t5.on("select", function() {
                r4._checkIfMaximumSelected();
              });
            }, e5.prototype.query = function(e6, t5, n3) {
              var r4 = this;
              this._checkIfMaximumSelected(function() {
                e6.call(r4, t5, n3);
              });
            }, e5.prototype._checkIfMaximumSelected = function(e6, n3) {
              var r4 = this;
              this.current(function(e7) {
                var t5 = null != e7 ? e7.length : 0;
                0 < r4.maximumSelectionLength && t5 >= r4.maximumSelectionLength ? r4.trigger("results:message", { message: "maximumSelected", args: { maximum: r4.maximumSelectionLength } }) : n3 && n3();
              });
            }, e5;
          }), e4.define("select2/dropdown", ["jquery", "./utils"], function(t5, e5) {
            function n3(e6, t6) {
              this.$element = e6, this.options = t6, n3.__super__.constructor.call(this);
            }
            return e5.Extend(n3, e5.Observable), n3.prototype.render = function() {
              var e6 = t5('<span class="select2-dropdown"><span class="select2-results"></span></span>');
              return e6.attr("dir", this.options.get("dir")), this.$dropdown = e6;
            }, n3.prototype.bind = function() {
            }, n3.prototype.position = function(e6, t6) {
            }, n3.prototype.destroy = function() {
              this.$dropdown.remove();
            }, n3;
          }), e4.define("select2/dropdown/search", ["jquery", "../utils"], function(o3, e5) {
            function t5() {
            }
            return t5.prototype.render = function(e6) {
              var t6 = e6.call(this), n3 = o3('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="searchbox" aria-autocomplete="list" /></span>');
              return this.$searchContainer = n3, this.$search = n3.find("input"), t6.prepend(n3), t6;
            }, t5.prototype.bind = function(e6, t6, n3) {
              var r4 = this, i4 = t6.id + "-results";
              e6.call(this, t6, n3), this.$search.on("keydown", function(e7) {
                r4.trigger("keypress", e7), r4._keyUpPrevented = e7.isDefaultPrevented();
              }), this.$search.on("input", function(e7) {
                o3(this).off("keyup");
              }), this.$search.on("keyup input", function(e7) {
                r4.handleSearch(e7);
              }), t6.on("open", function() {
                r4.$search.attr("tabindex", 0), r4.$search.attr("aria-controls", i4), r4.$search.trigger("focus"), window.setTimeout(function() {
                  r4.$search.trigger("focus");
                }, 0);
              }), t6.on("close", function() {
                r4.$search.attr("tabindex", -1), r4.$search.removeAttr("aria-controls"), r4.$search.removeAttr("aria-activedescendant"), r4.$search.val(""), r4.$search.trigger("blur");
              }), t6.on("focus", function() {
                t6.isOpen() || r4.$search.trigger("focus");
              }), t6.on("results:all", function(e7) {
                null != e7.query.term && "" !== e7.query.term || (r4.showSearch(e7) ? r4.$searchContainer.removeClass("select2-search--hide") : r4.$searchContainer.addClass("select2-search--hide"));
              }), t6.on("results:focus", function(e7) {
                e7.data._resultId ? r4.$search.attr("aria-activedescendant", e7.data._resultId) : r4.$search.removeAttr("aria-activedescendant");
              });
            }, t5.prototype.handleSearch = function(e6) {
              if (!this._keyUpPrevented) {
                var t6 = this.$search.val();
                this.trigger("query", { term: t6 });
              }
              this._keyUpPrevented = false;
            }, t5.prototype.showSearch = function(e6, t6) {
              return true;
            }, t5;
          }), e4.define("select2/dropdown/hidePlaceholder", [], function() {
            function e5(e6, t5, n3, r4) {
              this.placeholder = this.normalizePlaceholder(n3.get("placeholder")), e6.call(this, t5, n3, r4);
            }
            return e5.prototype.append = function(e6, t5) {
              t5.results = this.removePlaceholder(t5.results), e6.call(this, t5);
            }, e5.prototype.normalizePlaceholder = function(e6, t5) {
              return "string" == typeof t5 && (t5 = { id: "", text: t5 }), t5;
            }, e5.prototype.removePlaceholder = function(e6, t5) {
              for (var n3 = t5.slice(0), r4 = t5.length - 1; 0 <= r4; r4--) {
                var i4 = t5[r4];
                this.placeholder.id === i4.id && n3.splice(r4, 1);
              }
              return n3;
            }, e5;
          }), e4.define("select2/dropdown/infiniteScroll", ["jquery"], function(n3) {
            function e5(e6, t5, n4, r4) {
              this.lastParams = {}, e6.call(this, t5, n4, r4), this.$loadingMore = this.createLoadingMore(), this.loading = false;
            }
            return e5.prototype.append = function(e6, t5) {
              this.$loadingMore.remove(), this.loading = false, e6.call(this, t5), this.showLoadingMore(t5) && (this.$results.append(this.$loadingMore), this.loadMoreIfNeeded());
            }, e5.prototype.bind = function(e6, t5, n4) {
              var r4 = this;
              e6.call(this, t5, n4), t5.on("query", function(e7) {
                r4.lastParams = e7, r4.loading = true;
              }), t5.on("query:append", function(e7) {
                r4.lastParams = e7, r4.loading = true;
              }), this.$results.on("scroll", this.loadMoreIfNeeded.bind(this));
            }, e5.prototype.loadMoreIfNeeded = function() {
              var e6 = n3.contains(document.documentElement, this.$loadingMore[0]);
              if (!this.loading && e6) {
                var t5 = this.$results.offset().top + this.$results.outerHeight(false);
                this.$loadingMore.offset().top + this.$loadingMore.outerHeight(false) <= t5 + 50 && this.loadMore();
              }
            }, e5.prototype.loadMore = function() {
              this.loading = true;
              var e6 = n3.extend({}, { page: 1 }, this.lastParams);
              e6.page++, this.trigger("query:append", e6);
            }, e5.prototype.showLoadingMore = function(e6, t5) {
              return t5.pagination && t5.pagination.more;
            }, e5.prototype.createLoadingMore = function() {
              var e6 = n3('<li class="select2-results__option select2-results__option--load-more"role="option" aria-disabled="true"></li>'), t5 = this.options.get("translations").get("loadingMore");
              return e6.html(t5(this.lastParams)), e6;
            }, e5;
          }), e4.define("select2/dropdown/attachBody", ["jquery", "../utils"], function(f4, a4) {
            function e5(e6, t5, n3) {
              this.$dropdownParent = f4(n3.get("dropdownParent") || document.body), e6.call(this, t5, n3);
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              var r4 = this;
              e6.call(this, t5, n3), t5.on("open", function() {
                r4._showDropdown(), r4._attachPositioningHandler(t5), r4._bindContainerResultHandlers(t5);
              }), t5.on("close", function() {
                r4._hideDropdown(), r4._detachPositioningHandler(t5);
              }), this.$dropdownContainer.on("mousedown", function(e7) {
                e7.stopPropagation();
              });
            }, e5.prototype.destroy = function(e6) {
              e6.call(this), this.$dropdownContainer.remove();
            }, e5.prototype.position = function(e6, t5, n3) {
              t5.attr("class", n3.attr("class")), t5.removeClass("select2"), t5.addClass("select2-container--open"), t5.css({ position: "absolute", top: -999999 }), this.$container = n3;
            }, e5.prototype.render = function(e6) {
              var t5 = f4("<span></span>"), n3 = e6.call(this);
              return t5.append(n3), this.$dropdownContainer = t5;
            }, e5.prototype._hideDropdown = function(e6) {
              this.$dropdownContainer.detach();
            }, e5.prototype._bindContainerResultHandlers = function(e6, t5) {
              if (!this._containerResultsHandlersBound) {
                var n3 = this;
                t5.on("results:all", function() {
                  n3._positionDropdown(), n3._resizeDropdown();
                }), t5.on("results:append", function() {
                  n3._positionDropdown(), n3._resizeDropdown();
                }), t5.on("results:message", function() {
                  n3._positionDropdown(), n3._resizeDropdown();
                }), t5.on("select", function() {
                  n3._positionDropdown(), n3._resizeDropdown();
                }), t5.on("unselect", function() {
                  n3._positionDropdown(), n3._resizeDropdown();
                }), this._containerResultsHandlersBound = true;
              }
            }, e5.prototype._attachPositioningHandler = function(e6, t5) {
              var n3 = this, r4 = "scroll.select2." + t5.id, i4 = "resize.select2." + t5.id, o3 = "orientationchange.select2." + t5.id, s4 = this.$container.parents().filter(a4.hasScroll);
              s4.each(function() {
                a4.StoreData(this, "select2-scroll-position", { x: f4(this).scrollLeft(), y: f4(this).scrollTop() });
              }), s4.on(r4, function(e7) {
                var t6 = a4.GetData(this, "select2-scroll-position");
                f4(this).scrollTop(t6.y);
              }), f4(window).on(r4 + " " + i4 + " " + o3, function(e7) {
                n3._positionDropdown(), n3._resizeDropdown();
              });
            }, e5.prototype._detachPositioningHandler = function(e6, t5) {
              var n3 = "scroll.select2." + t5.id, r4 = "resize.select2." + t5.id, i4 = "orientationchange.select2." + t5.id;
              this.$container.parents().filter(a4.hasScroll).off(n3), f4(window).off(n3 + " " + r4 + " " + i4);
            }, e5.prototype._positionDropdown = function() {
              var e6 = f4(window), t5 = this.$dropdown.hasClass("select2-dropdown--above"), n3 = this.$dropdown.hasClass("select2-dropdown--below"), r4 = null, i4 = this.$container.offset();
              i4.bottom = i4.top + this.$container.outerHeight(false);
              var o3 = { height: this.$container.outerHeight(false) };
              o3.top = i4.top, o3.bottom = i4.top + o3.height;
              var s4 = this.$dropdown.outerHeight(false), a5 = e6.scrollTop(), l4 = e6.scrollTop() + e6.height(), c4 = a5 < i4.top - s4, u4 = l4 > i4.bottom + s4, d2 = { left: i4.left, top: o3.bottom }, p3 = this.$dropdownParent;
              "static" === p3.css("position") && (p3 = p3.offsetParent());
              var h4 = { top: 0, left: 0 };
              (f4.contains(document.body, p3[0]) || p3[0].isConnected) && (h4 = p3.offset()), d2.top -= h4.top, d2.left -= h4.left, t5 || n3 || (r4 = "below"), u4 || !c4 || t5 ? !c4 && u4 && t5 && (r4 = "below") : r4 = "above", ("above" == r4 || t5 && "below" !== r4) && (d2.top = o3.top - h4.top - s4), null != r4 && (this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + r4), this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + r4)), this.$dropdownContainer.css(d2);
            }, e5.prototype._resizeDropdown = function() {
              var e6 = { width: this.$container.outerWidth(false) + "px" };
              this.options.get("dropdownAutoWidth") && (e6.minWidth = e6.width, e6.position = "relative", e6.width = "auto"), this.$dropdown.css(e6);
            }, e5.prototype._showDropdown = function(e6) {
              this.$dropdownContainer.appendTo(this.$dropdownParent), this._positionDropdown(), this._resizeDropdown();
            }, e5;
          }), e4.define("select2/dropdown/minimumResultsForSearch", [], function() {
            function e5(e6, t5, n3, r4) {
              this.minimumResultsForSearch = n3.get("minimumResultsForSearch"), this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0), e6.call(this, t5, n3, r4);
            }
            return e5.prototype.showSearch = function(e6, t5) {
              return !(function e7(t6) {
                for (var n3 = 0, r4 = 0; r4 < t6.length; r4++) {
                  var i4 = t6[r4];
                  i4.children ? n3 += e7(i4.children) : n3++;
                }
                return n3;
              }(t5.data.results) < this.minimumResultsForSearch) && e6.call(this, t5);
            }, e5;
          }), e4.define("select2/dropdown/selectOnClose", ["../utils"], function(o3) {
            function e5() {
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              var r4 = this;
              e6.call(this, t5, n3), t5.on("close", function(e7) {
                r4._handleSelectOnClose(e7);
              });
            }, e5.prototype._handleSelectOnClose = function(e6, t5) {
              if (t5 && null != t5.originalSelect2Event) {
                var n3 = t5.originalSelect2Event;
                if ("select" === n3._type || "unselect" === n3._type)
                  return;
              }
              var r4 = this.getHighlightedResults();
              if (!(r4.length < 1)) {
                var i4 = o3.GetData(r4[0], "data");
                null != i4.element && i4.element.selected || null == i4.element && i4.selected || this.trigger("select", { data: i4 });
              }
            }, e5;
          }), e4.define("select2/dropdown/closeOnSelect", [], function() {
            function e5() {
            }
            return e5.prototype.bind = function(e6, t5, n3) {
              var r4 = this;
              e6.call(this, t5, n3), t5.on("select", function(e7) {
                r4._selectTriggered(e7);
              }), t5.on("unselect", function(e7) {
                r4._selectTriggered(e7);
              });
            }, e5.prototype._selectTriggered = function(e6, t5) {
              var n3 = t5.originalEvent;
              n3 && (n3.ctrlKey || n3.metaKey) || this.trigger("close", { originalEvent: n3, originalSelect2Event: t5 });
            }, e5;
          }), e4.define("select2/i18n/en", [], function() {
            return { errorLoading: function() {
              return "The results could not be loaded.";
            }, inputTooLong: function(e5) {
              var t5 = e5.input.length - e5.maximum, n3 = "Please delete " + t5 + " character";
              return 1 != t5 && (n3 += "s"), n3;
            }, inputTooShort: function(e5) {
              return "Please enter " + (e5.minimum - e5.input.length) + " or more characters";
            }, loadingMore: function() {
              return "Loading more results\u2026";
            }, maximumSelected: function(e5) {
              var t5 = "You can only select " + e5.maximum + " item";
              return 1 != e5.maximum && (t5 += "s"), t5;
            }, noResults: function() {
              return "No results found";
            }, searching: function() {
              return "Searching\u2026";
            }, removeAllItems: function() {
              return "Remove all items";
            } };
          }), e4.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function(c4, u4, d2, p3, h4, f4, g5, m4, v4, y4, s4, t5, _4, $3, b4, w5, A4, x5, D3, S3, E, C3, O2, T4, q3, L3, I3, j4, e5) {
            function n3() {
              this.reset();
            }
            return n3.prototype.apply = function(e6) {
              if (null == (e6 = c4.extend(true, {}, this.defaults, e6)).dataAdapter) {
                if (null != e6.ajax ? e6.dataAdapter = b4 : null != e6.data ? e6.dataAdapter = $3 : e6.dataAdapter = _4, 0 < e6.minimumInputLength && (e6.dataAdapter = y4.Decorate(e6.dataAdapter, x5)), 0 < e6.maximumInputLength && (e6.dataAdapter = y4.Decorate(e6.dataAdapter, D3)), 0 < e6.maximumSelectionLength && (e6.dataAdapter = y4.Decorate(e6.dataAdapter, S3)), e6.tags && (e6.dataAdapter = y4.Decorate(e6.dataAdapter, w5)), null == e6.tokenSeparators && null == e6.tokenizer || (e6.dataAdapter = y4.Decorate(e6.dataAdapter, A4)), null != e6.query) {
                  var t6 = u4(e6.amdBase + "compat/query");
                  e6.dataAdapter = y4.Decorate(e6.dataAdapter, t6);
                }
                if (null != e6.initSelection) {
                  var n4 = u4(e6.amdBase + "compat/initSelection");
                  e6.dataAdapter = y4.Decorate(e6.dataAdapter, n4);
                }
              }
              if (null == e6.resultsAdapter && (e6.resultsAdapter = d2, null != e6.ajax && (e6.resultsAdapter = y4.Decorate(e6.resultsAdapter, T4)), null != e6.placeholder && (e6.resultsAdapter = y4.Decorate(e6.resultsAdapter, O2)), e6.selectOnClose && (e6.resultsAdapter = y4.Decorate(e6.resultsAdapter, I3))), null == e6.dropdownAdapter) {
                if (e6.multiple)
                  e6.dropdownAdapter = E;
                else {
                  var r4 = y4.Decorate(E, C3);
                  e6.dropdownAdapter = r4;
                }
                if (0 !== e6.minimumResultsForSearch && (e6.dropdownAdapter = y4.Decorate(e6.dropdownAdapter, L3)), e6.closeOnSelect && (e6.dropdownAdapter = y4.Decorate(e6.dropdownAdapter, j4)), null != e6.dropdownCssClass || null != e6.dropdownCss || null != e6.adaptDropdownCssClass) {
                  var i4 = u4(e6.amdBase + "compat/dropdownCss");
                  e6.dropdownAdapter = y4.Decorate(e6.dropdownAdapter, i4);
                }
                e6.dropdownAdapter = y4.Decorate(e6.dropdownAdapter, q3);
              }
              if (null == e6.selectionAdapter) {
                if (e6.multiple ? e6.selectionAdapter = h4 : e6.selectionAdapter = p3, null != e6.placeholder && (e6.selectionAdapter = y4.Decorate(e6.selectionAdapter, f4)), e6.allowClear && (e6.selectionAdapter = y4.Decorate(e6.selectionAdapter, g5)), e6.multiple && (e6.selectionAdapter = y4.Decorate(e6.selectionAdapter, m4)), null != e6.containerCssClass || null != e6.containerCss || null != e6.adaptContainerCssClass) {
                  var o3 = u4(e6.amdBase + "compat/containerCss");
                  e6.selectionAdapter = y4.Decorate(e6.selectionAdapter, o3);
                }
                e6.selectionAdapter = y4.Decorate(e6.selectionAdapter, v4);
              }
              e6.language = this._resolveLanguage(e6.language), e6.language.push("en");
              for (var s5 = [], a4 = 0; a4 < e6.language.length; a4++) {
                var l4 = e6.language[a4];
                -1 === s5.indexOf(l4) && s5.push(l4);
              }
              return e6.language = s5, e6.translations = this._processTranslations(e6.language, e6.debug), e6;
            }, n3.prototype.reset = function() {
              function a4(e6) {
                return e6.replace(/[^\u0000-\u007E]/g, function(e7) {
                  return t5[e7] || e7;
                });
              }
              this.defaults = { amdBase: "./", amdLanguageBase: "./i18n/", closeOnSelect: true, debug: false, dropdownAutoWidth: false, escapeMarkup: y4.escapeMarkup, language: {}, matcher: function e6(t6, n4) {
                if ("" === c4.trim(t6.term))
                  return n4;
                if (n4.children && 0 < n4.children.length) {
                  for (var r4 = c4.extend(true, {}, n4), i4 = n4.children.length - 1; 0 <= i4; i4--)
                    null == e6(t6, n4.children[i4]) && r4.children.splice(i4, 1);
                  return 0 < r4.children.length ? r4 : e6(t6, r4);
                }
                var o3 = a4(n4.text).toUpperCase(), s5 = a4(t6.term).toUpperCase();
                return -1 < o3.indexOf(s5) ? n4 : null;
              }, minimumInputLength: 0, maximumInputLength: 0, maximumSelectionLength: 0, minimumResultsForSearch: 0, selectOnClose: false, scrollAfterSelect: false, sorter: function(e6) {
                return e6;
              }, templateResult: function(e6) {
                return e6.text;
              }, templateSelection: function(e6) {
                return e6.text;
              }, theme: "default", width: "resolve" };
            }, n3.prototype.applyFromElement = function(e6, t6) {
              var n4 = e6.language, r4 = this.defaults.language, i4 = t6.prop("lang"), o3 = t6.closest("[lang]").prop("lang"), s5 = Array.prototype.concat.call(this._resolveLanguage(i4), this._resolveLanguage(n4), this._resolveLanguage(r4), this._resolveLanguage(o3));
              return e6.language = s5, e6;
            }, n3.prototype._resolveLanguage = function(e6) {
              if (!e6)
                return [];
              if (c4.isEmptyObject(e6))
                return [];
              if (c4.isPlainObject(e6))
                return [e6];
              var t6;
              t6 = c4.isArray(e6) ? e6 : [e6];
              for (var n4 = [], r4 = 0; r4 < t6.length; r4++)
                if (n4.push(t6[r4]), "string" == typeof t6[r4] && 0 < t6[r4].indexOf("-")) {
                  var i4 = t6[r4].split("-")[0];
                  n4.push(i4);
                }
              return n4;
            }, n3.prototype._processTranslations = function(e6, t6) {
              for (var n4 = new s4(), r4 = 0; r4 < e6.length; r4++) {
                var i4 = new s4(), o3 = e6[r4];
                if ("string" == typeof o3)
                  try {
                    i4 = s4.loadPath(o3);
                  } catch (e7) {
                    try {
                      o3 = this.defaults.amdLanguageBase + o3, i4 = s4.loadPath(o3);
                    } catch (e8) {
                      t6 && window.console && console.warn && console.warn('Select2: The language file for "' + o3 + '" could not be automatically loaded. A fallback will be used instead.');
                    }
                  }
                else
                  i4 = c4.isPlainObject(o3) ? new s4(o3) : o3;
                n4.extend(i4);
              }
              return n4;
            }, n3.prototype.set = function(e6, t6) {
              var n4 = {};
              n4[c4.camelCase(e6)] = t6;
              var r4 = y4._convertData(n4);
              c4.extend(true, this.defaults, r4);
            }, new n3();
          }), e4.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function(r4, d2, i4, p3) {
            function e5(e6, t5) {
              if (this.options = e6, null != t5 && this.fromElement(t5), null != t5 && (this.options = i4.applyFromElement(this.options, t5)), this.options = i4.apply(this.options), t5 && t5.is("input")) {
                var n3 = r4(this.get("amdBase") + "compat/inputData");
                this.options.dataAdapter = p3.Decorate(this.options.dataAdapter, n3);
              }
            }
            return e5.prototype.fromElement = function(e6) {
              var t5 = ["select2"];
              null == this.options.multiple && (this.options.multiple = e6.prop("multiple")), null == this.options.disabled && (this.options.disabled = e6.prop("disabled")), null == this.options.dir && (e6.prop("dir") ? this.options.dir = e6.prop("dir") : e6.closest("[dir]").prop("dir") ? this.options.dir = e6.closest("[dir]").prop("dir") : this.options.dir = "ltr"), e6.prop("disabled", this.options.disabled), e6.prop("multiple", this.options.multiple), p3.GetData(e6[0], "select2Tags") && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'), p3.StoreData(e6[0], "data", p3.GetData(e6[0], "select2Tags")), p3.StoreData(e6[0], "tags", true)), p3.GetData(e6[0], "ajaxUrl") && (this.options.debug && window.console && console.warn && console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."), e6.attr("ajax--url", p3.GetData(e6[0], "ajaxUrl")), p3.StoreData(e6[0], "ajax-Url", p3.GetData(e6[0], "ajaxUrl")));
              var n3 = {};
              function r5(e7, t6) {
                return t6.toUpperCase();
              }
              for (var i5 = 0; i5 < e6[0].attributes.length; i5++) {
                var o3 = e6[0].attributes[i5].name, s4 = "data-";
                if (o3.substr(0, s4.length) == s4) {
                  var a4 = o3.substring(s4.length), l4 = p3.GetData(e6[0], a4);
                  n3[a4.replace(/-([a-z])/g, r5)] = l4;
                }
              }
              d2.fn.jquery && "1." == d2.fn.jquery.substr(0, 2) && e6[0].dataset && (n3 = d2.extend(true, {}, e6[0].dataset, n3));
              var c4 = d2.extend(true, {}, p3.GetData(e6[0]), n3);
              for (var u4 in c4 = p3._convertData(c4))
                -1 < d2.inArray(u4, t5) || (d2.isPlainObject(this.options[u4]) ? d2.extend(this.options[u4], c4[u4]) : this.options[u4] = c4[u4]);
              return this;
            }, e5.prototype.get = function(e6) {
              return this.options[e6];
            }, e5.prototype.set = function(e6, t5) {
              this.options[e6] = t5;
            }, e5;
          }), e4.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function(o3, c4, u4, r4) {
            var d2 = function(e5, t5) {
              null != u4.GetData(e5[0], "select2") && u4.GetData(e5[0], "select2").destroy(), this.$element = e5, this.id = this._generateId(e5), t5 = t5 || {}, this.options = new c4(t5, e5), d2.__super__.constructor.call(this);
              var n3 = e5.attr("tabindex") || 0;
              u4.StoreData(e5[0], "old-tabindex", n3), e5.attr("tabindex", "-1");
              var r5 = this.options.get("dataAdapter");
              this.dataAdapter = new r5(e5, this.options);
              var i4 = this.render();
              this._placeContainer(i4);
              var o4 = this.options.get("selectionAdapter");
              this.selection = new o4(e5, this.options), this.$selection = this.selection.render(), this.selection.position(this.$selection, i4);
              var s4 = this.options.get("dropdownAdapter");
              this.dropdown = new s4(e5, this.options), this.$dropdown = this.dropdown.render(), this.dropdown.position(this.$dropdown, i4);
              var a4 = this.options.get("resultsAdapter");
              this.results = new a4(e5, this.options, this.dataAdapter), this.$results = this.results.render(), this.results.position(this.$results, this.$dropdown);
              var l4 = this;
              this._bindAdapters(), this._registerDomEvents(), this._registerDataEvents(), this._registerSelectionEvents(), this._registerDropdownEvents(), this._registerResultsEvents(), this._registerEvents(), this.dataAdapter.current(function(e6) {
                l4.trigger("selection:update", { data: e6 });
              }), e5.addClass("select2-hidden-accessible"), e5.attr("aria-hidden", "true"), this._syncAttributes(), u4.StoreData(e5[0], "select2", this), e5.data("select2", this);
            };
            return u4.Extend(d2, u4.Observable), d2.prototype._generateId = function(e5) {
              return "select2-" + (null != e5.attr("id") ? e5.attr("id") : null != e5.attr("name") ? e5.attr("name") + "-" + u4.generateChars(2) : u4.generateChars(4)).replace(/(:|\.|\[|\]|,)/g, "");
            }, d2.prototype._placeContainer = function(e5) {
              e5.insertAfter(this.$element);
              var t5 = this._resolveWidth(this.$element, this.options.get("width"));
              null != t5 && e5.css("width", t5);
            }, d2.prototype._resolveWidth = function(e5, t5) {
              var n3 = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
              if ("resolve" == t5) {
                var r5 = this._resolveWidth(e5, "style");
                return null != r5 ? r5 : this._resolveWidth(e5, "element");
              }
              if ("element" == t5) {
                var i4 = e5.outerWidth(false);
                return i4 <= 0 ? "auto" : i4 + "px";
              }
              if ("style" != t5)
                return "computedstyle" != t5 ? t5 : window.getComputedStyle(e5[0]).width;
              var o4 = e5.attr("style");
              if ("string" != typeof o4)
                return null;
              for (var s4 = o4.split(";"), a4 = 0, l4 = s4.length; a4 < l4; a4 += 1) {
                var c5 = s4[a4].replace(/\s/g, "").match(n3);
                if (null !== c5 && 1 <= c5.length)
                  return c5[1];
              }
              return null;
            }, d2.prototype._bindAdapters = function() {
              this.dataAdapter.bind(this, this.$container), this.selection.bind(this, this.$container), this.dropdown.bind(this, this.$container), this.results.bind(this, this.$container);
            }, d2.prototype._registerDomEvents = function() {
              var t5 = this;
              this.$element.on("change.select2", function() {
                t5.dataAdapter.current(function(e6) {
                  t5.trigger("selection:update", { data: e6 });
                });
              }), this.$element.on("focus.select2", function(e6) {
                t5.trigger("focus", e6);
              }), this._syncA = u4.bind(this._syncAttributes, this), this._syncS = u4.bind(this._syncSubtree, this), this.$element[0].attachEvent && this.$element[0].attachEvent("onpropertychange", this._syncA);
              var e5 = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
              null != e5 ? (this._observer = new e5(function(e6) {
                t5._syncA(), t5._syncS(null, e6);
              }), this._observer.observe(this.$element[0], { attributes: true, childList: true, subtree: false })) : this.$element[0].addEventListener && (this.$element[0].addEventListener("DOMAttrModified", t5._syncA, false), this.$element[0].addEventListener("DOMNodeInserted", t5._syncS, false), this.$element[0].addEventListener("DOMNodeRemoved", t5._syncS, false));
            }, d2.prototype._registerDataEvents = function() {
              var n3 = this;
              this.dataAdapter.on("*", function(e5, t5) {
                n3.trigger(e5, t5);
              });
            }, d2.prototype._registerSelectionEvents = function() {
              var n3 = this, r5 = ["toggle", "focus"];
              this.selection.on("toggle", function() {
                n3.toggleDropdown();
              }), this.selection.on("focus", function(e5) {
                n3.focus(e5);
              }), this.selection.on("*", function(e5, t5) {
                -1 === o3.inArray(e5, r5) && n3.trigger(e5, t5);
              });
            }, d2.prototype._registerDropdownEvents = function() {
              var n3 = this;
              this.dropdown.on("*", function(e5, t5) {
                n3.trigger(e5, t5);
              });
            }, d2.prototype._registerResultsEvents = function() {
              var n3 = this;
              this.results.on("*", function(e5, t5) {
                n3.trigger(e5, t5);
              });
            }, d2.prototype._registerEvents = function() {
              var n3 = this;
              this.on("open", function() {
                n3.$container.addClass("select2-container--open");
              }), this.on("close", function() {
                n3.$container.removeClass("select2-container--open");
              }), this.on("enable", function() {
                n3.$container.removeClass("select2-container--disabled");
              }), this.on("disable", function() {
                n3.$container.addClass("select2-container--disabled");
              }), this.on("blur", function() {
                n3.$container.removeClass("select2-container--focus");
              }), this.on("query", function(t5) {
                n3.isOpen() || n3.trigger("open", {}), this.dataAdapter.query(t5, function(e5) {
                  n3.trigger("results:all", { data: e5, query: t5 });
                });
              }), this.on("query:append", function(t5) {
                this.dataAdapter.query(t5, function(e5) {
                  n3.trigger("results:append", { data: e5, query: t5 });
                });
              }), this.on("keypress", function(e5) {
                var t5 = e5.which;
                n3.isOpen() ? t5 === r4.ESC || t5 === r4.TAB || t5 === r4.UP && e5.altKey ? (n3.close(e5), e5.preventDefault()) : t5 === r4.ENTER ? (n3.trigger("results:select", {}), e5.preventDefault()) : t5 === r4.SPACE && e5.ctrlKey ? (n3.trigger("results:toggle", {}), e5.preventDefault()) : t5 === r4.UP ? (n3.trigger("results:previous", {}), e5.preventDefault()) : t5 === r4.DOWN && (n3.trigger("results:next", {}), e5.preventDefault()) : (t5 === r4.ENTER || t5 === r4.SPACE || t5 === r4.DOWN && e5.altKey) && (n3.open(), e5.preventDefault());
              });
            }, d2.prototype._syncAttributes = function() {
              this.options.set("disabled", this.$element.prop("disabled")), this.isDisabled() ? (this.isOpen() && this.close(), this.trigger("disable", {})) : this.trigger("enable", {});
            }, d2.prototype._isChangeMutation = function(e5, t5) {
              var n3 = false, r5 = this;
              if (!e5 || !e5.target || "OPTION" === e5.target.nodeName || "OPTGROUP" === e5.target.nodeName) {
                if (t5)
                  if (t5.addedNodes && 0 < t5.addedNodes.length)
                    for (var i4 = 0; i4 < t5.addedNodes.length; i4++) {
                      t5.addedNodes[i4].selected && (n3 = true);
                    }
                  else
                    t5.removedNodes && 0 < t5.removedNodes.length ? n3 = true : o3.isArray(t5) && o3.each(t5, function(e6, t6) {
                      if (r5._isChangeMutation(e6, t6))
                        return !(n3 = true);
                    });
                else
                  n3 = true;
                return n3;
              }
            }, d2.prototype._syncSubtree = function(e5, t5) {
              var n3 = this._isChangeMutation(e5, t5), r5 = this;
              n3 && this.dataAdapter.current(function(e6) {
                r5.trigger("selection:update", { data: e6 });
              });
            }, d2.prototype.trigger = function(e5, t5) {
              var n3 = d2.__super__.trigger, r5 = { open: "opening", close: "closing", select: "selecting", unselect: "unselecting", clear: "clearing" };
              if (void 0 === t5 && (t5 = {}), e5 in r5) {
                var i4 = r5[e5], o4 = { prevented: false, name: e5, args: t5 };
                if (n3.call(this, i4, o4), o4.prevented)
                  return void (t5.prevented = true);
              }
              n3.call(this, e5, t5);
            }, d2.prototype.toggleDropdown = function() {
              this.isDisabled() || (this.isOpen() ? this.close() : this.open());
            }, d2.prototype.open = function() {
              this.isOpen() || this.isDisabled() || this.trigger("query", {});
            }, d2.prototype.close = function(e5) {
              this.isOpen() && this.trigger("close", { originalEvent: e5 });
            }, d2.prototype.isEnabled = function() {
              return !this.isDisabled();
            }, d2.prototype.isDisabled = function() {
              return this.options.get("disabled");
            }, d2.prototype.isOpen = function() {
              return this.$container.hasClass("select2-container--open");
            }, d2.prototype.hasFocus = function() {
              return this.$container.hasClass("select2-container--focus");
            }, d2.prototype.focus = function(e5) {
              this.hasFocus() || (this.$container.addClass("select2-container--focus"), this.trigger("focus", {}));
            }, d2.prototype.enable = function(e5) {
              this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'), null != e5 && 0 !== e5.length || (e5 = [true]);
              var t5 = !e5[0];
              this.$element.prop("disabled", t5);
            }, d2.prototype.data = function() {
              this.options.get("debug") && 0 < arguments.length && window.console && console.warn && console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');
              var t5 = [];
              return this.dataAdapter.current(function(e5) {
                t5 = e5;
              }), t5;
            }, d2.prototype.val = function(e5) {
              if (this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'), null == e5 || 0 === e5.length)
                return this.$element.val();
              var t5 = e5[0];
              o3.isArray(t5) && (t5 = o3.map(t5, function(e6) {
                return e6.toString();
              })), this.$element.val(t5).trigger("input").trigger("change");
            }, d2.prototype.destroy = function() {
              this.$container.remove(), this.$element[0].detachEvent && this.$element[0].detachEvent("onpropertychange", this._syncA), null != this._observer ? (this._observer.disconnect(), this._observer = null) : this.$element[0].removeEventListener && (this.$element[0].removeEventListener("DOMAttrModified", this._syncA, false), this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, false), this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, false)), this._syncA = null, this._syncS = null, this.$element.off(".select2"), this.$element.attr("tabindex", u4.GetData(this.$element[0], "old-tabindex")), this.$element.removeClass("select2-hidden-accessible"), this.$element.attr("aria-hidden", "false"), u4.RemoveData(this.$element[0]), this.$element.removeData("select2"), this.dataAdapter.destroy(), this.selection.destroy(), this.dropdown.destroy(), this.results.destroy(), this.dataAdapter = null, this.selection = null, this.dropdown = null, this.results = null;
            }, d2.prototype.render = function() {
              var e5 = o3('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
              return e5.attr("dir", this.options.get("dir")), this.$container = e5, this.$container.addClass("select2-container--" + this.options.get("theme")), u4.StoreData(e5[0], "element", this.$element), e5;
            }, d2;
          }), e4.define("jquery-mousewheel", ["jquery"], function(e5) {
            return e5;
          }), e4.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults", "./select2/utils"], function(i4, e5, o3, t5, s4) {
            if (null == i4.fn.select2) {
              var a4 = ["open", "close", "destroy"];
              i4.fn.select2 = function(t6) {
                if ("object" == typeof (t6 = t6 || {}))
                  return this.each(function() {
                    var e6 = i4.extend(true, {}, t6);
                    new o3(i4(this), e6);
                  }), this;
                if ("string" != typeof t6)
                  throw new Error("Invalid arguments for Select2: " + t6);
                var n3, r4 = Array.prototype.slice.call(arguments, 1);
                return this.each(function() {
                  var e6 = s4.GetData(this, "select2");
                  null == e6 && window.console && console.error && console.error("The select2('" + t6 + "') method was called on an element that is not using Select2."), n3 = e6[t6].apply(e6, r4);
                }), -1 < i4.inArray(t6, a4) ? this : n3;
              };
            }
            return null == i4.fn.select2.defaults && (i4.fn.select2.defaults = t5), o3;
          }), { define: e4.define, require: e4.require };
        }(), t3 = e3.require("jquery.select2");
        return u3.fn.select2.amd = e3, t3;
      });
    }
  });

  // node_modules/admin-lte/plugins/jquery-ui/jquery-ui.min.js
  var require_jquery_ui_min = __commonJS({
    "node_modules/admin-lte/plugins/jquery-ui/jquery-ui.min.js"() {
      !function(t3) {
        "use strict";
        "function" == typeof define && define.amd ? define(["jquery"], t3) : t3(jQuery);
      }(function(V3) {
        "use strict";
        V3.ui = V3.ui || {};
        V3.ui.version = "1.13.2";
        var n2, i3 = 0, a3 = Array.prototype.hasOwnProperty, r3 = Array.prototype.slice;
        V3.cleanData = (n2 = V3.cleanData, function(t4) {
          for (var e4, i4, s4 = 0; null != (i4 = t4[s4]); s4++)
            (e4 = V3._data(i4, "events")) && e4.remove && V3(i4).triggerHandler("remove");
          n2(t4);
        }), V3.widget = function(t4, i4, e4) {
          var s4, n3, o3, a4 = {}, r4 = t4.split(".")[0], l4 = r4 + "-" + (t4 = t4.split(".")[1]);
          return e4 || (e4 = i4, i4 = V3.Widget), Array.isArray(e4) && (e4 = V3.extend.apply(null, [{}].concat(e4))), V3.expr.pseudos[l4.toLowerCase()] = function(t5) {
            return !!V3.data(t5, l4);
          }, V3[r4] = V3[r4] || {}, s4 = V3[r4][t4], n3 = V3[r4][t4] = function(t5, e5) {
            if (!this || !this._createWidget)
              return new n3(t5, e5);
            arguments.length && this._createWidget(t5, e5);
          }, V3.extend(n3, s4, { version: e4.version, _proto: V3.extend({}, e4), _childConstructors: [] }), (o3 = new i4()).options = V3.widget.extend({}, o3.options), V3.each(e4, function(e5, s5) {
            function n4() {
              return i4.prototype[e5].apply(this, arguments);
            }
            function o4(t5) {
              return i4.prototype[e5].apply(this, t5);
            }
            a4[e5] = "function" == typeof s5 ? function() {
              var t5, e6 = this._super, i5 = this._superApply;
              return this._super = n4, this._superApply = o4, t5 = s5.apply(this, arguments), this._super = e6, this._superApply = i5, t5;
            } : s5;
          }), n3.prototype = V3.widget.extend(o3, { widgetEventPrefix: s4 && o3.widgetEventPrefix || t4 }, a4, { constructor: n3, namespace: r4, widgetName: t4, widgetFullName: l4 }), s4 ? (V3.each(s4._childConstructors, function(t5, e5) {
            var i5 = e5.prototype;
            V3.widget(i5.namespace + "." + i5.widgetName, n3, e5._proto);
          }), delete s4._childConstructors) : i4._childConstructors.push(n3), V3.widget.bridge(t4, n3), n3;
        }, V3.widget.extend = function(t4) {
          for (var e4, i4, s4 = r3.call(arguments, 1), n3 = 0, o3 = s4.length; n3 < o3; n3++)
            for (e4 in s4[n3])
              i4 = s4[n3][e4], a3.call(s4[n3], e4) && void 0 !== i4 && (V3.isPlainObject(i4) ? t4[e4] = V3.isPlainObject(t4[e4]) ? V3.widget.extend({}, t4[e4], i4) : V3.widget.extend({}, i4) : t4[e4] = i4);
          return t4;
        }, V3.widget.bridge = function(o3, e4) {
          var a4 = e4.prototype.widgetFullName || o3;
          V3.fn[o3] = function(i4) {
            var t4 = "string" == typeof i4, s4 = r3.call(arguments, 1), n3 = this;
            return t4 ? this.length || "instance" !== i4 ? this.each(function() {
              var t5, e5 = V3.data(this, a4);
              return "instance" === i4 ? (n3 = e5, false) : e5 ? "function" != typeof e5[i4] || "_" === i4.charAt(0) ? V3.error("no such method '" + i4 + "' for " + o3 + " widget instance") : (t5 = e5[i4].apply(e5, s4)) !== e5 && void 0 !== t5 ? (n3 = t5 && t5.jquery ? n3.pushStack(t5.get()) : t5, false) : void 0 : V3.error("cannot call methods on " + o3 + " prior to initialization; attempted to call method '" + i4 + "'");
            }) : n3 = void 0 : (s4.length && (i4 = V3.widget.extend.apply(null, [i4].concat(s4))), this.each(function() {
              var t5 = V3.data(this, a4);
              t5 ? (t5.option(i4 || {}), t5._init && t5._init()) : V3.data(this, a4, new e4(i4, this));
            })), n3;
          };
        }, V3.Widget = function() {
        }, V3.Widget._childConstructors = [], V3.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: { classes: {}, disabled: false, create: null }, _createWidget: function(t4, e4) {
          e4 = V3(e4 || this.defaultElement || this)[0], this.element = V3(e4), this.uuid = i3++, this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = V3(), this.hoverable = V3(), this.focusable = V3(), this.classesElementLookup = {}, e4 !== this && (V3.data(e4, this.widgetFullName, this), this._on(true, this.element, { remove: function(t5) {
            t5.target === e4 && this.destroy();
          } }), this.document = V3(e4.style ? e4.ownerDocument : e4.document || e4), this.window = V3(this.document[0].defaultView || this.document[0].parentWindow)), this.options = V3.widget.extend({}, this.options, this._getCreateOptions(), t4), this._create(), this.options.disabled && this._setOptionDisabled(this.options.disabled), this._trigger("create", null, this._getCreateEventData()), this._init();
        }, _getCreateOptions: function() {
          return {};
        }, _getCreateEventData: V3.noop, _create: V3.noop, _init: V3.noop, destroy: function() {
          var i4 = this;
          this._destroy(), V3.each(this.classesElementLookup, function(t4, e4) {
            i4._removeClass(e4, t4);
          }), this.element.off(this.eventNamespace).removeData(this.widgetFullName), this.widget().off(this.eventNamespace).removeAttr("aria-disabled"), this.bindings.off(this.eventNamespace);
        }, _destroy: V3.noop, widget: function() {
          return this.element;
        }, option: function(t4, e4) {
          var i4, s4, n3, o3 = t4;
          if (0 === arguments.length)
            return V3.widget.extend({}, this.options);
          if ("string" == typeof t4)
            if (o3 = {}, t4 = (i4 = t4.split(".")).shift(), i4.length) {
              for (s4 = o3[t4] = V3.widget.extend({}, this.options[t4]), n3 = 0; n3 < i4.length - 1; n3++)
                s4[i4[n3]] = s4[i4[n3]] || {}, s4 = s4[i4[n3]];
              if (t4 = i4.pop(), 1 === arguments.length)
                return void 0 === s4[t4] ? null : s4[t4];
              s4[t4] = e4;
            } else {
              if (1 === arguments.length)
                return void 0 === this.options[t4] ? null : this.options[t4];
              o3[t4] = e4;
            }
          return this._setOptions(o3), this;
        }, _setOptions: function(t4) {
          for (var e4 in t4)
            this._setOption(e4, t4[e4]);
          return this;
        }, _setOption: function(t4, e4) {
          return "classes" === t4 && this._setOptionClasses(e4), this.options[t4] = e4, "disabled" === t4 && this._setOptionDisabled(e4), this;
        }, _setOptionClasses: function(t4) {
          var e4, i4, s4;
          for (e4 in t4)
            s4 = this.classesElementLookup[e4], t4[e4] !== this.options.classes[e4] && s4 && s4.length && (i4 = V3(s4.get()), this._removeClass(s4, e4), i4.addClass(this._classes({ element: i4, keys: e4, classes: t4, add: true })));
        }, _setOptionDisabled: function(t4) {
          this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!t4), t4 && (this._removeClass(this.hoverable, null, "ui-state-hover"), this._removeClass(this.focusable, null, "ui-state-focus"));
        }, enable: function() {
          return this._setOptions({ disabled: false });
        }, disable: function() {
          return this._setOptions({ disabled: true });
        }, _classes: function(n3) {
          var o3 = [], a4 = this;
          function t4(t5, e4) {
            for (var i4, s4 = 0; s4 < t5.length; s4++)
              i4 = a4.classesElementLookup[t5[s4]] || V3(), i4 = n3.add ? (function() {
                var i5 = [];
                n3.element.each(function(t6, e5) {
                  V3.map(a4.classesElementLookup, function(t7) {
                    return t7;
                  }).some(function(t7) {
                    return t7.is(e5);
                  }) || i5.push(e5);
                }), a4._on(V3(i5), { remove: "_untrackClassesElement" });
              }(), V3(V3.uniqueSort(i4.get().concat(n3.element.get())))) : V3(i4.not(n3.element).get()), a4.classesElementLookup[t5[s4]] = i4, o3.push(t5[s4]), e4 && n3.classes[t5[s4]] && o3.push(n3.classes[t5[s4]]);
          }
          return (n3 = V3.extend({ element: this.element, classes: this.options.classes || {} }, n3)).keys && t4(n3.keys.match(/\S+/g) || [], true), n3.extra && t4(n3.extra.match(/\S+/g) || []), o3.join(" ");
        }, _untrackClassesElement: function(i4) {
          var s4 = this;
          V3.each(s4.classesElementLookup, function(t4, e4) {
            -1 !== V3.inArray(i4.target, e4) && (s4.classesElementLookup[t4] = V3(e4.not(i4.target).get()));
          }), this._off(V3(i4.target));
        }, _removeClass: function(t4, e4, i4) {
          return this._toggleClass(t4, e4, i4, false);
        }, _addClass: function(t4, e4, i4) {
          return this._toggleClass(t4, e4, i4, true);
        }, _toggleClass: function(t4, e4, i4, s4) {
          var n3 = "string" == typeof t4 || null === t4, i4 = { extra: n3 ? e4 : i4, keys: n3 ? t4 : e4, element: n3 ? this.element : t4, add: s4 = "boolean" == typeof s4 ? s4 : i4 };
          return i4.element.toggleClass(this._classes(i4), s4), this;
        }, _on: function(n3, o3, t4) {
          var a4, r4 = this;
          "boolean" != typeof n3 && (t4 = o3, o3 = n3, n3 = false), t4 ? (o3 = a4 = V3(o3), this.bindings = this.bindings.add(o3)) : (t4 = o3, o3 = this.element, a4 = this.widget()), V3.each(t4, function(t5, e4) {
            function i4() {
              if (n3 || true !== r4.options.disabled && !V3(this).hasClass("ui-state-disabled"))
                return ("string" == typeof e4 ? r4[e4] : e4).apply(r4, arguments);
            }
            "string" != typeof e4 && (i4.guid = e4.guid = e4.guid || i4.guid || V3.guid++);
            var s4 = t5.match(/^([\w:-]*)\s*(.*)$/), t5 = s4[1] + r4.eventNamespace, s4 = s4[2];
            s4 ? a4.on(t5, s4, i4) : o3.on(t5, i4);
          });
        }, _off: function(t4, e4) {
          e4 = (e4 || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, t4.off(e4), this.bindings = V3(this.bindings.not(t4).get()), this.focusable = V3(this.focusable.not(t4).get()), this.hoverable = V3(this.hoverable.not(t4).get());
        }, _delay: function(t4, e4) {
          var i4 = this;
          return setTimeout(function() {
            return ("string" == typeof t4 ? i4[t4] : t4).apply(i4, arguments);
          }, e4 || 0);
        }, _hoverable: function(t4) {
          this.hoverable = this.hoverable.add(t4), this._on(t4, { mouseenter: function(t5) {
            this._addClass(V3(t5.currentTarget), null, "ui-state-hover");
          }, mouseleave: function(t5) {
            this._removeClass(V3(t5.currentTarget), null, "ui-state-hover");
          } });
        }, _focusable: function(t4) {
          this.focusable = this.focusable.add(t4), this._on(t4, { focusin: function(t5) {
            this._addClass(V3(t5.currentTarget), null, "ui-state-focus");
          }, focusout: function(t5) {
            this._removeClass(V3(t5.currentTarget), null, "ui-state-focus");
          } });
        }, _trigger: function(t4, e4, i4) {
          var s4, n3, o3 = this.options[t4];
          if (i4 = i4 || {}, (e4 = V3.Event(e4)).type = (t4 === this.widgetEventPrefix ? t4 : this.widgetEventPrefix + t4).toLowerCase(), e4.target = this.element[0], n3 = e4.originalEvent)
            for (s4 in n3)
              s4 in e4 || (e4[s4] = n3[s4]);
          return this.element.trigger(e4, i4), !("function" == typeof o3 && false === o3.apply(this.element[0], [e4].concat(i4)) || e4.isDefaultPrevented());
        } }, V3.each({ show: "fadeIn", hide: "fadeOut" }, function(o3, a4) {
          V3.Widget.prototype["_" + o3] = function(e4, t4, i4) {
            var s4, n3 = (t4 = "string" == typeof t4 ? { effect: t4 } : t4) ? true !== t4 && "number" != typeof t4 && t4.effect || a4 : o3;
            "number" == typeof (t4 = t4 || {}) ? t4 = { duration: t4 } : true === t4 && (t4 = {}), s4 = !V3.isEmptyObject(t4), t4.complete = i4, t4.delay && e4.delay(t4.delay), s4 && V3.effects && V3.effects.effect[n3] ? e4[o3](t4) : n3 !== o3 && e4[n3] ? e4[n3](t4.duration, t4.easing, i4) : e4.queue(function(t5) {
              V3(this)[o3](), i4 && i4.call(e4[0]), t5();
            });
          };
        });
        var s3, x4, k3, o2, l3, h3, c3, u3, C3;
        V3.widget;
        function D2(t4, e4, i4) {
          return [parseFloat(t4[0]) * (u3.test(t4[0]) ? e4 / 100 : 1), parseFloat(t4[1]) * (u3.test(t4[1]) ? i4 / 100 : 1)];
        }
        function I3(t4, e4) {
          return parseInt(V3.css(t4, e4), 10) || 0;
        }
        function T4(t4) {
          return null != t4 && t4 === t4.window;
        }
        x4 = Math.max, k3 = Math.abs, o2 = /left|center|right/, l3 = /top|center|bottom/, h3 = /[\+\-]\d+(\.[\d]+)?%?/, c3 = /^\w+/, u3 = /%$/, C3 = V3.fn.position, V3.position = { scrollbarWidth: function() {
          if (void 0 !== s3)
            return s3;
          var t4, e4 = V3("<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>"), i4 = e4.children()[0];
          return V3("body").append(e4), t4 = i4.offsetWidth, e4.css("overflow", "scroll"), t4 === (i4 = i4.offsetWidth) && (i4 = e4[0].clientWidth), e4.remove(), s3 = t4 - i4;
        }, getScrollInfo: function(t4) {
          var e4 = t4.isWindow || t4.isDocument ? "" : t4.element.css("overflow-x"), i4 = t4.isWindow || t4.isDocument ? "" : t4.element.css("overflow-y"), e4 = "scroll" === e4 || "auto" === e4 && t4.width < t4.element[0].scrollWidth;
          return { width: "scroll" === i4 || "auto" === i4 && t4.height < t4.element[0].scrollHeight ? V3.position.scrollbarWidth() : 0, height: e4 ? V3.position.scrollbarWidth() : 0 };
        }, getWithinInfo: function(t4) {
          var e4 = V3(t4 || window), i4 = T4(e4[0]), s4 = !!e4[0] && 9 === e4[0].nodeType;
          return { element: e4, isWindow: i4, isDocument: s4, offset: !i4 && !s4 ? V3(t4).offset() : { left: 0, top: 0 }, scrollLeft: e4.scrollLeft(), scrollTop: e4.scrollTop(), width: e4.outerWidth(), height: e4.outerHeight() };
        } }, V3.fn.position = function(u4) {
          if (!u4 || !u4.of)
            return C3.apply(this, arguments);
          var d3, p4, f4, g5, m4, t4, _4 = "string" == typeof (u4 = V3.extend({}, u4)).of ? V3(document).find(u4.of) : V3(u4.of), v4 = V3.position.getWithinInfo(u4.within), b4 = V3.position.getScrollInfo(v4), y4 = (u4.collision || "flip").split(" "), w5 = {}, e4 = 9 === (t4 = (e4 = _4)[0]).nodeType ? { width: e4.width(), height: e4.height(), offset: { top: 0, left: 0 } } : T4(t4) ? { width: e4.width(), height: e4.height(), offset: { top: e4.scrollTop(), left: e4.scrollLeft() } } : t4.preventDefault ? { width: 0, height: 0, offset: { top: t4.pageY, left: t4.pageX } } : { width: e4.outerWidth(), height: e4.outerHeight(), offset: e4.offset() };
          return _4[0].preventDefault && (u4.at = "left top"), p4 = e4.width, f4 = e4.height, m4 = V3.extend({}, g5 = e4.offset), V3.each(["my", "at"], function() {
            var t5, e5, i4 = (u4[this] || "").split(" ");
            (i4 = 1 === i4.length ? o2.test(i4[0]) ? i4.concat(["center"]) : l3.test(i4[0]) ? ["center"].concat(i4) : ["center", "center"] : i4)[0] = o2.test(i4[0]) ? i4[0] : "center", i4[1] = l3.test(i4[1]) ? i4[1] : "center", t5 = h3.exec(i4[0]), e5 = h3.exec(i4[1]), w5[this] = [t5 ? t5[0] : 0, e5 ? e5[0] : 0], u4[this] = [c3.exec(i4[0])[0], c3.exec(i4[1])[0]];
          }), 1 === y4.length && (y4[1] = y4[0]), "right" === u4.at[0] ? m4.left += p4 : "center" === u4.at[0] && (m4.left += p4 / 2), "bottom" === u4.at[1] ? m4.top += f4 : "center" === u4.at[1] && (m4.top += f4 / 2), d3 = D2(w5.at, p4, f4), m4.left += d3[0], m4.top += d3[1], this.each(function() {
            var i4, t5, a4 = V3(this), r4 = a4.outerWidth(), l4 = a4.outerHeight(), e5 = I3(this, "marginLeft"), s4 = I3(this, "marginTop"), n3 = r4 + e5 + I3(this, "marginRight") + b4.width, o3 = l4 + s4 + I3(this, "marginBottom") + b4.height, h4 = V3.extend({}, m4), c4 = D2(w5.my, a4.outerWidth(), a4.outerHeight());
            "right" === u4.my[0] ? h4.left -= r4 : "center" === u4.my[0] && (h4.left -= r4 / 2), "bottom" === u4.my[1] ? h4.top -= l4 : "center" === u4.my[1] && (h4.top -= l4 / 2), h4.left += c4[0], h4.top += c4[1], i4 = { marginLeft: e5, marginTop: s4 }, V3.each(["left", "top"], function(t6, e6) {
              V3.ui.position[y4[t6]] && V3.ui.position[y4[t6]][e6](h4, { targetWidth: p4, targetHeight: f4, elemWidth: r4, elemHeight: l4, collisionPosition: i4, collisionWidth: n3, collisionHeight: o3, offset: [d3[0] + c4[0], d3[1] + c4[1]], my: u4.my, at: u4.at, within: v4, elem: a4 });
            }), u4.using && (t5 = function(t6) {
              var e6 = g5.left - h4.left, i5 = e6 + p4 - r4, s5 = g5.top - h4.top, n4 = s5 + f4 - l4, o4 = { target: { element: _4, left: g5.left, top: g5.top, width: p4, height: f4 }, element: { element: a4, left: h4.left, top: h4.top, width: r4, height: l4 }, horizontal: i5 < 0 ? "left" : 0 < e6 ? "right" : "center", vertical: n4 < 0 ? "top" : 0 < s5 ? "bottom" : "middle" };
              p4 < r4 && k3(e6 + i5) < p4 && (o4.horizontal = "center"), f4 < l4 && k3(s5 + n4) < f4 && (o4.vertical = "middle"), x4(k3(e6), k3(i5)) > x4(k3(s5), k3(n4)) ? o4.important = "horizontal" : o4.important = "vertical", u4.using.call(this, t6, o4);
            }), a4.offset(V3.extend(h4, { using: t5 }));
          });
        }, V3.ui.position = { fit: { left: function(t4, e4) {
          var i4 = e4.within, s4 = i4.isWindow ? i4.scrollLeft : i4.offset.left, n3 = i4.width, o3 = t4.left - e4.collisionPosition.marginLeft, a4 = s4 - o3, r4 = o3 + e4.collisionWidth - n3 - s4;
          e4.collisionWidth > n3 ? 0 < a4 && r4 <= 0 ? (i4 = t4.left + a4 + e4.collisionWidth - n3 - s4, t4.left += a4 - i4) : t4.left = !(0 < r4 && a4 <= 0) && r4 < a4 ? s4 + n3 - e4.collisionWidth : s4 : 0 < a4 ? t4.left += a4 : 0 < r4 ? t4.left -= r4 : t4.left = x4(t4.left - o3, t4.left);
        }, top: function(t4, e4) {
          var i4 = e4.within, s4 = i4.isWindow ? i4.scrollTop : i4.offset.top, n3 = e4.within.height, o3 = t4.top - e4.collisionPosition.marginTop, a4 = s4 - o3, r4 = o3 + e4.collisionHeight - n3 - s4;
          e4.collisionHeight > n3 ? 0 < a4 && r4 <= 0 ? (i4 = t4.top + a4 + e4.collisionHeight - n3 - s4, t4.top += a4 - i4) : t4.top = !(0 < r4 && a4 <= 0) && r4 < a4 ? s4 + n3 - e4.collisionHeight : s4 : 0 < a4 ? t4.top += a4 : 0 < r4 ? t4.top -= r4 : t4.top = x4(t4.top - o3, t4.top);
        } }, flip: { left: function(t4, e4) {
          var i4 = e4.within, s4 = i4.offset.left + i4.scrollLeft, n3 = i4.width, o3 = i4.isWindow ? i4.scrollLeft : i4.offset.left, a4 = t4.left - e4.collisionPosition.marginLeft, r4 = a4 - o3, l4 = a4 + e4.collisionWidth - n3 - o3, h4 = "left" === e4.my[0] ? -e4.elemWidth : "right" === e4.my[0] ? e4.elemWidth : 0, i4 = "left" === e4.at[0] ? e4.targetWidth : "right" === e4.at[0] ? -e4.targetWidth : 0, a4 = -2 * e4.offset[0];
          r4 < 0 ? ((s4 = t4.left + h4 + i4 + a4 + e4.collisionWidth - n3 - s4) < 0 || s4 < k3(r4)) && (t4.left += h4 + i4 + a4) : 0 < l4 && (0 < (o3 = t4.left - e4.collisionPosition.marginLeft + h4 + i4 + a4 - o3) || k3(o3) < l4) && (t4.left += h4 + i4 + a4);
        }, top: function(t4, e4) {
          var i4 = e4.within, s4 = i4.offset.top + i4.scrollTop, n3 = i4.height, o3 = i4.isWindow ? i4.scrollTop : i4.offset.top, a4 = t4.top - e4.collisionPosition.marginTop, r4 = a4 - o3, l4 = a4 + e4.collisionHeight - n3 - o3, h4 = "top" === e4.my[1] ? -e4.elemHeight : "bottom" === e4.my[1] ? e4.elemHeight : 0, i4 = "top" === e4.at[1] ? e4.targetHeight : "bottom" === e4.at[1] ? -e4.targetHeight : 0, a4 = -2 * e4.offset[1];
          r4 < 0 ? ((s4 = t4.top + h4 + i4 + a4 + e4.collisionHeight - n3 - s4) < 0 || s4 < k3(r4)) && (t4.top += h4 + i4 + a4) : 0 < l4 && (0 < (o3 = t4.top - e4.collisionPosition.marginTop + h4 + i4 + a4 - o3) || k3(o3) < l4) && (t4.top += h4 + i4 + a4);
        } }, flipfit: { left: function() {
          V3.ui.position.flip.left.apply(this, arguments), V3.ui.position.fit.left.apply(this, arguments);
        }, top: function() {
          V3.ui.position.flip.top.apply(this, arguments), V3.ui.position.fit.top.apply(this, arguments);
        } } };
        V3.ui.position, V3.extend(V3.expr.pseudos, { data: V3.expr.createPseudo ? V3.expr.createPseudo(function(e4) {
          return function(t4) {
            return !!V3.data(t4, e4);
          };
        }) : function(t4, e4, i4) {
          return !!V3.data(t4, i4[3]);
        } }), V3.fn.extend({ disableSelection: (t3 = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown", function() {
          return this.on(t3 + ".ui-disableSelection", function(t4) {
            t4.preventDefault();
          });
        }), enableSelection: function() {
          return this.off(".ui-disableSelection");
        } });
        var t3, d2 = V3, p3 = {}, e3 = p3.toString, f3 = /^([\-+])=\s*(\d+\.?\d*)/, g4 = [{ re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function(t4) {
          return [t4[1], t4[2], t4[3], t4[4]];
        } }, { re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function(t4) {
          return [2.55 * t4[1], 2.55 * t4[2], 2.55 * t4[3], t4[4]];
        } }, { re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/, parse: function(t4) {
          return [parseInt(t4[1], 16), parseInt(t4[2], 16), parseInt(t4[3], 16), t4[4] ? (parseInt(t4[4], 16) / 255).toFixed(2) : 1];
        } }, { re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/, parse: function(t4) {
          return [parseInt(t4[1] + t4[1], 16), parseInt(t4[2] + t4[2], 16), parseInt(t4[3] + t4[3], 16), t4[4] ? (parseInt(t4[4] + t4[4], 16) / 255).toFixed(2) : 1];
        } }, { re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, space: "hsla", parse: function(t4) {
          return [t4[1], t4[2] / 100, t4[3] / 100, t4[4]];
        } }], m3 = d2.Color = function(t4, e4, i4, s4) {
          return new d2.Color.fn.parse(t4, e4, i4, s4);
        }, _3 = { rgba: { props: { red: { idx: 0, type: "byte" }, green: { idx: 1, type: "byte" }, blue: { idx: 2, type: "byte" } } }, hsla: { props: { hue: { idx: 0, type: "degrees" }, saturation: { idx: 1, type: "percent" }, lightness: { idx: 2, type: "percent" } } } }, v3 = { byte: { floor: true, max: 255 }, percent: { max: 1 }, degrees: { mod: 360, floor: true } }, b3 = m3.support = {}, y3 = d2("<p>")[0], w4 = d2.each;
        function P2(t4) {
          return null == t4 ? t4 + "" : "object" == typeof t4 ? p3[e3.call(t4)] || "object" : typeof t4;
        }
        function M2(t4, e4, i4) {
          var s4 = v3[e4.type] || {};
          return null == t4 ? i4 || !e4.def ? null : e4.def : (t4 = s4.floor ? ~~t4 : parseFloat(t4), isNaN(t4) ? e4.def : s4.mod ? (t4 + s4.mod) % s4.mod : Math.min(s4.max, Math.max(0, t4)));
        }
        function S2(s4) {
          var n3 = m3(), o3 = n3._rgba = [];
          return s4 = s4.toLowerCase(), w4(g4, function(t4, e4) {
            var i4 = e4.re.exec(s4), i4 = i4 && e4.parse(i4), e4 = e4.space || "rgba";
            if (i4)
              return i4 = n3[e4](i4), n3[_3[e4].cache] = i4[_3[e4].cache], o3 = n3._rgba = i4._rgba, false;
          }), o3.length ? ("0,0,0,0" === o3.join() && d2.extend(o3, B3.transparent), n3) : B3[s4];
        }
        function H3(t4, e4, i4) {
          return 6 * (i4 = (i4 + 1) % 1) < 1 ? t4 + (e4 - t4) * i4 * 6 : 2 * i4 < 1 ? e4 : 3 * i4 < 2 ? t4 + (e4 - t4) * (2 / 3 - i4) * 6 : t4;
        }
        y3.style.cssText = "background-color:rgba(1,1,1,.5)", b3.rgba = -1 < y3.style.backgroundColor.indexOf("rgba"), w4(_3, function(t4, e4) {
          e4.cache = "_" + t4, e4.props.alpha = { idx: 3, type: "percent", def: 1 };
        }), d2.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(t4, e4) {
          p3["[object " + e4 + "]"] = e4.toLowerCase();
        }), (m3.fn = d2.extend(m3.prototype, { parse: function(n3, t4, e4, i4) {
          if (void 0 === n3)
            return this._rgba = [null, null, null, null], this;
          (n3.jquery || n3.nodeType) && (n3 = d2(n3).css(t4), t4 = void 0);
          var o3 = this, s4 = P2(n3), a4 = this._rgba = [];
          return void 0 !== t4 && (n3 = [n3, t4, e4, i4], s4 = "array"), "string" === s4 ? this.parse(S2(n3) || B3._default) : "array" === s4 ? (w4(_3.rgba.props, function(t5, e5) {
            a4[e5.idx] = M2(n3[e5.idx], e5);
          }), this) : "object" === s4 ? (w4(_3, n3 instanceof m3 ? function(t5, e5) {
            n3[e5.cache] && (o3[e5.cache] = n3[e5.cache].slice());
          } : function(t5, i5) {
            var s5 = i5.cache;
            w4(i5.props, function(t6, e5) {
              if (!o3[s5] && i5.to) {
                if ("alpha" === t6 || null == n3[t6])
                  return;
                o3[s5] = i5.to(o3._rgba);
              }
              o3[s5][e5.idx] = M2(n3[t6], e5, true);
            }), o3[s5] && d2.inArray(null, o3[s5].slice(0, 3)) < 0 && (null == o3[s5][3] && (o3[s5][3] = 1), i5.from && (o3._rgba = i5.from(o3[s5])));
          }), this) : void 0;
        }, is: function(t4) {
          var n3 = m3(t4), o3 = true, a4 = this;
          return w4(_3, function(t5, e4) {
            var i4, s4 = n3[e4.cache];
            return s4 && (i4 = a4[e4.cache] || e4.to && e4.to(a4._rgba) || [], w4(e4.props, function(t6, e5) {
              if (null != s4[e5.idx])
                return o3 = s4[e5.idx] === i4[e5.idx];
            })), o3;
          }), o3;
        }, _space: function() {
          var i4 = [], s4 = this;
          return w4(_3, function(t4, e4) {
            s4[e4.cache] && i4.push(t4);
          }), i4.pop();
        }, transition: function(t4, a4) {
          var e4 = (h4 = m3(t4))._space(), i4 = _3[e4], t4 = 0 === this.alpha() ? m3("transparent") : this, r4 = t4[i4.cache] || i4.to(t4._rgba), l4 = r4.slice(), h4 = h4[i4.cache];
          return w4(i4.props, function(t5, e5) {
            var i5 = e5.idx, s4 = r4[i5], n3 = h4[i5], o3 = v3[e5.type] || {};
            null !== n3 && (null === s4 ? l4[i5] = n3 : (o3.mod && (n3 - s4 > o3.mod / 2 ? s4 += o3.mod : s4 - n3 > o3.mod / 2 && (s4 -= o3.mod)), l4[i5] = M2((n3 - s4) * a4 + s4, e5)));
          }), this[e4](l4);
        }, blend: function(t4) {
          if (1 === this._rgba[3])
            return this;
          var e4 = this._rgba.slice(), i4 = e4.pop(), s4 = m3(t4)._rgba;
          return m3(d2.map(e4, function(t5, e5) {
            return (1 - i4) * s4[e5] + i4 * t5;
          }));
        }, toRgbaString: function() {
          var t4 = "rgba(", e4 = d2.map(this._rgba, function(t5, e5) {
            return null != t5 ? t5 : 2 < e5 ? 1 : 0;
          });
          return 1 === e4[3] && (e4.pop(), t4 = "rgb("), t4 + e4.join() + ")";
        }, toHslaString: function() {
          var t4 = "hsla(", e4 = d2.map(this.hsla(), function(t5, e5) {
            return null == t5 && (t5 = 2 < e5 ? 1 : 0), t5 = e5 && e5 < 3 ? Math.round(100 * t5) + "%" : t5;
          });
          return 1 === e4[3] && (e4.pop(), t4 = "hsl("), t4 + e4.join() + ")";
        }, toHexString: function(t4) {
          var e4 = this._rgba.slice(), i4 = e4.pop();
          return t4 && e4.push(~~(255 * i4)), "#" + d2.map(e4, function(t5) {
            return 1 === (t5 = (t5 || 0).toString(16)).length ? "0" + t5 : t5;
          }).join("");
        }, toString: function() {
          return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
        } })).parse.prototype = m3.fn, _3.hsla.to = function(t4) {
          if (null == t4[0] || null == t4[1] || null == t4[2])
            return [null, null, null, t4[3]];
          var e4 = t4[0] / 255, i4 = t4[1] / 255, s4 = t4[2] / 255, n3 = t4[3], o3 = Math.max(e4, i4, s4), a4 = Math.min(e4, i4, s4), r4 = o3 - a4, l4 = o3 + a4, t4 = 0.5 * l4, i4 = a4 === o3 ? 0 : e4 === o3 ? 60 * (i4 - s4) / r4 + 360 : i4 === o3 ? 60 * (s4 - e4) / r4 + 120 : 60 * (e4 - i4) / r4 + 240, l4 = 0 == r4 ? 0 : t4 <= 0.5 ? r4 / l4 : r4 / (2 - l4);
          return [Math.round(i4) % 360, l4, t4, null == n3 ? 1 : n3];
        }, _3.hsla.from = function(t4) {
          if (null == t4[0] || null == t4[1] || null == t4[2])
            return [null, null, null, t4[3]];
          var e4 = t4[0] / 360, i4 = t4[1], s4 = t4[2], t4 = t4[3], i4 = s4 <= 0.5 ? s4 * (1 + i4) : s4 + i4 - s4 * i4, s4 = 2 * s4 - i4;
          return [Math.round(255 * H3(s4, i4, e4 + 1 / 3)), Math.round(255 * H3(s4, i4, e4)), Math.round(255 * H3(s4, i4, e4 - 1 / 3)), t4];
        }, w4(_3, function(l4, t4) {
          var e4 = t4.props, o3 = t4.cache, a4 = t4.to, r4 = t4.from;
          m3.fn[l4] = function(t5) {
            if (a4 && !this[o3] && (this[o3] = a4(this._rgba)), void 0 === t5)
              return this[o3].slice();
            var i4 = P2(t5), s4 = "array" === i4 || "object" === i4 ? t5 : arguments, n3 = this[o3].slice();
            return w4(e4, function(t6, e5) {
              t6 = s4["object" === i4 ? t6 : e5.idx];
              null == t6 && (t6 = n3[e5.idx]), n3[e5.idx] = M2(t6, e5);
            }), r4 ? ((t5 = m3(r4(n3)))[o3] = n3, t5) : m3(n3);
          }, w4(e4, function(a5, r5) {
            m3.fn[a5] || (m3.fn[a5] = function(t5) {
              var e5, i4 = P2(t5), s4 = "alpha" === a5 ? this._hsla ? "hsla" : "rgba" : l4, n3 = this[s4](), o4 = n3[r5.idx];
              return "undefined" === i4 ? o4 : ("function" === i4 && (i4 = P2(t5 = t5.call(this, o4))), null == t5 && r5.empty ? this : ("string" === i4 && (e5 = f3.exec(t5)) && (t5 = o4 + parseFloat(e5[2]) * ("+" === e5[1] ? 1 : -1)), n3[r5.idx] = t5, this[s4](n3)));
            });
          });
        }), (m3.hook = function(t4) {
          t4 = t4.split(" ");
          w4(t4, function(t5, o3) {
            d2.cssHooks[o3] = { set: function(t6, e4) {
              var i4, s4, n3 = "";
              if ("transparent" !== e4 && ("string" !== P2(e4) || (i4 = S2(e4)))) {
                if (e4 = m3(i4 || e4), !b3.rgba && 1 !== e4._rgba[3]) {
                  for (s4 = "backgroundColor" === o3 ? t6.parentNode : t6; ("" === n3 || "transparent" === n3) && s4 && s4.style; )
                    try {
                      n3 = d2.css(s4, "backgroundColor"), s4 = s4.parentNode;
                    } catch (t7) {
                    }
                  e4 = e4.blend(n3 && "transparent" !== n3 ? n3 : "_default");
                }
                e4 = e4.toRgbaString();
              }
              try {
                t6.style[o3] = e4;
              } catch (t7) {
              }
            } }, d2.fx.step[o3] = function(t6) {
              t6.colorInit || (t6.start = m3(t6.elem, o3), t6.end = m3(t6.end), t6.colorInit = true), d2.cssHooks[o3].set(t6.elem, t6.start.transition(t6.end, t6.pos));
            };
          });
        })("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"), d2.cssHooks.borderColor = { expand: function(i4) {
          var s4 = {};
          return w4(["Top", "Right", "Bottom", "Left"], function(t4, e4) {
            s4["border" + e4 + "Color"] = i4;
          }), s4;
        } };
        var z3, A3, O2, N3, E, W2, F3, L3, R, Y, B3 = d2.Color.names = { aqua: "#00ffff", black: "#000000", blue: "#0000ff", fuchsia: "#ff00ff", gray: "#808080", green: "#008000", lime: "#00ff00", maroon: "#800000", navy: "#000080", olive: "#808000", purple: "#800080", red: "#ff0000", silver: "#c0c0c0", teal: "#008080", white: "#ffffff", yellow: "#ffff00", transparent: [null, null, null, 0], _default: "#ffffff" }, j4 = "ui-effects-", q3 = "ui-effects-style", K2 = "ui-effects-animated";
        function U2(t4) {
          var e4, i4, s4 = t4.ownerDocument.defaultView ? t4.ownerDocument.defaultView.getComputedStyle(t4, null) : t4.currentStyle, n3 = {};
          if (s4 && s4.length && s4[0] && s4[s4[0]])
            for (i4 = s4.length; i4--; )
              "string" == typeof s4[e4 = s4[i4]] && (n3[e4.replace(/-([\da-z])/gi, function(t5, e5) {
                return e5.toUpperCase();
              })] = s4[e4]);
          else
            for (e4 in s4)
              "string" == typeof s4[e4] && (n3[e4] = s4[e4]);
          return n3;
        }
        function X2(t4, e4, i4, s4) {
          return t4 = { effect: t4 = V3.isPlainObject(t4) ? (e4 = t4).effect : t4 }, "function" == typeof (e4 = null == e4 ? {} : e4) && (s4 = e4, i4 = null, e4 = {}), "number" != typeof e4 && !V3.fx.speeds[e4] || (s4 = i4, i4 = e4, e4 = {}), "function" == typeof i4 && (s4 = i4, i4 = null), e4 && V3.extend(t4, e4), i4 = i4 || e4.duration, t4.duration = V3.fx.off ? 0 : "number" == typeof i4 ? i4 : i4 in V3.fx.speeds ? V3.fx.speeds[i4] : V3.fx.speeds._default, t4.complete = s4 || e4.complete, t4;
        }
        function $3(t4) {
          return !t4 || "number" == typeof t4 || V3.fx.speeds[t4] || ("string" == typeof t4 && !V3.effects.effect[t4] || ("function" == typeof t4 || "object" == typeof t4 && !t4.effect));
        }
        function G2(t4, e4) {
          var i4 = e4.outerWidth(), e4 = e4.outerHeight(), t4 = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(t4) || ["", 0, i4, e4, 0];
          return { top: parseFloat(t4[1]) || 0, right: "auto" === t4[2] ? i4 : parseFloat(t4[2]), bottom: "auto" === t4[3] ? e4 : parseFloat(t4[3]), left: parseFloat(t4[4]) || 0 };
        }
        V3.effects = { effect: {} }, N3 = ["add", "remove", "toggle"], E = { border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1 }, V3.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(t4, e4) {
          V3.fx.step[e4] = function(t5) {
            ("none" !== t5.end && !t5.setAttr || 1 === t5.pos && !t5.setAttr) && (d2.style(t5.elem, e4, t5.end), t5.setAttr = true);
          };
        }), V3.fn.addBack || (V3.fn.addBack = function(t4) {
          return this.add(null == t4 ? this.prevObject : this.prevObject.filter(t4));
        }), V3.effects.animateClass = function(n3, t4, e4, i4) {
          var o3 = V3.speed(t4, e4, i4);
          return this.queue(function() {
            var i5 = V3(this), t5 = i5.attr("class") || "", e5 = (e5 = o3.children ? i5.find("*").addBack() : i5).map(function() {
              return { el: V3(this), start: U2(this) };
            }), s4 = function() {
              V3.each(N3, function(t6, e6) {
                n3[e6] && i5[e6 + "Class"](n3[e6]);
              });
            };
            s4(), e5 = e5.map(function() {
              return this.end = U2(this.el[0]), this.diff = function(t6, e6) {
                var i6, s5, n4 = {};
                for (i6 in e6)
                  s5 = e6[i6], t6[i6] !== s5 && (E[i6] || !V3.fx.step[i6] && isNaN(parseFloat(s5)) || (n4[i6] = s5));
                return n4;
              }(this.start, this.end), this;
            }), i5.attr("class", t5), e5 = e5.map(function() {
              var t6 = this, e6 = V3.Deferred(), i6 = V3.extend({}, o3, { queue: false, complete: function() {
                e6.resolve(t6);
              } });
              return this.el.animate(this.diff, i6), e6.promise();
            }), V3.when.apply(V3, e5.get()).done(function() {
              s4(), V3.each(arguments, function() {
                var e6 = this.el;
                V3.each(this.diff, function(t6) {
                  e6.css(t6, "");
                });
              }), o3.complete.call(i5[0]);
            });
          });
        }, V3.fn.extend({ addClass: (O2 = V3.fn.addClass, function(t4, e4, i4, s4) {
          return e4 ? V3.effects.animateClass.call(this, { add: t4 }, e4, i4, s4) : O2.apply(this, arguments);
        }), removeClass: (A3 = V3.fn.removeClass, function(t4, e4, i4, s4) {
          return 1 < arguments.length ? V3.effects.animateClass.call(this, { remove: t4 }, e4, i4, s4) : A3.apply(this, arguments);
        }), toggleClass: (z3 = V3.fn.toggleClass, function(t4, e4, i4, s4, n3) {
          return "boolean" == typeof e4 || void 0 === e4 ? i4 ? V3.effects.animateClass.call(this, e4 ? { add: t4 } : { remove: t4 }, i4, s4, n3) : z3.apply(this, arguments) : V3.effects.animateClass.call(this, { toggle: t4 }, e4, i4, s4);
        }), switchClass: function(t4, e4, i4, s4, n3) {
          return V3.effects.animateClass.call(this, { add: e4, remove: t4 }, i4, s4, n3);
        } }), V3.expr && V3.expr.pseudos && V3.expr.pseudos.animated && (V3.expr.pseudos.animated = (W2 = V3.expr.pseudos.animated, function(t4) {
          return !!V3(t4).data(K2) || W2(t4);
        })), false !== V3.uiBackCompat && V3.extend(V3.effects, { save: function(t4, e4) {
          for (var i4 = 0, s4 = e4.length; i4 < s4; i4++)
            null !== e4[i4] && t4.data(j4 + e4[i4], t4[0].style[e4[i4]]);
        }, restore: function(t4, e4) {
          for (var i4, s4 = 0, n3 = e4.length; s4 < n3; s4++)
            null !== e4[s4] && (i4 = t4.data(j4 + e4[s4]), t4.css(e4[s4], i4));
        }, setMode: function(t4, e4) {
          return e4 = "toggle" === e4 ? t4.is(":hidden") ? "show" : "hide" : e4;
        }, createWrapper: function(i4) {
          if (i4.parent().is(".ui-effects-wrapper"))
            return i4.parent();
          var s4 = { width: i4.outerWidth(true), height: i4.outerHeight(true), float: i4.css("float") }, t4 = V3("<div></div>").addClass("ui-effects-wrapper").css({ fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0 }), e4 = { width: i4.width(), height: i4.height() }, n3 = document.activeElement;
          try {
            n3.id;
          } catch (t5) {
            n3 = document.body;
          }
          return i4.wrap(t4), i4[0] !== n3 && !V3.contains(i4[0], n3) || V3(n3).trigger("focus"), t4 = i4.parent(), "static" === i4.css("position") ? (t4.css({ position: "relative" }), i4.css({ position: "relative" })) : (V3.extend(s4, { position: i4.css("position"), zIndex: i4.css("z-index") }), V3.each(["top", "left", "bottom", "right"], function(t5, e5) {
            s4[e5] = i4.css(e5), isNaN(parseInt(s4[e5], 10)) && (s4[e5] = "auto");
          }), i4.css({ position: "relative", top: 0, left: 0, right: "auto", bottom: "auto" })), i4.css(e4), t4.css(s4).show();
        }, removeWrapper: function(t4) {
          var e4 = document.activeElement;
          return t4.parent().is(".ui-effects-wrapper") && (t4.parent().replaceWith(t4), t4[0] !== e4 && !V3.contains(t4[0], e4) || V3(e4).trigger("focus")), t4;
        } }), V3.extend(V3.effects, { version: "1.13.2", define: function(t4, e4, i4) {
          return i4 || (i4 = e4, e4 = "effect"), V3.effects.effect[t4] = i4, V3.effects.effect[t4].mode = e4, i4;
        }, scaledDimensions: function(t4, e4, i4) {
          if (0 === e4)
            return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
          var s4 = "horizontal" !== i4 ? (e4 || 100) / 100 : 1, e4 = "vertical" !== i4 ? (e4 || 100) / 100 : 1;
          return { height: t4.height() * e4, width: t4.width() * s4, outerHeight: t4.outerHeight() * e4, outerWidth: t4.outerWidth() * s4 };
        }, clipToBox: function(t4) {
          return { width: t4.clip.right - t4.clip.left, height: t4.clip.bottom - t4.clip.top, left: t4.clip.left, top: t4.clip.top };
        }, unshift: function(t4, e4, i4) {
          var s4 = t4.queue();
          1 < e4 && s4.splice.apply(s4, [1, 0].concat(s4.splice(e4, i4))), t4.dequeue();
        }, saveStyle: function(t4) {
          t4.data(q3, t4[0].style.cssText);
        }, restoreStyle: function(t4) {
          t4[0].style.cssText = t4.data(q3) || "", t4.removeData(q3);
        }, mode: function(t4, e4) {
          t4 = t4.is(":hidden");
          return "toggle" === e4 && (e4 = t4 ? "show" : "hide"), e4 = (t4 ? "hide" === e4 : "show" === e4) ? "none" : e4;
        }, getBaseline: function(t4, e4) {
          var i4, s4;
          switch (t4[0]) {
            case "top":
              i4 = 0;
              break;
            case "middle":
              i4 = 0.5;
              break;
            case "bottom":
              i4 = 1;
              break;
            default:
              i4 = t4[0] / e4.height;
          }
          switch (t4[1]) {
            case "left":
              s4 = 0;
              break;
            case "center":
              s4 = 0.5;
              break;
            case "right":
              s4 = 1;
              break;
            default:
              s4 = t4[1] / e4.width;
          }
          return { x: s4, y: i4 };
        }, createPlaceholder: function(t4) {
          var e4, i4 = t4.css("position"), s4 = t4.position();
          return t4.css({ marginTop: t4.css("marginTop"), marginBottom: t4.css("marginBottom"), marginLeft: t4.css("marginLeft"), marginRight: t4.css("marginRight") }).outerWidth(t4.outerWidth()).outerHeight(t4.outerHeight()), /^(static|relative)/.test(i4) && (i4 = "absolute", e4 = V3("<" + t4[0].nodeName + ">").insertAfter(t4).css({ display: /^(inline|ruby)/.test(t4.css("display")) ? "inline-block" : "block", visibility: "hidden", marginTop: t4.css("marginTop"), marginBottom: t4.css("marginBottom"), marginLeft: t4.css("marginLeft"), marginRight: t4.css("marginRight"), float: t4.css("float") }).outerWidth(t4.outerWidth()).outerHeight(t4.outerHeight()).addClass("ui-effects-placeholder"), t4.data(j4 + "placeholder", e4)), t4.css({ position: i4, left: s4.left, top: s4.top }), e4;
        }, removePlaceholder: function(t4) {
          var e4 = j4 + "placeholder", i4 = t4.data(e4);
          i4 && (i4.remove(), t4.removeData(e4));
        }, cleanUp: function(t4) {
          V3.effects.restoreStyle(t4), V3.effects.removePlaceholder(t4);
        }, setTransition: function(s4, t4, n3, o3) {
          return o3 = o3 || {}, V3.each(t4, function(t5, e4) {
            var i4 = s4.cssUnit(e4);
            0 < i4[0] && (o3[e4] = i4[0] * n3 + i4[1]);
          }), o3;
        } }), V3.fn.extend({ effect: function() {
          function t4(t5) {
            var e5 = V3(this), i5 = V3.effects.mode(e5, r4) || o3;
            e5.data(K2, true), l4.push(i5), o3 && ("show" === i5 || i5 === o3 && "hide" === i5) && e5.show(), o3 && "none" === i5 || V3.effects.saveStyle(e5), "function" == typeof t5 && t5();
          }
          var s4 = X2.apply(this, arguments), n3 = V3.effects.effect[s4.effect], o3 = n3.mode, e4 = s4.queue, i4 = e4 || "fx", a4 = s4.complete, r4 = s4.mode, l4 = [];
          return V3.fx.off || !n3 ? r4 ? this[r4](s4.duration, a4) : this.each(function() {
            a4 && a4.call(this);
          }) : false === e4 ? this.each(t4).each(h4) : this.queue(i4, t4).queue(i4, h4);
          function h4(t5) {
            var e5 = V3(this);
            function i5() {
              "function" == typeof a4 && a4.call(e5[0]), "function" == typeof t5 && t5();
            }
            s4.mode = l4.shift(), false === V3.uiBackCompat || o3 ? "none" === s4.mode ? (e5[r4](), i5()) : n3.call(e5[0], s4, function() {
              e5.removeData(K2), V3.effects.cleanUp(e5), "hide" === s4.mode && e5.hide(), i5();
            }) : (e5.is(":hidden") ? "hide" === r4 : "show" === r4) ? (e5[r4](), i5()) : n3.call(e5[0], s4, i5);
          }
        }, show: (R = V3.fn.show, function(t4) {
          if ($3(t4))
            return R.apply(this, arguments);
          t4 = X2.apply(this, arguments);
          return t4.mode = "show", this.effect.call(this, t4);
        }), hide: (L3 = V3.fn.hide, function(t4) {
          if ($3(t4))
            return L3.apply(this, arguments);
          t4 = X2.apply(this, arguments);
          return t4.mode = "hide", this.effect.call(this, t4);
        }), toggle: (F3 = V3.fn.toggle, function(t4) {
          if ($3(t4) || "boolean" == typeof t4)
            return F3.apply(this, arguments);
          t4 = X2.apply(this, arguments);
          return t4.mode = "toggle", this.effect.call(this, t4);
        }), cssUnit: function(t4) {
          var i4 = this.css(t4), s4 = [];
          return V3.each(["em", "px", "%", "pt"], function(t5, e4) {
            0 < i4.indexOf(e4) && (s4 = [parseFloat(i4), e4]);
          }), s4;
        }, cssClip: function(t4) {
          return t4 ? this.css("clip", "rect(" + t4.top + "px " + t4.right + "px " + t4.bottom + "px " + t4.left + "px)") : G2(this.css("clip"), this);
        }, transfer: function(t4, e4) {
          var i4 = V3(this), s4 = V3(t4.to), n3 = "fixed" === s4.css("position"), o3 = V3("body"), a4 = n3 ? o3.scrollTop() : 0, r4 = n3 ? o3.scrollLeft() : 0, o3 = s4.offset(), o3 = { top: o3.top - a4, left: o3.left - r4, height: s4.innerHeight(), width: s4.innerWidth() }, s4 = i4.offset(), l4 = V3("<div class='ui-effects-transfer'></div>");
          l4.appendTo("body").addClass(t4.className).css({ top: s4.top - a4, left: s4.left - r4, height: i4.innerHeight(), width: i4.innerWidth(), position: n3 ? "fixed" : "absolute" }).animate(o3, t4.duration, t4.easing, function() {
            l4.remove(), "function" == typeof e4 && e4();
          });
        } }), V3.fx.step.clip = function(t4) {
          t4.clipInit || (t4.start = V3(t4.elem).cssClip(), "string" == typeof t4.end && (t4.end = G2(t4.end, t4.elem)), t4.clipInit = true), V3(t4.elem).cssClip({ top: t4.pos * (t4.end.top - t4.start.top) + t4.start.top, right: t4.pos * (t4.end.right - t4.start.right) + t4.start.right, bottom: t4.pos * (t4.end.bottom - t4.start.bottom) + t4.start.bottom, left: t4.pos * (t4.end.left - t4.start.left) + t4.start.left });
        }, Y = {}, V3.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(e4, t4) {
          Y[t4] = function(t5) {
            return Math.pow(t5, e4 + 2);
          };
        }), V3.extend(Y, { Sine: function(t4) {
          return 1 - Math.cos(t4 * Math.PI / 2);
        }, Circ: function(t4) {
          return 1 - Math.sqrt(1 - t4 * t4);
        }, Elastic: function(t4) {
          return 0 === t4 || 1 === t4 ? t4 : -Math.pow(2, 8 * (t4 - 1)) * Math.sin((80 * (t4 - 1) - 7.5) * Math.PI / 15);
        }, Back: function(t4) {
          return t4 * t4 * (3 * t4 - 2);
        }, Bounce: function(t4) {
          for (var e4, i4 = 4; t4 < ((e4 = Math.pow(2, --i4)) - 1) / 11; )
            ;
          return 1 / Math.pow(4, 3 - i4) - 7.5625 * Math.pow((3 * e4 - 2) / 22 - t4, 2);
        } }), V3.each(Y, function(t4, e4) {
          V3.easing["easeIn" + t4] = e4, V3.easing["easeOut" + t4] = function(t5) {
            return 1 - e4(1 - t5);
          }, V3.easing["easeInOut" + t4] = function(t5) {
            return t5 < 0.5 ? e4(2 * t5) / 2 : 1 - e4(-2 * t5 + 2) / 2;
          };
        });
        y3 = V3.effects, V3.effects.define("blind", "hide", function(t4, e4) {
          var i4 = { up: ["bottom", "top"], vertical: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], horizontal: ["right", "left"], right: ["left", "right"] }, s4 = V3(this), n3 = t4.direction || "up", o3 = s4.cssClip(), a4 = { clip: V3.extend({}, o3) }, r4 = V3.effects.createPlaceholder(s4);
          a4.clip[i4[n3][0]] = a4.clip[i4[n3][1]], "show" === t4.mode && (s4.cssClip(a4.clip), r4 && r4.css(V3.effects.clipToBox(a4)), a4.clip = o3), r4 && r4.animate(V3.effects.clipToBox(a4), t4.duration, t4.easing), s4.animate(a4, { queue: false, duration: t4.duration, easing: t4.easing, complete: e4 });
        }), V3.effects.define("bounce", function(t4, e4) {
          var i4, s4, n3 = V3(this), o3 = t4.mode, a4 = "hide" === o3, r4 = "show" === o3, l4 = t4.direction || "up", h4 = t4.distance, c4 = t4.times || 5, o3 = 2 * c4 + (r4 || a4 ? 1 : 0), u4 = t4.duration / o3, d3 = t4.easing, p4 = "up" === l4 || "down" === l4 ? "top" : "left", f4 = "up" === l4 || "left" === l4, g5 = 0, t4 = n3.queue().length;
          for (V3.effects.createPlaceholder(n3), l4 = n3.css(p4), h4 = h4 || n3["top" == p4 ? "outerHeight" : "outerWidth"]() / 3, r4 && ((s4 = { opacity: 1 })[p4] = l4, n3.css("opacity", 0).css(p4, f4 ? 2 * -h4 : 2 * h4).animate(s4, u4, d3)), a4 && (h4 /= Math.pow(2, c4 - 1)), (s4 = {})[p4] = l4; g5 < c4; g5++)
            (i4 = {})[p4] = (f4 ? "-=" : "+=") + h4, n3.animate(i4, u4, d3).animate(s4, u4, d3), h4 = a4 ? 2 * h4 : h4 / 2;
          a4 && ((i4 = { opacity: 0 })[p4] = (f4 ? "-=" : "+=") + h4, n3.animate(i4, u4, d3)), n3.queue(e4), V3.effects.unshift(n3, t4, 1 + o3);
        }), V3.effects.define("clip", "hide", function(t4, e4) {
          var i4 = {}, s4 = V3(this), n3 = t4.direction || "vertical", o3 = "both" === n3, a4 = o3 || "horizontal" === n3, o3 = o3 || "vertical" === n3, n3 = s4.cssClip();
          i4.clip = { top: o3 ? (n3.bottom - n3.top) / 2 : n3.top, right: a4 ? (n3.right - n3.left) / 2 : n3.right, bottom: o3 ? (n3.bottom - n3.top) / 2 : n3.bottom, left: a4 ? (n3.right - n3.left) / 2 : n3.left }, V3.effects.createPlaceholder(s4), "show" === t4.mode && (s4.cssClip(i4.clip), i4.clip = n3), s4.animate(i4, { queue: false, duration: t4.duration, easing: t4.easing, complete: e4 });
        }), V3.effects.define("drop", "hide", function(t4, e4) {
          var i4 = V3(this), s4 = "show" === t4.mode, n3 = t4.direction || "left", o3 = "up" === n3 || "down" === n3 ? "top" : "left", a4 = "up" === n3 || "left" === n3 ? "-=" : "+=", r4 = "+=" == a4 ? "-=" : "+=", l4 = { opacity: 0 };
          V3.effects.createPlaceholder(i4), n3 = t4.distance || i4["top" == o3 ? "outerHeight" : "outerWidth"](true) / 2, l4[o3] = a4 + n3, s4 && (i4.css(l4), l4[o3] = r4 + n3, l4.opacity = 1), i4.animate(l4, { queue: false, duration: t4.duration, easing: t4.easing, complete: e4 });
        }), V3.effects.define("explode", "hide", function(t4, e4) {
          var i4, s4, n3, o3, a4, r4, l4 = t4.pieces ? Math.round(Math.sqrt(t4.pieces)) : 3, h4 = l4, c4 = V3(this), u4 = "show" === t4.mode, d3 = c4.show().css("visibility", "hidden").offset(), p4 = Math.ceil(c4.outerWidth() / h4), f4 = Math.ceil(c4.outerHeight() / l4), g5 = [];
          function m4() {
            g5.push(this), g5.length === l4 * h4 && (c4.css({ visibility: "visible" }), V3(g5).remove(), e4());
          }
          for (i4 = 0; i4 < l4; i4++)
            for (o3 = d3.top + i4 * f4, r4 = i4 - (l4 - 1) / 2, s4 = 0; s4 < h4; s4++)
              n3 = d3.left + s4 * p4, a4 = s4 - (h4 - 1) / 2, c4.clone().appendTo("body").wrap("<div></div>").css({ position: "absolute", visibility: "visible", left: -s4 * p4, top: -i4 * f4 }).parent().addClass("ui-effects-explode").css({ position: "absolute", overflow: "hidden", width: p4, height: f4, left: n3 + (u4 ? a4 * p4 : 0), top: o3 + (u4 ? r4 * f4 : 0), opacity: u4 ? 0 : 1 }).animate({ left: n3 + (u4 ? 0 : a4 * p4), top: o3 + (u4 ? 0 : r4 * f4), opacity: u4 ? 1 : 0 }, t4.duration || 500, t4.easing, m4);
        }), V3.effects.define("fade", "toggle", function(t4, e4) {
          var i4 = "show" === t4.mode;
          V3(this).css("opacity", i4 ? 0 : 1).animate({ opacity: i4 ? 1 : 0 }, { queue: false, duration: t4.duration, easing: t4.easing, complete: e4 });
        }), V3.effects.define("fold", "hide", function(e4, t4) {
          var i4 = V3(this), s4 = e4.mode, n3 = "show" === s4, o3 = "hide" === s4, a4 = e4.size || 15, r4 = /([0-9]+)%/.exec(a4), l4 = !!e4.horizFirst ? ["right", "bottom"] : ["bottom", "right"], h4 = e4.duration / 2, c4 = V3.effects.createPlaceholder(i4), u4 = i4.cssClip(), d3 = { clip: V3.extend({}, u4) }, p4 = { clip: V3.extend({}, u4) }, f4 = [u4[l4[0]], u4[l4[1]]], s4 = i4.queue().length;
          r4 && (a4 = parseInt(r4[1], 10) / 100 * f4[o3 ? 0 : 1]), d3.clip[l4[0]] = a4, p4.clip[l4[0]] = a4, p4.clip[l4[1]] = 0, n3 && (i4.cssClip(p4.clip), c4 && c4.css(V3.effects.clipToBox(p4)), p4.clip = u4), i4.queue(function(t5) {
            c4 && c4.animate(V3.effects.clipToBox(d3), h4, e4.easing).animate(V3.effects.clipToBox(p4), h4, e4.easing), t5();
          }).animate(d3, h4, e4.easing).animate(p4, h4, e4.easing).queue(t4), V3.effects.unshift(i4, s4, 4);
        }), V3.effects.define("highlight", "show", function(t4, e4) {
          var i4 = V3(this), s4 = { backgroundColor: i4.css("backgroundColor") };
          "hide" === t4.mode && (s4.opacity = 0), V3.effects.saveStyle(i4), i4.css({ backgroundImage: "none", backgroundColor: t4.color || "#ffff99" }).animate(s4, { queue: false, duration: t4.duration, easing: t4.easing, complete: e4 });
        }), V3.effects.define("size", function(s4, e4) {
          var n3, i4 = V3(this), t4 = ["fontSize"], o3 = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], a4 = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], r4 = s4.mode, l4 = "effect" !== r4, h4 = s4.scale || "both", c4 = s4.origin || ["middle", "center"], u4 = i4.css("position"), d3 = i4.position(), p4 = V3.effects.scaledDimensions(i4), f4 = s4.from || p4, g5 = s4.to || V3.effects.scaledDimensions(i4, 0);
          V3.effects.createPlaceholder(i4), "show" === r4 && (r4 = f4, f4 = g5, g5 = r4), n3 = { from: { y: f4.height / p4.height, x: f4.width / p4.width }, to: { y: g5.height / p4.height, x: g5.width / p4.width } }, "box" !== h4 && "both" !== h4 || (n3.from.y !== n3.to.y && (f4 = V3.effects.setTransition(i4, o3, n3.from.y, f4), g5 = V3.effects.setTransition(i4, o3, n3.to.y, g5)), n3.from.x !== n3.to.x && (f4 = V3.effects.setTransition(i4, a4, n3.from.x, f4), g5 = V3.effects.setTransition(i4, a4, n3.to.x, g5))), "content" !== h4 && "both" !== h4 || n3.from.y !== n3.to.y && (f4 = V3.effects.setTransition(i4, t4, n3.from.y, f4), g5 = V3.effects.setTransition(i4, t4, n3.to.y, g5)), c4 && (c4 = V3.effects.getBaseline(c4, p4), f4.top = (p4.outerHeight - f4.outerHeight) * c4.y + d3.top, f4.left = (p4.outerWidth - f4.outerWidth) * c4.x + d3.left, g5.top = (p4.outerHeight - g5.outerHeight) * c4.y + d3.top, g5.left = (p4.outerWidth - g5.outerWidth) * c4.x + d3.left), delete f4.outerHeight, delete f4.outerWidth, i4.css(f4), "content" !== h4 && "both" !== h4 || (o3 = o3.concat(["marginTop", "marginBottom"]).concat(t4), a4 = a4.concat(["marginLeft", "marginRight"]), i4.find("*[width]").each(function() {
            var t5 = V3(this), e5 = V3.effects.scaledDimensions(t5), i5 = { height: e5.height * n3.from.y, width: e5.width * n3.from.x, outerHeight: e5.outerHeight * n3.from.y, outerWidth: e5.outerWidth * n3.from.x }, e5 = { height: e5.height * n3.to.y, width: e5.width * n3.to.x, outerHeight: e5.height * n3.to.y, outerWidth: e5.width * n3.to.x };
            n3.from.y !== n3.to.y && (i5 = V3.effects.setTransition(t5, o3, n3.from.y, i5), e5 = V3.effects.setTransition(t5, o3, n3.to.y, e5)), n3.from.x !== n3.to.x && (i5 = V3.effects.setTransition(t5, a4, n3.from.x, i5), e5 = V3.effects.setTransition(t5, a4, n3.to.x, e5)), l4 && V3.effects.saveStyle(t5), t5.css(i5), t5.animate(e5, s4.duration, s4.easing, function() {
              l4 && V3.effects.restoreStyle(t5);
            });
          })), i4.animate(g5, { queue: false, duration: s4.duration, easing: s4.easing, complete: function() {
            var t5 = i4.offset();
            0 === g5.opacity && i4.css("opacity", f4.opacity), l4 || (i4.css("position", "static" === u4 ? "relative" : u4).offset(t5), V3.effects.saveStyle(i4)), e4();
          } });
        }), V3.effects.define("scale", function(t4, e4) {
          var i4 = V3(this), s4 = t4.mode, s4 = parseInt(t4.percent, 10) || (0 === parseInt(t4.percent, 10) || "effect" !== s4 ? 0 : 100), s4 = V3.extend(true, { from: V3.effects.scaledDimensions(i4), to: V3.effects.scaledDimensions(i4, s4, t4.direction || "both"), origin: t4.origin || ["middle", "center"] }, t4);
          t4.fade && (s4.from.opacity = 1, s4.to.opacity = 0), V3.effects.effect.size.call(this, s4, e4);
        }), V3.effects.define("puff", "hide", function(t4, e4) {
          t4 = V3.extend(true, {}, t4, { fade: true, percent: parseInt(t4.percent, 10) || 150 });
          V3.effects.effect.scale.call(this, t4, e4);
        }), V3.effects.define("pulsate", "show", function(t4, e4) {
          var i4 = V3(this), s4 = t4.mode, n3 = "show" === s4, o3 = 2 * (t4.times || 5) + (n3 || "hide" === s4 ? 1 : 0), a4 = t4.duration / o3, r4 = 0, l4 = 1, s4 = i4.queue().length;
          for (!n3 && i4.is(":visible") || (i4.css("opacity", 0).show(), r4 = 1); l4 < o3; l4++)
            i4.animate({ opacity: r4 }, a4, t4.easing), r4 = 1 - r4;
          i4.animate({ opacity: r4 }, a4, t4.easing), i4.queue(e4), V3.effects.unshift(i4, s4, 1 + o3);
        }), V3.effects.define("shake", function(t4, e4) {
          var i4 = 1, s4 = V3(this), n3 = t4.direction || "left", o3 = t4.distance || 20, a4 = t4.times || 3, r4 = 2 * a4 + 1, l4 = Math.round(t4.duration / r4), h4 = "up" === n3 || "down" === n3 ? "top" : "left", c4 = "up" === n3 || "left" === n3, u4 = {}, d3 = {}, p4 = {}, n3 = s4.queue().length;
          for (V3.effects.createPlaceholder(s4), u4[h4] = (c4 ? "-=" : "+=") + o3, d3[h4] = (c4 ? "+=" : "-=") + 2 * o3, p4[h4] = (c4 ? "-=" : "+=") + 2 * o3, s4.animate(u4, l4, t4.easing); i4 < a4; i4++)
            s4.animate(d3, l4, t4.easing).animate(p4, l4, t4.easing);
          s4.animate(d3, l4, t4.easing).animate(u4, l4 / 2, t4.easing).queue(e4), V3.effects.unshift(s4, n3, 1 + r4);
        }), V3.effects.define("slide", "show", function(t4, e4) {
          var i4, s4, n3 = V3(this), o3 = { up: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], right: ["left", "right"] }, a4 = t4.mode, r4 = t4.direction || "left", l4 = "up" === r4 || "down" === r4 ? "top" : "left", h4 = "up" === r4 || "left" === r4, c4 = t4.distance || n3["top" == l4 ? "outerHeight" : "outerWidth"](true), u4 = {};
          V3.effects.createPlaceholder(n3), i4 = n3.cssClip(), s4 = n3.position()[l4], u4[l4] = (h4 ? -1 : 1) * c4 + s4, u4.clip = n3.cssClip(), u4.clip[o3[r4][1]] = u4.clip[o3[r4][0]], "show" === a4 && (n3.cssClip(u4.clip), n3.css(l4, u4[l4]), u4.clip = i4, u4[l4] = s4), n3.animate(u4, { queue: false, duration: t4.duration, easing: t4.easing, complete: e4 });
        }), y3 = false !== V3.uiBackCompat ? V3.effects.define("transfer", function(t4, e4) {
          V3(this).transfer(t4, e4);
        }) : y3;
        V3.ui.focusable = function(t4, e4) {
          var i4, s4, n3, o3, a4 = t4.nodeName.toLowerCase();
          return "area" === a4 ? (s4 = (i4 = t4.parentNode).name, !(!t4.href || !s4 || "map" !== i4.nodeName.toLowerCase()) && (0 < (s4 = V3("img[usemap='#" + s4 + "']")).length && s4.is(":visible"))) : (/^(input|select|textarea|button|object)$/.test(a4) ? (n3 = !t4.disabled) && (o3 = V3(t4).closest("fieldset")[0]) && (n3 = !o3.disabled) : n3 = "a" === a4 && t4.href || e4, n3 && V3(t4).is(":visible") && function(t5) {
            var e5 = t5.css("visibility");
            for (; "inherit" === e5; )
              t5 = t5.parent(), e5 = t5.css("visibility");
            return "visible" === e5;
          }(V3(t4)));
        }, V3.extend(V3.expr.pseudos, { focusable: function(t4) {
          return V3.ui.focusable(t4, null != V3.attr(t4, "tabindex"));
        } });
        var Q2, J2;
        V3.ui.focusable, V3.fn._form = function() {
          return "string" == typeof this[0].form ? this.closest("form") : V3(this[0].form);
        }, V3.ui.formResetMixin = { _formResetHandler: function() {
          var e4 = V3(this);
          setTimeout(function() {
            var t4 = e4.data("ui-form-reset-instances");
            V3.each(t4, function() {
              this.refresh();
            });
          });
        }, _bindFormResetHandler: function() {
          var t4;
          this.form = this.element._form(), this.form.length && ((t4 = this.form.data("ui-form-reset-instances") || []).length || this.form.on("reset.ui-form-reset", this._formResetHandler), t4.push(this), this.form.data("ui-form-reset-instances", t4));
        }, _unbindFormResetHandler: function() {
          var t4;
          this.form.length && ((t4 = this.form.data("ui-form-reset-instances")).splice(V3.inArray(this, t4), 1), t4.length ? this.form.data("ui-form-reset-instances", t4) : this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset"));
        } };
        V3.expr.pseudos || (V3.expr.pseudos = V3.expr[":"]), V3.uniqueSort || (V3.uniqueSort = V3.unique), V3.escapeSelector || (Q2 = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, J2 = function(t4, e4) {
          return e4 ? "\0" === t4 ? "\uFFFD" : t4.slice(0, -1) + "\\" + t4.charCodeAt(t4.length - 1).toString(16) + " " : "\\" + t4;
        }, V3.escapeSelector = function(t4) {
          return (t4 + "").replace(Q2, J2);
        }), V3.fn.even && V3.fn.odd || V3.fn.extend({ even: function() {
          return this.filter(function(t4) {
            return t4 % 2 == 0;
          });
        }, odd: function() {
          return this.filter(function(t4) {
            return t4 % 2 == 1;
          });
        } });
        var Z2;
        V3.ui.keyCode = { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 }, V3.fn.labels = function() {
          var t4, e4, i4;
          return this.length ? this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (e4 = this.eq(0).parents("label"), (t4 = this.attr("id")) && (i4 = (i4 = this.eq(0).parents().last()).add((i4.length ? i4 : this).siblings()), t4 = "label[for='" + V3.escapeSelector(t4) + "']", e4 = e4.add(i4.find(t4).addBack(t4))), this.pushStack(e4)) : this.pushStack([]);
        }, V3.fn.scrollParent = function(t4) {
          var e4 = this.css("position"), i4 = "absolute" === e4, s4 = t4 ? /(auto|scroll|hidden)/ : /(auto|scroll)/, t4 = this.parents().filter(function() {
            var t5 = V3(this);
            return (!i4 || "static" !== t5.css("position")) && s4.test(t5.css("overflow") + t5.css("overflow-y") + t5.css("overflow-x"));
          }).eq(0);
          return "fixed" !== e4 && t4.length ? t4 : V3(this[0].ownerDocument || document);
        }, V3.extend(V3.expr.pseudos, { tabbable: function(t4) {
          var e4 = V3.attr(t4, "tabindex"), i4 = null != e4;
          return (!i4 || 0 <= e4) && V3.ui.focusable(t4, i4);
        } }), V3.fn.extend({ uniqueId: (Z2 = 0, function() {
          return this.each(function() {
            this.id || (this.id = "ui-id-" + ++Z2);
          });
        }), removeUniqueId: function() {
          return this.each(function() {
            /^ui-id-\d+$/.test(this.id) && V3(this).removeAttr("id");
          });
        } }), V3.widget("ui.accordion", { version: "1.13.2", options: { active: 0, animate: {}, classes: { "ui-accordion-header": "ui-corner-top", "ui-accordion-header-collapsed": "ui-corner-all", "ui-accordion-content": "ui-corner-bottom" }, collapsible: false, event: "click", header: function(t4) {
          return t4.find("> li > :first-child").add(t4.find("> :not(li)").even());
        }, heightStyle: "auto", icons: { activeHeader: "ui-icon-triangle-1-s", header: "ui-icon-triangle-1-e" }, activate: null, beforeActivate: null }, hideProps: { borderTopWidth: "hide", borderBottomWidth: "hide", paddingTop: "hide", paddingBottom: "hide", height: "hide" }, showProps: { borderTopWidth: "show", borderBottomWidth: "show", paddingTop: "show", paddingBottom: "show", height: "show" }, _create: function() {
          var t4 = this.options;
          this.prevShow = this.prevHide = V3(), this._addClass("ui-accordion", "ui-widget ui-helper-reset"), this.element.attr("role", "tablist"), t4.collapsible || false !== t4.active && null != t4.active || (t4.active = 0), this._processPanels(), t4.active < 0 && (t4.active += this.headers.length), this._refresh();
        }, _getCreateEventData: function() {
          return { header: this.active, panel: this.active.length ? this.active.next() : V3() };
        }, _createIcons: function() {
          var t4, e4 = this.options.icons;
          e4 && (t4 = V3("<span>"), this._addClass(t4, "ui-accordion-header-icon", "ui-icon " + e4.header), t4.prependTo(this.headers), t4 = this.active.children(".ui-accordion-header-icon"), this._removeClass(t4, e4.header)._addClass(t4, null, e4.activeHeader)._addClass(this.headers, "ui-accordion-icons"));
        }, _destroyIcons: function() {
          this._removeClass(this.headers, "ui-accordion-icons"), this.headers.children(".ui-accordion-header-icon").remove();
        }, _destroy: function() {
          var t4;
          this.element.removeAttr("role"), this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(), this._destroyIcons(), t4 = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(), "content" !== this.options.heightStyle && t4.css("height", "");
        }, _setOption: function(t4, e4) {
          "active" !== t4 ? ("event" === t4 && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(e4)), this._super(t4, e4), "collapsible" !== t4 || e4 || false !== this.options.active || this._activate(0), "icons" === t4 && (this._destroyIcons(), e4 && this._createIcons())) : this._activate(e4);
        }, _setOptionDisabled: function(t4) {
          this._super(t4), this.element.attr("aria-disabled", t4), this._toggleClass(null, "ui-state-disabled", !!t4), this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!t4);
        }, _keydown: function(t4) {
          if (!t4.altKey && !t4.ctrlKey) {
            var e4 = V3.ui.keyCode, i4 = this.headers.length, s4 = this.headers.index(t4.target), n3 = false;
            switch (t4.keyCode) {
              case e4.RIGHT:
              case e4.DOWN:
                n3 = this.headers[(s4 + 1) % i4];
                break;
              case e4.LEFT:
              case e4.UP:
                n3 = this.headers[(s4 - 1 + i4) % i4];
                break;
              case e4.SPACE:
              case e4.ENTER:
                this._eventHandler(t4);
                break;
              case e4.HOME:
                n3 = this.headers[0];
                break;
              case e4.END:
                n3 = this.headers[i4 - 1];
            }
            n3 && (V3(t4.target).attr("tabIndex", -1), V3(n3).attr("tabIndex", 0), V3(n3).trigger("focus"), t4.preventDefault());
          }
        }, _panelKeyDown: function(t4) {
          t4.keyCode === V3.ui.keyCode.UP && t4.ctrlKey && V3(t4.currentTarget).prev().trigger("focus");
        }, refresh: function() {
          var t4 = this.options;
          this._processPanels(), false === t4.active && true === t4.collapsible || !this.headers.length ? (t4.active = false, this.active = V3()) : false === t4.active ? this._activate(0) : this.active.length && !V3.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (t4.active = false, this.active = V3()) : this._activate(Math.max(0, t4.active - 1)) : t4.active = this.headers.index(this.active), this._destroyIcons(), this._refresh();
        }, _processPanels: function() {
          var t4 = this.headers, e4 = this.panels;
          "function" == typeof this.options.header ? this.headers = this.options.header(this.element) : this.headers = this.element.find(this.options.header), this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default"), this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide(), this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content"), e4 && (this._off(t4.not(this.headers)), this._off(e4.not(this.panels)));
        }, _refresh: function() {
          var i4, t4 = this.options, e4 = t4.heightStyle, s4 = this.element.parent();
          this.active = this._findActive(t4.active), this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed"), this._addClass(this.active.next(), "ui-accordion-content-active"), this.active.next().show(), this.headers.attr("role", "tab").each(function() {
            var t5 = V3(this), e5 = t5.uniqueId().attr("id"), i5 = t5.next(), s5 = i5.uniqueId().attr("id");
            t5.attr("aria-controls", s5), i5.attr("aria-labelledby", e5);
          }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({ "aria-selected": "false", "aria-expanded": "false", tabIndex: -1 }).next().attr({ "aria-hidden": "true" }).hide(), this.active.length ? this.active.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }).next().attr({ "aria-hidden": "false" }) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(t4.event), "fill" === e4 ? (i4 = s4.height(), this.element.siblings(":visible").each(function() {
            var t5 = V3(this), e5 = t5.css("position");
            "absolute" !== e5 && "fixed" !== e5 && (i4 -= t5.outerHeight(true));
          }), this.headers.each(function() {
            i4 -= V3(this).outerHeight(true);
          }), this.headers.next().each(function() {
            V3(this).height(Math.max(0, i4 - V3(this).innerHeight() + V3(this).height()));
          }).css("overflow", "auto")) : "auto" === e4 && (i4 = 0, this.headers.next().each(function() {
            var t5 = V3(this).is(":visible");
            t5 || V3(this).show(), i4 = Math.max(i4, V3(this).css("height", "").height()), t5 || V3(this).hide();
          }).height(i4));
        }, _activate: function(t4) {
          t4 = this._findActive(t4)[0];
          t4 !== this.active[0] && (t4 = t4 || this.active[0], this._eventHandler({ target: t4, currentTarget: t4, preventDefault: V3.noop }));
        }, _findActive: function(t4) {
          return "number" == typeof t4 ? this.headers.eq(t4) : V3();
        }, _setupEvents: function(t4) {
          var i4 = { keydown: "_keydown" };
          t4 && V3.each(t4.split(" "), function(t5, e4) {
            i4[e4] = "_eventHandler";
          }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, i4), this._on(this.headers.next(), { keydown: "_panelKeyDown" }), this._hoverable(this.headers), this._focusable(this.headers);
        }, _eventHandler: function(t4) {
          var e4 = this.options, i4 = this.active, s4 = V3(t4.currentTarget), n3 = s4[0] === i4[0], o3 = n3 && e4.collapsible, a4 = o3 ? V3() : s4.next(), r4 = i4.next(), a4 = { oldHeader: i4, oldPanel: r4, newHeader: o3 ? V3() : s4, newPanel: a4 };
          t4.preventDefault(), n3 && !e4.collapsible || false === this._trigger("beforeActivate", t4, a4) || (e4.active = !o3 && this.headers.index(s4), this.active = n3 ? V3() : s4, this._toggle(a4), this._removeClass(i4, "ui-accordion-header-active", "ui-state-active"), e4.icons && (i4 = i4.children(".ui-accordion-header-icon"), this._removeClass(i4, null, e4.icons.activeHeader)._addClass(i4, null, e4.icons.header)), n3 || (this._removeClass(s4, "ui-accordion-header-collapsed")._addClass(s4, "ui-accordion-header-active", "ui-state-active"), e4.icons && (n3 = s4.children(".ui-accordion-header-icon"), this._removeClass(n3, null, e4.icons.header)._addClass(n3, null, e4.icons.activeHeader)), this._addClass(s4.next(), "ui-accordion-content-active")));
        }, _toggle: function(t4) {
          var e4 = t4.newPanel, i4 = this.prevShow.length ? this.prevShow : t4.oldPanel;
          this.prevShow.add(this.prevHide).stop(true, true), this.prevShow = e4, this.prevHide = i4, this.options.animate ? this._animate(e4, i4, t4) : (i4.hide(), e4.show(), this._toggleComplete(t4)), i4.attr({ "aria-hidden": "true" }), i4.prev().attr({ "aria-selected": "false", "aria-expanded": "false" }), e4.length && i4.length ? i4.prev().attr({ tabIndex: -1, "aria-expanded": "false" }) : e4.length && this.headers.filter(function() {
            return 0 === parseInt(V3(this).attr("tabIndex"), 10);
          }).attr("tabIndex", -1), e4.attr("aria-hidden", "false").prev().attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 });
        }, _animate: function(t4, i4, e4) {
          var s4, n3, o3, a4 = this, r4 = 0, l4 = t4.css("box-sizing"), h4 = t4.length && (!i4.length || t4.index() < i4.index()), c4 = this.options.animate || {}, u4 = h4 && c4.down || c4, h4 = function() {
            a4._toggleComplete(e4);
          };
          return n3 = (n3 = "string" == typeof u4 ? u4 : n3) || u4.easing || c4.easing, o3 = (o3 = "number" == typeof u4 ? u4 : o3) || u4.duration || c4.duration, i4.length ? t4.length ? (s4 = t4.show().outerHeight(), i4.animate(this.hideProps, { duration: o3, easing: n3, step: function(t5, e5) {
            e5.now = Math.round(t5);
          } }), void t4.hide().animate(this.showProps, { duration: o3, easing: n3, complete: h4, step: function(t5, e5) {
            e5.now = Math.round(t5), "height" !== e5.prop ? "content-box" === l4 && (r4 += e5.now) : "content" !== a4.options.heightStyle && (e5.now = Math.round(s4 - i4.outerHeight() - r4), r4 = 0);
          } })) : i4.animate(this.hideProps, o3, n3, h4) : t4.animate(this.showProps, o3, n3, h4);
        }, _toggleComplete: function(t4) {
          var e4 = t4.oldPanel, i4 = e4.prev();
          this._removeClass(e4, "ui-accordion-content-active"), this._removeClass(i4, "ui-accordion-header-active")._addClass(i4, "ui-accordion-header-collapsed"), e4.length && (e4.parent()[0].className = e4.parent()[0].className), this._trigger("activate", null, t4);
        } }), V3.ui.safeActiveElement = function(e4) {
          var i4;
          try {
            i4 = e4.activeElement;
          } catch (t4) {
            i4 = e4.body;
          }
          return i4 = !(i4 = i4 || e4.body).nodeName ? e4.body : i4;
        }, V3.widget("ui.menu", { version: "1.13.2", defaultElement: "<ul>", delay: 300, options: { icons: { submenu: "ui-icon-caret-1-e" }, items: "> *", menus: "ul", position: { my: "left top", at: "right top" }, role: "menu", blur: null, focus: null, select: null }, _create: function() {
          this.activeMenu = this.element, this.mouseHandled = false, this.lastMousePosition = { x: null, y: null }, this.element.uniqueId().attr({ role: this.options.role, tabIndex: 0 }), this._addClass("ui-menu", "ui-widget ui-widget-content"), this._on({ "mousedown .ui-menu-item": function(t4) {
            t4.preventDefault(), this._activateItem(t4);
          }, "click .ui-menu-item": function(t4) {
            var e4 = V3(t4.target), i4 = V3(V3.ui.safeActiveElement(this.document[0]));
            !this.mouseHandled && e4.not(".ui-state-disabled").length && (this.select(t4), t4.isPropagationStopped() || (this.mouseHandled = true), e4.has(".ui-menu").length ? this.expand(t4) : !this.element.is(":focus") && i4.closest(".ui-menu").length && (this.element.trigger("focus", [true]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)));
          }, "mouseenter .ui-menu-item": "_activateItem", "mousemove .ui-menu-item": "_activateItem", mouseleave: "collapseAll", "mouseleave .ui-menu": "collapseAll", focus: function(t4, e4) {
            var i4 = this.active || this._menuItems().first();
            e4 || this.focus(t4, i4);
          }, blur: function(t4) {
            this._delay(function() {
              V3.contains(this.element[0], V3.ui.safeActiveElement(this.document[0])) || this.collapseAll(t4);
            });
          }, keydown: "_keydown" }), this.refresh(), this._on(this.document, { click: function(t4) {
            this._closeOnDocumentClick(t4) && this.collapseAll(t4, true), this.mouseHandled = false;
          } });
        }, _activateItem: function(t4) {
          var e4, i4;
          this.previousFilter || t4.clientX === this.lastMousePosition.x && t4.clientY === this.lastMousePosition.y || (this.lastMousePosition = { x: t4.clientX, y: t4.clientY }, e4 = V3(t4.target).closest(".ui-menu-item"), i4 = V3(t4.currentTarget), e4[0] === i4[0] && (i4.is(".ui-state-active") || (this._removeClass(i4.siblings().children(".ui-state-active"), null, "ui-state-active"), this.focus(t4, i4))));
        }, _destroy: function() {
          var t4 = this.element.find(".ui-menu-item").removeAttr("role aria-disabled").children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");
          this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(), t4.children().each(function() {
            var t5 = V3(this);
            t5.data("ui-menu-submenu-caret") && t5.remove();
          });
        }, _keydown: function(t4) {
          var e4, i4, s4, n3 = true;
          switch (t4.keyCode) {
            case V3.ui.keyCode.PAGE_UP:
              this.previousPage(t4);
              break;
            case V3.ui.keyCode.PAGE_DOWN:
              this.nextPage(t4);
              break;
            case V3.ui.keyCode.HOME:
              this._move("first", "first", t4);
              break;
            case V3.ui.keyCode.END:
              this._move("last", "last", t4);
              break;
            case V3.ui.keyCode.UP:
              this.previous(t4);
              break;
            case V3.ui.keyCode.DOWN:
              this.next(t4);
              break;
            case V3.ui.keyCode.LEFT:
              this.collapse(t4);
              break;
            case V3.ui.keyCode.RIGHT:
              this.active && !this.active.is(".ui-state-disabled") && this.expand(t4);
              break;
            case V3.ui.keyCode.ENTER:
            case V3.ui.keyCode.SPACE:
              this._activate(t4);
              break;
            case V3.ui.keyCode.ESCAPE:
              this.collapse(t4);
              break;
            default:
              e4 = this.previousFilter || "", s4 = n3 = false, i4 = 96 <= t4.keyCode && t4.keyCode <= 105 ? (t4.keyCode - 96).toString() : String.fromCharCode(t4.keyCode), clearTimeout(this.filterTimer), i4 === e4 ? s4 = true : i4 = e4 + i4, e4 = this._filterMenuItems(i4), (e4 = s4 && -1 !== e4.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : e4).length || (i4 = String.fromCharCode(t4.keyCode), e4 = this._filterMenuItems(i4)), e4.length ? (this.focus(t4, e4), this.previousFilter = i4, this.filterTimer = this._delay(function() {
                delete this.previousFilter;
              }, 1e3)) : delete this.previousFilter;
          }
          n3 && t4.preventDefault();
        }, _activate: function(t4) {
          this.active && !this.active.is(".ui-state-disabled") && (this.active.children("[aria-haspopup='true']").length ? this.expand(t4) : this.select(t4));
        }, refresh: function() {
          var t4, e4, s4 = this, n3 = this.options.icons.submenu, i4 = this.element.find(this.options.menus);
          this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length), e4 = i4.filter(":not(.ui-menu)").hide().attr({ role: this.options.role, "aria-hidden": "true", "aria-expanded": "false" }).each(function() {
            var t5 = V3(this), e5 = t5.prev(), i5 = V3("<span>").data("ui-menu-submenu-caret", true);
            s4._addClass(i5, "ui-menu-icon", "ui-icon " + n3), e5.attr("aria-haspopup", "true").prepend(i5), t5.attr("aria-labelledby", e5.attr("id"));
          }), this._addClass(e4, "ui-menu", "ui-widget ui-widget-content ui-front"), (t4 = i4.add(this.element).find(this.options.items)).not(".ui-menu-item").each(function() {
            var t5 = V3(this);
            s4._isDivider(t5) && s4._addClass(t5, "ui-menu-divider", "ui-widget-content");
          }), i4 = (e4 = t4.not(".ui-menu-item, .ui-menu-divider")).children().not(".ui-menu").uniqueId().attr({ tabIndex: -1, role: this._itemRole() }), this._addClass(e4, "ui-menu-item")._addClass(i4, "ui-menu-item-wrapper"), t4.filter(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !V3.contains(this.element[0], this.active[0]) && this.blur();
        }, _itemRole: function() {
          return { menu: "menuitem", listbox: "option" }[this.options.role];
        }, _setOption: function(t4, e4) {
          var i4;
          "icons" === t4 && (i4 = this.element.find(".ui-menu-icon"), this._removeClass(i4, null, this.options.icons.submenu)._addClass(i4, null, e4.submenu)), this._super(t4, e4);
        }, _setOptionDisabled: function(t4) {
          this._super(t4), this.element.attr("aria-disabled", String(t4)), this._toggleClass(null, "ui-state-disabled", !!t4);
        }, focus: function(t4, e4) {
          var i4;
          this.blur(t4, t4 && "focus" === t4.type), this._scrollIntoView(e4), this.active = e4.first(), i4 = this.active.children(".ui-menu-item-wrapper"), this._addClass(i4, null, "ui-state-active"), this.options.role && this.element.attr("aria-activedescendant", i4.attr("id")), i4 = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"), this._addClass(i4, null, "ui-state-active"), t4 && "keydown" === t4.type ? this._close() : this.timer = this._delay(function() {
            this._close();
          }, this.delay), (i4 = e4.children(".ui-menu")).length && t4 && /^mouse/.test(t4.type) && this._startOpening(i4), this.activeMenu = e4.parent(), this._trigger("focus", t4, { item: e4 });
        }, _scrollIntoView: function(t4) {
          var e4, i4, s4;
          this._hasScroll() && (i4 = parseFloat(V3.css(this.activeMenu[0], "borderTopWidth")) || 0, s4 = parseFloat(V3.css(this.activeMenu[0], "paddingTop")) || 0, e4 = t4.offset().top - this.activeMenu.offset().top - i4 - s4, i4 = this.activeMenu.scrollTop(), s4 = this.activeMenu.height(), t4 = t4.outerHeight(), e4 < 0 ? this.activeMenu.scrollTop(i4 + e4) : s4 < e4 + t4 && this.activeMenu.scrollTop(i4 + e4 - s4 + t4));
        }, blur: function(t4, e4) {
          e4 || clearTimeout(this.timer), this.active && (this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active"), this._trigger("blur", t4, { item: this.active }), this.active = null);
        }, _startOpening: function(t4) {
          clearTimeout(this.timer), "true" === t4.attr("aria-hidden") && (this.timer = this._delay(function() {
            this._close(), this._open(t4);
          }, this.delay));
        }, _open: function(t4) {
          var e4 = V3.extend({ of: this.active }, this.options.position);
          clearTimeout(this.timer), this.element.find(".ui-menu").not(t4.parents(".ui-menu")).hide().attr("aria-hidden", "true"), t4.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(e4);
        }, collapseAll: function(e4, i4) {
          clearTimeout(this.timer), this.timer = this._delay(function() {
            var t4 = i4 ? this.element : V3(e4 && e4.target).closest(this.element.find(".ui-menu"));
            t4.length || (t4 = this.element), this._close(t4), this.blur(e4), this._removeClass(t4.find(".ui-state-active"), null, "ui-state-active"), this.activeMenu = t4;
          }, i4 ? 0 : this.delay);
        }, _close: function(t4) {
          (t4 = t4 || (this.active ? this.active.parent() : this.element)).find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false");
        }, _closeOnDocumentClick: function(t4) {
          return !V3(t4.target).closest(".ui-menu").length;
        }, _isDivider: function(t4) {
          return !/[^\-\u2014\u2013\s]/.test(t4.text());
        }, collapse: function(t4) {
          var e4 = this.active && this.active.parent().closest(".ui-menu-item", this.element);
          e4 && e4.length && (this._close(), this.focus(t4, e4));
        }, expand: function(t4) {
          var e4 = this.active && this._menuItems(this.active.children(".ui-menu")).first();
          e4 && e4.length && (this._open(e4.parent()), this._delay(function() {
            this.focus(t4, e4);
          }));
        }, next: function(t4) {
          this._move("next", "first", t4);
        }, previous: function(t4) {
          this._move("prev", "last", t4);
        }, isFirstItem: function() {
          return this.active && !this.active.prevAll(".ui-menu-item").length;
        }, isLastItem: function() {
          return this.active && !this.active.nextAll(".ui-menu-item").length;
        }, _menuItems: function(t4) {
          return (t4 || this.element).find(this.options.items).filter(".ui-menu-item");
        }, _move: function(t4, e4, i4) {
          var s4;
          (s4 = this.active ? "first" === t4 || "last" === t4 ? this.active["first" === t4 ? "prevAll" : "nextAll"](".ui-menu-item").last() : this.active[t4 + "All"](".ui-menu-item").first() : s4) && s4.length && this.active || (s4 = this._menuItems(this.activeMenu)[e4]()), this.focus(i4, s4);
        }, nextPage: function(t4) {
          var e4, i4, s4;
          this.active ? this.isLastItem() || (this._hasScroll() ? (i4 = this.active.offset().top, s4 = this.element.innerHeight(), 0 === V3.fn.jquery.indexOf("3.2.") && (s4 += this.element[0].offsetHeight - this.element.outerHeight()), this.active.nextAll(".ui-menu-item").each(function() {
            return (e4 = V3(this)).offset().top - i4 - s4 < 0;
          }), this.focus(t4, e4)) : this.focus(t4, this._menuItems(this.activeMenu)[this.active ? "last" : "first"]())) : this.next(t4);
        }, previousPage: function(t4) {
          var e4, i4, s4;
          this.active ? this.isFirstItem() || (this._hasScroll() ? (i4 = this.active.offset().top, s4 = this.element.innerHeight(), 0 === V3.fn.jquery.indexOf("3.2.") && (s4 += this.element[0].offsetHeight - this.element.outerHeight()), this.active.prevAll(".ui-menu-item").each(function() {
            return 0 < (e4 = V3(this)).offset().top - i4 + s4;
          }), this.focus(t4, e4)) : this.focus(t4, this._menuItems(this.activeMenu).first())) : this.next(t4);
        }, _hasScroll: function() {
          return this.element.outerHeight() < this.element.prop("scrollHeight");
        }, select: function(t4) {
          this.active = this.active || V3(t4.target).closest(".ui-menu-item");
          var e4 = { item: this.active };
          this.active.has(".ui-menu").length || this.collapseAll(t4, true), this._trigger("select", t4, e4);
        }, _filterMenuItems: function(t4) {
          var t4 = t4.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), e4 = new RegExp("^" + t4, "i");
          return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function() {
            return e4.test(String.prototype.trim.call(V3(this).children(".ui-menu-item-wrapper").text()));
          });
        } });
        V3.widget("ui.autocomplete", { version: "1.13.2", defaultElement: "<input>", options: { appendTo: null, autoFocus: false, delay: 300, minLength: 1, position: { my: "left top", at: "left bottom", collision: "none" }, source: null, change: null, close: null, focus: null, open: null, response: null, search: null, select: null }, requestIndex: 0, pending: 0, liveRegionTimer: null, _create: function() {
          var i4, s4, n3, t4 = this.element[0].nodeName.toLowerCase(), e4 = "textarea" === t4, t4 = "input" === t4;
          this.isMultiLine = e4 || !t4 && this._isContentEditable(this.element), this.valueMethod = this.element[e4 || t4 ? "val" : "text"], this.isNewMenu = true, this._addClass("ui-autocomplete-input"), this.element.attr("autocomplete", "off"), this._on(this.element, { keydown: function(t5) {
            if (this.element.prop("readOnly"))
              s4 = n3 = i4 = true;
            else {
              s4 = n3 = i4 = false;
              var e5 = V3.ui.keyCode;
              switch (t5.keyCode) {
                case e5.PAGE_UP:
                  i4 = true, this._move("previousPage", t5);
                  break;
                case e5.PAGE_DOWN:
                  i4 = true, this._move("nextPage", t5);
                  break;
                case e5.UP:
                  i4 = true, this._keyEvent("previous", t5);
                  break;
                case e5.DOWN:
                  i4 = true, this._keyEvent("next", t5);
                  break;
                case e5.ENTER:
                  this.menu.active && (i4 = true, t5.preventDefault(), this.menu.select(t5));
                  break;
                case e5.TAB:
                  this.menu.active && this.menu.select(t5);
                  break;
                case e5.ESCAPE:
                  this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(t5), t5.preventDefault());
                  break;
                default:
                  s4 = true, this._searchTimeout(t5);
              }
            }
          }, keypress: function(t5) {
            if (i4)
              return i4 = false, void (this.isMultiLine && !this.menu.element.is(":visible") || t5.preventDefault());
            if (!s4) {
              var e5 = V3.ui.keyCode;
              switch (t5.keyCode) {
                case e5.PAGE_UP:
                  this._move("previousPage", t5);
                  break;
                case e5.PAGE_DOWN:
                  this._move("nextPage", t5);
                  break;
                case e5.UP:
                  this._keyEvent("previous", t5);
                  break;
                case e5.DOWN:
                  this._keyEvent("next", t5);
              }
            }
          }, input: function(t5) {
            if (n3)
              return n3 = false, void t5.preventDefault();
            this._searchTimeout(t5);
          }, focus: function() {
            this.selectedItem = null, this.previous = this._value();
          }, blur: function(t5) {
            clearTimeout(this.searching), this.close(t5), this._change(t5);
          } }), this._initSource(), this.menu = V3("<ul>").appendTo(this._appendTo()).menu({ role: null }).hide().attr({ unselectable: "on" }).menu("instance"), this._addClass(this.menu.element, "ui-autocomplete", "ui-front"), this._on(this.menu.element, { mousedown: function(t5) {
            t5.preventDefault();
          }, menufocus: function(t5, e5) {
            var i5, s5;
            if (this.isNewMenu && (this.isNewMenu = false, t5.originalEvent && /^mouse/.test(t5.originalEvent.type)))
              return this.menu.blur(), void this.document.one("mousemove", function() {
                V3(t5.target).trigger(t5.originalEvent);
              });
            s5 = e5.item.data("ui-autocomplete-item"), false !== this._trigger("focus", t5, { item: s5 }) && t5.originalEvent && /^key/.test(t5.originalEvent.type) && this._value(s5.value), (i5 = e5.item.attr("aria-label") || s5.value) && String.prototype.trim.call(i5).length && (clearTimeout(this.liveRegionTimer), this.liveRegionTimer = this._delay(function() {
              this.liveRegion.html(V3("<div>").text(i5));
            }, 100));
          }, menuselect: function(t5, e5) {
            var i5 = e5.item.data("ui-autocomplete-item"), s5 = this.previous;
            this.element[0] !== V3.ui.safeActiveElement(this.document[0]) && (this.element.trigger("focus"), this.previous = s5, this._delay(function() {
              this.previous = s5, this.selectedItem = i5;
            })), false !== this._trigger("select", t5, { item: i5 }) && this._value(i5.value), this.term = this._value(), this.close(t5), this.selectedItem = i5;
          } }), this.liveRegion = V3("<div>", { role: "status", "aria-live": "assertive", "aria-relevant": "additions" }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"), this._on(this.window, { beforeunload: function() {
            this.element.removeAttr("autocomplete");
          } });
        }, _destroy: function() {
          clearTimeout(this.searching), this.element.removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove();
        }, _setOption: function(t4, e4) {
          this._super(t4, e4), "source" === t4 && this._initSource(), "appendTo" === t4 && this.menu.element.appendTo(this._appendTo()), "disabled" === t4 && e4 && this.xhr && this.xhr.abort();
        }, _isEventTargetInWidget: function(t4) {
          var e4 = this.menu.element[0];
          return t4.target === this.element[0] || t4.target === e4 || V3.contains(e4, t4.target);
        }, _closeOnClickOutside: function(t4) {
          this._isEventTargetInWidget(t4) || this.close();
        }, _appendTo: function() {
          var t4 = this.options.appendTo;
          return t4 = !(t4 = !(t4 = t4 && (t4.jquery || t4.nodeType ? V3(t4) : this.document.find(t4).eq(0))) || !t4[0] ? this.element.closest(".ui-front, dialog") : t4).length ? this.document[0].body : t4;
        }, _initSource: function() {
          var i4, s4, n3 = this;
          Array.isArray(this.options.source) ? (i4 = this.options.source, this.source = function(t4, e4) {
            e4(V3.ui.autocomplete.filter(i4, t4.term));
          }) : "string" == typeof this.options.source ? (s4 = this.options.source, this.source = function(t4, e4) {
            n3.xhr && n3.xhr.abort(), n3.xhr = V3.ajax({ url: s4, data: t4, dataType: "json", success: function(t5) {
              e4(t5);
            }, error: function() {
              e4([]);
            } });
          }) : this.source = this.options.source;
        }, _searchTimeout: function(s4) {
          clearTimeout(this.searching), this.searching = this._delay(function() {
            var t4 = this.term === this._value(), e4 = this.menu.element.is(":visible"), i4 = s4.altKey || s4.ctrlKey || s4.metaKey || s4.shiftKey;
            t4 && (e4 || i4) || (this.selectedItem = null, this.search(null, s4));
          }, this.options.delay);
        }, search: function(t4, e4) {
          return t4 = null != t4 ? t4 : this._value(), this.term = this._value(), t4.length < this.options.minLength ? this.close(e4) : false !== this._trigger("search", e4) ? this._search(t4) : void 0;
        }, _search: function(t4) {
          this.pending++, this._addClass("ui-autocomplete-loading"), this.cancelSearch = false, this.source({ term: t4 }, this._response());
        }, _response: function() {
          var e4 = ++this.requestIndex;
          return function(t4) {
            e4 === this.requestIndex && this.__response(t4), this.pending--, this.pending || this._removeClass("ui-autocomplete-loading");
          }.bind(this);
        }, __response: function(t4) {
          t4 = t4 && this._normalize(t4), this._trigger("response", null, { content: t4 }), !this.options.disabled && t4 && t4.length && !this.cancelSearch ? (this._suggest(t4), this._trigger("open")) : this._close();
        }, close: function(t4) {
          this.cancelSearch = true, this._close(t4);
        }, _close: function(t4) {
          this._off(this.document, "mousedown"), this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = true, this._trigger("close", t4));
        }, _change: function(t4) {
          this.previous !== this._value() && this._trigger("change", t4, { item: this.selectedItem });
        }, _normalize: function(t4) {
          return t4.length && t4[0].label && t4[0].value ? t4 : V3.map(t4, function(t5) {
            return "string" == typeof t5 ? { label: t5, value: t5 } : V3.extend({}, t5, { label: t5.label || t5.value, value: t5.value || t5.label });
          });
        }, _suggest: function(t4) {
          var e4 = this.menu.element.empty();
          this._renderMenu(e4, t4), this.isNewMenu = true, this.menu.refresh(), e4.show(), this._resizeMenu(), e4.position(V3.extend({ of: this.element }, this.options.position)), this.options.autoFocus && this.menu.next(), this._on(this.document, { mousedown: "_closeOnClickOutside" });
        }, _resizeMenu: function() {
          var t4 = this.menu.element;
          t4.outerWidth(Math.max(t4.width("").outerWidth() + 1, this.element.outerWidth()));
        }, _renderMenu: function(i4, t4) {
          var s4 = this;
          V3.each(t4, function(t5, e4) {
            s4._renderItemData(i4, e4);
          });
        }, _renderItemData: function(t4, e4) {
          return this._renderItem(t4, e4).data("ui-autocomplete-item", e4);
        }, _renderItem: function(t4, e4) {
          return V3("<li>").append(V3("<div>").text(e4.label)).appendTo(t4);
        }, _move: function(t4, e4) {
          if (this.menu.element.is(":visible"))
            return this.menu.isFirstItem() && /^previous/.test(t4) || this.menu.isLastItem() && /^next/.test(t4) ? (this.isMultiLine || this._value(this.term), void this.menu.blur()) : void this.menu[t4](e4);
          this.search(null, e4);
        }, widget: function() {
          return this.menu.element;
        }, _value: function() {
          return this.valueMethod.apply(this.element, arguments);
        }, _keyEvent: function(t4, e4) {
          this.isMultiLine && !this.menu.element.is(":visible") || (this._move(t4, e4), e4.preventDefault());
        }, _isContentEditable: function(t4) {
          if (!t4.length)
            return false;
          var e4 = t4.prop("contentEditable");
          return "inherit" === e4 ? this._isContentEditable(t4.parent()) : "true" === e4;
        } }), V3.extend(V3.ui.autocomplete, { escapeRegex: function(t4) {
          return t4.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }, filter: function(t4, e4) {
          var i4 = new RegExp(V3.ui.autocomplete.escapeRegex(e4), "i");
          return V3.grep(t4, function(t5) {
            return i4.test(t5.label || t5.value || t5);
          });
        } }), V3.widget("ui.autocomplete", V3.ui.autocomplete, { options: { messages: { noResults: "No search results.", results: function(t4) {
          return t4 + (1 < t4 ? " results are" : " result is") + " available, use up and down arrow keys to navigate.";
        } } }, __response: function(t4) {
          var e4;
          this._superApply(arguments), this.options.disabled || this.cancelSearch || (e4 = t4 && t4.length ? this.options.messages.results(t4.length) : this.options.messages.noResults, clearTimeout(this.liveRegionTimer), this.liveRegionTimer = this._delay(function() {
            this.liveRegion.html(V3("<div>").text(e4));
          }, 100));
        } });
        V3.ui.autocomplete;
        var tt = /ui-corner-([a-z]){2,6}/g;
        V3.widget("ui.controlgroup", { version: "1.13.2", defaultElement: "<div>", options: { direction: "horizontal", disabled: null, onlyVisible: true, items: { button: "input[type=button], input[type=submit], input[type=reset], button, a", controlgroupLabel: ".ui-controlgroup-label", checkboxradio: "input[type='checkbox'], input[type='radio']", selectmenu: "select", spinner: ".ui-spinner-input" } }, _create: function() {
          this._enhance();
        }, _enhance: function() {
          this.element.attr("role", "toolbar"), this.refresh();
        }, _destroy: function() {
          this._callChildMethod("destroy"), this.childWidgets.removeData("ui-controlgroup-data"), this.element.removeAttr("role"), this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap();
        }, _initWidgets: function() {
          var o3 = this, a4 = [];
          V3.each(this.options.items, function(s4, t4) {
            var e4, n3 = {};
            if (t4)
              return "controlgroupLabel" === s4 ? ((e4 = o3.element.find(t4)).each(function() {
                var t5 = V3(this);
                t5.children(".ui-controlgroup-label-contents").length || t5.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>");
              }), o3._addClass(e4, null, "ui-widget ui-widget-content ui-state-default"), void (a4 = a4.concat(e4.get()))) : void (V3.fn[s4] && (n3 = o3["_" + s4 + "Options"] ? o3["_" + s4 + "Options"]("middle") : { classes: {} }, o3.element.find(t4).each(function() {
                var t5 = V3(this), e5 = t5[s4]("instance"), i4 = V3.widget.extend({}, n3);
                "button" === s4 && t5.parent(".ui-spinner").length || ((e5 = e5 || t5[s4]()[s4]("instance")) && (i4.classes = o3._resolveClassesValues(i4.classes, e5)), t5[s4](i4), i4 = t5[s4]("widget"), V3.data(i4[0], "ui-controlgroup-data", e5 || t5[s4]("instance")), a4.push(i4[0]));
              })));
          }), this.childWidgets = V3(V3.uniqueSort(a4)), this._addClass(this.childWidgets, "ui-controlgroup-item");
        }, _callChildMethod: function(e4) {
          this.childWidgets.each(function() {
            var t4 = V3(this).data("ui-controlgroup-data");
            t4 && t4[e4] && t4[e4]();
          });
        }, _updateCornerClass: function(t4, e4) {
          e4 = this._buildSimpleOptions(e4, "label").classes.label;
          this._removeClass(t4, null, "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"), this._addClass(t4, null, e4);
        }, _buildSimpleOptions: function(t4, e4) {
          var i4 = "vertical" === this.options.direction, s4 = { classes: {} };
          return s4.classes[e4] = { middle: "", first: "ui-corner-" + (i4 ? "top" : "left"), last: "ui-corner-" + (i4 ? "bottom" : "right"), only: "ui-corner-all" }[t4], s4;
        }, _spinnerOptions: function(t4) {
          t4 = this._buildSimpleOptions(t4, "ui-spinner");
          return t4.classes["ui-spinner-up"] = "", t4.classes["ui-spinner-down"] = "", t4;
        }, _buttonOptions: function(t4) {
          return this._buildSimpleOptions(t4, "ui-button");
        }, _checkboxradioOptions: function(t4) {
          return this._buildSimpleOptions(t4, "ui-checkboxradio-label");
        }, _selectmenuOptions: function(t4) {
          var e4 = "vertical" === this.options.direction;
          return { width: e4 && "auto", classes: { middle: { "ui-selectmenu-button-open": "", "ui-selectmenu-button-closed": "" }, first: { "ui-selectmenu-button-open": "ui-corner-" + (e4 ? "top" : "tl"), "ui-selectmenu-button-closed": "ui-corner-" + (e4 ? "top" : "left") }, last: { "ui-selectmenu-button-open": e4 ? "" : "ui-corner-tr", "ui-selectmenu-button-closed": "ui-corner-" + (e4 ? "bottom" : "right") }, only: { "ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all" } }[t4] };
        }, _resolveClassesValues: function(i4, s4) {
          var n3 = {};
          return V3.each(i4, function(t4) {
            var e4 = s4.options.classes[t4] || "", e4 = String.prototype.trim.call(e4.replace(tt, ""));
            n3[t4] = (e4 + " " + i4[t4]).replace(/\s+/g, " ");
          }), n3;
        }, _setOption: function(t4, e4) {
          "direction" === t4 && this._removeClass("ui-controlgroup-" + this.options.direction), this._super(t4, e4), "disabled" !== t4 ? this.refresh() : this._callChildMethod(e4 ? "disable" : "enable");
        }, refresh: function() {
          var n3, o3 = this;
          this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction), "horizontal" === this.options.direction && this._addClass(null, "ui-helper-clearfix"), this._initWidgets(), n3 = this.childWidgets, (n3 = this.options.onlyVisible ? n3.filter(":visible") : n3).length && (V3.each(["first", "last"], function(t4, e4) {
            var i4, s4 = n3[e4]().data("ui-controlgroup-data");
            s4 && o3["_" + s4.widgetName + "Options"] ? ((i4 = o3["_" + s4.widgetName + "Options"](1 === n3.length ? "only" : e4)).classes = o3._resolveClassesValues(i4.classes, s4), s4.element[s4.widgetName](i4)) : o3._updateCornerClass(n3[e4](), e4);
          }), this._callChildMethod("refresh"));
        } });
        V3.widget("ui.checkboxradio", [V3.ui.formResetMixin, { version: "1.13.2", options: { disabled: null, label: null, icon: true, classes: { "ui-checkboxradio-label": "ui-corner-all", "ui-checkboxradio-icon": "ui-corner-all" } }, _getCreateOptions: function() {
          var t4, e4 = this._super() || {};
          return this._readType(), t4 = this.element.labels(), this.label = V3(t4[t4.length - 1]), this.label.length || V3.error("No label found for checkboxradio widget"), this.originalLabel = "", (t4 = this.label.contents().not(this.element[0])).length && (this.originalLabel += t4.clone().wrapAll("<div></div>").parent().html()), this.originalLabel && (e4.label = this.originalLabel), null != (t4 = this.element[0].disabled) && (e4.disabled = t4), e4;
        }, _create: function() {
          var t4 = this.element[0].checked;
          this._bindFormResetHandler(), null == this.options.disabled && (this.options.disabled = this.element[0].disabled), this._setOption("disabled", this.options.disabled), this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"), this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget"), "radio" === this.type && this._addClass(this.label, "ui-checkboxradio-radio-label"), this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel), this._enhance(), t4 && this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active"), this._on({ change: "_toggleClasses", focus: function() {
            this._addClass(this.label, null, "ui-state-focus ui-visual-focus");
          }, blur: function() {
            this._removeClass(this.label, null, "ui-state-focus ui-visual-focus");
          } });
        }, _readType: function() {
          var t4 = this.element[0].nodeName.toLowerCase();
          this.type = this.element[0].type, "input" === t4 && /radio|checkbox/.test(this.type) || V3.error("Can't create checkboxradio on element.nodeName=" + t4 + " and element.type=" + this.type);
        }, _enhance: function() {
          this._updateIcon(this.element[0].checked);
        }, widget: function() {
          return this.label;
        }, _getRadioGroup: function() {
          var t4 = this.element[0].name, e4 = "input[name='" + V3.escapeSelector(t4) + "']";
          return t4 ? (this.form.length ? V3(this.form[0].elements).filter(e4) : V3(e4).filter(function() {
            return 0 === V3(this)._form().length;
          })).not(this.element) : V3([]);
        }, _toggleClasses: function() {
          var t4 = this.element[0].checked;
          this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", t4), this.options.icon && "checkbox" === this.type && this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", t4)._toggleClass(this.icon, null, "ui-icon-blank", !t4), "radio" === this.type && this._getRadioGroup().each(function() {
            var t5 = V3(this).checkboxradio("instance");
            t5 && t5._removeClass(t5.label, "ui-checkboxradio-checked", "ui-state-active");
          });
        }, _destroy: function() {
          this._unbindFormResetHandler(), this.icon && (this.icon.remove(), this.iconSpace.remove());
        }, _setOption: function(t4, e4) {
          if ("label" !== t4 || e4) {
            if (this._super(t4, e4), "disabled" === t4)
              return this._toggleClass(this.label, null, "ui-state-disabled", e4), void (this.element[0].disabled = e4);
            this.refresh();
          }
        }, _updateIcon: function(t4) {
          var e4 = "ui-icon ui-icon-background ";
          this.options.icon ? (this.icon || (this.icon = V3("<span>"), this.iconSpace = V3("<span> </span>"), this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")), "checkbox" === this.type ? (e4 += t4 ? "ui-icon-check ui-state-checked" : "ui-icon-blank", this._removeClass(this.icon, null, t4 ? "ui-icon-blank" : "ui-icon-check")) : e4 += "ui-icon-blank", this._addClass(this.icon, "ui-checkboxradio-icon", e4), t4 || this._removeClass(this.icon, null, "ui-icon-check ui-state-checked"), this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
        }, _updateLabel: function() {
          var t4 = this.label.contents().not(this.element[0]);
          this.icon && (t4 = t4.not(this.icon[0])), (t4 = this.iconSpace ? t4.not(this.iconSpace[0]) : t4).remove(), this.label.append(this.options.label);
        }, refresh: function() {
          var t4 = this.element[0].checked, e4 = this.element[0].disabled;
          this._updateIcon(t4), this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", t4), null !== this.options.label && this._updateLabel(), e4 !== this.options.disabled && this._setOptions({ disabled: e4 });
        } }]);
        var et;
        V3.ui.checkboxradio;
        V3.widget("ui.button", { version: "1.13.2", defaultElement: "<button>", options: { classes: { "ui-button": "ui-corner-all" }, disabled: null, icon: null, iconPosition: "beginning", label: null, showLabel: true }, _getCreateOptions: function() {
          var t4, e4 = this._super() || {};
          return this.isInput = this.element.is("input"), null != (t4 = this.element[0].disabled) && (e4.disabled = t4), this.originalLabel = this.isInput ? this.element.val() : this.element.html(), this.originalLabel && (e4.label = this.originalLabel), e4;
        }, _create: function() {
          !this.option.showLabel & !this.options.icon && (this.options.showLabel = true), null == this.options.disabled && (this.options.disabled = this.element[0].disabled || false), this.hasTitle = !!this.element.attr("title"), this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)), this._addClass("ui-button", "ui-widget"), this._setOption("disabled", this.options.disabled), this._enhance(), this.element.is("a") && this._on({ keyup: function(t4) {
            t4.keyCode === V3.ui.keyCode.SPACE && (t4.preventDefault(), this.element[0].click ? this.element[0].click() : this.element.trigger("click"));
          } });
        }, _enhance: function() {
          this.element.is("button") || this.element.attr("role", "button"), this.options.icon && (this._updateIcon("icon", this.options.icon), this._updateTooltip());
        }, _updateTooltip: function() {
          this.title = this.element.attr("title"), this.options.showLabel || this.title || this.element.attr("title", this.options.label);
        }, _updateIcon: function(t4, e4) {
          var i4 = "iconPosition" !== t4, s4 = i4 ? this.options.iconPosition : e4, t4 = "top" === s4 || "bottom" === s4;
          this.icon ? i4 && this._removeClass(this.icon, null, this.options.icon) : (this.icon = V3("<span>"), this._addClass(this.icon, "ui-button-icon", "ui-icon"), this.options.showLabel || this._addClass("ui-button-icon-only")), i4 && this._addClass(this.icon, null, e4), this._attachIcon(s4), t4 ? (this._addClass(this.icon, null, "ui-widget-icon-block"), this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = V3("<span> </span>"), this._addClass(this.iconSpace, "ui-button-icon-space")), this._removeClass(this.icon, null, "ui-wiget-icon-block"), this._attachIconSpace(s4));
        }, _destroy: function() {
          this.element.removeAttr("role"), this.icon && this.icon.remove(), this.iconSpace && this.iconSpace.remove(), this.hasTitle || this.element.removeAttr("title");
        }, _attachIconSpace: function(t4) {
          this.icon[/^(?:end|bottom)/.test(t4) ? "before" : "after"](this.iconSpace);
        }, _attachIcon: function(t4) {
          this.element[/^(?:end|bottom)/.test(t4) ? "append" : "prepend"](this.icon);
        }, _setOptions: function(t4) {
          var e4 = (void 0 === t4.showLabel ? this.options : t4).showLabel, i4 = (void 0 === t4.icon ? this.options : t4).icon;
          e4 || i4 || (t4.showLabel = true), this._super(t4);
        }, _setOption: function(t4, e4) {
          "icon" === t4 && (e4 ? this._updateIcon(t4, e4) : this.icon && (this.icon.remove(), this.iconSpace && this.iconSpace.remove())), "iconPosition" === t4 && this._updateIcon(t4, e4), "showLabel" === t4 && (this._toggleClass("ui-button-icon-only", null, !e4), this._updateTooltip()), "label" === t4 && (this.isInput ? this.element.val(e4) : (this.element.html(e4), this.icon && (this._attachIcon(this.options.iconPosition), this._attachIconSpace(this.options.iconPosition)))), this._super(t4, e4), "disabled" === t4 && (this._toggleClass(null, "ui-state-disabled", e4), (this.element[0].disabled = e4) && this.element.trigger("blur"));
        }, refresh: function() {
          var t4 = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled");
          t4 !== this.options.disabled && this._setOptions({ disabled: t4 }), this._updateTooltip();
        } }), false !== V3.uiBackCompat && (V3.widget("ui.button", V3.ui.button, { options: { text: true, icons: { primary: null, secondary: null } }, _create: function() {
          this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text), !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel), this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary, this.options.iconPosition = "end"), this._super();
        }, _setOption: function(t4, e4) {
          "text" !== t4 ? ("showLabel" === t4 && (this.options.text = e4), "icon" === t4 && (this.options.icons.primary = e4), "icons" === t4 && (e4.primary ? (this._super("icon", e4.primary), this._super("iconPosition", "beginning")) : e4.secondary && (this._super("icon", e4.secondary), this._super("iconPosition", "end"))), this._superApply(arguments)) : this._super("showLabel", e4);
        } }), V3.fn.button = (et = V3.fn.button, function(i4) {
          var t4 = "string" == typeof i4, s4 = Array.prototype.slice.call(arguments, 1), n3 = this;
          return t4 ? this.length || "instance" !== i4 ? this.each(function() {
            var t5 = V3(this).attr("type"), e4 = V3.data(this, "ui-" + ("checkbox" !== t5 && "radio" !== t5 ? "button" : "checkboxradio"));
            return "instance" === i4 ? (n3 = e4, false) : e4 ? "function" != typeof e4[i4] || "_" === i4.charAt(0) ? V3.error("no such method '" + i4 + "' for button widget instance") : (t5 = e4[i4].apply(e4, s4)) !== e4 && void 0 !== t5 ? (n3 = t5 && t5.jquery ? n3.pushStack(t5.get()) : t5, false) : void 0 : V3.error("cannot call methods on button prior to initialization; attempted to call method '" + i4 + "'");
          }) : n3 = void 0 : (s4.length && (i4 = V3.widget.extend.apply(null, [i4].concat(s4))), this.each(function() {
            var t5 = V3(this).attr("type"), e4 = "checkbox" !== t5 && "radio" !== t5 ? "button" : "checkboxradio", t5 = V3.data(this, "ui-" + e4);
            t5 ? (t5.option(i4 || {}), t5._init && t5._init()) : "button" != e4 ? V3(this).checkboxradio(V3.extend({ icon: false }, i4)) : et.call(V3(this), i4);
          })), n3;
        }), V3.fn.buttonset = function() {
          return V3.ui.controlgroup || V3.error("Controlgroup widget missing"), "option" === arguments[0] && "items" === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [arguments[0], "items.button", arguments[2]]) : "option" === arguments[0] && "items" === arguments[1] ? this.controlgroup.apply(this, [arguments[0], "items.button"]) : ("object" == typeof arguments[0] && arguments[0].items && (arguments[0].items = { button: arguments[0].items }), this.controlgroup.apply(this, arguments));
        });
        var it;
        V3.ui.button;
        function st() {
          this._curInst = null, this._keyEvent = false, this._disabledInputs = [], this._datepickerShowing = false, this._inDialog = false, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = { closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader: "Wk", dateFormat: "mm/dd/yy", firstDay: 0, isRTL: false, showMonthAfterYear: false, yearSuffix: "", selectMonthLabel: "Select month", selectYearLabel: "Select year" }, this._defaults = { showOn: "focus", showAnim: "fadeIn", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: false, hideIfNoPrevNext: false, navigationAsDateFormat: false, gotoCurrent: false, changeMonth: false, changeYear: false, yearRange: "c-10:c+10", showOtherMonths: false, selectOtherMonths: false, showWeek: false, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "fast", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, onUpdateDatepicker: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: true, showButtonPanel: false, autoSize: false, disabled: false }, V3.extend(this._defaults, this.regional[""]), this.regional.en = V3.extend(true, {}, this.regional[""]), this.regional["en-US"] = V3.extend(true, {}, this.regional.en), this.dpDiv = nt(V3("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
        }
        function nt(t4) {
          var e4 = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
          return t4.on("mouseout", e4, function() {
            V3(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && V3(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && V3(this).removeClass("ui-datepicker-next-hover");
          }).on("mouseover", e4, ot);
        }
        function ot() {
          V3.datepicker._isDisabledDatepicker((it.inline ? it.dpDiv.parent() : it.input)[0]) || (V3(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), V3(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && V3(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && V3(this).addClass("ui-datepicker-next-hover"));
        }
        function at(t4, e4) {
          for (var i4 in V3.extend(t4, e4), e4)
            null == e4[i4] && (t4[i4] = e4[i4]);
          return t4;
        }
        V3.extend(V3.ui, { datepicker: { version: "1.13.2" } }), V3.extend(st.prototype, { markerClassName: "hasDatepicker", maxRows: 4, _widgetDatepicker: function() {
          return this.dpDiv;
        }, setDefaults: function(t4) {
          return at(this._defaults, t4 || {}), this;
        }, _attachDatepicker: function(t4, e4) {
          var i4, s4 = t4.nodeName.toLowerCase(), n3 = "div" === s4 || "span" === s4;
          t4.id || (this.uuid += 1, t4.id = "dp" + this.uuid), (i4 = this._newInst(V3(t4), n3)).settings = V3.extend({}, e4 || {}), "input" === s4 ? this._connectDatepicker(t4, i4) : n3 && this._inlineDatepicker(t4, i4);
        }, _newInst: function(t4, e4) {
          return { id: t4[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"), input: t4, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: e4, dpDiv: e4 ? nt(V3("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv };
        }, _connectDatepicker: function(t4, e4) {
          var i4 = V3(t4);
          e4.append = V3([]), e4.trigger = V3([]), i4.hasClass(this.markerClassName) || (this._attachments(i4, e4), i4.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp), this._autoSize(e4), V3.data(t4, "datepicker", e4), e4.settings.disabled && this._disableDatepicker(t4));
        }, _attachments: function(t4, e4) {
          var i4, s4 = this._get(e4, "appendText"), n3 = this._get(e4, "isRTL");
          e4.append && e4.append.remove(), s4 && (e4.append = V3("<span>").addClass(this._appendClass).text(s4), t4[n3 ? "before" : "after"](e4.append)), t4.off("focus", this._showDatepicker), e4.trigger && e4.trigger.remove(), "focus" !== (i4 = this._get(e4, "showOn")) && "both" !== i4 || t4.on("focus", this._showDatepicker), "button" !== i4 && "both" !== i4 || (s4 = this._get(e4, "buttonText"), i4 = this._get(e4, "buttonImage"), this._get(e4, "buttonImageOnly") ? e4.trigger = V3("<img>").addClass(this._triggerClass).attr({ src: i4, alt: s4, title: s4 }) : (e4.trigger = V3("<button type='button'>").addClass(this._triggerClass), i4 ? e4.trigger.html(V3("<img>").attr({ src: i4, alt: s4, title: s4 })) : e4.trigger.text(s4)), t4[n3 ? "before" : "after"](e4.trigger), e4.trigger.on("click", function() {
            return V3.datepicker._datepickerShowing && V3.datepicker._lastInput === t4[0] ? V3.datepicker._hideDatepicker() : (V3.datepicker._datepickerShowing && V3.datepicker._lastInput !== t4[0] && V3.datepicker._hideDatepicker(), V3.datepicker._showDatepicker(t4[0])), false;
          }));
        }, _autoSize: function(t4) {
          var e4, i4, s4, n3, o3, a4;
          this._get(t4, "autoSize") && !t4.inline && (o3 = new Date(2009, 11, 20), (a4 = this._get(t4, "dateFormat")).match(/[DM]/) && (e4 = function(t5) {
            for (n3 = s4 = i4 = 0; n3 < t5.length; n3++)
              t5[n3].length > i4 && (i4 = t5[n3].length, s4 = n3);
            return s4;
          }, o3.setMonth(e4(this._get(t4, a4.match(/MM/) ? "monthNames" : "monthNamesShort"))), o3.setDate(e4(this._get(t4, a4.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - o3.getDay())), t4.input.attr("size", this._formatDate(t4, o3).length));
        }, _inlineDatepicker: function(t4, e4) {
          var i4 = V3(t4);
          i4.hasClass(this.markerClassName) || (i4.addClass(this.markerClassName).append(e4.dpDiv), V3.data(t4, "datepicker", e4), this._setDate(e4, this._getDefaultDate(e4), true), this._updateDatepicker(e4), this._updateAlternate(e4), e4.settings.disabled && this._disableDatepicker(t4), e4.dpDiv.css("display", "block"));
        }, _dialogDatepicker: function(t4, e4, i4, s4, n3) {
          var o3, a4 = this._dialogInst;
          return a4 || (this.uuid += 1, o3 = "dp" + this.uuid, this._dialogInput = V3("<input type='text' id='" + o3 + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.on("keydown", this._doKeyDown), V3("body").append(this._dialogInput), (a4 = this._dialogInst = this._newInst(this._dialogInput, false)).settings = {}, V3.data(this._dialogInput[0], "datepicker", a4)), at(a4.settings, s4 || {}), e4 = e4 && e4.constructor === Date ? this._formatDate(a4, e4) : e4, this._dialogInput.val(e4), this._pos = n3 ? n3.length ? n3 : [n3.pageX, n3.pageY] : null, this._pos || (o3 = document.documentElement.clientWidth, s4 = document.documentElement.clientHeight, e4 = document.documentElement.scrollLeft || document.body.scrollLeft, n3 = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [o3 / 2 - 100 + e4, s4 / 2 - 150 + n3]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), a4.settings.onSelect = i4, this._inDialog = true, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), V3.blockUI && V3.blockUI(this.dpDiv), V3.data(this._dialogInput[0], "datepicker", a4), this;
        }, _destroyDatepicker: function(t4) {
          var e4, i4 = V3(t4), s4 = V3.data(t4, "datepicker");
          i4.hasClass(this.markerClassName) && (e4 = t4.nodeName.toLowerCase(), V3.removeData(t4, "datepicker"), "input" === e4 ? (s4.append.remove(), s4.trigger.remove(), i4.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp)) : "div" !== e4 && "span" !== e4 || i4.removeClass(this.markerClassName).empty(), it === s4 && (it = null, this._curInst = null));
        }, _enableDatepicker: function(e4) {
          var t4, i4 = V3(e4), s4 = V3.data(e4, "datepicker");
          i4.hasClass(this.markerClassName) && ("input" === (t4 = e4.nodeName.toLowerCase()) ? (e4.disabled = false, s4.trigger.filter("button").each(function() {
            this.disabled = false;
          }).end().filter("img").css({ opacity: "1.0", cursor: "" })) : "div" !== t4 && "span" !== t4 || ((i4 = i4.children("." + this._inlineClass)).children().removeClass("ui-state-disabled"), i4.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", false)), this._disabledInputs = V3.map(this._disabledInputs, function(t5) {
            return t5 === e4 ? null : t5;
          }));
        }, _disableDatepicker: function(e4) {
          var t4, i4 = V3(e4), s4 = V3.data(e4, "datepicker");
          i4.hasClass(this.markerClassName) && ("input" === (t4 = e4.nodeName.toLowerCase()) ? (e4.disabled = true, s4.trigger.filter("button").each(function() {
            this.disabled = true;
          }).end().filter("img").css({ opacity: "0.5", cursor: "default" })) : "div" !== t4 && "span" !== t4 || ((i4 = i4.children("." + this._inlineClass)).children().addClass("ui-state-disabled"), i4.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", true)), this._disabledInputs = V3.map(this._disabledInputs, function(t5) {
            return t5 === e4 ? null : t5;
          }), this._disabledInputs[this._disabledInputs.length] = e4);
        }, _isDisabledDatepicker: function(t4) {
          if (!t4)
            return false;
          for (var e4 = 0; e4 < this._disabledInputs.length; e4++)
            if (this._disabledInputs[e4] === t4)
              return true;
          return false;
        }, _getInst: function(t4) {
          try {
            return V3.data(t4, "datepicker");
          } catch (t5) {
            throw "Missing instance data for this datepicker";
          }
        }, _optionDatepicker: function(t4, e4, i4) {
          var s4, n3, o3 = this._getInst(t4);
          if (2 === arguments.length && "string" == typeof e4)
            return "defaults" === e4 ? V3.extend({}, V3.datepicker._defaults) : o3 ? "all" === e4 ? V3.extend({}, o3.settings) : this._get(o3, e4) : null;
          s4 = e4 || {}, "string" == typeof e4 && ((s4 = {})[e4] = i4), o3 && (this._curInst === o3 && this._hideDatepicker(), n3 = this._getDateDatepicker(t4, true), e4 = this._getMinMaxDate(o3, "min"), i4 = this._getMinMaxDate(o3, "max"), at(o3.settings, s4), null !== e4 && void 0 !== s4.dateFormat && void 0 === s4.minDate && (o3.settings.minDate = this._formatDate(o3, e4)), null !== i4 && void 0 !== s4.dateFormat && void 0 === s4.maxDate && (o3.settings.maxDate = this._formatDate(o3, i4)), "disabled" in s4 && (s4.disabled ? this._disableDatepicker(t4) : this._enableDatepicker(t4)), this._attachments(V3(t4), o3), this._autoSize(o3), this._setDate(o3, n3), this._updateAlternate(o3), this._updateDatepicker(o3));
        }, _changeDatepicker: function(t4, e4, i4) {
          this._optionDatepicker(t4, e4, i4);
        }, _refreshDatepicker: function(t4) {
          t4 = this._getInst(t4);
          t4 && this._updateDatepicker(t4);
        }, _setDateDatepicker: function(t4, e4) {
          t4 = this._getInst(t4);
          t4 && (this._setDate(t4, e4), this._updateDatepicker(t4), this._updateAlternate(t4));
        }, _getDateDatepicker: function(t4, e4) {
          t4 = this._getInst(t4);
          return t4 && !t4.inline && this._setDateFromField(t4, e4), t4 ? this._getDate(t4) : null;
        }, _doKeyDown: function(t4) {
          var e4, i4, s4 = V3.datepicker._getInst(t4.target), n3 = true, o3 = s4.dpDiv.is(".ui-datepicker-rtl");
          if (s4._keyEvent = true, V3.datepicker._datepickerShowing)
            switch (t4.keyCode) {
              case 9:
                V3.datepicker._hideDatepicker(), n3 = false;
                break;
              case 13:
                return (i4 = V3("td." + V3.datepicker._dayOverClass + ":not(." + V3.datepicker._currentClass + ")", s4.dpDiv))[0] && V3.datepicker._selectDay(t4.target, s4.selectedMonth, s4.selectedYear, i4[0]), (e4 = V3.datepicker._get(s4, "onSelect")) ? (i4 = V3.datepicker._formatDate(s4), e4.apply(s4.input ? s4.input[0] : null, [i4, s4])) : V3.datepicker._hideDatepicker(), false;
              case 27:
                V3.datepicker._hideDatepicker();
                break;
              case 33:
                V3.datepicker._adjustDate(t4.target, t4.ctrlKey ? -V3.datepicker._get(s4, "stepBigMonths") : -V3.datepicker._get(s4, "stepMonths"), "M");
                break;
              case 34:
                V3.datepicker._adjustDate(t4.target, t4.ctrlKey ? +V3.datepicker._get(s4, "stepBigMonths") : +V3.datepicker._get(s4, "stepMonths"), "M");
                break;
              case 35:
                (t4.ctrlKey || t4.metaKey) && V3.datepicker._clearDate(t4.target), n3 = t4.ctrlKey || t4.metaKey;
                break;
              case 36:
                (t4.ctrlKey || t4.metaKey) && V3.datepicker._gotoToday(t4.target), n3 = t4.ctrlKey || t4.metaKey;
                break;
              case 37:
                (t4.ctrlKey || t4.metaKey) && V3.datepicker._adjustDate(t4.target, o3 ? 1 : -1, "D"), n3 = t4.ctrlKey || t4.metaKey, t4.originalEvent.altKey && V3.datepicker._adjustDate(t4.target, t4.ctrlKey ? -V3.datepicker._get(s4, "stepBigMonths") : -V3.datepicker._get(s4, "stepMonths"), "M");
                break;
              case 38:
                (t4.ctrlKey || t4.metaKey) && V3.datepicker._adjustDate(t4.target, -7, "D"), n3 = t4.ctrlKey || t4.metaKey;
                break;
              case 39:
                (t4.ctrlKey || t4.metaKey) && V3.datepicker._adjustDate(t4.target, o3 ? -1 : 1, "D"), n3 = t4.ctrlKey || t4.metaKey, t4.originalEvent.altKey && V3.datepicker._adjustDate(t4.target, t4.ctrlKey ? +V3.datepicker._get(s4, "stepBigMonths") : +V3.datepicker._get(s4, "stepMonths"), "M");
                break;
              case 40:
                (t4.ctrlKey || t4.metaKey) && V3.datepicker._adjustDate(t4.target, 7, "D"), n3 = t4.ctrlKey || t4.metaKey;
                break;
              default:
                n3 = false;
            }
          else
            36 === t4.keyCode && t4.ctrlKey ? V3.datepicker._showDatepicker(this) : n3 = false;
          n3 && (t4.preventDefault(), t4.stopPropagation());
        }, _doKeyPress: function(t4) {
          var e4, i4 = V3.datepicker._getInst(t4.target);
          if (V3.datepicker._get(i4, "constrainInput"))
            return e4 = V3.datepicker._possibleChars(V3.datepicker._get(i4, "dateFormat")), i4 = String.fromCharCode(null == t4.charCode ? t4.keyCode : t4.charCode), t4.ctrlKey || t4.metaKey || i4 < " " || !e4 || -1 < e4.indexOf(i4);
        }, _doKeyUp: function(t4) {
          t4 = V3.datepicker._getInst(t4.target);
          if (t4.input.val() !== t4.lastVal)
            try {
              V3.datepicker.parseDate(V3.datepicker._get(t4, "dateFormat"), t4.input ? t4.input.val() : null, V3.datepicker._getFormatConfig(t4)) && (V3.datepicker._setDateFromField(t4), V3.datepicker._updateAlternate(t4), V3.datepicker._updateDatepicker(t4));
            } catch (t5) {
            }
          return true;
        }, _showDatepicker: function(t4) {
          var e4, i4, s4, n3;
          "input" !== (t4 = t4.target || t4).nodeName.toLowerCase() && (t4 = V3("input", t4.parentNode)[0]), V3.datepicker._isDisabledDatepicker(t4) || V3.datepicker._lastInput === t4 || (n3 = V3.datepicker._getInst(t4), V3.datepicker._curInst && V3.datepicker._curInst !== n3 && (V3.datepicker._curInst.dpDiv.stop(true, true), n3 && V3.datepicker._datepickerShowing && V3.datepicker._hideDatepicker(V3.datepicker._curInst.input[0])), false !== (i4 = (s4 = V3.datepicker._get(n3, "beforeShow")) ? s4.apply(t4, [t4, n3]) : {}) && (at(n3.settings, i4), n3.lastVal = null, V3.datepicker._lastInput = t4, V3.datepicker._setDateFromField(n3), V3.datepicker._inDialog && (t4.value = ""), V3.datepicker._pos || (V3.datepicker._pos = V3.datepicker._findPos(t4), V3.datepicker._pos[1] += t4.offsetHeight), e4 = false, V3(t4).parents().each(function() {
            return !(e4 |= "fixed" === V3(this).css("position"));
          }), s4 = { left: V3.datepicker._pos[0], top: V3.datepicker._pos[1] }, V3.datepicker._pos = null, n3.dpDiv.empty(), n3.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" }), V3.datepicker._updateDatepicker(n3), s4 = V3.datepicker._checkOffset(n3, s4, e4), n3.dpDiv.css({ position: V3.datepicker._inDialog && V3.blockUI ? "static" : e4 ? "fixed" : "absolute", display: "none", left: s4.left + "px", top: s4.top + "px" }), n3.inline || (i4 = V3.datepicker._get(n3, "showAnim"), s4 = V3.datepicker._get(n3, "duration"), n3.dpDiv.css("z-index", function(t5) {
            for (var e5, i5; t5.length && t5[0] !== document; ) {
              if (("absolute" === (e5 = t5.css("position")) || "relative" === e5 || "fixed" === e5) && (i5 = parseInt(t5.css("zIndex"), 10), !isNaN(i5) && 0 !== i5))
                return i5;
              t5 = t5.parent();
            }
            return 0;
          }(V3(t4)) + 1), V3.datepicker._datepickerShowing = true, V3.effects && V3.effects.effect[i4] ? n3.dpDiv.show(i4, V3.datepicker._get(n3, "showOptions"), s4) : n3.dpDiv[i4 || "show"](i4 ? s4 : null), V3.datepicker._shouldFocusInput(n3) && n3.input.trigger("focus"), V3.datepicker._curInst = n3)));
        }, _updateDatepicker: function(t4) {
          this.maxRows = 4, (it = t4).dpDiv.empty().append(this._generateHTML(t4)), this._attachHandlers(t4);
          var e4, i4 = this._getNumberOfMonths(t4), s4 = i4[1], n3 = t4.dpDiv.find("." + this._dayOverClass + " a"), o3 = V3.datepicker._get(t4, "onUpdateDatepicker");
          0 < n3.length && ot.apply(n3.get(0)), t4.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), 1 < s4 && t4.dpDiv.addClass("ui-datepicker-multi-" + s4).css("width", 17 * s4 + "em"), t4.dpDiv[(1 !== i4[0] || 1 !== i4[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), t4.dpDiv[(this._get(t4, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), t4 === V3.datepicker._curInst && V3.datepicker._datepickerShowing && V3.datepicker._shouldFocusInput(t4) && t4.input.trigger("focus"), t4.yearshtml && (e4 = t4.yearshtml, setTimeout(function() {
            e4 === t4.yearshtml && t4.yearshtml && t4.dpDiv.find("select.ui-datepicker-year").first().replaceWith(t4.yearshtml), e4 = t4.yearshtml = null;
          }, 0)), o3 && o3.apply(t4.input ? t4.input[0] : null, [t4]);
        }, _shouldFocusInput: function(t4) {
          return t4.input && t4.input.is(":visible") && !t4.input.is(":disabled") && !t4.input.is(":focus");
        }, _checkOffset: function(t4, e4, i4) {
          var s4 = t4.dpDiv.outerWidth(), n3 = t4.dpDiv.outerHeight(), o3 = t4.input ? t4.input.outerWidth() : 0, a4 = t4.input ? t4.input.outerHeight() : 0, r4 = document.documentElement.clientWidth + (i4 ? 0 : V3(document).scrollLeft()), l4 = document.documentElement.clientHeight + (i4 ? 0 : V3(document).scrollTop());
          return e4.left -= this._get(t4, "isRTL") ? s4 - o3 : 0, e4.left -= i4 && e4.left === t4.input.offset().left ? V3(document).scrollLeft() : 0, e4.top -= i4 && e4.top === t4.input.offset().top + a4 ? V3(document).scrollTop() : 0, e4.left -= Math.min(e4.left, e4.left + s4 > r4 && s4 < r4 ? Math.abs(e4.left + s4 - r4) : 0), e4.top -= Math.min(e4.top, e4.top + n3 > l4 && n3 < l4 ? Math.abs(n3 + a4) : 0), e4;
        }, _findPos: function(t4) {
          for (var e4 = this._getInst(t4), i4 = this._get(e4, "isRTL"); t4 && ("hidden" === t4.type || 1 !== t4.nodeType || V3.expr.pseudos.hidden(t4)); )
            t4 = t4[i4 ? "previousSibling" : "nextSibling"];
          return [(e4 = V3(t4).offset()).left, e4.top];
        }, _hideDatepicker: function(t4) {
          var e4, i4, s4 = this._curInst;
          !s4 || t4 && s4 !== V3.data(t4, "datepicker") || this._datepickerShowing && (e4 = this._get(s4, "showAnim"), i4 = this._get(s4, "duration"), t4 = function() {
            V3.datepicker._tidyDialog(s4);
          }, V3.effects && (V3.effects.effect[e4] || V3.effects[e4]) ? s4.dpDiv.hide(e4, V3.datepicker._get(s4, "showOptions"), i4, t4) : s4.dpDiv["slideDown" === e4 ? "slideUp" : "fadeIn" === e4 ? "fadeOut" : "hide"](e4 ? i4 : null, t4), e4 || t4(), this._datepickerShowing = false, (t4 = this._get(s4, "onClose")) && t4.apply(s4.input ? s4.input[0] : null, [s4.input ? s4.input.val() : "", s4]), this._lastInput = null, this._inDialog && (this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" }), V3.blockUI && (V3.unblockUI(), V3("body").append(this.dpDiv))), this._inDialog = false);
        }, _tidyDialog: function(t4) {
          t4.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
        }, _checkExternalClick: function(t4) {
          var e4;
          V3.datepicker._curInst && (e4 = V3(t4.target), t4 = V3.datepicker._getInst(e4[0]), (e4[0].id === V3.datepicker._mainDivId || 0 !== e4.parents("#" + V3.datepicker._mainDivId).length || e4.hasClass(V3.datepicker.markerClassName) || e4.closest("." + V3.datepicker._triggerClass).length || !V3.datepicker._datepickerShowing || V3.datepicker._inDialog && V3.blockUI) && (!e4.hasClass(V3.datepicker.markerClassName) || V3.datepicker._curInst === t4) || V3.datepicker._hideDatepicker());
        }, _adjustDate: function(t4, e4, i4) {
          var s4 = V3(t4), t4 = this._getInst(s4[0]);
          this._isDisabledDatepicker(s4[0]) || (this._adjustInstDate(t4, e4, i4), this._updateDatepicker(t4));
        }, _gotoToday: function(t4) {
          var e4 = V3(t4), i4 = this._getInst(e4[0]);
          this._get(i4, "gotoCurrent") && i4.currentDay ? (i4.selectedDay = i4.currentDay, i4.drawMonth = i4.selectedMonth = i4.currentMonth, i4.drawYear = i4.selectedYear = i4.currentYear) : (t4 = new Date(), i4.selectedDay = t4.getDate(), i4.drawMonth = i4.selectedMonth = t4.getMonth(), i4.drawYear = i4.selectedYear = t4.getFullYear()), this._notifyChange(i4), this._adjustDate(e4);
        }, _selectMonthYear: function(t4, e4, i4) {
          var s4 = V3(t4), t4 = this._getInst(s4[0]);
          t4["selected" + ("M" === i4 ? "Month" : "Year")] = t4["draw" + ("M" === i4 ? "Month" : "Year")] = parseInt(e4.options[e4.selectedIndex].value, 10), this._notifyChange(t4), this._adjustDate(s4);
        }, _selectDay: function(t4, e4, i4, s4) {
          var n3 = V3(t4);
          V3(s4).hasClass(this._unselectableClass) || this._isDisabledDatepicker(n3[0]) || ((n3 = this._getInst(n3[0])).selectedDay = n3.currentDay = parseInt(V3("a", s4).attr("data-date")), n3.selectedMonth = n3.currentMonth = e4, n3.selectedYear = n3.currentYear = i4, this._selectDate(t4, this._formatDate(n3, n3.currentDay, n3.currentMonth, n3.currentYear)));
        }, _clearDate: function(t4) {
          t4 = V3(t4);
          this._selectDate(t4, "");
        }, _selectDate: function(t4, e4) {
          var i4 = V3(t4), t4 = this._getInst(i4[0]);
          e4 = null != e4 ? e4 : this._formatDate(t4), t4.input && t4.input.val(e4), this._updateAlternate(t4), (i4 = this._get(t4, "onSelect")) ? i4.apply(t4.input ? t4.input[0] : null, [e4, t4]) : t4.input && t4.input.trigger("change"), t4.inline ? this._updateDatepicker(t4) : (this._hideDatepicker(), this._lastInput = t4.input[0], "object" != typeof t4.input[0] && t4.input.trigger("focus"), this._lastInput = null);
        }, _updateAlternate: function(t4) {
          var e4, i4, s4 = this._get(t4, "altField");
          s4 && (e4 = this._get(t4, "altFormat") || this._get(t4, "dateFormat"), i4 = this._getDate(t4), t4 = this.formatDate(e4, i4, this._getFormatConfig(t4)), V3(document).find(s4).val(t4));
        }, noWeekends: function(t4) {
          t4 = t4.getDay();
          return [0 < t4 && t4 < 6, ""];
        }, iso8601Week: function(t4) {
          var e4 = new Date(t4.getTime());
          return e4.setDate(e4.getDate() + 4 - (e4.getDay() || 7)), t4 = e4.getTime(), e4.setMonth(0), e4.setDate(1), Math.floor(Math.round((t4 - e4) / 864e5) / 7) + 1;
        }, parseDate: function(e4, n3, t4) {
          if (null == e4 || null == n3)
            throw "Invalid arguments";
          if ("" === (n3 = "object" == typeof n3 ? n3.toString() : n3 + ""))
            return null;
          for (var i4, s4, o3, a4 = 0, r4 = (t4 ? t4.shortYearCutoff : null) || this._defaults.shortYearCutoff, r4 = "string" != typeof r4 ? r4 : new Date().getFullYear() % 100 + parseInt(r4, 10), l4 = (t4 ? t4.dayNamesShort : null) || this._defaults.dayNamesShort, h4 = (t4 ? t4.dayNames : null) || this._defaults.dayNames, c4 = (t4 ? t4.monthNamesShort : null) || this._defaults.monthNamesShort, u4 = (t4 ? t4.monthNames : null) || this._defaults.monthNames, d3 = -1, p4 = -1, f4 = -1, g5 = -1, m4 = false, _4 = function(t5) {
            t5 = w5 + 1 < e4.length && e4.charAt(w5 + 1) === t5;
            return t5 && w5++, t5;
          }, v4 = function(t5) {
            var e5 = _4(t5), e5 = "@" === t5 ? 14 : "!" === t5 ? 20 : "y" === t5 && e5 ? 4 : "o" === t5 ? 3 : 2, e5 = new RegExp("^\\d{" + ("y" === t5 ? e5 : 1) + "," + e5 + "}"), e5 = n3.substring(a4).match(e5);
            if (!e5)
              throw "Missing number at position " + a4;
            return a4 += e5[0].length, parseInt(e5[0], 10);
          }, b4 = function(t5, e5, i5) {
            var s5 = -1, e5 = V3.map(_4(t5) ? i5 : e5, function(t6, e6) {
              return [[e6, t6]];
            }).sort(function(t6, e6) {
              return -(t6[1].length - e6[1].length);
            });
            if (V3.each(e5, function(t6, e6) {
              var i6 = e6[1];
              if (n3.substr(a4, i6.length).toLowerCase() === i6.toLowerCase())
                return s5 = e6[0], a4 += i6.length, false;
            }), -1 !== s5)
              return s5 + 1;
            throw "Unknown name at position " + a4;
          }, y4 = function() {
            if (n3.charAt(a4) !== e4.charAt(w5))
              throw "Unexpected literal at position " + a4;
            a4++;
          }, w5 = 0; w5 < e4.length; w5++)
            if (m4)
              "'" !== e4.charAt(w5) || _4("'") ? y4() : m4 = false;
            else
              switch (e4.charAt(w5)) {
                case "d":
                  f4 = v4("d");
                  break;
                case "D":
                  b4("D", l4, h4);
                  break;
                case "o":
                  g5 = v4("o");
                  break;
                case "m":
                  p4 = v4("m");
                  break;
                case "M":
                  p4 = b4("M", c4, u4);
                  break;
                case "y":
                  d3 = v4("y");
                  break;
                case "@":
                  d3 = (o3 = new Date(v4("@"))).getFullYear(), p4 = o3.getMonth() + 1, f4 = o3.getDate();
                  break;
                case "!":
                  d3 = (o3 = new Date((v4("!") - this._ticksTo1970) / 1e4)).getFullYear(), p4 = o3.getMonth() + 1, f4 = o3.getDate();
                  break;
                case "'":
                  _4("'") ? y4() : m4 = true;
                  break;
                default:
                  y4();
              }
          if (a4 < n3.length && (s4 = n3.substr(a4), !/^\s+/.test(s4)))
            throw "Extra/unparsed characters found in date: " + s4;
          if (-1 === d3 ? d3 = new Date().getFullYear() : d3 < 100 && (d3 += new Date().getFullYear() - new Date().getFullYear() % 100 + (d3 <= r4 ? 0 : -100)), -1 < g5)
            for (p4 = 1, f4 = g5; ; ) {
              if (f4 <= (i4 = this._getDaysInMonth(d3, p4 - 1)))
                break;
              p4++, f4 -= i4;
            }
          if ((o3 = this._daylightSavingAdjust(new Date(d3, p4 - 1, f4))).getFullYear() !== d3 || o3.getMonth() + 1 !== p4 || o3.getDate() !== f4)
            throw "Invalid date";
          return o3;
        }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TICKS: "!", TIMESTAMP: "@", W3C: "yy-mm-dd", _ticksTo1970: 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 60 * 60 * 1e7, formatDate: function(e4, t4, i4) {
          if (!t4)
            return "";
          function s4(t5, e5, i5) {
            var s5 = "" + e5;
            if (c4(t5))
              for (; s5.length < i5; )
                s5 = "0" + s5;
            return s5;
          }
          function n3(t5, e5, i5, s5) {
            return (c4(t5) ? s5 : i5)[e5];
          }
          var o3, a4 = (i4 ? i4.dayNamesShort : null) || this._defaults.dayNamesShort, r4 = (i4 ? i4.dayNames : null) || this._defaults.dayNames, l4 = (i4 ? i4.monthNamesShort : null) || this._defaults.monthNamesShort, h4 = (i4 ? i4.monthNames : null) || this._defaults.monthNames, c4 = function(t5) {
            t5 = o3 + 1 < e4.length && e4.charAt(o3 + 1) === t5;
            return t5 && o3++, t5;
          }, u4 = "", d3 = false;
          if (t4)
            for (o3 = 0; o3 < e4.length; o3++)
              if (d3)
                "'" !== e4.charAt(o3) || c4("'") ? u4 += e4.charAt(o3) : d3 = false;
              else
                switch (e4.charAt(o3)) {
                  case "d":
                    u4 += s4("d", t4.getDate(), 2);
                    break;
                  case "D":
                    u4 += n3("D", t4.getDay(), a4, r4);
                    break;
                  case "o":
                    u4 += s4("o", Math.round((new Date(t4.getFullYear(), t4.getMonth(), t4.getDate()).getTime() - new Date(t4.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                    break;
                  case "m":
                    u4 += s4("m", t4.getMonth() + 1, 2);
                    break;
                  case "M":
                    u4 += n3("M", t4.getMonth(), l4, h4);
                    break;
                  case "y":
                    u4 += c4("y") ? t4.getFullYear() : (t4.getFullYear() % 100 < 10 ? "0" : "") + t4.getFullYear() % 100;
                    break;
                  case "@":
                    u4 += t4.getTime();
                    break;
                  case "!":
                    u4 += 1e4 * t4.getTime() + this._ticksTo1970;
                    break;
                  case "'":
                    c4("'") ? u4 += "'" : d3 = true;
                    break;
                  default:
                    u4 += e4.charAt(o3);
                }
          return u4;
        }, _possibleChars: function(e4) {
          for (var t4 = "", i4 = false, s4 = function(t5) {
            t5 = n3 + 1 < e4.length && e4.charAt(n3 + 1) === t5;
            return t5 && n3++, t5;
          }, n3 = 0; n3 < e4.length; n3++)
            if (i4)
              "'" !== e4.charAt(n3) || s4("'") ? t4 += e4.charAt(n3) : i4 = false;
            else
              switch (e4.charAt(n3)) {
                case "d":
                case "m":
                case "y":
                case "@":
                  t4 += "0123456789";
                  break;
                case "D":
                case "M":
                  return null;
                case "'":
                  s4("'") ? t4 += "'" : i4 = true;
                  break;
                default:
                  t4 += e4.charAt(n3);
              }
          return t4;
        }, _get: function(t4, e4) {
          return (void 0 !== t4.settings[e4] ? t4.settings : this._defaults)[e4];
        }, _setDateFromField: function(t4, e4) {
          if (t4.input.val() !== t4.lastVal) {
            var i4 = this._get(t4, "dateFormat"), s4 = t4.lastVal = t4.input ? t4.input.val() : null, n3 = this._getDefaultDate(t4), o3 = n3, a4 = this._getFormatConfig(t4);
            try {
              o3 = this.parseDate(i4, s4, a4) || n3;
            } catch (t5) {
              s4 = e4 ? "" : s4;
            }
            t4.selectedDay = o3.getDate(), t4.drawMonth = t4.selectedMonth = o3.getMonth(), t4.drawYear = t4.selectedYear = o3.getFullYear(), t4.currentDay = s4 ? o3.getDate() : 0, t4.currentMonth = s4 ? o3.getMonth() : 0, t4.currentYear = s4 ? o3.getFullYear() : 0, this._adjustInstDate(t4);
          }
        }, _getDefaultDate: function(t4) {
          return this._restrictMinMax(t4, this._determineDate(t4, this._get(t4, "defaultDate"), new Date()));
        }, _determineDate: function(r4, t4, e4) {
          var i4, s4, t4 = null == t4 || "" === t4 ? e4 : "string" == typeof t4 ? function(t5) {
            try {
              return V3.datepicker.parseDate(V3.datepicker._get(r4, "dateFormat"), t5, V3.datepicker._getFormatConfig(r4));
            } catch (t6) {
            }
            for (var e5 = (t5.toLowerCase().match(/^c/) ? V3.datepicker._getDate(r4) : null) || new Date(), i5 = e5.getFullYear(), s5 = e5.getMonth(), n3 = e5.getDate(), o3 = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, a4 = o3.exec(t5); a4; ) {
              switch (a4[2] || "d") {
                case "d":
                case "D":
                  n3 += parseInt(a4[1], 10);
                  break;
                case "w":
                case "W":
                  n3 += 7 * parseInt(a4[1], 10);
                  break;
                case "m":
                case "M":
                  s5 += parseInt(a4[1], 10), n3 = Math.min(n3, V3.datepicker._getDaysInMonth(i5, s5));
                  break;
                case "y":
                case "Y":
                  i5 += parseInt(a4[1], 10), n3 = Math.min(n3, V3.datepicker._getDaysInMonth(i5, s5));
              }
              a4 = o3.exec(t5);
            }
            return new Date(i5, s5, n3);
          }(t4) : "number" == typeof t4 ? isNaN(t4) ? e4 : (i4 = t4, (s4 = new Date()).setDate(s4.getDate() + i4), s4) : new Date(t4.getTime());
          return (t4 = t4 && "Invalid Date" === t4.toString() ? e4 : t4) && (t4.setHours(0), t4.setMinutes(0), t4.setSeconds(0), t4.setMilliseconds(0)), this._daylightSavingAdjust(t4);
        }, _daylightSavingAdjust: function(t4) {
          return t4 ? (t4.setHours(12 < t4.getHours() ? t4.getHours() + 2 : 0), t4) : null;
        }, _setDate: function(t4, e4, i4) {
          var s4 = !e4, n3 = t4.selectedMonth, o3 = t4.selectedYear, e4 = this._restrictMinMax(t4, this._determineDate(t4, e4, new Date()));
          t4.selectedDay = t4.currentDay = e4.getDate(), t4.drawMonth = t4.selectedMonth = t4.currentMonth = e4.getMonth(), t4.drawYear = t4.selectedYear = t4.currentYear = e4.getFullYear(), n3 === t4.selectedMonth && o3 === t4.selectedYear || i4 || this._notifyChange(t4), this._adjustInstDate(t4), t4.input && t4.input.val(s4 ? "" : this._formatDate(t4));
        }, _getDate: function(t4) {
          return !t4.currentYear || t4.input && "" === t4.input.val() ? null : this._daylightSavingAdjust(new Date(t4.currentYear, t4.currentMonth, t4.currentDay));
        }, _attachHandlers: function(t4) {
          var e4 = this._get(t4, "stepMonths"), i4 = "#" + t4.id.replace(/\\\\/g, "\\");
          t4.dpDiv.find("[data-handler]").map(function() {
            var t5 = { prev: function() {
              V3.datepicker._adjustDate(i4, -e4, "M");
            }, next: function() {
              V3.datepicker._adjustDate(i4, +e4, "M");
            }, hide: function() {
              V3.datepicker._hideDatepicker();
            }, today: function() {
              V3.datepicker._gotoToday(i4);
            }, selectDay: function() {
              return V3.datepicker._selectDay(i4, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), false;
            }, selectMonth: function() {
              return V3.datepicker._selectMonthYear(i4, this, "M"), false;
            }, selectYear: function() {
              return V3.datepicker._selectMonthYear(i4, this, "Y"), false;
            } };
            V3(this).on(this.getAttribute("data-event"), t5[this.getAttribute("data-handler")]);
          });
        }, _generateHTML: function(t4) {
          var e4, i4, s4, n3, o3, a4, r4, l4, h4, c4, u4, d3, p4, f4, g5, m4, _4, v4, b4, y4, w5, x5, k4, C4, D3, I4, T5, P3, M3, S3, H4, z4, A4 = new Date(), O3 = this._daylightSavingAdjust(new Date(A4.getFullYear(), A4.getMonth(), A4.getDate())), N4 = this._get(t4, "isRTL"), E2 = this._get(t4, "showButtonPanel"), W3 = this._get(t4, "hideIfNoPrevNext"), F4 = this._get(t4, "navigationAsDateFormat"), L4 = this._getNumberOfMonths(t4), R2 = this._get(t4, "showCurrentAtPos"), A4 = this._get(t4, "stepMonths"), Y2 = 1 !== L4[0] || 1 !== L4[1], B4 = this._daylightSavingAdjust(t4.currentDay ? new Date(t4.currentYear, t4.currentMonth, t4.currentDay) : new Date(9999, 9, 9)), j5 = this._getMinMaxDate(t4, "min"), q4 = this._getMinMaxDate(t4, "max"), K3 = t4.drawMonth - R2, U3 = t4.drawYear;
          if (K3 < 0 && (K3 += 12, U3--), q4)
            for (e4 = this._daylightSavingAdjust(new Date(q4.getFullYear(), q4.getMonth() - L4[0] * L4[1] + 1, q4.getDate())), e4 = j5 && e4 < j5 ? j5 : e4; this._daylightSavingAdjust(new Date(U3, K3, 1)) > e4; )
              --K3 < 0 && (K3 = 11, U3--);
          for (t4.drawMonth = K3, t4.drawYear = U3, R2 = this._get(t4, "prevText"), R2 = F4 ? this.formatDate(R2, this._daylightSavingAdjust(new Date(U3, K3 - A4, 1)), this._getFormatConfig(t4)) : R2, i4 = this._canAdjustMonth(t4, -1, U3, K3) ? V3("<a>").attr({ class: "ui-datepicker-prev ui-corner-all", "data-handler": "prev", "data-event": "click", title: R2 }).append(V3("<span>").addClass("ui-icon ui-icon-circle-triangle-" + (N4 ? "e" : "w")).text(R2))[0].outerHTML : W3 ? "" : V3("<a>").attr({ class: "ui-datepicker-prev ui-corner-all ui-state-disabled", title: R2 }).append(V3("<span>").addClass("ui-icon ui-icon-circle-triangle-" + (N4 ? "e" : "w")).text(R2))[0].outerHTML, R2 = this._get(t4, "nextText"), R2 = F4 ? this.formatDate(R2, this._daylightSavingAdjust(new Date(U3, K3 + A4, 1)), this._getFormatConfig(t4)) : R2, s4 = this._canAdjustMonth(t4, 1, U3, K3) ? V3("<a>").attr({ class: "ui-datepicker-next ui-corner-all", "data-handler": "next", "data-event": "click", title: R2 }).append(V3("<span>").addClass("ui-icon ui-icon-circle-triangle-" + (N4 ? "w" : "e")).text(R2))[0].outerHTML : W3 ? "" : V3("<a>").attr({ class: "ui-datepicker-next ui-corner-all ui-state-disabled", title: R2 }).append(V3("<span>").attr("class", "ui-icon ui-icon-circle-triangle-" + (N4 ? "w" : "e")).text(R2))[0].outerHTML, A4 = this._get(t4, "currentText"), W3 = this._get(t4, "gotoCurrent") && t4.currentDay ? B4 : O3, A4 = F4 ? this.formatDate(A4, W3, this._getFormatConfig(t4)) : A4, R2 = "", t4.inline || (R2 = V3("<button>").attr({ type: "button", class: "ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all", "data-handler": "hide", "data-event": "click" }).text(this._get(t4, "closeText"))[0].outerHTML), F4 = "", E2 && (F4 = V3("<div class='ui-datepicker-buttonpane ui-widget-content'>").append(N4 ? R2 : "").append(this._isInRange(t4, W3) ? V3("<button>").attr({ type: "button", class: "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all", "data-handler": "today", "data-event": "click" }).text(A4) : "").append(N4 ? "" : R2)[0].outerHTML), n3 = parseInt(this._get(t4, "firstDay"), 10), n3 = isNaN(n3) ? 0 : n3, o3 = this._get(t4, "showWeek"), a4 = this._get(t4, "dayNames"), r4 = this._get(t4, "dayNamesMin"), l4 = this._get(t4, "monthNames"), h4 = this._get(t4, "monthNamesShort"), c4 = this._get(t4, "beforeShowDay"), u4 = this._get(t4, "showOtherMonths"), d3 = this._get(t4, "selectOtherMonths"), p4 = this._getDefaultDate(t4), f4 = "", m4 = 0; m4 < L4[0]; m4++) {
            for (_4 = "", this.maxRows = 4, v4 = 0; v4 < L4[1]; v4++) {
              if (b4 = this._daylightSavingAdjust(new Date(U3, K3, t4.selectedDay)), y4 = " ui-corner-all", w5 = "", Y2) {
                if (w5 += "<div class='ui-datepicker-group", 1 < L4[1])
                  switch (v4) {
                    case 0:
                      w5 += " ui-datepicker-group-first", y4 = " ui-corner-" + (N4 ? "right" : "left");
                      break;
                    case L4[1] - 1:
                      w5 += " ui-datepicker-group-last", y4 = " ui-corner-" + (N4 ? "left" : "right");
                      break;
                    default:
                      w5 += " ui-datepicker-group-middle", y4 = "";
                  }
                w5 += "'>";
              }
              for (w5 += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + y4 + "'>" + (/all|left/.test(y4) && 0 === m4 ? N4 ? s4 : i4 : "") + (/all|right/.test(y4) && 0 === m4 ? N4 ? i4 : s4 : "") + this._generateMonthYearHeader(t4, K3, U3, j5, q4, 0 < m4 || 0 < v4, l4, h4) + "</div><table class='ui-datepicker-calendar'><thead><tr>", x5 = o3 ? "<th class='ui-datepicker-week-col'>" + this._get(t4, "weekHeader") + "</th>" : "", g5 = 0; g5 < 7; g5++)
                x5 += "<th scope='col'" + (5 <= (g5 + n3 + 6) % 7 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + a4[k4 = (g5 + n3) % 7] + "'>" + r4[k4] + "</span></th>";
              for (w5 += x5 + "</tr></thead><tbody>", D3 = this._getDaysInMonth(U3, K3), U3 === t4.selectedYear && K3 === t4.selectedMonth && (t4.selectedDay = Math.min(t4.selectedDay, D3)), C4 = (this._getFirstDayOfMonth(U3, K3) - n3 + 7) % 7, D3 = Math.ceil((C4 + D3) / 7), I4 = Y2 && this.maxRows > D3 ? this.maxRows : D3, this.maxRows = I4, T5 = this._daylightSavingAdjust(new Date(U3, K3, 1 - C4)), P3 = 0; P3 < I4; P3++) {
                for (w5 += "<tr>", M3 = o3 ? "<td class='ui-datepicker-week-col'>" + this._get(t4, "calculateWeek")(T5) + "</td>" : "", g5 = 0; g5 < 7; g5++)
                  S3 = c4 ? c4.apply(t4.input ? t4.input[0] : null, [T5]) : [true, ""], z4 = (H4 = T5.getMonth() !== K3) && !d3 || !S3[0] || j5 && T5 < j5 || q4 && q4 < T5, M3 += "<td class='" + (5 <= (g5 + n3 + 6) % 7 ? " ui-datepicker-week-end" : "") + (H4 ? " ui-datepicker-other-month" : "") + (T5.getTime() === b4.getTime() && K3 === t4.selectedMonth && t4._keyEvent || p4.getTime() === T5.getTime() && p4.getTime() === b4.getTime() ? " " + this._dayOverClass : "") + (z4 ? " " + this._unselectableClass + " ui-state-disabled" : "") + (H4 && !u4 ? "" : " " + S3[1] + (T5.getTime() === B4.getTime() ? " " + this._currentClass : "") + (T5.getTime() === O3.getTime() ? " ui-datepicker-today" : "")) + "'" + (H4 && !u4 || !S3[2] ? "" : " title='" + S3[2].replace(/'/g, "&#39;") + "'") + (z4 ? "" : " data-handler='selectDay' data-event='click' data-month='" + T5.getMonth() + "' data-year='" + T5.getFullYear() + "'") + ">" + (H4 && !u4 ? "&#xa0;" : z4 ? "<span class='ui-state-default'>" + T5.getDate() + "</span>" : "<a class='ui-state-default" + (T5.getTime() === O3.getTime() ? " ui-state-highlight" : "") + (T5.getTime() === B4.getTime() ? " ui-state-active" : "") + (H4 ? " ui-priority-secondary" : "") + "' href='#' aria-current='" + (T5.getTime() === B4.getTime() ? "true" : "false") + "' data-date='" + T5.getDate() + "'>" + T5.getDate() + "</a>") + "</td>", T5.setDate(T5.getDate() + 1), T5 = this._daylightSavingAdjust(T5);
                w5 += M3 + "</tr>";
              }
              11 < ++K3 && (K3 = 0, U3++), _4 += w5 += "</tbody></table>" + (Y2 ? "</div>" + (0 < L4[0] && v4 === L4[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
            }
            f4 += _4;
          }
          return f4 += F4, t4._keyEvent = false, f4;
        }, _generateMonthYearHeader: function(t4, e4, i4, s4, n3, o3, a4, r4) {
          var l4, h4, c4, u4, d3, p4, f4 = this._get(t4, "changeMonth"), g5 = this._get(t4, "changeYear"), m4 = this._get(t4, "showMonthAfterYear"), _4 = this._get(t4, "selectMonthLabel"), v4 = this._get(t4, "selectYearLabel"), b4 = "<div class='ui-datepicker-title'>", y4 = "";
          if (o3 || !f4)
            y4 += "<span class='ui-datepicker-month'>" + a4[e4] + "</span>";
          else {
            for (l4 = s4 && s4.getFullYear() === i4, h4 = n3 && n3.getFullYear() === i4, y4 += "<select class='ui-datepicker-month' aria-label='" + _4 + "' data-handler='selectMonth' data-event='change'>", c4 = 0; c4 < 12; c4++)
              (!l4 || c4 >= s4.getMonth()) && (!h4 || c4 <= n3.getMonth()) && (y4 += "<option value='" + c4 + "'" + (c4 === e4 ? " selected='selected'" : "") + ">" + r4[c4] + "</option>");
            y4 += "</select>";
          }
          if (m4 || (b4 += y4 + (!o3 && f4 && g5 ? "" : "&#xa0;")), !t4.yearshtml)
            if (t4.yearshtml = "", o3 || !g5)
              b4 += "<span class='ui-datepicker-year'>" + i4 + "</span>";
            else {
              for (a4 = this._get(t4, "yearRange").split(":"), u4 = new Date().getFullYear(), d3 = (_4 = function(t5) {
                t5 = t5.match(/c[+\-].*/) ? i4 + parseInt(t5.substring(1), 10) : t5.match(/[+\-].*/) ? u4 + parseInt(t5, 10) : parseInt(t5, 10);
                return isNaN(t5) ? u4 : t5;
              })(a4[0]), p4 = Math.max(d3, _4(a4[1] || "")), d3 = s4 ? Math.max(d3, s4.getFullYear()) : d3, p4 = n3 ? Math.min(p4, n3.getFullYear()) : p4, t4.yearshtml += "<select class='ui-datepicker-year' aria-label='" + v4 + "' data-handler='selectYear' data-event='change'>"; d3 <= p4; d3++)
                t4.yearshtml += "<option value='" + d3 + "'" + (d3 === i4 ? " selected='selected'" : "") + ">" + d3 + "</option>";
              t4.yearshtml += "</select>", b4 += t4.yearshtml, t4.yearshtml = null;
            }
          return b4 += this._get(t4, "yearSuffix"), m4 && (b4 += (!o3 && f4 && g5 ? "" : "&#xa0;") + y4), b4 += "</div>";
        }, _adjustInstDate: function(t4, e4, i4) {
          var s4 = t4.selectedYear + ("Y" === i4 ? e4 : 0), n3 = t4.selectedMonth + ("M" === i4 ? e4 : 0), e4 = Math.min(t4.selectedDay, this._getDaysInMonth(s4, n3)) + ("D" === i4 ? e4 : 0), e4 = this._restrictMinMax(t4, this._daylightSavingAdjust(new Date(s4, n3, e4)));
          t4.selectedDay = e4.getDate(), t4.drawMonth = t4.selectedMonth = e4.getMonth(), t4.drawYear = t4.selectedYear = e4.getFullYear(), "M" !== i4 && "Y" !== i4 || this._notifyChange(t4);
        }, _restrictMinMax: function(t4, e4) {
          var i4 = this._getMinMaxDate(t4, "min"), t4 = this._getMinMaxDate(t4, "max"), e4 = i4 && e4 < i4 ? i4 : e4;
          return t4 && t4 < e4 ? t4 : e4;
        }, _notifyChange: function(t4) {
          var e4 = this._get(t4, "onChangeMonthYear");
          e4 && e4.apply(t4.input ? t4.input[0] : null, [t4.selectedYear, t4.selectedMonth + 1, t4]);
        }, _getNumberOfMonths: function(t4) {
          t4 = this._get(t4, "numberOfMonths");
          return null == t4 ? [1, 1] : "number" == typeof t4 ? [1, t4] : t4;
        }, _getMinMaxDate: function(t4, e4) {
          return this._determineDate(t4, this._get(t4, e4 + "Date"), null);
        }, _getDaysInMonth: function(t4, e4) {
          return 32 - this._daylightSavingAdjust(new Date(t4, e4, 32)).getDate();
        }, _getFirstDayOfMonth: function(t4, e4) {
          return new Date(t4, e4, 1).getDay();
        }, _canAdjustMonth: function(t4, e4, i4, s4) {
          var n3 = this._getNumberOfMonths(t4), n3 = this._daylightSavingAdjust(new Date(i4, s4 + (e4 < 0 ? e4 : n3[0] * n3[1]), 1));
          return e4 < 0 && n3.setDate(this._getDaysInMonth(n3.getFullYear(), n3.getMonth())), this._isInRange(t4, n3);
        }, _isInRange: function(t4, e4) {
          var i4 = this._getMinMaxDate(t4, "min"), s4 = this._getMinMaxDate(t4, "max"), n3 = null, o3 = null, a4 = this._get(t4, "yearRange");
          return a4 && (t4 = a4.split(":"), a4 = new Date().getFullYear(), n3 = parseInt(t4[0], 10), o3 = parseInt(t4[1], 10), t4[0].match(/[+\-].*/) && (n3 += a4), t4[1].match(/[+\-].*/) && (o3 += a4)), (!i4 || e4.getTime() >= i4.getTime()) && (!s4 || e4.getTime() <= s4.getTime()) && (!n3 || e4.getFullYear() >= n3) && (!o3 || e4.getFullYear() <= o3);
        }, _getFormatConfig: function(t4) {
          var e4 = this._get(t4, "shortYearCutoff");
          return { shortYearCutoff: e4 = "string" != typeof e4 ? e4 : new Date().getFullYear() % 100 + parseInt(e4, 10), dayNamesShort: this._get(t4, "dayNamesShort"), dayNames: this._get(t4, "dayNames"), monthNamesShort: this._get(t4, "monthNamesShort"), monthNames: this._get(t4, "monthNames") };
        }, _formatDate: function(t4, e4, i4, s4) {
          e4 || (t4.currentDay = t4.selectedDay, t4.currentMonth = t4.selectedMonth, t4.currentYear = t4.selectedYear);
          e4 = e4 ? "object" == typeof e4 ? e4 : this._daylightSavingAdjust(new Date(s4, i4, e4)) : this._daylightSavingAdjust(new Date(t4.currentYear, t4.currentMonth, t4.currentDay));
          return this.formatDate(this._get(t4, "dateFormat"), e4, this._getFormatConfig(t4));
        } }), V3.fn.datepicker = function(t4) {
          if (!this.length)
            return this;
          V3.datepicker.initialized || (V3(document).on("mousedown", V3.datepicker._checkExternalClick), V3.datepicker.initialized = true), 0 === V3("#" + V3.datepicker._mainDivId).length && V3("body").append(V3.datepicker.dpDiv);
          var e4 = Array.prototype.slice.call(arguments, 1);
          return "string" == typeof t4 && ("isDisabled" === t4 || "getDate" === t4 || "widget" === t4) || "option" === t4 && 2 === arguments.length && "string" == typeof arguments[1] ? V3.datepicker["_" + t4 + "Datepicker"].apply(V3.datepicker, [this[0]].concat(e4)) : this.each(function() {
            "string" == typeof t4 ? V3.datepicker["_" + t4 + "Datepicker"].apply(V3.datepicker, [this].concat(e4)) : V3.datepicker._attachDatepicker(this, t4);
          });
        }, V3.datepicker = new st(), V3.datepicker.initialized = false, V3.datepicker.uuid = new Date().getTime(), V3.datepicker.version = "1.13.2";
        V3.datepicker, V3.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
        var rt = false;
        V3(document).on("mouseup", function() {
          rt = false;
        });
        V3.widget("ui.mouse", { version: "1.13.2", options: { cancel: "input, textarea, button, select, option", distance: 1, delay: 0 }, _mouseInit: function() {
          var e4 = this;
          this.element.on("mousedown." + this.widgetName, function(t4) {
            return e4._mouseDown(t4);
          }).on("click." + this.widgetName, function(t4) {
            if (true === V3.data(t4.target, e4.widgetName + ".preventClickEvent"))
              return V3.removeData(t4.target, e4.widgetName + ".preventClickEvent"), t4.stopImmediatePropagation(), false;
          }), this.started = false;
        }, _mouseDestroy: function() {
          this.element.off("." + this.widgetName), this._mouseMoveDelegate && this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
        }, _mouseDown: function(t4) {
          if (!rt) {
            this._mouseMoved = false, this._mouseStarted && this._mouseUp(t4), this._mouseDownEvent = t4;
            var e4 = this, i4 = 1 === t4.which, s4 = !("string" != typeof this.options.cancel || !t4.target.nodeName) && V3(t4.target).closest(this.options.cancel).length;
            return i4 && !s4 && this._mouseCapture(t4) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
              e4.mouseDelayMet = true;
            }, this.options.delay)), this._mouseDistanceMet(t4) && this._mouseDelayMet(t4) && (this._mouseStarted = false !== this._mouseStart(t4), !this._mouseStarted) ? (t4.preventDefault(), true) : (true === V3.data(t4.target, this.widgetName + ".preventClickEvent") && V3.removeData(t4.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(t5) {
              return e4._mouseMove(t5);
            }, this._mouseUpDelegate = function(t5) {
              return e4._mouseUp(t5);
            }, this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate), t4.preventDefault(), rt = true)) : true;
          }
        }, _mouseMove: function(t4) {
          if (this._mouseMoved) {
            if (V3.ui.ie && (!document.documentMode || document.documentMode < 9) && !t4.button)
              return this._mouseUp(t4);
            if (!t4.which) {
              if (t4.originalEvent.altKey || t4.originalEvent.ctrlKey || t4.originalEvent.metaKey || t4.originalEvent.shiftKey)
                this.ignoreMissingWhich = true;
              else if (!this.ignoreMissingWhich)
                return this._mouseUp(t4);
            }
          }
          return (t4.which || t4.button) && (this._mouseMoved = true), this._mouseStarted ? (this._mouseDrag(t4), t4.preventDefault()) : (this._mouseDistanceMet(t4) && this._mouseDelayMet(t4) && (this._mouseStarted = false !== this._mouseStart(this._mouseDownEvent, t4), this._mouseStarted ? this._mouseDrag(t4) : this._mouseUp(t4)), !this._mouseStarted);
        }, _mouseUp: function(t4) {
          this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = false, t4.target === this._mouseDownEvent.target && V3.data(t4.target, this.widgetName + ".preventClickEvent", true), this._mouseStop(t4)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer), this.ignoreMissingWhich = false, rt = false, t4.preventDefault();
        }, _mouseDistanceMet: function(t4) {
          return Math.max(Math.abs(this._mouseDownEvent.pageX - t4.pageX), Math.abs(this._mouseDownEvent.pageY - t4.pageY)) >= this.options.distance;
        }, _mouseDelayMet: function() {
          return this.mouseDelayMet;
        }, _mouseStart: function() {
        }, _mouseDrag: function() {
        }, _mouseStop: function() {
        }, _mouseCapture: function() {
          return true;
        } }), V3.ui.plugin = { add: function(t4, e4, i4) {
          var s4, n3 = V3.ui[t4].prototype;
          for (s4 in i4)
            n3.plugins[s4] = n3.plugins[s4] || [], n3.plugins[s4].push([e4, i4[s4]]);
        }, call: function(t4, e4, i4, s4) {
          var n3, o3 = t4.plugins[e4];
          if (o3 && (s4 || t4.element[0].parentNode && 11 !== t4.element[0].parentNode.nodeType))
            for (n3 = 0; n3 < o3.length; n3++)
              t4.options[o3[n3][0]] && o3[n3][1].apply(t4.element, i4);
        } }, V3.ui.safeBlur = function(t4) {
          t4 && "body" !== t4.nodeName.toLowerCase() && V3(t4).trigger("blur");
        };
        V3.widget("ui.draggable", V3.ui.mouse, { version: "1.13.2", widgetEventPrefix: "drag", options: { addClasses: true, appendTo: "parent", axis: false, connectToSortable: false, containment: false, cursor: "auto", cursorAt: false, grid: false, handle: false, helper: "original", iframeFix: false, opacity: false, refreshPositions: false, revert: false, revertDuration: 500, scope: "default", scroll: true, scrollSensitivity: 20, scrollSpeed: 20, snap: false, snapMode: "both", snapTolerance: 20, stack: false, zIndex: false, drag: null, start: null, stop: null }, _create: function() {
          "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass("ui-draggable"), this._setHandleClassName(), this._mouseInit();
        }, _setOption: function(t4, e4) {
          this._super(t4, e4), "handle" === t4 && (this._removeHandleClassName(), this._setHandleClassName());
        }, _destroy: function() {
          (this.helper || this.element).is(".ui-draggable-dragging") ? this.destroyOnClear = true : (this._removeHandleClassName(), this._mouseDestroy());
        }, _mouseCapture: function(t4) {
          var e4 = this.options;
          return !(this.helper || e4.disabled || 0 < V3(t4.target).closest(".ui-resizable-handle").length) && (this.handle = this._getHandle(t4), !!this.handle && (this._blurActiveElement(t4), this._blockFrames(true === e4.iframeFix ? "iframe" : e4.iframeFix), true));
        }, _blockFrames: function(t4) {
          this.iframeBlocks = this.document.find(t4).map(function() {
            var t5 = V3(this);
            return V3("<div>").css("position", "absolute").appendTo(t5.parent()).outerWidth(t5.outerWidth()).outerHeight(t5.outerHeight()).offset(t5.offset())[0];
          });
        }, _unblockFrames: function() {
          this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
        }, _blurActiveElement: function(t4) {
          var e4 = V3.ui.safeActiveElement(this.document[0]);
          V3(t4.target).closest(e4).length || V3.ui.safeBlur(e4);
        }, _mouseStart: function(t4) {
          var e4 = this.options;
          return this.helper = this._createHelper(t4), this._addClass(this.helper, "ui-draggable-dragging"), this._cacheHelperProportions(), V3.ui.ddmanager && (V3.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(true), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = 0 < this.helper.parents().filter(function() {
            return "fixed" === V3(this).css("position");
          }).length, this.positionAbs = this.element.offset(), this._refreshOffsets(t4), this.originalPosition = this.position = this._generatePosition(t4, false), this.originalPageX = t4.pageX, this.originalPageY = t4.pageY, e4.cursorAt && this._adjustOffsetFromHelper(e4.cursorAt), this._setContainment(), false === this._trigger("start", t4) ? (this._clear(), false) : (this._cacheHelperProportions(), V3.ui.ddmanager && !e4.dropBehaviour && V3.ui.ddmanager.prepareOffsets(this, t4), this._mouseDrag(t4, true), V3.ui.ddmanager && V3.ui.ddmanager.dragStart(this, t4), true);
        }, _refreshOffsets: function(t4) {
          this.offset = { top: this.positionAbs.top - this.margins.top, left: this.positionAbs.left - this.margins.left, scroll: false, parent: this._getParentOffset(), relative: this._getRelativeOffset() }, this.offset.click = { left: t4.pageX - this.offset.left, top: t4.pageY - this.offset.top };
        }, _mouseDrag: function(t4, e4) {
          if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(t4, true), this.positionAbs = this._convertPositionTo("absolute"), !e4) {
            e4 = this._uiHash();
            if (false === this._trigger("drag", t4, e4))
              return this._mouseUp(new V3.Event("mouseup", t4)), false;
            this.position = e4.position;
          }
          return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", V3.ui.ddmanager && V3.ui.ddmanager.drag(this, t4), false;
        }, _mouseStop: function(t4) {
          var e4 = this, i4 = false;
          return V3.ui.ddmanager && !this.options.dropBehaviour && (i4 = V3.ui.ddmanager.drop(this, t4)), this.dropped && (i4 = this.dropped, this.dropped = false), "invalid" === this.options.revert && !i4 || "valid" === this.options.revert && i4 || true === this.options.revert || "function" == typeof this.options.revert && this.options.revert.call(this.element, i4) ? V3(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
            false !== e4._trigger("stop", t4) && e4._clear();
          }) : false !== this._trigger("stop", t4) && this._clear(), false;
        }, _mouseUp: function(t4) {
          return this._unblockFrames(), V3.ui.ddmanager && V3.ui.ddmanager.dragStop(this, t4), this.handleElement.is(t4.target) && this.element.trigger("focus"), V3.ui.mouse.prototype._mouseUp.call(this, t4);
        }, cancel: function() {
          return this.helper.is(".ui-draggable-dragging") ? this._mouseUp(new V3.Event("mouseup", { target: this.element[0] })) : this._clear(), this;
        }, _getHandle: function(t4) {
          return !this.options.handle || !!V3(t4.target).closest(this.element.find(this.options.handle)).length;
        }, _setHandleClassName: function() {
          this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this._addClass(this.handleElement, "ui-draggable-handle");
        }, _removeHandleClassName: function() {
          this._removeClass(this.handleElement, "ui-draggable-handle");
        }, _createHelper: function(t4) {
          var e4 = this.options, i4 = "function" == typeof e4.helper, t4 = i4 ? V3(e4.helper.apply(this.element[0], [t4])) : "clone" === e4.helper ? this.element.clone().removeAttr("id") : this.element;
          return t4.parents("body").length || t4.appendTo("parent" === e4.appendTo ? this.element[0].parentNode : e4.appendTo), i4 && t4[0] === this.element[0] && this._setPositionRelative(), t4[0] === this.element[0] || /(fixed|absolute)/.test(t4.css("position")) || t4.css("position", "absolute"), t4;
        }, _setPositionRelative: function() {
          /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative");
        }, _adjustOffsetFromHelper: function(t4) {
          "string" == typeof t4 && (t4 = t4.split(" ")), "left" in (t4 = Array.isArray(t4) ? { left: +t4[0], top: +t4[1] || 0 } : t4) && (this.offset.click.left = t4.left + this.margins.left), "right" in t4 && (this.offset.click.left = this.helperProportions.width - t4.right + this.margins.left), "top" in t4 && (this.offset.click.top = t4.top + this.margins.top), "bottom" in t4 && (this.offset.click.top = this.helperProportions.height - t4.bottom + this.margins.top);
        }, _isRootNode: function(t4) {
          return /(html|body)/i.test(t4.tagName) || t4 === this.document[0];
        }, _getParentOffset: function() {
          var t4 = this.offsetParent.offset(), e4 = this.document[0];
          return "absolute" === this.cssPosition && this.scrollParent[0] !== e4 && V3.contains(this.scrollParent[0], this.offsetParent[0]) && (t4.left += this.scrollParent.scrollLeft(), t4.top += this.scrollParent.scrollTop()), { top: (t4 = this._isRootNode(this.offsetParent[0]) ? { top: 0, left: 0 } : t4).top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: t4.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) };
        }, _getRelativeOffset: function() {
          if ("relative" !== this.cssPosition)
            return { top: 0, left: 0 };
          var t4 = this.element.position(), e4 = this._isRootNode(this.scrollParent[0]);
          return { top: t4.top - (parseInt(this.helper.css("top"), 10) || 0) + (e4 ? 0 : this.scrollParent.scrollTop()), left: t4.left - (parseInt(this.helper.css("left"), 10) || 0) + (e4 ? 0 : this.scrollParent.scrollLeft()) };
        }, _cacheMargins: function() {
          this.margins = { left: parseInt(this.element.css("marginLeft"), 10) || 0, top: parseInt(this.element.css("marginTop"), 10) || 0, right: parseInt(this.element.css("marginRight"), 10) || 0, bottom: parseInt(this.element.css("marginBottom"), 10) || 0 };
        }, _cacheHelperProportions: function() {
          this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() };
        }, _setContainment: function() {
          var t4, e4, i4, s4 = this.options, n3 = this.document[0];
          this.relativeContainer = null, s4.containment ? "window" !== s4.containment ? "document" !== s4.containment ? s4.containment.constructor !== Array ? ("parent" === s4.containment && (s4.containment = this.helper[0].parentNode), (i4 = (e4 = V3(s4.containment))[0]) && (t4 = /(scroll|auto)/.test(e4.css("overflow")), this.containment = [(parseInt(e4.css("borderLeftWidth"), 10) || 0) + (parseInt(e4.css("paddingLeft"), 10) || 0), (parseInt(e4.css("borderTopWidth"), 10) || 0) + (parseInt(e4.css("paddingTop"), 10) || 0), (t4 ? Math.max(i4.scrollWidth, i4.offsetWidth) : i4.offsetWidth) - (parseInt(e4.css("borderRightWidth"), 10) || 0) - (parseInt(e4.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (t4 ? Math.max(i4.scrollHeight, i4.offsetHeight) : i4.offsetHeight) - (parseInt(e4.css("borderBottomWidth"), 10) || 0) - (parseInt(e4.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = e4)) : this.containment = s4.containment : this.containment = [0, 0, V3(n3).width() - this.helperProportions.width - this.margins.left, (V3(n3).height() || n3.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top] : this.containment = [V3(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, V3(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, V3(window).scrollLeft() + V3(window).width() - this.helperProportions.width - this.margins.left, V3(window).scrollTop() + (V3(window).height() || n3.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top] : this.containment = null;
        }, _convertPositionTo: function(t4, e4) {
          e4 = e4 || this.position;
          var i4 = "absolute" === t4 ? 1 : -1, t4 = this._isRootNode(this.scrollParent[0]);
          return { top: e4.top + this.offset.relative.top * i4 + this.offset.parent.top * i4 - ("fixed" === this.cssPosition ? -this.offset.scroll.top : t4 ? 0 : this.offset.scroll.top) * i4, left: e4.left + this.offset.relative.left * i4 + this.offset.parent.left * i4 - ("fixed" === this.cssPosition ? -this.offset.scroll.left : t4 ? 0 : this.offset.scroll.left) * i4 };
        }, _generatePosition: function(t4, e4) {
          var i4, s4 = this.options, n3 = this._isRootNode(this.scrollParent[0]), o3 = t4.pageX, a4 = t4.pageY;
          return n3 && this.offset.scroll || (this.offset.scroll = { top: this.scrollParent.scrollTop(), left: this.scrollParent.scrollLeft() }), e4 && (this.containment && (i4 = this.relativeContainer ? (i4 = this.relativeContainer.offset(), [this.containment[0] + i4.left, this.containment[1] + i4.top, this.containment[2] + i4.left, this.containment[3] + i4.top]) : this.containment, t4.pageX - this.offset.click.left < i4[0] && (o3 = i4[0] + this.offset.click.left), t4.pageY - this.offset.click.top < i4[1] && (a4 = i4[1] + this.offset.click.top), t4.pageX - this.offset.click.left > i4[2] && (o3 = i4[2] + this.offset.click.left), t4.pageY - this.offset.click.top > i4[3] && (a4 = i4[3] + this.offset.click.top)), s4.grid && (t4 = s4.grid[1] ? this.originalPageY + Math.round((a4 - this.originalPageY) / s4.grid[1]) * s4.grid[1] : this.originalPageY, a4 = !i4 || t4 - this.offset.click.top >= i4[1] || t4 - this.offset.click.top > i4[3] ? t4 : t4 - this.offset.click.top >= i4[1] ? t4 - s4.grid[1] : t4 + s4.grid[1], t4 = s4.grid[0] ? this.originalPageX + Math.round((o3 - this.originalPageX) / s4.grid[0]) * s4.grid[0] : this.originalPageX, o3 = !i4 || t4 - this.offset.click.left >= i4[0] || t4 - this.offset.click.left > i4[2] ? t4 : t4 - this.offset.click.left >= i4[0] ? t4 - s4.grid[0] : t4 + s4.grid[0]), "y" === s4.axis && (o3 = this.originalPageX), "x" === s4.axis && (a4 = this.originalPageY)), { top: a4 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : n3 ? 0 : this.offset.scroll.top), left: o3 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : n3 ? 0 : this.offset.scroll.left) };
        }, _clear: function() {
          this._removeClass(this.helper, "ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = false, this.destroyOnClear && this.destroy();
        }, _trigger: function(t4, e4, i4) {
          return i4 = i4 || this._uiHash(), V3.ui.plugin.call(this, t4, [e4, i4, this], true), /^(drag|start|stop)/.test(t4) && (this.positionAbs = this._convertPositionTo("absolute"), i4.offset = this.positionAbs), V3.Widget.prototype._trigger.call(this, t4, e4, i4);
        }, plugins: {}, _uiHash: function() {
          return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs };
        } }), V3.ui.plugin.add("draggable", "connectToSortable", { start: function(e4, t4, i4) {
          var s4 = V3.extend({}, t4, { item: i4.element });
          i4.sortables = [], V3(i4.options.connectToSortable).each(function() {
            var t5 = V3(this).sortable("instance");
            t5 && !t5.options.disabled && (i4.sortables.push(t5), t5.refreshPositions(), t5._trigger("activate", e4, s4));
          });
        }, stop: function(e4, t4, i4) {
          var s4 = V3.extend({}, t4, { item: i4.element });
          i4.cancelHelperRemoval = false, V3.each(i4.sortables, function() {
            var t5 = this;
            t5.isOver ? (t5.isOver = 0, i4.cancelHelperRemoval = true, t5.cancelHelperRemoval = false, t5._storedCSS = { position: t5.placeholder.css("position"), top: t5.placeholder.css("top"), left: t5.placeholder.css("left") }, t5._mouseStop(e4), t5.options.helper = t5.options._helper) : (t5.cancelHelperRemoval = true, t5._trigger("deactivate", e4, s4));
          });
        }, drag: function(i4, s4, n3) {
          V3.each(n3.sortables, function() {
            var t4 = false, e4 = this;
            e4.positionAbs = n3.positionAbs, e4.helperProportions = n3.helperProportions, e4.offset.click = n3.offset.click, e4._intersectsWith(e4.containerCache) && (t4 = true, V3.each(n3.sortables, function() {
              return this.positionAbs = n3.positionAbs, this.helperProportions = n3.helperProportions, this.offset.click = n3.offset.click, t4 = this !== e4 && this._intersectsWith(this.containerCache) && V3.contains(e4.element[0], this.element[0]) ? false : t4;
            })), t4 ? (e4.isOver || (e4.isOver = 1, n3._parent = s4.helper.parent(), e4.currentItem = s4.helper.appendTo(e4.element).data("ui-sortable-item", true), e4.options._helper = e4.options.helper, e4.options.helper = function() {
              return s4.helper[0];
            }, i4.target = e4.currentItem[0], e4._mouseCapture(i4, true), e4._mouseStart(i4, true, true), e4.offset.click.top = n3.offset.click.top, e4.offset.click.left = n3.offset.click.left, e4.offset.parent.left -= n3.offset.parent.left - e4.offset.parent.left, e4.offset.parent.top -= n3.offset.parent.top - e4.offset.parent.top, n3._trigger("toSortable", i4), n3.dropped = e4.element, V3.each(n3.sortables, function() {
              this.refreshPositions();
            }), n3.currentItem = n3.element, e4.fromOutside = n3), e4.currentItem && (e4._mouseDrag(i4), s4.position = e4.position)) : e4.isOver && (e4.isOver = 0, e4.cancelHelperRemoval = true, e4.options._revert = e4.options.revert, e4.options.revert = false, e4._trigger("out", i4, e4._uiHash(e4)), e4._mouseStop(i4, true), e4.options.revert = e4.options._revert, e4.options.helper = e4.options._helper, e4.placeholder && e4.placeholder.remove(), s4.helper.appendTo(n3._parent), n3._refreshOffsets(i4), s4.position = n3._generatePosition(i4, true), n3._trigger("fromSortable", i4), n3.dropped = false, V3.each(n3.sortables, function() {
              this.refreshPositions();
            }));
          });
        } }), V3.ui.plugin.add("draggable", "cursor", { start: function(t4, e4, i4) {
          var s4 = V3("body"), i4 = i4.options;
          s4.css("cursor") && (i4._cursor = s4.css("cursor")), s4.css("cursor", i4.cursor);
        }, stop: function(t4, e4, i4) {
          i4 = i4.options;
          i4._cursor && V3("body").css("cursor", i4._cursor);
        } }), V3.ui.plugin.add("draggable", "opacity", { start: function(t4, e4, i4) {
          e4 = V3(e4.helper), i4 = i4.options;
          e4.css("opacity") && (i4._opacity = e4.css("opacity")), e4.css("opacity", i4.opacity);
        }, stop: function(t4, e4, i4) {
          i4 = i4.options;
          i4._opacity && V3(e4.helper).css("opacity", i4._opacity);
        } }), V3.ui.plugin.add("draggable", "scroll", { start: function(t4, e4, i4) {
          i4.scrollParentNotHidden || (i4.scrollParentNotHidden = i4.helper.scrollParent(false)), i4.scrollParentNotHidden[0] !== i4.document[0] && "HTML" !== i4.scrollParentNotHidden[0].tagName && (i4.overflowOffset = i4.scrollParentNotHidden.offset());
        }, drag: function(t4, e4, i4) {
          var s4 = i4.options, n3 = false, o3 = i4.scrollParentNotHidden[0], a4 = i4.document[0];
          o3 !== a4 && "HTML" !== o3.tagName ? (s4.axis && "x" === s4.axis || (i4.overflowOffset.top + o3.offsetHeight - t4.pageY < s4.scrollSensitivity ? o3.scrollTop = n3 = o3.scrollTop + s4.scrollSpeed : t4.pageY - i4.overflowOffset.top < s4.scrollSensitivity && (o3.scrollTop = n3 = o3.scrollTop - s4.scrollSpeed)), s4.axis && "y" === s4.axis || (i4.overflowOffset.left + o3.offsetWidth - t4.pageX < s4.scrollSensitivity ? o3.scrollLeft = n3 = o3.scrollLeft + s4.scrollSpeed : t4.pageX - i4.overflowOffset.left < s4.scrollSensitivity && (o3.scrollLeft = n3 = o3.scrollLeft - s4.scrollSpeed))) : (s4.axis && "x" === s4.axis || (t4.pageY - V3(a4).scrollTop() < s4.scrollSensitivity ? n3 = V3(a4).scrollTop(V3(a4).scrollTop() - s4.scrollSpeed) : V3(window).height() - (t4.pageY - V3(a4).scrollTop()) < s4.scrollSensitivity && (n3 = V3(a4).scrollTop(V3(a4).scrollTop() + s4.scrollSpeed))), s4.axis && "y" === s4.axis || (t4.pageX - V3(a4).scrollLeft() < s4.scrollSensitivity ? n3 = V3(a4).scrollLeft(V3(a4).scrollLeft() - s4.scrollSpeed) : V3(window).width() - (t4.pageX - V3(a4).scrollLeft()) < s4.scrollSensitivity && (n3 = V3(a4).scrollLeft(V3(a4).scrollLeft() + s4.scrollSpeed)))), false !== n3 && V3.ui.ddmanager && !s4.dropBehaviour && V3.ui.ddmanager.prepareOffsets(i4, t4);
        } }), V3.ui.plugin.add("draggable", "snap", { start: function(t4, e4, i4) {
          var s4 = i4.options;
          i4.snapElements = [], V3(s4.snap.constructor !== String ? s4.snap.items || ":data(ui-draggable)" : s4.snap).each(function() {
            var t5 = V3(this), e5 = t5.offset();
            this !== i4.element[0] && i4.snapElements.push({ item: this, width: t5.outerWidth(), height: t5.outerHeight(), top: e5.top, left: e5.left });
          });
        }, drag: function(t4, e4, i4) {
          for (var s4, n3, o3, a4, r4, l4, h4, c4, u4, d3 = i4.options, p4 = d3.snapTolerance, f4 = e4.offset.left, g5 = f4 + i4.helperProportions.width, m4 = e4.offset.top, _4 = m4 + i4.helperProportions.height, v4 = i4.snapElements.length - 1; 0 <= v4; v4--)
            l4 = (r4 = i4.snapElements[v4].left - i4.margins.left) + i4.snapElements[v4].width, c4 = (h4 = i4.snapElements[v4].top - i4.margins.top) + i4.snapElements[v4].height, g5 < r4 - p4 || l4 + p4 < f4 || _4 < h4 - p4 || c4 + p4 < m4 || !V3.contains(i4.snapElements[v4].item.ownerDocument, i4.snapElements[v4].item) ? (i4.snapElements[v4].snapping && i4.options.snap.release && i4.options.snap.release.call(i4.element, t4, V3.extend(i4._uiHash(), { snapItem: i4.snapElements[v4].item })), i4.snapElements[v4].snapping = false) : ("inner" !== d3.snapMode && (s4 = Math.abs(h4 - _4) <= p4, n3 = Math.abs(c4 - m4) <= p4, o3 = Math.abs(r4 - g5) <= p4, a4 = Math.abs(l4 - f4) <= p4, s4 && (e4.position.top = i4._convertPositionTo("relative", { top: h4 - i4.helperProportions.height, left: 0 }).top), n3 && (e4.position.top = i4._convertPositionTo("relative", { top: c4, left: 0 }).top), o3 && (e4.position.left = i4._convertPositionTo("relative", { top: 0, left: r4 - i4.helperProportions.width }).left), a4 && (e4.position.left = i4._convertPositionTo("relative", { top: 0, left: l4 }).left)), u4 = s4 || n3 || o3 || a4, "outer" !== d3.snapMode && (s4 = Math.abs(h4 - m4) <= p4, n3 = Math.abs(c4 - _4) <= p4, o3 = Math.abs(r4 - f4) <= p4, a4 = Math.abs(l4 - g5) <= p4, s4 && (e4.position.top = i4._convertPositionTo("relative", { top: h4, left: 0 }).top), n3 && (e4.position.top = i4._convertPositionTo("relative", { top: c4 - i4.helperProportions.height, left: 0 }).top), o3 && (e4.position.left = i4._convertPositionTo("relative", { top: 0, left: r4 }).left), a4 && (e4.position.left = i4._convertPositionTo("relative", { top: 0, left: l4 - i4.helperProportions.width }).left)), !i4.snapElements[v4].snapping && (s4 || n3 || o3 || a4 || u4) && i4.options.snap.snap && i4.options.snap.snap.call(i4.element, t4, V3.extend(i4._uiHash(), { snapItem: i4.snapElements[v4].item })), i4.snapElements[v4].snapping = s4 || n3 || o3 || a4 || u4);
        } }), V3.ui.plugin.add("draggable", "stack", { start: function(t4, e4, i4) {
          var s4, i4 = i4.options, i4 = V3.makeArray(V3(i4.stack)).sort(function(t5, e5) {
            return (parseInt(V3(t5).css("zIndex"), 10) || 0) - (parseInt(V3(e5).css("zIndex"), 10) || 0);
          });
          i4.length && (s4 = parseInt(V3(i4[0]).css("zIndex"), 10) || 0, V3(i4).each(function(t5) {
            V3(this).css("zIndex", s4 + t5);
          }), this.css("zIndex", s4 + i4.length));
        } }), V3.ui.plugin.add("draggable", "zIndex", { start: function(t4, e4, i4) {
          e4 = V3(e4.helper), i4 = i4.options;
          e4.css("zIndex") && (i4._zIndex = e4.css("zIndex")), e4.css("zIndex", i4.zIndex);
        }, stop: function(t4, e4, i4) {
          i4 = i4.options;
          i4._zIndex && V3(e4.helper).css("zIndex", i4._zIndex);
        } });
        V3.ui.draggable;
        V3.widget("ui.resizable", V3.ui.mouse, { version: "1.13.2", widgetEventPrefix: "resize", options: { alsoResize: false, animate: false, animateDuration: "slow", animateEasing: "swing", aspectRatio: false, autoHide: false, classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" }, containment: false, ghost: false, grid: false, handles: "e,s,se", helper: false, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 90, resize: null, start: null, stop: null }, _num: function(t4) {
          return parseFloat(t4) || 0;
        }, _isNumber: function(t4) {
          return !isNaN(parseFloat(t4));
        }, _hasScroll: function(t4, e4) {
          if ("hidden" === V3(t4).css("overflow"))
            return false;
          var i4 = e4 && "left" === e4 ? "scrollLeft" : "scrollTop", e4 = false;
          if (0 < t4[i4])
            return true;
          try {
            t4[i4] = 1, e4 = 0 < t4[i4], t4[i4] = 0;
          } catch (t5) {
          }
          return e4;
        }, _create: function() {
          var t4, e4 = this.options, i4 = this;
          this._addClass("ui-resizable"), V3.extend(this, { _aspectRatio: !!e4.aspectRatio, aspectRatio: e4.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: e4.helper || e4.ghost || e4.animate ? e4.helper || "ui-resizable-helper" : null }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(V3("<div class='ui-wrapper'></div>").css({ overflow: "hidden", position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = true, t4 = { marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom"), marginLeft: this.originalElement.css("marginLeft") }, this.element.css(t4), this.originalElement.css("margin", 0), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })), this.originalElement.css(t4), this._proportionallyResize()), this._setupHandles(), e4.autoHide && V3(this.element).on("mouseenter", function() {
            e4.disabled || (i4._removeClass("ui-resizable-autohide"), i4._handles.show());
          }).on("mouseleave", function() {
            e4.disabled || i4.resizing || (i4._addClass("ui-resizable-autohide"), i4._handles.hide());
          }), this._mouseInit();
        }, _destroy: function() {
          this._mouseDestroy(), this._addedHandles.remove();
          function t4(t5) {
            V3(t5).removeData("resizable").removeData("ui-resizable").off(".resizable");
          }
          var e4;
          return this.elementIsWrapper && (t4(this.element), e4 = this.element, this.originalElement.css({ position: e4.css("position"), width: e4.outerWidth(), height: e4.outerHeight(), top: e4.css("top"), left: e4.css("left") }).insertAfter(e4), e4.remove()), this.originalElement.css("resize", this.originalResizeStyle), t4(this.originalElement), this;
        }, _setOption: function(t4, e4) {
          switch (this._super(t4, e4), t4) {
            case "handles":
              this._removeHandles(), this._setupHandles();
              break;
            case "aspectRatio":
              this._aspectRatio = !!e4;
          }
        }, _setupHandles: function() {
          var t4, e4, i4, s4, n3, o3 = this.options, a4 = this;
          if (this.handles = o3.handles || (V3(".ui-resizable-handle", this.element).length ? { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" } : "e,s,se"), this._handles = V3(), this._addedHandles = V3(), this.handles.constructor === String)
            for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), i4 = this.handles.split(","), this.handles = {}, e4 = 0; e4 < i4.length; e4++)
              s4 = "ui-resizable-" + (t4 = String.prototype.trim.call(i4[e4])), n3 = V3("<div>"), this._addClass(n3, "ui-resizable-handle " + s4), n3.css({ zIndex: o3.zIndex }), this.handles[t4] = ".ui-resizable-" + t4, this.element.children(this.handles[t4]).length || (this.element.append(n3), this._addedHandles = this._addedHandles.add(n3));
          this._renderAxis = function(t5) {
            var e5, i5, s5;
            for (e5 in t5 = t5 || this.element, this.handles)
              this.handles[e5].constructor === String ? this.handles[e5] = this.element.children(this.handles[e5]).first().show() : (this.handles[e5].jquery || this.handles[e5].nodeType) && (this.handles[e5] = V3(this.handles[e5]), this._on(this.handles[e5], { mousedown: a4._mouseDown })), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (i5 = V3(this.handles[e5], this.element), s5 = /sw|ne|nw|se|n|s/.test(e5) ? i5.outerHeight() : i5.outerWidth(), i5 = ["padding", /ne|nw|n/.test(e5) ? "Top" : /se|sw|s/.test(e5) ? "Bottom" : /^e$/.test(e5) ? "Right" : "Left"].join(""), t5.css(i5, s5), this._proportionallyResize()), this._handles = this._handles.add(this.handles[e5]);
          }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), this._handles.disableSelection(), this._handles.on("mouseover", function() {
            a4.resizing || (this.className && (n3 = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), a4.axis = n3 && n3[1] ? n3[1] : "se");
          }), o3.autoHide && (this._handles.hide(), this._addClass("ui-resizable-autohide"));
        }, _removeHandles: function() {
          this._addedHandles.remove();
        }, _mouseCapture: function(t4) {
          var e4, i4, s4 = false;
          for (e4 in this.handles)
            (i4 = V3(this.handles[e4])[0]) !== t4.target && !V3.contains(i4, t4.target) || (s4 = true);
          return !this.options.disabled && s4;
        }, _mouseStart: function(t4) {
          var e4, i4, s4 = this.options, n3 = this.element;
          return this.resizing = true, this._renderProxy(), e4 = this._num(this.helper.css("left")), i4 = this._num(this.helper.css("top")), s4.containment && (e4 += V3(s4.containment).scrollLeft() || 0, i4 += V3(s4.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = { left: e4, top: i4 }, this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: n3.width(), height: n3.height() }, this.originalSize = this._helper ? { width: n3.outerWidth(), height: n3.outerHeight() } : { width: n3.width(), height: n3.height() }, this.sizeDiff = { width: n3.outerWidth() - n3.width(), height: n3.outerHeight() - n3.height() }, this.originalPosition = { left: e4, top: i4 }, this.originalMousePosition = { left: t4.pageX, top: t4.pageY }, this.aspectRatio = "number" == typeof s4.aspectRatio ? s4.aspectRatio : this.originalSize.width / this.originalSize.height || 1, s4 = V3(".ui-resizable-" + this.axis).css("cursor"), V3("body").css("cursor", "auto" === s4 ? this.axis + "-resize" : s4), this._addClass("ui-resizable-resizing"), this._propagate("start", t4), true;
        }, _mouseDrag: function(t4) {
          var e4 = this.originalMousePosition, i4 = this.axis, s4 = t4.pageX - e4.left || 0, e4 = t4.pageY - e4.top || 0, i4 = this._change[i4];
          return this._updatePrevProperties(), i4 && (e4 = i4.apply(this, [t4, s4, e4]), this._updateVirtualBoundaries(t4.shiftKey), (this._aspectRatio || t4.shiftKey) && (e4 = this._updateRatio(e4, t4)), e4 = this._respectSize(e4, t4), this._updateCache(e4), this._propagate("resize", t4), e4 = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), V3.isEmptyObject(e4) || (this._updatePrevProperties(), this._trigger("resize", t4, this.ui()), this._applyChanges())), false;
        }, _mouseStop: function(t4) {
          this.resizing = false;
          var e4, i4, s4, n3 = this.options, o3 = this;
          return this._helper && (s4 = (e4 = (i4 = this._proportionallyResizeElements).length && /textarea/i.test(i4[0].nodeName)) && this._hasScroll(i4[0], "left") ? 0 : o3.sizeDiff.height, i4 = e4 ? 0 : o3.sizeDiff.width, e4 = { width: o3.helper.width() - i4, height: o3.helper.height() - s4 }, i4 = parseFloat(o3.element.css("left")) + (o3.position.left - o3.originalPosition.left) || null, s4 = parseFloat(o3.element.css("top")) + (o3.position.top - o3.originalPosition.top) || null, n3.animate || this.element.css(V3.extend(e4, { top: s4, left: i4 })), o3.helper.height(o3.size.height), o3.helper.width(o3.size.width), this._helper && !n3.animate && this._proportionallyResize()), V3("body").css("cursor", "auto"), this._removeClass("ui-resizable-resizing"), this._propagate("stop", t4), this._helper && this.helper.remove(), false;
        }, _updatePrevProperties: function() {
          this.prevPosition = { top: this.position.top, left: this.position.left }, this.prevSize = { width: this.size.width, height: this.size.height };
        }, _applyChanges: function() {
          var t4 = {};
          return this.position.top !== this.prevPosition.top && (t4.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (t4.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (t4.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (t4.height = this.size.height + "px"), this.helper.css(t4), t4;
        }, _updateVirtualBoundaries: function(t4) {
          var e4, i4, s4 = this.options, n3 = { minWidth: this._isNumber(s4.minWidth) ? s4.minWidth : 0, maxWidth: this._isNumber(s4.maxWidth) ? s4.maxWidth : 1 / 0, minHeight: this._isNumber(s4.minHeight) ? s4.minHeight : 0, maxHeight: this._isNumber(s4.maxHeight) ? s4.maxHeight : 1 / 0 };
          (this._aspectRatio || t4) && (e4 = n3.minHeight * this.aspectRatio, i4 = n3.minWidth / this.aspectRatio, s4 = n3.maxHeight * this.aspectRatio, t4 = n3.maxWidth / this.aspectRatio, e4 > n3.minWidth && (n3.minWidth = e4), i4 > n3.minHeight && (n3.minHeight = i4), s4 < n3.maxWidth && (n3.maxWidth = s4), t4 < n3.maxHeight && (n3.maxHeight = t4)), this._vBoundaries = n3;
        }, _updateCache: function(t4) {
          this.offset = this.helper.offset(), this._isNumber(t4.left) && (this.position.left = t4.left), this._isNumber(t4.top) && (this.position.top = t4.top), this._isNumber(t4.height) && (this.size.height = t4.height), this._isNumber(t4.width) && (this.size.width = t4.width);
        }, _updateRatio: function(t4) {
          var e4 = this.position, i4 = this.size, s4 = this.axis;
          return this._isNumber(t4.height) ? t4.width = t4.height * this.aspectRatio : this._isNumber(t4.width) && (t4.height = t4.width / this.aspectRatio), "sw" === s4 && (t4.left = e4.left + (i4.width - t4.width), t4.top = null), "nw" === s4 && (t4.top = e4.top + (i4.height - t4.height), t4.left = e4.left + (i4.width - t4.width)), t4;
        }, _respectSize: function(t4) {
          var e4 = this._vBoundaries, i4 = this.axis, s4 = this._isNumber(t4.width) && e4.maxWidth && e4.maxWidth < t4.width, n3 = this._isNumber(t4.height) && e4.maxHeight && e4.maxHeight < t4.height, o3 = this._isNumber(t4.width) && e4.minWidth && e4.minWidth > t4.width, a4 = this._isNumber(t4.height) && e4.minHeight && e4.minHeight > t4.height, r4 = this.originalPosition.left + this.originalSize.width, l4 = this.originalPosition.top + this.originalSize.height, h4 = /sw|nw|w/.test(i4), i4 = /nw|ne|n/.test(i4);
          return o3 && (t4.width = e4.minWidth), a4 && (t4.height = e4.minHeight), s4 && (t4.width = e4.maxWidth), n3 && (t4.height = e4.maxHeight), o3 && h4 && (t4.left = r4 - e4.minWidth), s4 && h4 && (t4.left = r4 - e4.maxWidth), a4 && i4 && (t4.top = l4 - e4.minHeight), n3 && i4 && (t4.top = l4 - e4.maxHeight), t4.width || t4.height || t4.left || !t4.top ? t4.width || t4.height || t4.top || !t4.left || (t4.left = null) : t4.top = null, t4;
        }, _getPaddingPlusBorderDimensions: function(t4) {
          for (var e4 = 0, i4 = [], s4 = [t4.css("borderTopWidth"), t4.css("borderRightWidth"), t4.css("borderBottomWidth"), t4.css("borderLeftWidth")], n3 = [t4.css("paddingTop"), t4.css("paddingRight"), t4.css("paddingBottom"), t4.css("paddingLeft")]; e4 < 4; e4++)
            i4[e4] = parseFloat(s4[e4]) || 0, i4[e4] += parseFloat(n3[e4]) || 0;
          return { height: i4[0] + i4[2], width: i4[1] + i4[3] };
        }, _proportionallyResize: function() {
          if (this._proportionallyResizeElements.length)
            for (var t4, e4 = 0, i4 = this.helper || this.element; e4 < this._proportionallyResizeElements.length; e4++)
              t4 = this._proportionallyResizeElements[e4], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(t4)), t4.css({ height: i4.height() - this.outerDimensions.height || 0, width: i4.width() - this.outerDimensions.width || 0 });
        }, _renderProxy: function() {
          var t4 = this.element, e4 = this.options;
          this.elementOffset = t4.offset(), this._helper ? (this.helper = this.helper || V3("<div></div>").css({ overflow: "hidden" }), this._addClass(this.helper, this._helper), this.helper.css({ width: this.element.outerWidth(), height: this.element.outerHeight(), position: "absolute", left: this.elementOffset.left + "px", top: this.elementOffset.top + "px", zIndex: ++e4.zIndex }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element;
        }, _change: { e: function(t4, e4) {
          return { width: this.originalSize.width + e4 };
        }, w: function(t4, e4) {
          var i4 = this.originalSize;
          return { left: this.originalPosition.left + e4, width: i4.width - e4 };
        }, n: function(t4, e4, i4) {
          var s4 = this.originalSize;
          return { top: this.originalPosition.top + i4, height: s4.height - i4 };
        }, s: function(t4, e4, i4) {
          return { height: this.originalSize.height + i4 };
        }, se: function(t4, e4, i4) {
          return V3.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [t4, e4, i4]));
        }, sw: function(t4, e4, i4) {
          return V3.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [t4, e4, i4]));
        }, ne: function(t4, e4, i4) {
          return V3.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [t4, e4, i4]));
        }, nw: function(t4, e4, i4) {
          return V3.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [t4, e4, i4]));
        } }, _propagate: function(t4, e4) {
          V3.ui.plugin.call(this, t4, [e4, this.ui()]), "resize" !== t4 && this._trigger(t4, e4, this.ui());
        }, plugins: {}, ui: function() {
          return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition };
        } }), V3.ui.plugin.add("resizable", "animate", { stop: function(e4) {
          var i4 = V3(this).resizable("instance"), t4 = i4.options, s4 = i4._proportionallyResizeElements, n3 = s4.length && /textarea/i.test(s4[0].nodeName), o3 = n3 && i4._hasScroll(s4[0], "left") ? 0 : i4.sizeDiff.height, a4 = n3 ? 0 : i4.sizeDiff.width, n3 = { width: i4.size.width - a4, height: i4.size.height - o3 }, a4 = parseFloat(i4.element.css("left")) + (i4.position.left - i4.originalPosition.left) || null, o3 = parseFloat(i4.element.css("top")) + (i4.position.top - i4.originalPosition.top) || null;
          i4.element.animate(V3.extend(n3, o3 && a4 ? { top: o3, left: a4 } : {}), { duration: t4.animateDuration, easing: t4.animateEasing, step: function() {
            var t5 = { width: parseFloat(i4.element.css("width")), height: parseFloat(i4.element.css("height")), top: parseFloat(i4.element.css("top")), left: parseFloat(i4.element.css("left")) };
            s4 && s4.length && V3(s4[0]).css({ width: t5.width, height: t5.height }), i4._updateCache(t5), i4._propagate("resize", e4);
          } });
        } }), V3.ui.plugin.add("resizable", "containment", { start: function() {
          var i4, s4, n3 = V3(this).resizable("instance"), t4 = n3.options, e4 = n3.element, o3 = t4.containment, a4 = o3 instanceof V3 ? o3.get(0) : /parent/.test(o3) ? e4.parent().get(0) : o3;
          a4 && (n3.containerElement = V3(a4), /document/.test(o3) || o3 === document ? (n3.containerOffset = { left: 0, top: 0 }, n3.containerPosition = { left: 0, top: 0 }, n3.parentData = { element: V3(document), left: 0, top: 0, width: V3(document).width(), height: V3(document).height() || document.body.parentNode.scrollHeight }) : (i4 = V3(a4), s4 = [], V3(["Top", "Right", "Left", "Bottom"]).each(function(t5, e5) {
            s4[t5] = n3._num(i4.css("padding" + e5));
          }), n3.containerOffset = i4.offset(), n3.containerPosition = i4.position(), n3.containerSize = { height: i4.innerHeight() - s4[3], width: i4.innerWidth() - s4[1] }, t4 = n3.containerOffset, e4 = n3.containerSize.height, o3 = n3.containerSize.width, o3 = n3._hasScroll(a4, "left") ? a4.scrollWidth : o3, e4 = n3._hasScroll(a4) ? a4.scrollHeight : e4, n3.parentData = { element: a4, left: t4.left, top: t4.top, width: o3, height: e4 }));
        }, resize: function(t4) {
          var e4 = V3(this).resizable("instance"), i4 = e4.options, s4 = e4.containerOffset, n3 = e4.position, o3 = e4._aspectRatio || t4.shiftKey, a4 = { top: 0, left: 0 }, r4 = e4.containerElement, t4 = true;
          r4[0] !== document && /static/.test(r4.css("position")) && (a4 = s4), n3.left < (e4._helper ? s4.left : 0) && (e4.size.width = e4.size.width + (e4._helper ? e4.position.left - s4.left : e4.position.left - a4.left), o3 && (e4.size.height = e4.size.width / e4.aspectRatio, t4 = false), e4.position.left = i4.helper ? s4.left : 0), n3.top < (e4._helper ? s4.top : 0) && (e4.size.height = e4.size.height + (e4._helper ? e4.position.top - s4.top : e4.position.top), o3 && (e4.size.width = e4.size.height * e4.aspectRatio, t4 = false), e4.position.top = e4._helper ? s4.top : 0), i4 = e4.containerElement.get(0) === e4.element.parent().get(0), n3 = /relative|absolute/.test(e4.containerElement.css("position")), i4 && n3 ? (e4.offset.left = e4.parentData.left + e4.position.left, e4.offset.top = e4.parentData.top + e4.position.top) : (e4.offset.left = e4.element.offset().left, e4.offset.top = e4.element.offset().top), n3 = Math.abs(e4.sizeDiff.width + (e4._helper ? e4.offset.left - a4.left : e4.offset.left - s4.left)), s4 = Math.abs(e4.sizeDiff.height + (e4._helper ? e4.offset.top - a4.top : e4.offset.top - s4.top)), n3 + e4.size.width >= e4.parentData.width && (e4.size.width = e4.parentData.width - n3, o3 && (e4.size.height = e4.size.width / e4.aspectRatio, t4 = false)), s4 + e4.size.height >= e4.parentData.height && (e4.size.height = e4.parentData.height - s4, o3 && (e4.size.width = e4.size.height * e4.aspectRatio, t4 = false)), t4 || (e4.position.left = e4.prevPosition.left, e4.position.top = e4.prevPosition.top, e4.size.width = e4.prevSize.width, e4.size.height = e4.prevSize.height);
        }, stop: function() {
          var t4 = V3(this).resizable("instance"), e4 = t4.options, i4 = t4.containerOffset, s4 = t4.containerPosition, n3 = t4.containerElement, o3 = V3(t4.helper), a4 = o3.offset(), r4 = o3.outerWidth() - t4.sizeDiff.width, o3 = o3.outerHeight() - t4.sizeDiff.height;
          t4._helper && !e4.animate && /relative/.test(n3.css("position")) && V3(this).css({ left: a4.left - s4.left - i4.left, width: r4, height: o3 }), t4._helper && !e4.animate && /static/.test(n3.css("position")) && V3(this).css({ left: a4.left - s4.left - i4.left, width: r4, height: o3 });
        } }), V3.ui.plugin.add("resizable", "alsoResize", { start: function() {
          var t4 = V3(this).resizable("instance").options;
          V3(t4.alsoResize).each(function() {
            var t5 = V3(this);
            t5.data("ui-resizable-alsoresize", { width: parseFloat(t5.width()), height: parseFloat(t5.height()), left: parseFloat(t5.css("left")), top: parseFloat(t5.css("top")) });
          });
        }, resize: function(t4, i4) {
          var e4 = V3(this).resizable("instance"), s4 = e4.options, n3 = e4.originalSize, o3 = e4.originalPosition, a4 = { height: e4.size.height - n3.height || 0, width: e4.size.width - n3.width || 0, top: e4.position.top - o3.top || 0, left: e4.position.left - o3.left || 0 };
          V3(s4.alsoResize).each(function() {
            var t5 = V3(this), s5 = V3(this).data("ui-resizable-alsoresize"), n4 = {}, e5 = t5.parents(i4.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
            V3.each(e5, function(t6, e6) {
              var i5 = (s5[e6] || 0) + (a4[e6] || 0);
              i5 && 0 <= i5 && (n4[e6] = i5 || null);
            }), t5.css(n4);
          });
        }, stop: function() {
          V3(this).removeData("ui-resizable-alsoresize");
        } }), V3.ui.plugin.add("resizable", "ghost", { start: function() {
          var t4 = V3(this).resizable("instance"), e4 = t4.size;
          t4.ghost = t4.originalElement.clone(), t4.ghost.css({ opacity: 0.25, display: "block", position: "relative", height: e4.height, width: e4.width, margin: 0, left: 0, top: 0 }), t4._addClass(t4.ghost, "ui-resizable-ghost"), false !== V3.uiBackCompat && "string" == typeof t4.options.ghost && t4.ghost.addClass(this.options.ghost), t4.ghost.appendTo(t4.helper);
        }, resize: function() {
          var t4 = V3(this).resizable("instance");
          t4.ghost && t4.ghost.css({ position: "relative", height: t4.size.height, width: t4.size.width });
        }, stop: function() {
          var t4 = V3(this).resizable("instance");
          t4.ghost && t4.helper && t4.helper.get(0).removeChild(t4.ghost.get(0));
        } }), V3.ui.plugin.add("resizable", "grid", { resize: function() {
          var t4, e4 = V3(this).resizable("instance"), i4 = e4.options, s4 = e4.size, n3 = e4.originalSize, o3 = e4.originalPosition, a4 = e4.axis, r4 = "number" == typeof i4.grid ? [i4.grid, i4.grid] : i4.grid, l4 = r4[0] || 1, h4 = r4[1] || 1, c4 = Math.round((s4.width - n3.width) / l4) * l4, u4 = Math.round((s4.height - n3.height) / h4) * h4, d3 = n3.width + c4, p4 = n3.height + u4, f4 = i4.maxWidth && i4.maxWidth < d3, g5 = i4.maxHeight && i4.maxHeight < p4, m4 = i4.minWidth && i4.minWidth > d3, s4 = i4.minHeight && i4.minHeight > p4;
          i4.grid = r4, m4 && (d3 += l4), s4 && (p4 += h4), f4 && (d3 -= l4), g5 && (p4 -= h4), /^(se|s|e)$/.test(a4) ? (e4.size.width = d3, e4.size.height = p4) : /^(ne)$/.test(a4) ? (e4.size.width = d3, e4.size.height = p4, e4.position.top = o3.top - u4) : /^(sw)$/.test(a4) ? (e4.size.width = d3, e4.size.height = p4, e4.position.left = o3.left - c4) : ((p4 - h4 <= 0 || d3 - l4 <= 0) && (t4 = e4._getPaddingPlusBorderDimensions(this)), 0 < p4 - h4 ? (e4.size.height = p4, e4.position.top = o3.top - u4) : (p4 = h4 - t4.height, e4.size.height = p4, e4.position.top = o3.top + n3.height - p4), 0 < d3 - l4 ? (e4.size.width = d3, e4.position.left = o3.left - c4) : (d3 = l4 - t4.width, e4.size.width = d3, e4.position.left = o3.left + n3.width - d3));
        } });
        V3.ui.resizable;
        V3.widget("ui.dialog", { version: "1.13.2", options: { appendTo: "body", autoOpen: true, buttons: [], classes: { "ui-dialog": "ui-corner-all", "ui-dialog-titlebar": "ui-corner-all" }, closeOnEscape: true, closeText: "Close", draggable: true, hide: null, height: "auto", maxHeight: null, maxWidth: null, minHeight: 150, minWidth: 150, modal: false, position: { my: "center", at: "center", of: window, collision: "fit", using: function(t4) {
          var e4 = V3(this).css(t4).offset().top;
          e4 < 0 && V3(this).css("top", t4.top - e4);
        } }, resizable: true, show: null, title: null, width: 300, beforeClose: null, close: null, drag: null, dragStart: null, dragStop: null, focus: null, open: null, resize: null, resizeStart: null, resizeStop: null }, sizeRelatedOptions: { buttons: true, height: true, maxHeight: true, maxWidth: true, minHeight: true, minWidth: true, width: true }, resizableRelatedOptions: { maxHeight: true, maxWidth: true, minHeight: true, minWidth: true }, _create: function() {
          this.originalCss = { display: this.element[0].style.display, width: this.element[0].style.width, minHeight: this.element[0].style.minHeight, maxHeight: this.element[0].style.maxHeight, height: this.element[0].style.height }, this.originalPosition = { parent: this.element.parent(), index: this.element.parent().children().index(this.element) }, this.originalTitle = this.element.attr("title"), null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle), this.options.disabled && (this.options.disabled = false), this._createWrapper(), this.element.show().removeAttr("title").appendTo(this.uiDialog), this._addClass("ui-dialog-content", "ui-widget-content"), this._createTitlebar(), this._createButtonPane(), this.options.draggable && V3.fn.draggable && this._makeDraggable(), this.options.resizable && V3.fn.resizable && this._makeResizable(), this._isOpen = false, this._trackFocus();
        }, _init: function() {
          this.options.autoOpen && this.open();
        }, _appendTo: function() {
          var t4 = this.options.appendTo;
          return t4 && (t4.jquery || t4.nodeType) ? V3(t4) : this.document.find(t4 || "body").eq(0);
        }, _destroy: function() {
          var t4, e4 = this.originalPosition;
          this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().css(this.originalCss).detach(), this.uiDialog.remove(), this.originalTitle && this.element.attr("title", this.originalTitle), (t4 = e4.parent.children().eq(e4.index)).length && t4[0] !== this.element[0] ? t4.before(this.element) : e4.parent.append(this.element);
        }, widget: function() {
          return this.uiDialog;
        }, disable: V3.noop, enable: V3.noop, close: function(t4) {
          var e4 = this;
          this._isOpen && false !== this._trigger("beforeClose", t4) && (this._isOpen = false, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), this.opener.filter(":focusable").trigger("focus").length || V3.ui.safeBlur(V3.ui.safeActiveElement(this.document[0])), this._hide(this.uiDialog, this.options.hide, function() {
            e4._trigger("close", t4);
          }));
        }, isOpen: function() {
          return this._isOpen;
        }, moveToTop: function() {
          this._moveToTop();
        }, _moveToTop: function(t4, e4) {
          var i4 = false, s4 = this.uiDialog.siblings(".ui-front:visible").map(function() {
            return +V3(this).css("z-index");
          }).get(), s4 = Math.max.apply(null, s4);
          return s4 >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", s4 + 1), i4 = true), i4 && !e4 && this._trigger("focus", t4), i4;
        }, open: function() {
          var t4 = this;
          this._isOpen ? this._moveToTop() && this._focusTabbable() : (this._isOpen = true, this.opener = V3(V3.ui.safeActiveElement(this.document[0])), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, true), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function() {
            t4._focusTabbable(), t4._trigger("focus");
          }), this._makeFocusTarget(), this._trigger("open"));
        }, _focusTabbable: function() {
          var t4 = this._focusedElement;
          (t4 = !(t4 = !(t4 = !(t4 = !(t4 = t4 || this.element.find("[autofocus]")).length ? this.element.find(":tabbable") : t4).length ? this.uiDialogButtonPane.find(":tabbable") : t4).length ? this.uiDialogTitlebarClose.filter(":tabbable") : t4).length ? this.uiDialog : t4).eq(0).trigger("focus");
        }, _restoreTabbableFocus: function() {
          var t4 = V3.ui.safeActiveElement(this.document[0]);
          this.uiDialog[0] === t4 || V3.contains(this.uiDialog[0], t4) || this._focusTabbable();
        }, _keepFocus: function(t4) {
          t4.preventDefault(), this._restoreTabbableFocus(), this._delay(this._restoreTabbableFocus);
        }, _createWrapper: function() {
          this.uiDialog = V3("<div>").hide().attr({ tabIndex: -1, role: "dialog" }).appendTo(this._appendTo()), this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front"), this._on(this.uiDialog, { keydown: function(t4) {
            if (this.options.closeOnEscape && !t4.isDefaultPrevented() && t4.keyCode && t4.keyCode === V3.ui.keyCode.ESCAPE)
              return t4.preventDefault(), void this.close(t4);
            var e4, i4, s4;
            t4.keyCode !== V3.ui.keyCode.TAB || t4.isDefaultPrevented() || (e4 = this.uiDialog.find(":tabbable"), i4 = e4.first(), s4 = e4.last(), t4.target !== s4[0] && t4.target !== this.uiDialog[0] || t4.shiftKey ? t4.target !== i4[0] && t4.target !== this.uiDialog[0] || !t4.shiftKey || (this._delay(function() {
              s4.trigger("focus");
            }), t4.preventDefault()) : (this._delay(function() {
              i4.trigger("focus");
            }), t4.preventDefault()));
          }, mousedown: function(t4) {
            this._moveToTop(t4) && this._focusTabbable();
          } }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({ "aria-describedby": this.element.uniqueId().attr("id") });
        }, _createTitlebar: function() {
          var t4;
          this.uiDialogTitlebar = V3("<div>"), this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix"), this._on(this.uiDialogTitlebar, { mousedown: function(t5) {
            V3(t5.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.trigger("focus");
          } }), this.uiDialogTitlebarClose = V3("<button type='button'></button>").button({ label: V3("<a>").text(this.options.closeText).html(), icon: "ui-icon-closethick", showLabel: false }).appendTo(this.uiDialogTitlebar), this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close"), this._on(this.uiDialogTitlebarClose, { click: function(t5) {
            t5.preventDefault(), this.close(t5);
          } }), t4 = V3("<span>").uniqueId().prependTo(this.uiDialogTitlebar), this._addClass(t4, "ui-dialog-title"), this._title(t4), this.uiDialogTitlebar.prependTo(this.uiDialog), this.uiDialog.attr({ "aria-labelledby": t4.attr("id") });
        }, _title: function(t4) {
          this.options.title ? t4.text(this.options.title) : t4.html("&#160;");
        }, _createButtonPane: function() {
          this.uiDialogButtonPane = V3("<div>"), this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix"), this.uiButtonSet = V3("<div>").appendTo(this.uiDialogButtonPane), this._addClass(this.uiButtonSet, "ui-dialog-buttonset"), this._createButtons();
        }, _createButtons: function() {
          var s4 = this, t4 = this.options.buttons;
          this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), V3.isEmptyObject(t4) || Array.isArray(t4) && !t4.length ? this._removeClass(this.uiDialog, "ui-dialog-buttons") : (V3.each(t4, function(t5, e4) {
            var i4;
            e4 = V3.extend({ type: "button" }, e4 = "function" == typeof e4 ? { click: e4, text: t5 } : e4), i4 = e4.click, t5 = { icon: e4.icon, iconPosition: e4.iconPosition, showLabel: e4.showLabel, icons: e4.icons, text: e4.text }, delete e4.click, delete e4.icon, delete e4.iconPosition, delete e4.showLabel, delete e4.icons, "boolean" == typeof e4.text && delete e4.text, V3("<button></button>", e4).button(t5).appendTo(s4.uiButtonSet).on("click", function() {
              i4.apply(s4.element[0], arguments);
            });
          }), this._addClass(this.uiDialog, "ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog));
        }, _makeDraggable: function() {
          var n3 = this, o3 = this.options;
          function a4(t4) {
            return { position: t4.position, offset: t4.offset };
          }
          this.uiDialog.draggable({ cancel: ".ui-dialog-content, .ui-dialog-titlebar-close", handle: ".ui-dialog-titlebar", containment: "document", start: function(t4, e4) {
            n3._addClass(V3(this), "ui-dialog-dragging"), n3._blockFrames(), n3._trigger("dragStart", t4, a4(e4));
          }, drag: function(t4, e4) {
            n3._trigger("drag", t4, a4(e4));
          }, stop: function(t4, e4) {
            var i4 = e4.offset.left - n3.document.scrollLeft(), s4 = e4.offset.top - n3.document.scrollTop();
            o3.position = { my: "left top", at: "left" + (0 <= i4 ? "+" : "") + i4 + " top" + (0 <= s4 ? "+" : "") + s4, of: n3.window }, n3._removeClass(V3(this), "ui-dialog-dragging"), n3._unblockFrames(), n3._trigger("dragStop", t4, a4(e4));
          } });
        }, _makeResizable: function() {
          var n3 = this, o3 = this.options, t4 = o3.resizable, e4 = this.uiDialog.css("position"), t4 = "string" == typeof t4 ? t4 : "n,e,s,w,se,sw,ne,nw";
          function a4(t5) {
            return { originalPosition: t5.originalPosition, originalSize: t5.originalSize, position: t5.position, size: t5.size };
          }
          this.uiDialog.resizable({ cancel: ".ui-dialog-content", containment: "document", alsoResize: this.element, maxWidth: o3.maxWidth, maxHeight: o3.maxHeight, minWidth: o3.minWidth, minHeight: this._minHeight(), handles: t4, start: function(t5, e5) {
            n3._addClass(V3(this), "ui-dialog-resizing"), n3._blockFrames(), n3._trigger("resizeStart", t5, a4(e5));
          }, resize: function(t5, e5) {
            n3._trigger("resize", t5, a4(e5));
          }, stop: function(t5, e5) {
            var i4 = n3.uiDialog.offset(), s4 = i4.left - n3.document.scrollLeft(), i4 = i4.top - n3.document.scrollTop();
            o3.height = n3.uiDialog.height(), o3.width = n3.uiDialog.width(), o3.position = { my: "left top", at: "left" + (0 <= s4 ? "+" : "") + s4 + " top" + (0 <= i4 ? "+" : "") + i4, of: n3.window }, n3._removeClass(V3(this), "ui-dialog-resizing"), n3._unblockFrames(), n3._trigger("resizeStop", t5, a4(e5));
          } }).css("position", e4);
        }, _trackFocus: function() {
          this._on(this.widget(), { focusin: function(t4) {
            this._makeFocusTarget(), this._focusedElement = V3(t4.target);
          } });
        }, _makeFocusTarget: function() {
          this._untrackInstance(), this._trackingInstances().unshift(this);
        }, _untrackInstance: function() {
          var t4 = this._trackingInstances(), e4 = V3.inArray(this, t4);
          -1 !== e4 && t4.splice(e4, 1);
        }, _trackingInstances: function() {
          var t4 = this.document.data("ui-dialog-instances");
          return t4 || this.document.data("ui-dialog-instances", t4 = []), t4;
        }, _minHeight: function() {
          var t4 = this.options;
          return "auto" === t4.height ? t4.minHeight : Math.min(t4.minHeight, t4.height);
        }, _position: function() {
          var t4 = this.uiDialog.is(":visible");
          t4 || this.uiDialog.show(), this.uiDialog.position(this.options.position), t4 || this.uiDialog.hide();
        }, _setOptions: function(t4) {
          var i4 = this, s4 = false, n3 = {};
          V3.each(t4, function(t5, e4) {
            i4._setOption(t5, e4), t5 in i4.sizeRelatedOptions && (s4 = true), t5 in i4.resizableRelatedOptions && (n3[t5] = e4);
          }), s4 && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", n3);
        }, _setOption: function(t4, e4) {
          var i4, s4 = this.uiDialog;
          "disabled" !== t4 && (this._super(t4, e4), "appendTo" === t4 && this.uiDialog.appendTo(this._appendTo()), "buttons" === t4 && this._createButtons(), "closeText" === t4 && this.uiDialogTitlebarClose.button({ label: V3("<a>").text("" + this.options.closeText).html() }), "draggable" === t4 && ((i4 = s4.is(":data(ui-draggable)")) && !e4 && s4.draggable("destroy"), !i4 && e4 && this._makeDraggable()), "position" === t4 && this._position(), "resizable" === t4 && ((i4 = s4.is(":data(ui-resizable)")) && !e4 && s4.resizable("destroy"), i4 && "string" == typeof e4 && s4.resizable("option", "handles", e4), i4 || false === e4 || this._makeResizable()), "title" === t4 && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
        }, _size: function() {
          var t4, e4, i4, s4 = this.options;
          this.element.show().css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }), s4.minWidth > s4.width && (s4.width = s4.minWidth), t4 = this.uiDialog.css({ height: "auto", width: s4.width }).outerHeight(), e4 = Math.max(0, s4.minHeight - t4), i4 = "number" == typeof s4.maxHeight ? Math.max(0, s4.maxHeight - t4) : "none", "auto" === s4.height ? this.element.css({ minHeight: e4, maxHeight: i4, height: "auto" }) : this.element.height(Math.max(0, s4.height - t4)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight());
        }, _blockFrames: function() {
          this.iframeBlocks = this.document.find("iframe").map(function() {
            var t4 = V3(this);
            return V3("<div>").css({ position: "absolute", width: t4.outerWidth(), height: t4.outerHeight() }).appendTo(t4.parent()).offset(t4.offset())[0];
          });
        }, _unblockFrames: function() {
          this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
        }, _allowInteraction: function(t4) {
          return !!V3(t4.target).closest(".ui-dialog").length || !!V3(t4.target).closest(".ui-datepicker").length;
        }, _createOverlay: function() {
          var i4, s4;
          this.options.modal && (i4 = V3.fn.jquery.substring(0, 4), s4 = true, this._delay(function() {
            s4 = false;
          }), this.document.data("ui-dialog-overlays") || this.document.on("focusin.ui-dialog", function(t4) {
            var e4;
            s4 || ((e4 = this._trackingInstances()[0])._allowInteraction(t4) || (t4.preventDefault(), e4._focusTabbable(), "3.4." !== i4 && "3.5." !== i4 || e4._delay(e4._restoreTabbableFocus)));
          }.bind(this)), this.overlay = V3("<div>").appendTo(this._appendTo()), this._addClass(this.overlay, null, "ui-widget-overlay ui-front"), this._on(this.overlay, { mousedown: "_keepFocus" }), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1));
        }, _destroyOverlay: function() {
          var t4;
          this.options.modal && this.overlay && ((t4 = this.document.data("ui-dialog-overlays") - 1) ? this.document.data("ui-dialog-overlays", t4) : (this.document.off("focusin.ui-dialog"), this.document.removeData("ui-dialog-overlays")), this.overlay.remove(), this.overlay = null);
        } }), false !== V3.uiBackCompat && V3.widget("ui.dialog", V3.ui.dialog, { options: { dialogClass: "" }, _createWrapper: function() {
          this._super(), this.uiDialog.addClass(this.options.dialogClass);
        }, _setOption: function(t4, e4) {
          "dialogClass" === t4 && this.uiDialog.removeClass(this.options.dialogClass).addClass(e4), this._superApply(arguments);
        } });
        V3.ui.dialog;
        function lt(t4, e4, i4) {
          return e4 <= t4 && t4 < e4 + i4;
        }
        V3.widget("ui.droppable", { version: "1.13.2", widgetEventPrefix: "drop", options: { accept: "*", addClasses: true, greedy: false, scope: "default", tolerance: "intersect", activate: null, deactivate: null, drop: null, out: null, over: null }, _create: function() {
          var t4, e4 = this.options, i4 = e4.accept;
          this.isover = false, this.isout = true, this.accept = "function" == typeof i4 ? i4 : function(t5) {
            return t5.is(i4);
          }, this.proportions = function() {
            if (!arguments.length)
              return t4 = t4 || { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight };
            t4 = arguments[0];
          }, this._addToManager(e4.scope), e4.addClasses && this._addClass("ui-droppable");
        }, _addToManager: function(t4) {
          V3.ui.ddmanager.droppables[t4] = V3.ui.ddmanager.droppables[t4] || [], V3.ui.ddmanager.droppables[t4].push(this);
        }, _splice: function(t4) {
          for (var e4 = 0; e4 < t4.length; e4++)
            t4[e4] === this && t4.splice(e4, 1);
        }, _destroy: function() {
          var t4 = V3.ui.ddmanager.droppables[this.options.scope];
          this._splice(t4);
        }, _setOption: function(t4, e4) {
          var i4;
          "accept" === t4 ? this.accept = "function" == typeof e4 ? e4 : function(t5) {
            return t5.is(e4);
          } : "scope" === t4 && (i4 = V3.ui.ddmanager.droppables[this.options.scope], this._splice(i4), this._addToManager(e4)), this._super(t4, e4);
        }, _activate: function(t4) {
          var e4 = V3.ui.ddmanager.current;
          this._addActiveClass(), e4 && this._trigger("activate", t4, this.ui(e4));
        }, _deactivate: function(t4) {
          var e4 = V3.ui.ddmanager.current;
          this._removeActiveClass(), e4 && this._trigger("deactivate", t4, this.ui(e4));
        }, _over: function(t4) {
          var e4 = V3.ui.ddmanager.current;
          e4 && (e4.currentItem || e4.element)[0] !== this.element[0] && this.accept.call(this.element[0], e4.currentItem || e4.element) && (this._addHoverClass(), this._trigger("over", t4, this.ui(e4)));
        }, _out: function(t4) {
          var e4 = V3.ui.ddmanager.current;
          e4 && (e4.currentItem || e4.element)[0] !== this.element[0] && this.accept.call(this.element[0], e4.currentItem || e4.element) && (this._removeHoverClass(), this._trigger("out", t4, this.ui(e4)));
        }, _drop: function(e4, t4) {
          var i4 = t4 || V3.ui.ddmanager.current, s4 = false;
          return !(!i4 || (i4.currentItem || i4.element)[0] === this.element[0]) && (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
            var t5 = V3(this).droppable("instance");
            if (t5.options.greedy && !t5.options.disabled && t5.options.scope === i4.options.scope && t5.accept.call(t5.element[0], i4.currentItem || i4.element) && V3.ui.intersect(i4, V3.extend(t5, { offset: t5.element.offset() }), t5.options.tolerance, e4))
              return !(s4 = true);
          }), !s4 && (!!this.accept.call(this.element[0], i4.currentItem || i4.element) && (this._removeActiveClass(), this._removeHoverClass(), this._trigger("drop", e4, this.ui(i4)), this.element)));
        }, ui: function(t4) {
          return { draggable: t4.currentItem || t4.element, helper: t4.helper, position: t4.position, offset: t4.positionAbs };
        }, _addHoverClass: function() {
          this._addClass("ui-droppable-hover");
        }, _removeHoverClass: function() {
          this._removeClass("ui-droppable-hover");
        }, _addActiveClass: function() {
          this._addClass("ui-droppable-active");
        }, _removeActiveClass: function() {
          this._removeClass("ui-droppable-active");
        } }), V3.ui.intersect = function(t4, e4, i4, s4) {
          if (!e4.offset)
            return false;
          var n3 = (t4.positionAbs || t4.position.absolute).left + t4.margins.left, o3 = (t4.positionAbs || t4.position.absolute).top + t4.margins.top, a4 = n3 + t4.helperProportions.width, r4 = o3 + t4.helperProportions.height, l4 = e4.offset.left, h4 = e4.offset.top, c4 = l4 + e4.proportions().width, u4 = h4 + e4.proportions().height;
          switch (i4) {
            case "fit":
              return l4 <= n3 && a4 <= c4 && h4 <= o3 && r4 <= u4;
            case "intersect":
              return l4 < n3 + t4.helperProportions.width / 2 && a4 - t4.helperProportions.width / 2 < c4 && h4 < o3 + t4.helperProportions.height / 2 && r4 - t4.helperProportions.height / 2 < u4;
            case "pointer":
              return lt(s4.pageY, h4, e4.proportions().height) && lt(s4.pageX, l4, e4.proportions().width);
            case "touch":
              return (h4 <= o3 && o3 <= u4 || h4 <= r4 && r4 <= u4 || o3 < h4 && u4 < r4) && (l4 <= n3 && n3 <= c4 || l4 <= a4 && a4 <= c4 || n3 < l4 && c4 < a4);
            default:
              return false;
          }
        }, !(V3.ui.ddmanager = { current: null, droppables: { default: [] }, prepareOffsets: function(t4, e4) {
          var i4, s4, n3 = V3.ui.ddmanager.droppables[t4.options.scope] || [], o3 = e4 ? e4.type : null, a4 = (t4.currentItem || t4.element).find(":data(ui-droppable)").addBack();
          t:
            for (i4 = 0; i4 < n3.length; i4++)
              if (!(n3[i4].options.disabled || t4 && !n3[i4].accept.call(n3[i4].element[0], t4.currentItem || t4.element))) {
                for (s4 = 0; s4 < a4.length; s4++)
                  if (a4[s4] === n3[i4].element[0]) {
                    n3[i4].proportions().height = 0;
                    continue t;
                  }
                n3[i4].visible = "none" !== n3[i4].element.css("display"), n3[i4].visible && ("mousedown" === o3 && n3[i4]._activate.call(n3[i4], e4), n3[i4].offset = n3[i4].element.offset(), n3[i4].proportions({ width: n3[i4].element[0].offsetWidth, height: n3[i4].element[0].offsetHeight }));
              }
        }, drop: function(t4, e4) {
          var i4 = false;
          return V3.each((V3.ui.ddmanager.droppables[t4.options.scope] || []).slice(), function() {
            this.options && (!this.options.disabled && this.visible && V3.ui.intersect(t4, this, this.options.tolerance, e4) && (i4 = this._drop.call(this, e4) || i4), !this.options.disabled && this.visible && this.accept.call(this.element[0], t4.currentItem || t4.element) && (this.isout = true, this.isover = false, this._deactivate.call(this, e4)));
          }), i4;
        }, dragStart: function(t4, e4) {
          t4.element.parentsUntil("body").on("scroll.droppable", function() {
            t4.options.refreshPositions || V3.ui.ddmanager.prepareOffsets(t4, e4);
          });
        }, drag: function(n3, o3) {
          n3.options.refreshPositions && V3.ui.ddmanager.prepareOffsets(n3, o3), V3.each(V3.ui.ddmanager.droppables[n3.options.scope] || [], function() {
            var t4, e4, i4, s4;
            this.options.disabled || this.greedyChild || !this.visible || (s4 = !(i4 = V3.ui.intersect(n3, this, this.options.tolerance, o3)) && this.isover ? "isout" : i4 && !this.isover ? "isover" : null) && (this.options.greedy && (e4 = this.options.scope, (i4 = this.element.parents(":data(ui-droppable)").filter(function() {
              return V3(this).droppable("instance").options.scope === e4;
            })).length && ((t4 = V3(i4[0]).droppable("instance")).greedyChild = "isover" === s4)), t4 && "isover" === s4 && (t4.isover = false, t4.isout = true, t4._out.call(t4, o3)), this[s4] = true, this["isout" === s4 ? "isover" : "isout"] = false, this["isover" === s4 ? "_over" : "_out"].call(this, o3), t4 && "isout" === s4 && (t4.isout = false, t4.isover = true, t4._over.call(t4, o3)));
          });
        }, dragStop: function(t4, e4) {
          t4.element.parentsUntil("body").off("scroll.droppable"), t4.options.refreshPositions || V3.ui.ddmanager.prepareOffsets(t4, e4);
        } }) !== V3.uiBackCompat && V3.widget("ui.droppable", V3.ui.droppable, { options: { hoverClass: false, activeClass: false }, _addActiveClass: function() {
          this._super(), this.options.activeClass && this.element.addClass(this.options.activeClass);
        }, _removeActiveClass: function() {
          this._super(), this.options.activeClass && this.element.removeClass(this.options.activeClass);
        }, _addHoverClass: function() {
          this._super(), this.options.hoverClass && this.element.addClass(this.options.hoverClass);
        }, _removeHoverClass: function() {
          this._super(), this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
        } });
        V3.ui.droppable, V3.widget("ui.progressbar", { version: "1.13.2", options: { classes: { "ui-progressbar": "ui-corner-all", "ui-progressbar-value": "ui-corner-left", "ui-progressbar-complete": "ui-corner-right" }, max: 100, value: 0, change: null, complete: null }, min: 0, _create: function() {
          this.oldValue = this.options.value = this._constrainedValue(), this.element.attr({ role: "progressbar", "aria-valuemin": this.min }), this._addClass("ui-progressbar", "ui-widget ui-widget-content"), this.valueDiv = V3("<div>").appendTo(this.element), this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header"), this._refreshValue();
        }, _destroy: function() {
          this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"), this.valueDiv.remove();
        }, value: function(t4) {
          if (void 0 === t4)
            return this.options.value;
          this.options.value = this._constrainedValue(t4), this._refreshValue();
        }, _constrainedValue: function(t4) {
          return void 0 === t4 && (t4 = this.options.value), this.indeterminate = false === t4, "number" != typeof t4 && (t4 = 0), !this.indeterminate && Math.min(this.options.max, Math.max(this.min, t4));
        }, _setOptions: function(t4) {
          var e4 = t4.value;
          delete t4.value, this._super(t4), this.options.value = this._constrainedValue(e4), this._refreshValue();
        }, _setOption: function(t4, e4) {
          "max" === t4 && (e4 = Math.max(this.min, e4)), this._super(t4, e4);
        }, _setOptionDisabled: function(t4) {
          this._super(t4), this.element.attr("aria-disabled", t4), this._toggleClass(null, "ui-state-disabled", !!t4);
        }, _percentage: function() {
          return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);
        }, _refreshValue: function() {
          var t4 = this.options.value, e4 = this._percentage();
          this.valueDiv.toggle(this.indeterminate || t4 > this.min).width(e4.toFixed(0) + "%"), this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, t4 === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = V3("<div>").appendTo(this.valueDiv), this._addClass(this.overlayDiv, "ui-progressbar-overlay"))) : (this.element.attr({ "aria-valuemax": this.options.max, "aria-valuenow": t4 }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== t4 && (this.oldValue = t4, this._trigger("change")), t4 === this.options.max && this._trigger("complete");
        } }), V3.widget("ui.selectable", V3.ui.mouse, { version: "1.13.2", options: { appendTo: "body", autoRefresh: true, distance: 0, filter: "*", tolerance: "touch", selected: null, selecting: null, start: null, stop: null, unselected: null, unselecting: null }, _create: function() {
          var i4 = this;
          this._addClass("ui-selectable"), this.dragged = false, this.refresh = function() {
            i4.elementPos = V3(i4.element[0]).offset(), i4.selectees = V3(i4.options.filter, i4.element[0]), i4._addClass(i4.selectees, "ui-selectee"), i4.selectees.each(function() {
              var t4 = V3(this), e4 = t4.offset(), e4 = { left: e4.left - i4.elementPos.left, top: e4.top - i4.elementPos.top };
              V3.data(this, "selectable-item", { element: this, $element: t4, left: e4.left, top: e4.top, right: e4.left + t4.outerWidth(), bottom: e4.top + t4.outerHeight(), startselected: false, selected: t4.hasClass("ui-selected"), selecting: t4.hasClass("ui-selecting"), unselecting: t4.hasClass("ui-unselecting") });
            });
          }, this.refresh(), this._mouseInit(), this.helper = V3("<div>"), this._addClass(this.helper, "ui-selectable-helper");
        }, _destroy: function() {
          this.selectees.removeData("selectable-item"), this._mouseDestroy();
        }, _mouseStart: function(i4) {
          var s4 = this, t4 = this.options;
          this.opos = [i4.pageX, i4.pageY], this.elementPos = V3(this.element[0]).offset(), this.options.disabled || (this.selectees = V3(t4.filter, this.element[0]), this._trigger("start", i4), V3(t4.appendTo).append(this.helper), this.helper.css({ left: i4.pageX, top: i4.pageY, width: 0, height: 0 }), t4.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
            var t5 = V3.data(this, "selectable-item");
            t5.startselected = true, i4.metaKey || i4.ctrlKey || (s4._removeClass(t5.$element, "ui-selected"), t5.selected = false, s4._addClass(t5.$element, "ui-unselecting"), t5.unselecting = true, s4._trigger("unselecting", i4, { unselecting: t5.element }));
          }), V3(i4.target).parents().addBack().each(function() {
            var t5, e4 = V3.data(this, "selectable-item");
            if (e4)
              return t5 = !i4.metaKey && !i4.ctrlKey || !e4.$element.hasClass("ui-selected"), s4._removeClass(e4.$element, t5 ? "ui-unselecting" : "ui-selected")._addClass(e4.$element, t5 ? "ui-selecting" : "ui-unselecting"), e4.unselecting = !t5, e4.selecting = t5, (e4.selected = t5) ? s4._trigger("selecting", i4, { selecting: e4.element }) : s4._trigger("unselecting", i4, { unselecting: e4.element }), false;
          }));
        }, _mouseDrag: function(s4) {
          if (this.dragged = true, !this.options.disabled) {
            var t4, n3 = this, o3 = this.options, a4 = this.opos[0], r4 = this.opos[1], l4 = s4.pageX, h4 = s4.pageY;
            return l4 < a4 && (t4 = l4, l4 = a4, a4 = t4), h4 < r4 && (t4 = h4, h4 = r4, r4 = t4), this.helper.css({ left: a4, top: r4, width: l4 - a4, height: h4 - r4 }), this.selectees.each(function() {
              var t5 = V3.data(this, "selectable-item"), e4 = false, i4 = {};
              t5 && t5.element !== n3.element[0] && (i4.left = t5.left + n3.elementPos.left, i4.right = t5.right + n3.elementPos.left, i4.top = t5.top + n3.elementPos.top, i4.bottom = t5.bottom + n3.elementPos.top, "touch" === o3.tolerance ? e4 = !(i4.left > l4 || i4.right < a4 || i4.top > h4 || i4.bottom < r4) : "fit" === o3.tolerance && (e4 = i4.left > a4 && i4.right < l4 && i4.top > r4 && i4.bottom < h4), e4 ? (t5.selected && (n3._removeClass(t5.$element, "ui-selected"), t5.selected = false), t5.unselecting && (n3._removeClass(t5.$element, "ui-unselecting"), t5.unselecting = false), t5.selecting || (n3._addClass(t5.$element, "ui-selecting"), t5.selecting = true, n3._trigger("selecting", s4, { selecting: t5.element }))) : (t5.selecting && ((s4.metaKey || s4.ctrlKey) && t5.startselected ? (n3._removeClass(t5.$element, "ui-selecting"), t5.selecting = false, n3._addClass(t5.$element, "ui-selected"), t5.selected = true) : (n3._removeClass(t5.$element, "ui-selecting"), t5.selecting = false, t5.startselected && (n3._addClass(t5.$element, "ui-unselecting"), t5.unselecting = true), n3._trigger("unselecting", s4, { unselecting: t5.element }))), t5.selected && (s4.metaKey || s4.ctrlKey || t5.startselected || (n3._removeClass(t5.$element, "ui-selected"), t5.selected = false, n3._addClass(t5.$element, "ui-unselecting"), t5.unselecting = true, n3._trigger("unselecting", s4, { unselecting: t5.element })))));
            }), false;
          }
        }, _mouseStop: function(e4) {
          var i4 = this;
          return this.dragged = false, V3(".ui-unselecting", this.element[0]).each(function() {
            var t4 = V3.data(this, "selectable-item");
            i4._removeClass(t4.$element, "ui-unselecting"), t4.unselecting = false, t4.startselected = false, i4._trigger("unselected", e4, { unselected: t4.element });
          }), V3(".ui-selecting", this.element[0]).each(function() {
            var t4 = V3.data(this, "selectable-item");
            i4._removeClass(t4.$element, "ui-selecting")._addClass(t4.$element, "ui-selected"), t4.selecting = false, t4.selected = true, t4.startselected = true, i4._trigger("selected", e4, { selected: t4.element });
          }), this._trigger("stop", e4), this.helper.remove(), false;
        } }), V3.widget("ui.selectmenu", [V3.ui.formResetMixin, { version: "1.13.2", defaultElement: "<select>", options: { appendTo: null, classes: { "ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all" }, disabled: null, icons: { button: "ui-icon-triangle-1-s" }, position: { my: "left top", at: "left bottom", collision: "none" }, width: false, change: null, close: null, focus: null, open: null, select: null }, _create: function() {
          var t4 = this.element.uniqueId().attr("id");
          this.ids = { element: t4, button: t4 + "-button", menu: t4 + "-menu" }, this._drawButton(), this._drawMenu(), this._bindFormResetHandler(), this._rendered = false, this.menuItems = V3();
        }, _drawButton: function() {
          var t4, e4 = this, i4 = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex);
          this.labels = this.element.labels().attr("for", this.ids.button), this._on(this.labels, { click: function(t5) {
            this.button.trigger("focus"), t5.preventDefault();
          } }), this.element.hide(), this.button = V3("<span>", { tabindex: this.options.disabled ? -1 : 0, id: this.ids.button, role: "combobox", "aria-expanded": "false", "aria-autocomplete": "list", "aria-owns": this.ids.menu, "aria-haspopup": "true", title: this.element.attr("title") }).insertAfter(this.element), this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget"), t4 = V3("<span>").appendTo(this.button), this._addClass(t4, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button), this.buttonItem = this._renderButtonItem(i4).appendTo(this.button), false !== this.options.width && this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one("focusin", function() {
            e4._rendered || e4._refreshMenu();
          });
        }, _drawMenu: function() {
          var i4 = this;
          this.menu = V3("<ul>", { "aria-hidden": "true", "aria-labelledby": this.ids.button, id: this.ids.menu }), this.menuWrap = V3("<div>").append(this.menu), this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"), this.menuWrap.appendTo(this._appendTo()), this.menuInstance = this.menu.menu({ classes: { "ui-menu": "ui-corner-bottom" }, role: "listbox", select: function(t4, e4) {
            t4.preventDefault(), i4._setSelection(), i4._select(e4.item.data("ui-selectmenu-item"), t4);
          }, focus: function(t4, e4) {
            e4 = e4.item.data("ui-selectmenu-item");
            null != i4.focusIndex && e4.index !== i4.focusIndex && (i4._trigger("focus", t4, { item: e4 }), i4.isOpen || i4._select(e4, t4)), i4.focusIndex = e4.index, i4.button.attr("aria-activedescendant", i4.menuItems.eq(e4.index).attr("id"));
          } }).menu("instance"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function() {
            return false;
          }, this.menuInstance._isDivider = function() {
            return false;
          };
        }, refresh: function() {
          this._refreshMenu(), this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item") || {})), null === this.options.width && this._resizeButton();
        }, _refreshMenu: function() {
          var t4 = this.element.find("option");
          this.menu.empty(), this._parseOptions(t4), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"), this._rendered = true, t4.length && (t4 = this._getSelectedItem(), this.menuInstance.focus(null, t4), this._setAria(t4.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")));
        }, open: function(t4) {
          this.options.disabled || (this._rendered ? (this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.menuItems.length && (this.isOpen = true, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", t4)));
        }, _position: function() {
          this.menuWrap.position(V3.extend({ of: this.button }, this.options.position));
        }, close: function(t4) {
          this.isOpen && (this.isOpen = false, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", t4));
        }, widget: function() {
          return this.button;
        }, menuWidget: function() {
          return this.menu;
        }, _renderButtonItem: function(t4) {
          var e4 = V3("<span>");
          return this._setText(e4, t4.label), this._addClass(e4, "ui-selectmenu-text"), e4;
        }, _renderMenu: function(s4, t4) {
          var n3 = this, o3 = "";
          V3.each(t4, function(t5, e4) {
            var i4;
            e4.optgroup !== o3 && (i4 = V3("<li>", { text: e4.optgroup }), n3._addClass(i4, "ui-selectmenu-optgroup", "ui-menu-divider" + (e4.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : "")), i4.appendTo(s4), o3 = e4.optgroup), n3._renderItemData(s4, e4);
          });
        }, _renderItemData: function(t4, e4) {
          return this._renderItem(t4, e4).data("ui-selectmenu-item", e4);
        }, _renderItem: function(t4, e4) {
          var i4 = V3("<li>"), s4 = V3("<div>", { title: e4.element.attr("title") });
          return e4.disabled && this._addClass(i4, null, "ui-state-disabled"), this._setText(s4, e4.label), i4.append(s4).appendTo(t4);
        }, _setText: function(t4, e4) {
          e4 ? t4.text(e4) : t4.html("&#160;");
        }, _move: function(t4, e4) {
          var i4, s4 = ".ui-menu-item";
          this.isOpen ? i4 = this.menuItems.eq(this.focusIndex).parent("li") : (i4 = this.menuItems.eq(this.element[0].selectedIndex).parent("li"), s4 += ":not(.ui-state-disabled)"), (s4 = "first" === t4 || "last" === t4 ? i4["first" === t4 ? "prevAll" : "nextAll"](s4).eq(-1) : i4[t4 + "All"](s4).eq(0)).length && this.menuInstance.focus(e4, s4);
        }, _getSelectedItem: function() {
          return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        }, _toggle: function(t4) {
          this[this.isOpen ? "close" : "open"](t4);
        }, _setSelection: function() {
          var t4;
          this.range && (window.getSelection ? ((t4 = window.getSelection()).removeAllRanges(), t4.addRange(this.range)) : this.range.select(), this.button.trigger("focus"));
        }, _documentClick: { mousedown: function(t4) {
          this.isOpen && (V3(t4.target).closest(".ui-selectmenu-menu, #" + V3.escapeSelector(this.ids.button)).length || this.close(t4));
        } }, _buttonEvents: { mousedown: function() {
          var t4;
          window.getSelection ? (t4 = window.getSelection()).rangeCount && (this.range = t4.getRangeAt(0)) : this.range = document.selection.createRange();
        }, click: function(t4) {
          this._setSelection(), this._toggle(t4);
        }, keydown: function(t4) {
          var e4 = true;
          switch (t4.keyCode) {
            case V3.ui.keyCode.TAB:
            case V3.ui.keyCode.ESCAPE:
              this.close(t4), e4 = false;
              break;
            case V3.ui.keyCode.ENTER:
              this.isOpen && this._selectFocusedItem(t4);
              break;
            case V3.ui.keyCode.UP:
              t4.altKey ? this._toggle(t4) : this._move("prev", t4);
              break;
            case V3.ui.keyCode.DOWN:
              t4.altKey ? this._toggle(t4) : this._move("next", t4);
              break;
            case V3.ui.keyCode.SPACE:
              this.isOpen ? this._selectFocusedItem(t4) : this._toggle(t4);
              break;
            case V3.ui.keyCode.LEFT:
              this._move("prev", t4);
              break;
            case V3.ui.keyCode.RIGHT:
              this._move("next", t4);
              break;
            case V3.ui.keyCode.HOME:
            case V3.ui.keyCode.PAGE_UP:
              this._move("first", t4);
              break;
            case V3.ui.keyCode.END:
            case V3.ui.keyCode.PAGE_DOWN:
              this._move("last", t4);
              break;
            default:
              this.menu.trigger(t4), e4 = false;
          }
          e4 && t4.preventDefault();
        } }, _selectFocusedItem: function(t4) {
          var e4 = this.menuItems.eq(this.focusIndex).parent("li");
          e4.hasClass("ui-state-disabled") || this._select(e4.data("ui-selectmenu-item"), t4);
        }, _select: function(t4, e4) {
          var i4 = this.element[0].selectedIndex;
          this.element[0].selectedIndex = t4.index, this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(t4)), this._setAria(t4), this._trigger("select", e4, { item: t4 }), t4.index !== i4 && this._trigger("change", e4, { item: t4 }), this.close(e4);
        }, _setAria: function(t4) {
          t4 = this.menuItems.eq(t4.index).attr("id");
          this.button.attr({ "aria-labelledby": t4, "aria-activedescendant": t4 }), this.menu.attr("aria-activedescendant", t4);
        }, _setOption: function(t4, e4) {
          var i4;
          "icons" === t4 && (i4 = this.button.find("span.ui-icon"), this._removeClass(i4, null, this.options.icons.button)._addClass(i4, null, e4.button)), this._super(t4, e4), "appendTo" === t4 && this.menuWrap.appendTo(this._appendTo()), "width" === t4 && this._resizeButton();
        }, _setOptionDisabled: function(t4) {
          this._super(t4), this.menuInstance.option("disabled", t4), this.button.attr("aria-disabled", t4), this._toggleClass(this.button, null, "ui-state-disabled", t4), this.element.prop("disabled", t4), t4 ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0);
        }, _appendTo: function() {
          var t4 = this.options.appendTo;
          return t4 = !(t4 = !(t4 = t4 && (t4.jquery || t4.nodeType ? V3(t4) : this.document.find(t4).eq(0))) || !t4[0] ? this.element.closest(".ui-front, dialog") : t4).length ? this.document[0].body : t4;
        }, _toggleAttr: function() {
          this.button.attr("aria-expanded", this.isOpen), this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen), this.menu.attr("aria-hidden", !this.isOpen);
        }, _resizeButton: function() {
          var t4 = this.options.width;
          false !== t4 ? (null === t4 && (t4 = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(t4)) : this.button.css("width", "");
        }, _resizeMenu: function() {
          this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1));
        }, _getCreateOptions: function() {
          var t4 = this._super();
          return t4.disabled = this.element.prop("disabled"), t4;
        }, _parseOptions: function(t4) {
          var i4 = this, s4 = [];
          t4.each(function(t5, e4) {
            e4.hidden || s4.push(i4._parseOption(V3(e4), t5));
          }), this.items = s4;
        }, _parseOption: function(t4, e4) {
          var i4 = t4.parent("optgroup");
          return { element: t4, index: e4, value: t4.val(), label: t4.text(), optgroup: i4.attr("label") || "", disabled: i4.prop("disabled") || t4.prop("disabled") };
        }, _destroy: function() {
          this._unbindFormResetHandler(), this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.labels.attr("for", this.ids.element);
        } }]), V3.widget("ui.slider", V3.ui.mouse, { version: "1.13.2", widgetEventPrefix: "slide", options: { animate: false, classes: { "ui-slider": "ui-corner-all", "ui-slider-handle": "ui-corner-all", "ui-slider-range": "ui-corner-all ui-widget-header" }, distance: 0, max: 100, min: 0, orientation: "horizontal", range: false, step: 1, value: 0, values: null, change: null, slide: null, start: null, stop: null }, numPages: 5, _create: function() {
          this._keySliding = false, this._mouseSliding = false, this._animateOff = true, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content"), this._refresh(), this._animateOff = false;
        }, _refresh: function() {
          this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue();
        }, _createHandles: function() {
          var t4, e4 = this.options, i4 = this.element.find(".ui-slider-handle"), s4 = [], n3 = e4.values && e4.values.length || 1;
          for (i4.length > n3 && (i4.slice(n3).remove(), i4 = i4.slice(0, n3)), t4 = i4.length; t4 < n3; t4++)
            s4.push("<span tabindex='0'></span>");
          this.handles = i4.add(V3(s4.join("")).appendTo(this.element)), this._addClass(this.handles, "ui-slider-handle", "ui-state-default"), this.handle = this.handles.eq(0), this.handles.each(function(t5) {
            V3(this).data("ui-slider-handle-index", t5).attr("tabIndex", 0);
          });
        }, _createRange: function() {
          var t4 = this.options;
          t4.range ? (true === t4.range && (t4.values ? t4.values.length && 2 !== t4.values.length ? t4.values = [t4.values[0], t4.values[0]] : Array.isArray(t4.values) && (t4.values = t4.values.slice(0)) : t4.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? (this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max"), this.range.css({ left: "", bottom: "" })) : (this.range = V3("<div>").appendTo(this.element), this._addClass(this.range, "ui-slider-range")), "min" !== t4.range && "max" !== t4.range || this._addClass(this.range, "ui-slider-range-" + t4.range)) : (this.range && this.range.remove(), this.range = null);
        }, _setupEvents: function() {
          this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles);
        }, _destroy: function() {
          this.handles.remove(), this.range && this.range.remove(), this._mouseDestroy();
        }, _mouseCapture: function(t4) {
          var i4, s4, n3, o3, e4, a4, r4 = this, l4 = this.options;
          return !l4.disabled && (this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() }, this.elementOffset = this.element.offset(), a4 = { x: t4.pageX, y: t4.pageY }, i4 = this._normValueFromMouse(a4), s4 = this._valueMax() - this._valueMin() + 1, this.handles.each(function(t5) {
            var e5 = Math.abs(i4 - r4.values(t5));
            (e5 < s4 || s4 === e5 && (t5 === r4._lastChangedValue || r4.values(t5) === l4.min)) && (s4 = e5, n3 = V3(this), o3 = t5);
          }), false !== this._start(t4, o3) && (this._mouseSliding = true, this._handleIndex = o3, this._addClass(n3, null, "ui-state-active"), n3.trigger("focus"), e4 = n3.offset(), a4 = !V3(t4.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = a4 ? { left: 0, top: 0 } : { left: t4.pageX - e4.left - n3.width() / 2, top: t4.pageY - e4.top - n3.height() / 2 - (parseInt(n3.css("borderTopWidth"), 10) || 0) - (parseInt(n3.css("borderBottomWidth"), 10) || 0) + (parseInt(n3.css("marginTop"), 10) || 0) }, this.handles.hasClass("ui-state-hover") || this._slide(t4, o3, i4), this._animateOff = true));
        }, _mouseStart: function() {
          return true;
        }, _mouseDrag: function(t4) {
          var e4 = { x: t4.pageX, y: t4.pageY }, e4 = this._normValueFromMouse(e4);
          return this._slide(t4, this._handleIndex, e4), false;
        }, _mouseStop: function(t4) {
          return this._removeClass(this.handles, null, "ui-state-active"), this._mouseSliding = false, this._stop(t4, this._handleIndex), this._change(t4, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = false;
        }, _detectOrientation: function() {
          this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal";
        }, _normValueFromMouse: function(t4) {
          var e4, t4 = "horizontal" === this.orientation ? (e4 = this.elementSize.width, t4.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (e4 = this.elementSize.height, t4.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), t4 = t4 / e4;
          return (t4 = 1 < t4 ? 1 : t4) < 0 && (t4 = 0), "vertical" === this.orientation && (t4 = 1 - t4), e4 = this._valueMax() - this._valueMin(), e4 = this._valueMin() + t4 * e4, this._trimAlignValue(e4);
        }, _uiHash: function(t4, e4, i4) {
          var s4 = { handle: this.handles[t4], handleIndex: t4, value: void 0 !== e4 ? e4 : this.value() };
          return this._hasMultipleValues() && (s4.value = void 0 !== e4 ? e4 : this.values(t4), s4.values = i4 || this.values()), s4;
        }, _hasMultipleValues: function() {
          return this.options.values && this.options.values.length;
        }, _start: function(t4, e4) {
          return this._trigger("start", t4, this._uiHash(e4));
        }, _slide: function(t4, e4, i4) {
          var s4, n3 = this.value(), o3 = this.values();
          this._hasMultipleValues() && (s4 = this.values(e4 ? 0 : 1), n3 = this.values(e4), 2 === this.options.values.length && true === this.options.range && (i4 = 0 === e4 ? Math.min(s4, i4) : Math.max(s4, i4)), o3[e4] = i4), i4 !== n3 && false !== this._trigger("slide", t4, this._uiHash(e4, i4, o3)) && (this._hasMultipleValues() ? this.values(e4, i4) : this.value(i4));
        }, _stop: function(t4, e4) {
          this._trigger("stop", t4, this._uiHash(e4));
        }, _change: function(t4, e4) {
          this._keySliding || this._mouseSliding || (this._lastChangedValue = e4, this._trigger("change", t4, this._uiHash(e4)));
        }, value: function(t4) {
          return arguments.length ? (this.options.value = this._trimAlignValue(t4), this._refreshValue(), void this._change(null, 0)) : this._value();
        }, values: function(t4, e4) {
          var i4, s4, n3;
          if (1 < arguments.length)
            return this.options.values[t4] = this._trimAlignValue(e4), this._refreshValue(), void this._change(null, t4);
          if (!arguments.length)
            return this._values();
          if (!Array.isArray(t4))
            return this._hasMultipleValues() ? this._values(t4) : this.value();
          for (i4 = this.options.values, s4 = t4, n3 = 0; n3 < i4.length; n3 += 1)
            i4[n3] = this._trimAlignValue(s4[n3]), this._change(null, n3);
          this._refreshValue();
        }, _setOption: function(t4, e4) {
          var i4, s4 = 0;
          switch ("range" === t4 && true === this.options.range && ("min" === e4 ? (this.options.value = this._values(0), this.options.values = null) : "max" === e4 && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), Array.isArray(this.options.values) && (s4 = this.options.values.length), this._super(t4, e4), t4) {
            case "orientation":
              this._detectOrientation(), this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation), this._refreshValue(), this.options.range && this._refreshRange(e4), this.handles.css("horizontal" === e4 ? "bottom" : "left", "");
              break;
            case "value":
              this._animateOff = true, this._refreshValue(), this._change(null, 0), this._animateOff = false;
              break;
            case "values":
              for (this._animateOff = true, this._refreshValue(), i4 = s4 - 1; 0 <= i4; i4--)
                this._change(null, i4);
              this._animateOff = false;
              break;
            case "step":
            case "min":
            case "max":
              this._animateOff = true, this._calculateNewMax(), this._refreshValue(), this._animateOff = false;
              break;
            case "range":
              this._animateOff = true, this._refresh(), this._animateOff = false;
          }
        }, _setOptionDisabled: function(t4) {
          this._super(t4), this._toggleClass(null, "ui-state-disabled", !!t4);
        }, _value: function() {
          var t4 = this.options.value;
          return t4 = this._trimAlignValue(t4);
        }, _values: function(t4) {
          var e4, i4;
          if (arguments.length)
            return t4 = this.options.values[t4], t4 = this._trimAlignValue(t4);
          if (this._hasMultipleValues()) {
            for (e4 = this.options.values.slice(), i4 = 0; i4 < e4.length; i4 += 1)
              e4[i4] = this._trimAlignValue(e4[i4]);
            return e4;
          }
          return [];
        }, _trimAlignValue: function(t4) {
          if (t4 <= this._valueMin())
            return this._valueMin();
          if (t4 >= this._valueMax())
            return this._valueMax();
          var e4 = 0 < this.options.step ? this.options.step : 1, i4 = (t4 - this._valueMin()) % e4, t4 = t4 - i4;
          return 2 * Math.abs(i4) >= e4 && (t4 += 0 < i4 ? e4 : -e4), parseFloat(t4.toFixed(5));
        }, _calculateNewMax: function() {
          var t4 = this.options.max, e4 = this._valueMin(), i4 = this.options.step;
          (t4 = Math.round((t4 - e4) / i4) * i4 + e4) > this.options.max && (t4 -= i4), this.max = parseFloat(t4.toFixed(this._precision()));
        }, _precision: function() {
          var t4 = this._precisionOf(this.options.step);
          return t4 = null !== this.options.min ? Math.max(t4, this._precisionOf(this.options.min)) : t4;
        }, _precisionOf: function(t4) {
          var e4 = t4.toString(), t4 = e4.indexOf(".");
          return -1 === t4 ? 0 : e4.length - t4 - 1;
        }, _valueMin: function() {
          return this.options.min;
        }, _valueMax: function() {
          return this.max;
        }, _refreshRange: function(t4) {
          "vertical" === t4 && this.range.css({ width: "", left: "" }), "horizontal" === t4 && this.range.css({ height: "", bottom: "" });
        }, _refreshValue: function() {
          var e4, i4, t4, s4, n3, o3 = this.options.range, a4 = this.options, r4 = this, l4 = !this._animateOff && a4.animate, h4 = {};
          this._hasMultipleValues() ? this.handles.each(function(t5) {
            i4 = (r4.values(t5) - r4._valueMin()) / (r4._valueMax() - r4._valueMin()) * 100, h4["horizontal" === r4.orientation ? "left" : "bottom"] = i4 + "%", V3(this).stop(1, 1)[l4 ? "animate" : "css"](h4, a4.animate), true === r4.options.range && ("horizontal" === r4.orientation ? (0 === t5 && r4.range.stop(1, 1)[l4 ? "animate" : "css"]({ left: i4 + "%" }, a4.animate), 1 === t5 && r4.range[l4 ? "animate" : "css"]({ width: i4 - e4 + "%" }, { queue: false, duration: a4.animate })) : (0 === t5 && r4.range.stop(1, 1)[l4 ? "animate" : "css"]({ bottom: i4 + "%" }, a4.animate), 1 === t5 && r4.range[l4 ? "animate" : "css"]({ height: i4 - e4 + "%" }, { queue: false, duration: a4.animate }))), e4 = i4;
          }) : (t4 = this.value(), s4 = this._valueMin(), n3 = this._valueMax(), i4 = n3 !== s4 ? (t4 - s4) / (n3 - s4) * 100 : 0, h4["horizontal" === this.orientation ? "left" : "bottom"] = i4 + "%", this.handle.stop(1, 1)[l4 ? "animate" : "css"](h4, a4.animate), "min" === o3 && "horizontal" === this.orientation && this.range.stop(1, 1)[l4 ? "animate" : "css"]({ width: i4 + "%" }, a4.animate), "max" === o3 && "horizontal" === this.orientation && this.range.stop(1, 1)[l4 ? "animate" : "css"]({ width: 100 - i4 + "%" }, a4.animate), "min" === o3 && "vertical" === this.orientation && this.range.stop(1, 1)[l4 ? "animate" : "css"]({ height: i4 + "%" }, a4.animate), "max" === o3 && "vertical" === this.orientation && this.range.stop(1, 1)[l4 ? "animate" : "css"]({ height: 100 - i4 + "%" }, a4.animate));
        }, _handleEvents: { keydown: function(t4) {
          var e4, i4, s4, n3 = V3(t4.target).data("ui-slider-handle-index");
          switch (t4.keyCode) {
            case V3.ui.keyCode.HOME:
            case V3.ui.keyCode.END:
            case V3.ui.keyCode.PAGE_UP:
            case V3.ui.keyCode.PAGE_DOWN:
            case V3.ui.keyCode.UP:
            case V3.ui.keyCode.RIGHT:
            case V3.ui.keyCode.DOWN:
            case V3.ui.keyCode.LEFT:
              if (t4.preventDefault(), !this._keySliding && (this._keySliding = true, this._addClass(V3(t4.target), null, "ui-state-active"), false === this._start(t4, n3)))
                return;
          }
          switch (s4 = this.options.step, e4 = i4 = this._hasMultipleValues() ? this.values(n3) : this.value(), t4.keyCode) {
            case V3.ui.keyCode.HOME:
              i4 = this._valueMin();
              break;
            case V3.ui.keyCode.END:
              i4 = this._valueMax();
              break;
            case V3.ui.keyCode.PAGE_UP:
              i4 = this._trimAlignValue(e4 + (this._valueMax() - this._valueMin()) / this.numPages);
              break;
            case V3.ui.keyCode.PAGE_DOWN:
              i4 = this._trimAlignValue(e4 - (this._valueMax() - this._valueMin()) / this.numPages);
              break;
            case V3.ui.keyCode.UP:
            case V3.ui.keyCode.RIGHT:
              if (e4 === this._valueMax())
                return;
              i4 = this._trimAlignValue(e4 + s4);
              break;
            case V3.ui.keyCode.DOWN:
            case V3.ui.keyCode.LEFT:
              if (e4 === this._valueMin())
                return;
              i4 = this._trimAlignValue(e4 - s4);
          }
          this._slide(t4, n3, i4);
        }, keyup: function(t4) {
          var e4 = V3(t4.target).data("ui-slider-handle-index");
          this._keySliding && (this._keySliding = false, this._stop(t4, e4), this._change(t4, e4), this._removeClass(V3(t4.target), null, "ui-state-active"));
        } } }), V3.widget("ui.sortable", V3.ui.mouse, { version: "1.13.2", widgetEventPrefix: "sort", ready: false, options: { appendTo: "parent", axis: false, connectWith: false, containment: false, cursor: "auto", cursorAt: false, dropOnEmpty: true, forcePlaceholderSize: false, forceHelperSize: false, grid: false, handle: false, helper: "original", items: "> *", opacity: false, placeholder: false, revert: false, scroll: true, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1e3, activate: null, beforeStop: null, change: null, deactivate: null, out: null, over: null, receive: null, remove: null, sort: null, start: null, stop: null, update: null }, _isOverAxis: function(t4, e4, i4) {
          return e4 <= t4 && t4 < e4 + i4;
        }, _isFloating: function(t4) {
          return /left|right/.test(t4.css("float")) || /inline|table-cell/.test(t4.css("display"));
        }, _create: function() {
          this.containerCache = {}, this._addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = true;
        }, _setOption: function(t4, e4) {
          this._super(t4, e4), "handle" === t4 && this._setHandleClassName();
        }, _setHandleClassName: function() {
          var t4 = this;
          this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle"), V3.each(this.items, function() {
            t4._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle");
          });
        }, _destroy: function() {
          this._mouseDestroy();
          for (var t4 = this.items.length - 1; 0 <= t4; t4--)
            this.items[t4].item.removeData(this.widgetName + "-item");
          return this;
        }, _mouseCapture: function(t4, e4) {
          var i4 = null, s4 = false, n3 = this;
          return !this.reverting && (!this.options.disabled && "static" !== this.options.type && (this._refreshItems(t4), V3(t4.target).parents().each(function() {
            if (V3.data(this, n3.widgetName + "-item") === n3)
              return i4 = V3(this), false;
          }), !!(i4 = V3.data(t4.target, n3.widgetName + "-item") === n3 ? V3(t4.target) : i4) && (!(this.options.handle && !e4 && (V3(this.options.handle, i4).find("*").addBack().each(function() {
            this === t4.target && (s4 = true);
          }), !s4)) && (this.currentItem = i4, this._removeCurrentsFromItems(), true))));
        }, _mouseStart: function(t4, e4, i4) {
          var s4, n3, o3 = this.options;
          if ((this.currentContainer = this).refreshPositions(), this.appendTo = V3("parent" !== o3.appendTo ? o3.appendTo : this.currentItem.parent()), this.helper = this._createHelper(t4), this._cacheHelperProportions(), this._cacheMargins(), this.offset = this.currentItem.offset(), this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }, V3.extend(this.offset, { click: { left: t4.pageX - this.offset.left, top: t4.pageY - this.offset.top }, relative: this._getRelativeOffset() }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), o3.cursorAt && this._adjustOffsetFromHelper(o3.cursorAt), this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), this.scrollParent = this.placeholder.scrollParent(), V3.extend(this.offset, { parent: this._getParentOffset() }), o3.containment && this._setContainment(), o3.cursor && "auto" !== o3.cursor && (n3 = this.document.find("body"), this.storedCursor = n3.css("cursor"), n3.css("cursor", o3.cursor), this.storedStylesheet = V3("<style>*{ cursor: " + o3.cursor + " !important; }</style>").appendTo(n3)), o3.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", o3.zIndex)), o3.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", o3.opacity)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", t4, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !i4)
            for (s4 = this.containers.length - 1; 0 <= s4; s4--)
              this.containers[s4]._trigger("activate", t4, this._uiHash(this));
          return V3.ui.ddmanager && (V3.ui.ddmanager.current = this), V3.ui.ddmanager && !o3.dropBehaviour && V3.ui.ddmanager.prepareOffsets(this, t4), this.dragging = true, this._addClass(this.helper, "ui-sortable-helper"), this.helper.parent().is(this.appendTo) || (this.helper.detach().appendTo(this.appendTo), this.offset.parent = this._getParentOffset()), this.position = this.originalPosition = this._generatePosition(t4), this.originalPageX = t4.pageX, this.originalPageY = t4.pageY, this.lastPositionAbs = this.positionAbs = this._convertPositionTo("absolute"), this._mouseDrag(t4), true;
        }, _scroll: function(t4) {
          var e4 = this.options, i4 = false;
          return this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - t4.pageY < e4.scrollSensitivity ? this.scrollParent[0].scrollTop = i4 = this.scrollParent[0].scrollTop + e4.scrollSpeed : t4.pageY - this.overflowOffset.top < e4.scrollSensitivity && (this.scrollParent[0].scrollTop = i4 = this.scrollParent[0].scrollTop - e4.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - t4.pageX < e4.scrollSensitivity ? this.scrollParent[0].scrollLeft = i4 = this.scrollParent[0].scrollLeft + e4.scrollSpeed : t4.pageX - this.overflowOffset.left < e4.scrollSensitivity && (this.scrollParent[0].scrollLeft = i4 = this.scrollParent[0].scrollLeft - e4.scrollSpeed)) : (t4.pageY - this.document.scrollTop() < e4.scrollSensitivity ? i4 = this.document.scrollTop(this.document.scrollTop() - e4.scrollSpeed) : this.window.height() - (t4.pageY - this.document.scrollTop()) < e4.scrollSensitivity && (i4 = this.document.scrollTop(this.document.scrollTop() + e4.scrollSpeed)), t4.pageX - this.document.scrollLeft() < e4.scrollSensitivity ? i4 = this.document.scrollLeft(this.document.scrollLeft() - e4.scrollSpeed) : this.window.width() - (t4.pageX - this.document.scrollLeft()) < e4.scrollSensitivity && (i4 = this.document.scrollLeft(this.document.scrollLeft() + e4.scrollSpeed))), i4;
        }, _mouseDrag: function(t4) {
          var e4, i4, s4, n3, o3 = this.options;
          for (this.position = this._generatePosition(t4), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), o3.scroll && false !== this._scroll(t4) && (this._refreshItemPositions(true), V3.ui.ddmanager && !o3.dropBehaviour && V3.ui.ddmanager.prepareOffsets(this, t4)), this.dragDirection = { vertical: this._getDragVerticalDirection(), horizontal: this._getDragHorizontalDirection() }, e4 = this.items.length - 1; 0 <= e4; e4--)
            if (s4 = (i4 = this.items[e4]).item[0], (n3 = this._intersectsWithPointer(i4)) && i4.instance === this.currentContainer && !(s4 === this.currentItem[0] || this.placeholder[1 === n3 ? "next" : "prev"]()[0] === s4 || V3.contains(this.placeholder[0], s4) || "semi-dynamic" === this.options.type && V3.contains(this.element[0], s4))) {
              if (this.direction = 1 === n3 ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(i4))
                break;
              this._rearrange(t4, i4), this._trigger("change", t4, this._uiHash());
              break;
            }
          return this._contactContainers(t4), V3.ui.ddmanager && V3.ui.ddmanager.drag(this, t4), this._trigger("sort", t4, this._uiHash()), this.lastPositionAbs = this.positionAbs, false;
        }, _mouseStop: function(t4, e4) {
          var i4, s4, n3, o3;
          if (t4)
            return V3.ui.ddmanager && !this.options.dropBehaviour && V3.ui.ddmanager.drop(this, t4), this.options.revert ? (s4 = (i4 = this).placeholder.offset(), o3 = {}, (n3 = this.options.axis) && "x" !== n3 || (o3.left = s4.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), n3 && "y" !== n3 || (o3.top = s4.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = true, V3(this.helper).animate(o3, parseInt(this.options.revert, 10) || 500, function() {
              i4._clear(t4);
            })) : this._clear(t4, e4), false;
        }, cancel: function() {
          if (this.dragging) {
            this._mouseUp(new V3.Event("mouseup", { target: null })), "original" === this.options.helper ? (this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper")) : this.currentItem.show();
            for (var t4 = this.containers.length - 1; 0 <= t4; t4--)
              this.containers[t4]._trigger("deactivate", null, this._uiHash(this)), this.containers[t4].containerCache.over && (this.containers[t4]._trigger("out", null, this._uiHash(this)), this.containers[t4].containerCache.over = 0);
          }
          return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), V3.extend(this, { helper: null, dragging: false, reverting: false, _noFinalSort: null }), this.domPosition.prev ? V3(this.domPosition.prev).after(this.currentItem) : V3(this.domPosition.parent).prepend(this.currentItem)), this;
        }, serialize: function(e4) {
          var t4 = this._getItemsAsjQuery(e4 && e4.connected), i4 = [];
          return e4 = e4 || {}, V3(t4).each(function() {
            var t5 = (V3(e4.item || this).attr(e4.attribute || "id") || "").match(e4.expression || /(.+)[\-=_](.+)/);
            t5 && i4.push((e4.key || t5[1] + "[]") + "=" + (e4.key && e4.expression ? t5[1] : t5[2]));
          }), !i4.length && e4.key && i4.push(e4.key + "="), i4.join("&");
        }, toArray: function(t4) {
          var e4 = this._getItemsAsjQuery(t4 && t4.connected), i4 = [];
          return t4 = t4 || {}, e4.each(function() {
            i4.push(V3(t4.item || this).attr(t4.attribute || "id") || "");
          }), i4;
        }, _intersectsWith: function(t4) {
          var e4 = this.positionAbs.left, i4 = e4 + this.helperProportions.width, s4 = this.positionAbs.top, n3 = s4 + this.helperProportions.height, o3 = t4.left, a4 = o3 + t4.width, r4 = t4.top, l4 = r4 + t4.height, h4 = this.offset.click.top, c4 = this.offset.click.left, h4 = "x" === this.options.axis || r4 < s4 + h4 && s4 + h4 < l4, c4 = "y" === this.options.axis || o3 < e4 + c4 && e4 + c4 < a4;
          return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > t4[this.floating ? "width" : "height"] ? h4 && c4 : o3 < e4 + this.helperProportions.width / 2 && i4 - this.helperProportions.width / 2 < a4 && r4 < s4 + this.helperProportions.height / 2 && n3 - this.helperProportions.height / 2 < l4;
        }, _intersectsWithPointer: function(t4) {
          var e4 = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, t4.top, t4.height), t4 = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, t4.left, t4.width);
          return !(!e4 || !t4) && (e4 = this.dragDirection.vertical, t4 = this.dragDirection.horizontal, this.floating ? "right" === t4 || "down" === e4 ? 2 : 1 : e4 && ("down" === e4 ? 2 : 1));
        }, _intersectsWithSides: function(t4) {
          var e4 = this._isOverAxis(this.positionAbs.top + this.offset.click.top, t4.top + t4.height / 2, t4.height), i4 = this._isOverAxis(this.positionAbs.left + this.offset.click.left, t4.left + t4.width / 2, t4.width), s4 = this.dragDirection.vertical, t4 = this.dragDirection.horizontal;
          return this.floating && t4 ? "right" === t4 && i4 || "left" === t4 && !i4 : s4 && ("down" === s4 && e4 || "up" === s4 && !e4);
        }, _getDragVerticalDirection: function() {
          var t4 = this.positionAbs.top - this.lastPositionAbs.top;
          return 0 != t4 && (0 < t4 ? "down" : "up");
        }, _getDragHorizontalDirection: function() {
          var t4 = this.positionAbs.left - this.lastPositionAbs.left;
          return 0 != t4 && (0 < t4 ? "right" : "left");
        }, refresh: function(t4) {
          return this._refreshItems(t4), this._setHandleClassName(), this.refreshPositions(), this;
        }, _connectWith: function() {
          var t4 = this.options;
          return t4.connectWith.constructor === String ? [t4.connectWith] : t4.connectWith;
        }, _getItemsAsjQuery: function(t4) {
          var e4, i4, s4, n3, o3 = [], a4 = [], r4 = this._connectWith();
          if (r4 && t4)
            for (e4 = r4.length - 1; 0 <= e4; e4--)
              for (i4 = (s4 = V3(r4[e4], this.document[0])).length - 1; 0 <= i4; i4--)
                (n3 = V3.data(s4[i4], this.widgetFullName)) && n3 !== this && !n3.options.disabled && a4.push(["function" == typeof n3.options.items ? n3.options.items.call(n3.element) : V3(n3.options.items, n3.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), n3]);
          function l4() {
            o3.push(this);
          }
          for (a4.push(["function" == typeof this.options.items ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : V3(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), e4 = a4.length - 1; 0 <= e4; e4--)
            a4[e4][0].each(l4);
          return V3(o3);
        }, _removeCurrentsFromItems: function() {
          var i4 = this.currentItem.find(":data(" + this.widgetName + "-item)");
          this.items = V3.grep(this.items, function(t4) {
            for (var e4 = 0; e4 < i4.length; e4++)
              if (i4[e4] === t4.item[0])
                return false;
            return true;
          });
        }, _refreshItems: function(t4) {
          this.items = [], this.containers = [this];
          var e4, i4, s4, n3, o3, a4, r4, l4, h4 = this.items, c4 = [["function" == typeof this.options.items ? this.options.items.call(this.element[0], t4, { item: this.currentItem }) : V3(this.options.items, this.element), this]], u4 = this._connectWith();
          if (u4 && this.ready)
            for (e4 = u4.length - 1; 0 <= e4; e4--)
              for (i4 = (s4 = V3(u4[e4], this.document[0])).length - 1; 0 <= i4; i4--)
                (n3 = V3.data(s4[i4], this.widgetFullName)) && n3 !== this && !n3.options.disabled && (c4.push(["function" == typeof n3.options.items ? n3.options.items.call(n3.element[0], t4, { item: this.currentItem }) : V3(n3.options.items, n3.element), n3]), this.containers.push(n3));
          for (e4 = c4.length - 1; 0 <= e4; e4--)
            for (o3 = c4[e4][1], l4 = (a4 = c4[e4][i4 = 0]).length; i4 < l4; i4++)
              (r4 = V3(a4[i4])).data(this.widgetName + "-item", o3), h4.push({ item: r4, instance: o3, width: 0, height: 0, left: 0, top: 0 });
        }, _refreshItemPositions: function(t4) {
          for (var e4, i4, s4 = this.items.length - 1; 0 <= s4; s4--)
            e4 = this.items[s4], this.currentContainer && e4.instance !== this.currentContainer && e4.item[0] !== this.currentItem[0] || (i4 = this.options.toleranceElement ? V3(this.options.toleranceElement, e4.item) : e4.item, t4 || (e4.width = i4.outerWidth(), e4.height = i4.outerHeight()), i4 = i4.offset(), e4.left = i4.left, e4.top = i4.top);
        }, refreshPositions: function(t4) {
          var e4, i4;
          if (this.floating = !!this.items.length && ("x" === this.options.axis || this._isFloating(this.items[0].item)), this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset()), this._refreshItemPositions(t4), this.options.custom && this.options.custom.refreshContainers)
            this.options.custom.refreshContainers.call(this);
          else
            for (e4 = this.containers.length - 1; 0 <= e4; e4--)
              i4 = this.containers[e4].element.offset(), this.containers[e4].containerCache.left = i4.left, this.containers[e4].containerCache.top = i4.top, this.containers[e4].containerCache.width = this.containers[e4].element.outerWidth(), this.containers[e4].containerCache.height = this.containers[e4].element.outerHeight();
          return this;
        }, _createPlaceholder: function(i4) {
          var s4, n3, o3 = (i4 = i4 || this).options;
          o3.placeholder && o3.placeholder.constructor !== String || (s4 = o3.placeholder, n3 = i4.currentItem[0].nodeName.toLowerCase(), o3.placeholder = { element: function() {
            var t4 = V3("<" + n3 + ">", i4.document[0]);
            return i4._addClass(t4, "ui-sortable-placeholder", s4 || i4.currentItem[0].className)._removeClass(t4, "ui-sortable-helper"), "tbody" === n3 ? i4._createTrPlaceholder(i4.currentItem.find("tr").eq(0), V3("<tr>", i4.document[0]).appendTo(t4)) : "tr" === n3 ? i4._createTrPlaceholder(i4.currentItem, t4) : "img" === n3 && t4.attr("src", i4.currentItem.attr("src")), s4 || t4.css("visibility", "hidden"), t4;
          }, update: function(t4, e4) {
            s4 && !o3.forcePlaceholderSize || (e4.height() && (!o3.forcePlaceholderSize || "tbody" !== n3 && "tr" !== n3) || e4.height(i4.currentItem.innerHeight() - parseInt(i4.currentItem.css("paddingTop") || 0, 10) - parseInt(i4.currentItem.css("paddingBottom") || 0, 10)), e4.width() || e4.width(i4.currentItem.innerWidth() - parseInt(i4.currentItem.css("paddingLeft") || 0, 10) - parseInt(i4.currentItem.css("paddingRight") || 0, 10)));
          } }), i4.placeholder = V3(o3.placeholder.element.call(i4.element, i4.currentItem)), i4.currentItem.after(i4.placeholder), o3.placeholder.update(i4, i4.placeholder);
        }, _createTrPlaceholder: function(t4, e4) {
          var i4 = this;
          t4.children().each(function() {
            V3("<td>&#160;</td>", i4.document[0]).attr("colspan", V3(this).attr("colspan") || 1).appendTo(e4);
          });
        }, _contactContainers: function(t4) {
          for (var e4, i4, s4, n3, o3, a4, r4, l4, h4, c4 = null, u4 = null, d3 = this.containers.length - 1; 0 <= d3; d3--)
            V3.contains(this.currentItem[0], this.containers[d3].element[0]) || (this._intersectsWith(this.containers[d3].containerCache) ? c4 && V3.contains(this.containers[d3].element[0], c4.element[0]) || (c4 = this.containers[d3], u4 = d3) : this.containers[d3].containerCache.over && (this.containers[d3]._trigger("out", t4, this._uiHash(this)), this.containers[d3].containerCache.over = 0));
          if (c4)
            if (1 === this.containers.length)
              this.containers[u4].containerCache.over || (this.containers[u4]._trigger("over", t4, this._uiHash(this)), this.containers[u4].containerCache.over = 1);
            else {
              for (i4 = 1e4, s4 = null, n3 = (l4 = c4.floating || this._isFloating(this.currentItem)) ? "left" : "top", o3 = l4 ? "width" : "height", h4 = l4 ? "pageX" : "pageY", e4 = this.items.length - 1; 0 <= e4; e4--)
                V3.contains(this.containers[u4].element[0], this.items[e4].item[0]) && this.items[e4].item[0] !== this.currentItem[0] && (a4 = this.items[e4].item.offset()[n3], r4 = false, t4[h4] - a4 > this.items[e4][o3] / 2 && (r4 = true), Math.abs(t4[h4] - a4) < i4 && (i4 = Math.abs(t4[h4] - a4), s4 = this.items[e4], this.direction = r4 ? "up" : "down"));
              (s4 || this.options.dropOnEmpty) && (this.currentContainer !== this.containers[u4] ? (s4 ? this._rearrange(t4, s4, null, true) : this._rearrange(t4, null, this.containers[u4].element, true), this._trigger("change", t4, this._uiHash()), this.containers[u4]._trigger("change", t4, this._uiHash(this)), this.currentContainer = this.containers[u4], this.options.placeholder.update(this.currentContainer, this.placeholder), this.scrollParent = this.placeholder.scrollParent(), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this.containers[u4]._trigger("over", t4, this._uiHash(this)), this.containers[u4].containerCache.over = 1) : this.currentContainer.containerCache.over || (this.containers[u4]._trigger("over", t4, this._uiHash()), this.currentContainer.containerCache.over = 1));
            }
        }, _createHelper: function(t4) {
          var e4 = this.options, t4 = "function" == typeof e4.helper ? V3(e4.helper.apply(this.element[0], [t4, this.currentItem])) : "clone" === e4.helper ? this.currentItem.clone() : this.currentItem;
          return t4.parents("body").length || this.appendTo[0].appendChild(t4[0]), t4[0] === this.currentItem[0] && (this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") }), t4[0].style.width && !e4.forceHelperSize || t4.width(this.currentItem.width()), t4[0].style.height && !e4.forceHelperSize || t4.height(this.currentItem.height()), t4;
        }, _adjustOffsetFromHelper: function(t4) {
          "string" == typeof t4 && (t4 = t4.split(" ")), "left" in (t4 = Array.isArray(t4) ? { left: +t4[0], top: +t4[1] || 0 } : t4) && (this.offset.click.left = t4.left + this.margins.left), "right" in t4 && (this.offset.click.left = this.helperProportions.width - t4.right + this.margins.left), "top" in t4 && (this.offset.click.top = t4.top + this.margins.top), "bottom" in t4 && (this.offset.click.top = this.helperProportions.height - t4.bottom + this.margins.top);
        }, _getParentOffset: function() {
          this.offsetParent = this.helper.offsetParent();
          var t4 = this.offsetParent.offset();
          return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && V3.contains(this.scrollParent[0], this.offsetParent[0]) && (t4.left += this.scrollParent.scrollLeft(), t4.top += this.scrollParent.scrollTop()), { top: (t4 = this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && V3.ui.ie ? { top: 0, left: 0 } : t4).top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: t4.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) };
        }, _getRelativeOffset: function() {
          if ("relative" !== this.cssPosition)
            return { top: 0, left: 0 };
          var t4 = this.currentItem.position();
          return { top: t4.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: t4.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() };
        }, _cacheMargins: function() {
          this.margins = { left: parseInt(this.currentItem.css("marginLeft"), 10) || 0, top: parseInt(this.currentItem.css("marginTop"), 10) || 0 };
        }, _cacheHelperProportions: function() {
          this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() };
        }, _setContainment: function() {
          var t4, e4, i4 = this.options;
          "parent" === i4.containment && (i4.containment = this.helper[0].parentNode), "document" !== i4.containment && "window" !== i4.containment || (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === i4.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === i4.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(i4.containment) || (t4 = V3(i4.containment)[0], e4 = V3(i4.containment).offset(), i4 = "hidden" !== V3(t4).css("overflow"), this.containment = [e4.left + (parseInt(V3(t4).css("borderLeftWidth"), 10) || 0) + (parseInt(V3(t4).css("paddingLeft"), 10) || 0) - this.margins.left, e4.top + (parseInt(V3(t4).css("borderTopWidth"), 10) || 0) + (parseInt(V3(t4).css("paddingTop"), 10) || 0) - this.margins.top, e4.left + (i4 ? Math.max(t4.scrollWidth, t4.offsetWidth) : t4.offsetWidth) - (parseInt(V3(t4).css("borderLeftWidth"), 10) || 0) - (parseInt(V3(t4).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e4.top + (i4 ? Math.max(t4.scrollHeight, t4.offsetHeight) : t4.offsetHeight) - (parseInt(V3(t4).css("borderTopWidth"), 10) || 0) - (parseInt(V3(t4).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]);
        }, _convertPositionTo: function(t4, e4) {
          e4 = e4 || this.position;
          var i4 = "absolute" === t4 ? 1 : -1, s4 = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && V3.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, t4 = /(html|body)/i.test(s4[0].tagName);
          return { top: e4.top + this.offset.relative.top * i4 + this.offset.parent.top * i4 - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : t4 ? 0 : s4.scrollTop()) * i4, left: e4.left + this.offset.relative.left * i4 + this.offset.parent.left * i4 - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : t4 ? 0 : s4.scrollLeft()) * i4 };
        }, _generatePosition: function(t4) {
          var e4 = this.options, i4 = t4.pageX, s4 = t4.pageY, n3 = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && V3.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, o3 = /(html|body)/i.test(n3[0].tagName);
          return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (t4.pageX - this.offset.click.left < this.containment[0] && (i4 = this.containment[0] + this.offset.click.left), t4.pageY - this.offset.click.top < this.containment[1] && (s4 = this.containment[1] + this.offset.click.top), t4.pageX - this.offset.click.left > this.containment[2] && (i4 = this.containment[2] + this.offset.click.left), t4.pageY - this.offset.click.top > this.containment[3] && (s4 = this.containment[3] + this.offset.click.top)), e4.grid && (t4 = this.originalPageY + Math.round((s4 - this.originalPageY) / e4.grid[1]) * e4.grid[1], s4 = !this.containment || t4 - this.offset.click.top >= this.containment[1] && t4 - this.offset.click.top <= this.containment[3] ? t4 : t4 - this.offset.click.top >= this.containment[1] ? t4 - e4.grid[1] : t4 + e4.grid[1], t4 = this.originalPageX + Math.round((i4 - this.originalPageX) / e4.grid[0]) * e4.grid[0], i4 = !this.containment || t4 - this.offset.click.left >= this.containment[0] && t4 - this.offset.click.left <= this.containment[2] ? t4 : t4 - this.offset.click.left >= this.containment[0] ? t4 - e4.grid[0] : t4 + e4.grid[0])), { top: s4 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : o3 ? 0 : n3.scrollTop()), left: i4 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : o3 ? 0 : n3.scrollLeft()) };
        }, _rearrange: function(t4, e4, i4, s4) {
          i4 ? i4[0].appendChild(this.placeholder[0]) : e4.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? e4.item[0] : e4.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
          var n3 = this.counter;
          this._delay(function() {
            n3 === this.counter && this.refreshPositions(!s4);
          });
        }, _clear: function(t4, e4) {
          this.reverting = false;
          var i4, s4 = [];
          if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
            for (i4 in this._storedCSS)
              "auto" !== this._storedCSS[i4] && "static" !== this._storedCSS[i4] || (this._storedCSS[i4] = "");
            this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper");
          } else
            this.currentItem.show();
          function n3(e5, i5, s5) {
            return function(t5) {
              s5._trigger(e5, t5, i5._uiHash(i5));
            };
          }
          for (this.fromOutside && !e4 && s4.push(function(t5) {
            this._trigger("receive", t5, this._uiHash(this.fromOutside));
          }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || e4 || s4.push(function(t5) {
            this._trigger("update", t5, this._uiHash());
          }), this !== this.currentContainer && (e4 || (s4.push(function(t5) {
            this._trigger("remove", t5, this._uiHash());
          }), s4.push(function(e5) {
            return function(t5) {
              e5._trigger("receive", t5, this._uiHash(this));
            };
          }.call(this, this.currentContainer)), s4.push(function(e5) {
            return function(t5) {
              e5._trigger("update", t5, this._uiHash(this));
            };
          }.call(this, this.currentContainer)))), i4 = this.containers.length - 1; 0 <= i4; i4--)
            e4 || s4.push(n3("deactivate", this, this.containers[i4])), this.containers[i4].containerCache.over && (s4.push(n3("out", this, this.containers[i4])), this.containers[i4].containerCache.over = 0);
          if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = false, e4 || this._trigger("beforeStop", t4, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !e4) {
            for (i4 = 0; i4 < s4.length; i4++)
              s4[i4].call(this, t4);
            this._trigger("stop", t4, this._uiHash());
          }
          return this.fromOutside = false, !this.cancelHelperRemoval;
        }, _trigger: function() {
          false === V3.Widget.prototype._trigger.apply(this, arguments) && this.cancel();
        }, _uiHash: function(t4) {
          var e4 = t4 || this;
          return { helper: e4.helper, placeholder: e4.placeholder || V3([]), position: e4.position, originalPosition: e4.originalPosition, offset: e4.positionAbs, item: e4.currentItem, sender: t4 ? t4.element : null };
        } });
        function ht(e4) {
          return function() {
            var t4 = this.element.val();
            e4.apply(this, arguments), this._refresh(), t4 !== this.element.val() && this._trigger("change");
          };
        }
        V3.widget("ui.spinner", { version: "1.13.2", defaultElement: "<input>", widgetEventPrefix: "spin", options: { classes: { "ui-spinner": "ui-corner-all", "ui-spinner-down": "ui-corner-br", "ui-spinner-up": "ui-corner-tr" }, culture: null, icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" }, incremental: true, max: null, min: null, numberFormat: null, page: 10, step: 1, change: null, spin: null, start: null, stop: null }, _create: function() {
          this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), true), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, { beforeunload: function() {
            this.element.removeAttr("autocomplete");
          } });
        }, _getCreateOptions: function() {
          var s4 = this._super(), n3 = this.element;
          return V3.each(["min", "max", "step"], function(t4, e4) {
            var i4 = n3.attr(e4);
            null != i4 && i4.length && (s4[e4] = i4);
          }), s4;
        }, _events: { keydown: function(t4) {
          this._start(t4) && this._keydown(t4) && t4.preventDefault();
        }, keyup: "_stop", focus: function() {
          this.previous = this.element.val();
        }, blur: function(t4) {
          this.cancelBlur ? delete this.cancelBlur : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", t4));
        }, mousewheel: function(t4, e4) {
          var i4 = V3.ui.safeActiveElement(this.document[0]);
          if (this.element[0] === i4 && e4) {
            if (!this.spinning && !this._start(t4))
              return false;
            this._spin((0 < e4 ? 1 : -1) * this.options.step, t4), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function() {
              this.spinning && this._stop(t4);
            }, 100), t4.preventDefault();
          }
        }, "mousedown .ui-spinner-button": function(t4) {
          var e4;
          function i4() {
            this.element[0] === V3.ui.safeActiveElement(this.document[0]) || (this.element.trigger("focus"), this.previous = e4, this._delay(function() {
              this.previous = e4;
            }));
          }
          e4 = this.element[0] === V3.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val(), t4.preventDefault(), i4.call(this), this.cancelBlur = true, this._delay(function() {
            delete this.cancelBlur, i4.call(this);
          }), false !== this._start(t4) && this._repeat(null, V3(t4.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t4);
        }, "mouseup .ui-spinner-button": "_stop", "mouseenter .ui-spinner-button": function(t4) {
          if (V3(t4.currentTarget).hasClass("ui-state-active"))
            return false !== this._start(t4) && void this._repeat(null, V3(t4.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t4);
        }, "mouseleave .ui-spinner-button": "_stop" }, _enhance: function() {
          this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent().append("<a></a><a></a>");
        }, _draw: function() {
          this._enhance(), this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content"), this._addClass("ui-spinner-input"), this.element.attr("role", "spinbutton"), this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", true).button({ classes: { "ui-button": "" } }), this._removeClass(this.buttons, "ui-corner-all"), this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up"), this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down"), this.buttons.first().button({ icon: this.options.icons.up, showLabel: false }), this.buttons.last().button({ icon: this.options.icons.down, showLabel: false }), this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) && 0 < this.uiSpinner.height() && this.uiSpinner.height(this.uiSpinner.height());
        }, _keydown: function(t4) {
          var e4 = this.options, i4 = V3.ui.keyCode;
          switch (t4.keyCode) {
            case i4.UP:
              return this._repeat(null, 1, t4), true;
            case i4.DOWN:
              return this._repeat(null, -1, t4), true;
            case i4.PAGE_UP:
              return this._repeat(null, e4.page, t4), true;
            case i4.PAGE_DOWN:
              return this._repeat(null, -e4.page, t4), true;
          }
          return false;
        }, _start: function(t4) {
          return !(!this.spinning && false === this._trigger("start", t4)) && (this.counter || (this.counter = 1), this.spinning = true);
        }, _repeat: function(t4, e4, i4) {
          t4 = t4 || 500, clearTimeout(this.timer), this.timer = this._delay(function() {
            this._repeat(40, e4, i4);
          }, t4), this._spin(e4 * this.options.step, i4);
        }, _spin: function(t4, e4) {
          var i4 = this.value() || 0;
          this.counter || (this.counter = 1), i4 = this._adjustValue(i4 + t4 * this._increment(this.counter)), this.spinning && false === this._trigger("spin", e4, { value: i4 }) || (this._value(i4), this.counter++);
        }, _increment: function(t4) {
          var e4 = this.options.incremental;
          return e4 ? "function" == typeof e4 ? e4(t4) : Math.floor(t4 * t4 * t4 / 5e4 - t4 * t4 / 500 + 17 * t4 / 200 + 1) : 1;
        }, _precision: function() {
          var t4 = this._precisionOf(this.options.step);
          return t4 = null !== this.options.min ? Math.max(t4, this._precisionOf(this.options.min)) : t4;
        }, _precisionOf: function(t4) {
          var e4 = t4.toString(), t4 = e4.indexOf(".");
          return -1 === t4 ? 0 : e4.length - t4 - 1;
        }, _adjustValue: function(t4) {
          var e4 = this.options, i4 = null !== e4.min ? e4.min : 0, s4 = t4 - i4;
          return t4 = i4 + Math.round(s4 / e4.step) * e4.step, t4 = parseFloat(t4.toFixed(this._precision())), null !== e4.max && t4 > e4.max ? e4.max : null !== e4.min && t4 < e4.min ? e4.min : t4;
        }, _stop: function(t4) {
          this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = false, this._trigger("stop", t4));
        }, _setOption: function(t4, e4) {
          var i4;
          if ("culture" === t4 || "numberFormat" === t4)
            return i4 = this._parse(this.element.val()), this.options[t4] = e4, void this.element.val(this._format(i4));
          "max" !== t4 && "min" !== t4 && "step" !== t4 || "string" == typeof e4 && (e4 = this._parse(e4)), "icons" === t4 && (i4 = this.buttons.first().find(".ui-icon"), this._removeClass(i4, null, this.options.icons.up), this._addClass(i4, null, e4.up), i4 = this.buttons.last().find(".ui-icon"), this._removeClass(i4, null, this.options.icons.down), this._addClass(i4, null, e4.down)), this._super(t4, e4);
        }, _setOptionDisabled: function(t4) {
          this._super(t4), this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!t4), this.element.prop("disabled", !!t4), this.buttons.button(t4 ? "disable" : "enable");
        }, _setOptions: ht(function(t4) {
          this._super(t4);
        }), _parse: function(t4) {
          return "" === (t4 = "string" == typeof t4 && "" !== t4 ? window.Globalize && this.options.numberFormat ? Globalize.parseFloat(t4, 10, this.options.culture) : +t4 : t4) || isNaN(t4) ? null : t4;
        }, _format: function(t4) {
          return "" === t4 ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(t4, this.options.numberFormat, this.options.culture) : t4;
        }, _refresh: function() {
          this.element.attr({ "aria-valuemin": this.options.min, "aria-valuemax": this.options.max, "aria-valuenow": this._parse(this.element.val()) });
        }, isValid: function() {
          var t4 = this.value();
          return null !== t4 && t4 === this._adjustValue(t4);
        }, _value: function(t4, e4) {
          var i4;
          "" !== t4 && null !== (i4 = this._parse(t4)) && (e4 || (i4 = this._adjustValue(i4)), t4 = this._format(i4)), this.element.val(t4), this._refresh();
        }, _destroy: function() {
          this.element.prop("disabled", false).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"), this.uiSpinner.replaceWith(this.element);
        }, stepUp: ht(function(t4) {
          this._stepUp(t4);
        }), _stepUp: function(t4) {
          this._start() && (this._spin((t4 || 1) * this.options.step), this._stop());
        }, stepDown: ht(function(t4) {
          this._stepDown(t4);
        }), _stepDown: function(t4) {
          this._start() && (this._spin((t4 || 1) * -this.options.step), this._stop());
        }, pageUp: ht(function(t4) {
          this._stepUp((t4 || 1) * this.options.page);
        }), pageDown: ht(function(t4) {
          this._stepDown((t4 || 1) * this.options.page);
        }), value: function(t4) {
          if (!arguments.length)
            return this._parse(this.element.val());
          ht(this._value).call(this, t4);
        }, widget: function() {
          return this.uiSpinner;
        } }), false !== V3.uiBackCompat && V3.widget("ui.spinner", V3.ui.spinner, { _enhance: function() {
          this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
        }, _uiSpinnerHtml: function() {
          return "<span>";
        }, _buttonHtml: function() {
          return "<a></a><a></a>";
        } });
        var ct;
        V3.ui.spinner;
        V3.widget("ui.tabs", { version: "1.13.2", delay: 300, options: { active: null, classes: { "ui-tabs": "ui-corner-all", "ui-tabs-nav": "ui-corner-all", "ui-tabs-panel": "ui-corner-bottom", "ui-tabs-tab": "ui-corner-top" }, collapsible: false, event: "click", heightStyle: "content", hide: null, show: null, activate: null, beforeActivate: null, beforeLoad: null, load: null }, _isLocal: (ct = /#.*$/, function(t4) {
          var e4 = t4.href.replace(ct, ""), i4 = location.href.replace(ct, "");
          try {
            e4 = decodeURIComponent(e4);
          } catch (t5) {
          }
          try {
            i4 = decodeURIComponent(i4);
          } catch (t5) {
          }
          return 1 < t4.hash.length && e4 === i4;
        }), _create: function() {
          var e4 = this, t4 = this.options;
          this.running = false, this._addClass("ui-tabs", "ui-widget ui-widget-content"), this._toggleClass("ui-tabs-collapsible", null, t4.collapsible), this._processTabs(), t4.active = this._initialActive(), Array.isArray(t4.disabled) && (t4.disabled = V3.uniqueSort(t4.disabled.concat(V3.map(this.tabs.filter(".ui-state-disabled"), function(t5) {
            return e4.tabs.index(t5);
          }))).sort()), false !== this.options.active && this.anchors.length ? this.active = this._findActive(t4.active) : this.active = V3(), this._refresh(), this.active.length && this.load(t4.active);
        }, _initialActive: function() {
          var i4 = this.options.active, t4 = this.options.collapsible, s4 = location.hash.substring(1);
          return null === i4 && (s4 && this.tabs.each(function(t5, e4) {
            if (V3(e4).attr("aria-controls") === s4)
              return i4 = t5, false;
          }), null !== (i4 = null === i4 ? this.tabs.index(this.tabs.filter(".ui-tabs-active")) : i4) && -1 !== i4 || (i4 = !!this.tabs.length && 0)), false !== i4 && -1 === (i4 = this.tabs.index(this.tabs.eq(i4))) && (i4 = !t4 && 0), i4 = !t4 && false === i4 && this.anchors.length ? 0 : i4;
        }, _getCreateEventData: function() {
          return { tab: this.active, panel: this.active.length ? this._getPanelForTab(this.active) : V3() };
        }, _tabKeydown: function(t4) {
          var e4 = V3(V3.ui.safeActiveElement(this.document[0])).closest("li"), i4 = this.tabs.index(e4), s4 = true;
          if (!this._handlePageNav(t4)) {
            switch (t4.keyCode) {
              case V3.ui.keyCode.RIGHT:
              case V3.ui.keyCode.DOWN:
                i4++;
                break;
              case V3.ui.keyCode.UP:
              case V3.ui.keyCode.LEFT:
                s4 = false, i4--;
                break;
              case V3.ui.keyCode.END:
                i4 = this.anchors.length - 1;
                break;
              case V3.ui.keyCode.HOME:
                i4 = 0;
                break;
              case V3.ui.keyCode.SPACE:
                return t4.preventDefault(), clearTimeout(this.activating), void this._activate(i4);
              case V3.ui.keyCode.ENTER:
                return t4.preventDefault(), clearTimeout(this.activating), void this._activate(i4 !== this.options.active && i4);
              default:
                return;
            }
            t4.preventDefault(), clearTimeout(this.activating), i4 = this._focusNextTab(i4, s4), t4.ctrlKey || t4.metaKey || (e4.attr("aria-selected", "false"), this.tabs.eq(i4).attr("aria-selected", "true"), this.activating = this._delay(function() {
              this.option("active", i4);
            }, this.delay));
          }
        }, _panelKeydown: function(t4) {
          this._handlePageNav(t4) || t4.ctrlKey && t4.keyCode === V3.ui.keyCode.UP && (t4.preventDefault(), this.active.trigger("focus"));
        }, _handlePageNav: function(t4) {
          return t4.altKey && t4.keyCode === V3.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, false)), true) : t4.altKey && t4.keyCode === V3.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, true)), true) : void 0;
        }, _findNextTab: function(t4, e4) {
          var i4 = this.tabs.length - 1;
          for (; -1 !== V3.inArray(t4 = (t4 = i4 < t4 ? 0 : t4) < 0 ? i4 : t4, this.options.disabled); )
            t4 = e4 ? t4 + 1 : t4 - 1;
          return t4;
        }, _focusNextTab: function(t4, e4) {
          return t4 = this._findNextTab(t4, e4), this.tabs.eq(t4).trigger("focus"), t4;
        }, _setOption: function(t4, e4) {
          "active" !== t4 ? (this._super(t4, e4), "collapsible" === t4 && (this._toggleClass("ui-tabs-collapsible", null, e4), e4 || false !== this.options.active || this._activate(0)), "event" === t4 && this._setupEvents(e4), "heightStyle" === t4 && this._setupHeightStyle(e4)) : this._activate(e4);
        }, _sanitizeSelector: function(t4) {
          return t4 ? t4.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
        }, refresh: function() {
          var t4 = this.options, e4 = this.tablist.children(":has(a[href])");
          t4.disabled = V3.map(e4.filter(".ui-state-disabled"), function(t5) {
            return e4.index(t5);
          }), this._processTabs(), false !== t4.active && this.anchors.length ? this.active.length && !V3.contains(this.tablist[0], this.active[0]) ? this.tabs.length === t4.disabled.length ? (t4.active = false, this.active = V3()) : this._activate(this._findNextTab(Math.max(0, t4.active - 1), false)) : t4.active = this.tabs.index(this.active) : (t4.active = false, this.active = V3()), this._refresh();
        }, _refresh: function() {
          this._setOptionDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({ "aria-selected": "false", "aria-expanded": "false", tabIndex: -1 }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({ "aria-hidden": "true" }), this.active.length ? (this.active.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }), this._addClass(this.active, "ui-tabs-active", "ui-state-active"), this._getPanelForTab(this.active).show().attr({ "aria-hidden": "false" })) : this.tabs.eq(0).attr("tabIndex", 0);
        }, _processTabs: function() {
          var l4 = this, t4 = this.tabs, e4 = this.anchors, i4 = this.panels;
          this.tablist = this._getList().attr("role", "tablist"), this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header"), this.tablist.on("mousedown" + this.eventNamespace, "> li", function(t5) {
            V3(this).is(".ui-state-disabled") && t5.preventDefault();
          }).on("focus" + this.eventNamespace, ".ui-tabs-anchor", function() {
            V3(this).closest("li").is(".ui-state-disabled") && this.blur();
          }), this.tabs = this.tablist.find("> li:has(a[href])").attr({ role: "tab", tabIndex: -1 }), this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"), this.anchors = this.tabs.map(function() {
            return V3("a", this)[0];
          }).attr({ tabIndex: -1 }), this._addClass(this.anchors, "ui-tabs-anchor"), this.panels = V3(), this.anchors.each(function(t5, e5) {
            var i5, s4, n3, o3 = V3(e5).uniqueId().attr("id"), a4 = V3(e5).closest("li"), r4 = a4.attr("aria-controls");
            l4._isLocal(e5) ? (n3 = (i5 = e5.hash).substring(1), s4 = l4.element.find(l4._sanitizeSelector(i5))) : (n3 = a4.attr("aria-controls") || V3({}).uniqueId()[0].id, (s4 = l4.element.find(i5 = "#" + n3)).length || (s4 = l4._createPanel(n3)).insertAfter(l4.panels[t5 - 1] || l4.tablist), s4.attr("aria-live", "polite")), s4.length && (l4.panels = l4.panels.add(s4)), r4 && a4.data("ui-tabs-aria-controls", r4), a4.attr({ "aria-controls": n3, "aria-labelledby": o3 }), s4.attr("aria-labelledby", o3);
          }), this.panels.attr("role", "tabpanel"), this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"), t4 && (this._off(t4.not(this.tabs)), this._off(e4.not(this.anchors)), this._off(i4.not(this.panels)));
        }, _getList: function() {
          return this.tablist || this.element.find("ol, ul").eq(0);
        }, _createPanel: function(t4) {
          return V3("<div>").attr("id", t4).data("ui-tabs-destroy", true);
        }, _setOptionDisabled: function(t4) {
          var e4, i4;
          for (Array.isArray(t4) && (t4.length ? t4.length === this.anchors.length && (t4 = true) : t4 = false), i4 = 0; e4 = this.tabs[i4]; i4++)
            e4 = V3(e4), true === t4 || -1 !== V3.inArray(i4, t4) ? (e4.attr("aria-disabled", "true"), this._addClass(e4, null, "ui-state-disabled")) : (e4.removeAttr("aria-disabled"), this._removeClass(e4, null, "ui-state-disabled"));
          this.options.disabled = t4, this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, true === t4);
        }, _setupEvents: function(t4) {
          var i4 = {};
          t4 && V3.each(t4.split(" "), function(t5, e4) {
            i4[e4] = "_eventHandler";
          }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(true, this.anchors, { click: function(t5) {
            t5.preventDefault();
          } }), this._on(this.anchors, i4), this._on(this.tabs, { keydown: "_tabKeydown" }), this._on(this.panels, { keydown: "_panelKeydown" }), this._focusable(this.tabs), this._hoverable(this.tabs);
        }, _setupHeightStyle: function(t4) {
          var i4, e4 = this.element.parent();
          "fill" === t4 ? (i4 = e4.height(), i4 -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function() {
            var t5 = V3(this), e5 = t5.css("position");
            "absolute" !== e5 && "fixed" !== e5 && (i4 -= t5.outerHeight(true));
          }), this.element.children().not(this.panels).each(function() {
            i4 -= V3(this).outerHeight(true);
          }), this.panels.each(function() {
            V3(this).height(Math.max(0, i4 - V3(this).innerHeight() + V3(this).height()));
          }).css("overflow", "auto")) : "auto" === t4 && (i4 = 0, this.panels.each(function() {
            i4 = Math.max(i4, V3(this).height("").height());
          }).height(i4));
        }, _eventHandler: function(t4) {
          var e4 = this.options, i4 = this.active, s4 = V3(t4.currentTarget).closest("li"), n3 = s4[0] === i4[0], o3 = n3 && e4.collapsible, a4 = o3 ? V3() : this._getPanelForTab(s4), r4 = i4.length ? this._getPanelForTab(i4) : V3(), i4 = { oldTab: i4, oldPanel: r4, newTab: o3 ? V3() : s4, newPanel: a4 };
          t4.preventDefault(), s4.hasClass("ui-state-disabled") || s4.hasClass("ui-tabs-loading") || this.running || n3 && !e4.collapsible || false === this._trigger("beforeActivate", t4, i4) || (e4.active = !o3 && this.tabs.index(s4), this.active = n3 ? V3() : s4, this.xhr && this.xhr.abort(), r4.length || a4.length || V3.error("jQuery UI Tabs: Mismatching fragment identifier."), a4.length && this.load(this.tabs.index(s4), t4), this._toggle(t4, i4));
        }, _toggle: function(t4, e4) {
          var i4 = this, s4 = e4.newPanel, n3 = e4.oldPanel;
          function o3() {
            i4.running = false, i4._trigger("activate", t4, e4);
          }
          function a4() {
            i4._addClass(e4.newTab.closest("li"), "ui-tabs-active", "ui-state-active"), s4.length && i4.options.show ? i4._show(s4, i4.options.show, o3) : (s4.show(), o3());
          }
          this.running = true, n3.length && this.options.hide ? this._hide(n3, this.options.hide, function() {
            i4._removeClass(e4.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), a4();
          }) : (this._removeClass(e4.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), n3.hide(), a4()), n3.attr("aria-hidden", "true"), e4.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }), s4.length && n3.length ? e4.oldTab.attr("tabIndex", -1) : s4.length && this.tabs.filter(function() {
            return 0 === V3(this).attr("tabIndex");
          }).attr("tabIndex", -1), s4.attr("aria-hidden", "false"), e4.newTab.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 });
        }, _activate: function(t4) {
          var t4 = this._findActive(t4);
          t4[0] !== this.active[0] && (t4 = (t4 = !t4.length ? this.active : t4).find(".ui-tabs-anchor")[0], this._eventHandler({ target: t4, currentTarget: t4, preventDefault: V3.noop }));
        }, _findActive: function(t4) {
          return false === t4 ? V3() : this.tabs.eq(t4);
        }, _getIndex: function(t4) {
          return t4 = "string" == typeof t4 ? this.anchors.index(this.anchors.filter("[href$='" + V3.escapeSelector(t4) + "']")) : t4;
        }, _destroy: function() {
          this.xhr && this.xhr.abort(), this.tablist.removeAttr("role").off(this.eventNamespace), this.anchors.removeAttr("role tabIndex").removeUniqueId(), this.tabs.add(this.panels).each(function() {
            V3.data(this, "ui-tabs-destroy") ? V3(this).remove() : V3(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded");
          }), this.tabs.each(function() {
            var t4 = V3(this), e4 = t4.data("ui-tabs-aria-controls");
            e4 ? t4.attr("aria-controls", e4).removeData("ui-tabs-aria-controls") : t4.removeAttr("aria-controls");
          }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "");
        }, enable: function(i4) {
          var t4 = this.options.disabled;
          false !== t4 && (t4 = void 0 !== i4 && (i4 = this._getIndex(i4), Array.isArray(t4) ? V3.map(t4, function(t5) {
            return t5 !== i4 ? t5 : null;
          }) : V3.map(this.tabs, function(t5, e4) {
            return e4 !== i4 ? e4 : null;
          })), this._setOptionDisabled(t4));
        }, disable: function(t4) {
          var e4 = this.options.disabled;
          if (true !== e4) {
            if (void 0 === t4)
              e4 = true;
            else {
              if (t4 = this._getIndex(t4), -1 !== V3.inArray(t4, e4))
                return;
              e4 = Array.isArray(e4) ? V3.merge([t4], e4).sort() : [t4];
            }
            this._setOptionDisabled(e4);
          }
        }, load: function(t4, s4) {
          t4 = this._getIndex(t4);
          function n3(t5, e4) {
            "abort" === e4 && o3.panels.stop(false, true), o3._removeClass(i4, "ui-tabs-loading"), a4.removeAttr("aria-busy"), t5 === o3.xhr && delete o3.xhr;
          }
          var o3 = this, i4 = this.tabs.eq(t4), t4 = i4.find(".ui-tabs-anchor"), a4 = this._getPanelForTab(i4), r4 = { tab: i4, panel: a4 };
          this._isLocal(t4[0]) || (this.xhr = V3.ajax(this._ajaxSettings(t4, s4, r4)), this.xhr && "canceled" !== this.xhr.statusText && (this._addClass(i4, "ui-tabs-loading"), a4.attr("aria-busy", "true"), this.xhr.done(function(t5, e4, i5) {
            setTimeout(function() {
              a4.html(t5), o3._trigger("load", s4, r4), n3(i5, e4);
            }, 1);
          }).fail(function(t5, e4) {
            setTimeout(function() {
              n3(t5, e4);
            }, 1);
          })));
        }, _ajaxSettings: function(t4, i4, s4) {
          var n3 = this;
          return { url: t4.attr("href").replace(/#.*$/, ""), beforeSend: function(t5, e4) {
            return n3._trigger("beforeLoad", i4, V3.extend({ jqXHR: t5, ajaxSettings: e4 }, s4));
          } };
        }, _getPanelForTab: function(t4) {
          t4 = V3(t4).attr("aria-controls");
          return this.element.find(this._sanitizeSelector("#" + t4));
        } }), false !== V3.uiBackCompat && V3.widget("ui.tabs", V3.ui.tabs, { _processTabs: function() {
          this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
        } });
        V3.ui.tabs;
        V3.widget("ui.tooltip", { version: "1.13.2", options: { classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" }, content: function() {
          var t4 = V3(this).attr("title");
          return V3("<a>").text(t4).html();
        }, hide: true, items: "[title]:not([disabled])", position: { my: "left top+15", at: "left bottom", collision: "flipfit flip" }, show: true, track: false, close: null, open: null }, _addDescribedBy: function(t4, e4) {
          var i4 = (t4.attr("aria-describedby") || "").split(/\s+/);
          i4.push(e4), t4.data("ui-tooltip-id", e4).attr("aria-describedby", String.prototype.trim.call(i4.join(" ")));
        }, _removeDescribedBy: function(t4) {
          var e4 = t4.data("ui-tooltip-id"), i4 = (t4.attr("aria-describedby") || "").split(/\s+/), e4 = V3.inArray(e4, i4);
          -1 !== e4 && i4.splice(e4, 1), t4.removeData("ui-tooltip-id"), (i4 = String.prototype.trim.call(i4.join(" "))) ? t4.attr("aria-describedby", i4) : t4.removeAttr("aria-describedby");
        }, _create: function() {
          this._on({ mouseover: "open", focusin: "open" }), this.tooltips = {}, this.parents = {}, this.liveRegion = V3("<div>").attr({ role: "log", "aria-live": "assertive", "aria-relevant": "additions" }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"), this.disabledTitles = V3([]);
        }, _setOption: function(t4, e4) {
          var i4 = this;
          this._super(t4, e4), "content" === t4 && V3.each(this.tooltips, function(t5, e5) {
            i4._updateContent(e5.element);
          });
        }, _setOptionDisabled: function(t4) {
          this[t4 ? "_disable" : "_enable"]();
        }, _disable: function() {
          var s4 = this;
          V3.each(this.tooltips, function(t4, e4) {
            var i4 = V3.Event("blur");
            i4.target = i4.currentTarget = e4.element[0], s4.close(i4, true);
          }), this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function() {
            var t4 = V3(this);
            if (t4.is("[title]"))
              return t4.data("ui-tooltip-title", t4.attr("title")).removeAttr("title");
          }));
        }, _enable: function() {
          this.disabledTitles.each(function() {
            var t4 = V3(this);
            t4.data("ui-tooltip-title") && t4.attr("title", t4.data("ui-tooltip-title"));
          }), this.disabledTitles = V3([]);
        }, open: function(t4) {
          var i4 = this, e4 = V3(t4 ? t4.target : this.element).closest(this.options.items);
          e4.length && !e4.data("ui-tooltip-id") && (e4.attr("title") && e4.data("ui-tooltip-title", e4.attr("title")), e4.data("ui-tooltip-open", true), t4 && "mouseover" === t4.type && e4.parents().each(function() {
            var t5, e5 = V3(this);
            e5.data("ui-tooltip-open") && ((t5 = V3.Event("blur")).target = t5.currentTarget = this, i4.close(t5, true)), e5.attr("title") && (e5.uniqueId(), i4.parents[this.id] = { element: this, title: e5.attr("title") }, e5.attr("title", ""));
          }), this._registerCloseHandlers(t4, e4), this._updateContent(e4, t4));
        }, _updateContent: function(e4, i4) {
          var t4 = this.options.content, s4 = this, n3 = i4 ? i4.type : null;
          if ("string" == typeof t4 || t4.nodeType || t4.jquery)
            return this._open(i4, e4, t4);
          (t4 = t4.call(e4[0], function(t5) {
            s4._delay(function() {
              e4.data("ui-tooltip-open") && (i4 && (i4.type = n3), this._open(i4, e4, t5));
            });
          })) && this._open(i4, e4, t4);
        }, _open: function(t4, e4, i4) {
          var s4, n3, o3, a4 = V3.extend({}, this.options.position);
          function r4(t5) {
            a4.of = t5, n3.is(":hidden") || n3.position(a4);
          }
          i4 && ((s4 = this._find(e4)) ? s4.tooltip.find(".ui-tooltip-content").html(i4) : (e4.is("[title]") && (t4 && "mouseover" === t4.type ? e4.attr("title", "") : e4.removeAttr("title")), s4 = this._tooltip(e4), n3 = s4.tooltip, this._addDescribedBy(e4, n3.attr("id")), n3.find(".ui-tooltip-content").html(i4), this.liveRegion.children().hide(), (i4 = V3("<div>").html(n3.find(".ui-tooltip-content").html())).removeAttr("name").find("[name]").removeAttr("name"), i4.removeAttr("id").find("[id]").removeAttr("id"), i4.appendTo(this.liveRegion), this.options.track && t4 && /^mouse/.test(t4.type) ? (this._on(this.document, { mousemove: r4 }), r4(t4)) : n3.position(V3.extend({ of: e4 }, this.options.position)), n3.hide(), this._show(n3, this.options.show), this.options.track && this.options.show && this.options.show.delay && (o3 = this.delayedShow = setInterval(function() {
            n3.is(":visible") && (r4(a4.of), clearInterval(o3));
          }, 13)), this._trigger("open", t4, { tooltip: n3 })));
        }, _registerCloseHandlers: function(t4, e4) {
          var i4 = { keyup: function(t5) {
            t5.keyCode === V3.ui.keyCode.ESCAPE && ((t5 = V3.Event(t5)).currentTarget = e4[0], this.close(t5, true));
          } };
          e4[0] !== this.element[0] && (i4.remove = function() {
            var t5 = this._find(e4);
            t5 && this._removeTooltip(t5.tooltip);
          }), t4 && "mouseover" !== t4.type || (i4.mouseleave = "close"), t4 && "focusin" !== t4.type || (i4.focusout = "close"), this._on(true, e4, i4);
        }, close: function(t4) {
          var e4, i4 = this, s4 = V3(t4 ? t4.currentTarget : this.element), n3 = this._find(s4);
          n3 ? (e4 = n3.tooltip, n3.closing || (clearInterval(this.delayedShow), s4.data("ui-tooltip-title") && !s4.attr("title") && s4.attr("title", s4.data("ui-tooltip-title")), this._removeDescribedBy(s4), n3.hiding = true, e4.stop(true), this._hide(e4, this.options.hide, function() {
            i4._removeTooltip(V3(this));
          }), s4.removeData("ui-tooltip-open"), this._off(s4, "mouseleave focusout keyup"), s4[0] !== this.element[0] && this._off(s4, "remove"), this._off(this.document, "mousemove"), t4 && "mouseleave" === t4.type && V3.each(this.parents, function(t5, e5) {
            V3(e5.element).attr("title", e5.title), delete i4.parents[t5];
          }), n3.closing = true, this._trigger("close", t4, { tooltip: e4 }), n3.hiding || (n3.closing = false))) : s4.removeData("ui-tooltip-open");
        }, _tooltip: function(t4) {
          var e4 = V3("<div>").attr("role", "tooltip"), i4 = V3("<div>").appendTo(e4), s4 = e4.uniqueId().attr("id");
          return this._addClass(i4, "ui-tooltip-content"), this._addClass(e4, "ui-tooltip", "ui-widget ui-widget-content"), e4.appendTo(this._appendTo(t4)), this.tooltips[s4] = { element: t4, tooltip: e4 };
        }, _find: function(t4) {
          t4 = t4.data("ui-tooltip-id");
          return t4 ? this.tooltips[t4] : null;
        }, _removeTooltip: function(t4) {
          clearInterval(this.delayedShow), t4.remove(), delete this.tooltips[t4.attr("id")];
        }, _appendTo: function(t4) {
          t4 = t4.closest(".ui-front, dialog");
          return t4 = !t4.length ? this.document[0].body : t4;
        }, _destroy: function() {
          var s4 = this;
          V3.each(this.tooltips, function(t4, e4) {
            var i4 = V3.Event("blur"), e4 = e4.element;
            i4.target = i4.currentTarget = e4[0], s4.close(i4, true), V3("#" + t4).remove(), e4.data("ui-tooltip-title") && (e4.attr("title") || e4.attr("title", e4.data("ui-tooltip-title")), e4.removeData("ui-tooltip-title"));
          }), this.liveRegion.remove();
        } }), false !== V3.uiBackCompat && V3.widget("ui.tooltip", V3.ui.tooltip, { options: { tooltipClass: null }, _tooltip: function() {
          var t4 = this._superApply(arguments);
          return this.options.tooltipClass && t4.tooltip.addClass(this.options.tooltipClass), t4;
        } });
        V3.ui.tooltip;
      });
    }
  });

  // node_modules/admin-lte/dist/js/adminlte.min.js
  var require_adminlte_min = __commonJS({
    "node_modules/admin-lte/dist/js/adminlte.min.js"(exports, module) {
      !function(e3, t3) {
        "object" == typeof exports && "undefined" != typeof module ? t3(exports, require_jquery()) : "function" == typeof define && define.amd ? define(["exports", "jquery"], t3) : t3((e3 = "undefined" != typeof globalThis ? globalThis : e3 || self).adminlte = {}, e3.jQuery);
      }(exports, function(e3, t3) {
        "use strict";
        function a3(e4) {
          return e4 && "object" == typeof e4 && "default" in e4 ? e4 : { default: e4 };
        }
        var n2 = a3(t3), i3 = "CardRefresh", o2 = "lte.cardrefresh", l3 = n2.default.fn[i3], s3 = "card", r3 = '[data-card-widget="card-refresh"]', d2 = { source: "", sourceSelector: "", params: {}, trigger: r3, content: ".card-body", loadInContent: true, loadOnInit: true, loadErrorTemplate: true, responseType: "", overlayTemplate: '<div class="overlay"><i class="fas fa-2x fa-sync-alt fa-spin"></i></div>', errorTemplate: '<span class="text-danger"></span>', onLoadStart: function() {
        }, onLoadDone: function(e4) {
          return e4;
        }, onLoadFail: function(e4, t4, a4) {
        } }, f3 = function() {
          function e4(e5, t5) {
            if (this._element = e5, this._parent = e5.parents(".card").first(), this._settings = n2.default.extend({}, d2, t5), this._overlay = n2.default(this._settings.overlayTemplate), e5.hasClass(s3) && (this._parent = e5), "" === this._settings.source)
              throw new Error("Source url was not defined. Please specify a url in your CardRefresh source option.");
          }
          var t4 = e4.prototype;
          return t4.load = function() {
            var e5 = this;
            this._addOverlay(), this._settings.onLoadStart.call(n2.default(this)), n2.default.get(this._settings.source, this._settings.params, function(t5) {
              e5._settings.loadInContent && ("" !== e5._settings.sourceSelector && (t5 = n2.default(t5).find(e5._settings.sourceSelector).html()), e5._parent.find(e5._settings.content).html(t5)), e5._settings.onLoadDone.call(n2.default(e5), t5), e5._removeOverlay();
            }, "" !== this._settings.responseType && this._settings.responseType).fail(function(t5, a4, i4) {
              if (e5._removeOverlay(), e5._settings.loadErrorTemplate) {
                var o3 = n2.default(e5._settings.errorTemplate).text(i4);
                e5._parent.find(e5._settings.content).empty().append(o3);
              }
              e5._settings.onLoadFail.call(n2.default(e5), t5, a4, i4);
            }), n2.default(this._element).trigger(n2.default.Event("loaded.lte.cardrefresh"));
          }, t4._addOverlay = function() {
            this._parent.append(this._overlay), n2.default(this._element).trigger(n2.default.Event("overlay.added.lte.cardrefresh"));
          }, t4._removeOverlay = function() {
            this._parent.find(this._overlay).remove(), n2.default(this._element).trigger(n2.default.Event("overlay.removed.lte.cardrefresh"));
          }, t4._init = function() {
            var e5 = this;
            n2.default(this).find(this._settings.trigger).on("click", function() {
              e5.load();
            }), this._settings.loadOnInit && this.load();
          }, e4._jQueryInterface = function(t5) {
            var a4 = n2.default(this).data(o2), i4 = n2.default.extend({}, d2, n2.default(this).data());
            a4 || (a4 = new e4(n2.default(this), i4), n2.default(this).data(o2, "string" == typeof t5 ? a4 : t5)), "string" == typeof t5 && /load/.test(t5) ? a4[t5]() : a4._init(n2.default(this));
          }, e4;
        }();
        n2.default(document).on("click", r3, function(e4) {
          e4 && e4.preventDefault(), f3._jQueryInterface.call(n2.default(this), "load");
        }), n2.default(function() {
          n2.default(r3).each(function() {
            f3._jQueryInterface.call(n2.default(this));
          });
        }), n2.default.fn[i3] = f3._jQueryInterface, n2.default.fn[i3].Constructor = f3, n2.default.fn[i3].noConflict = function() {
          return n2.default.fn[i3] = l3, f3._jQueryInterface;
        };
        var u3 = "CardWidget", c3 = "lte.cardwidget", h3 = n2.default.fn[u3], g4 = "card", p3 = "collapsed-card", m3 = "collapsing-card", v3 = "expanding-card", _3 = "was-collapsed", b3 = "maximized-card", y3 = '[data-card-widget="remove"]', C3 = '[data-card-widget="collapse"]', w4 = '[data-card-widget="maximize"]', x4 = { animationSpeed: "normal", collapseTrigger: C3, removeTrigger: y3, maximizeTrigger: w4, collapseIcon: "fa-minus", expandIcon: "fa-plus", maximizeIcon: "fa-expand", minimizeIcon: "fa-compress" }, I3 = function() {
          function e4(e5, t5) {
            this._element = e5, this._parent = e5.parents(".card").first(), e5.hasClass(g4) && (this._parent = e5), this._settings = n2.default.extend({}, x4, t5);
          }
          var t4 = e4.prototype;
          return t4.collapse = function() {
            var e5 = this;
            this._parent.addClass(m3).children(".card-body, .card-footer").slideUp(this._settings.animationSpeed, function() {
              e5._parent.addClass(p3).removeClass(m3);
            }), this._parent.find("> .card-header " + this._settings.collapseTrigger + " ." + this._settings.collapseIcon).addClass(this._settings.expandIcon).removeClass(this._settings.collapseIcon), this._element.trigger(n2.default.Event("collapsed.lte.cardwidget"), this._parent);
          }, t4.expand = function() {
            var e5 = this;
            this._parent.addClass(v3).children(".card-body, .card-footer").slideDown(this._settings.animationSpeed, function() {
              e5._parent.removeClass(p3).removeClass(v3);
            }), this._parent.find("> .card-header " + this._settings.collapseTrigger + " ." + this._settings.expandIcon).addClass(this._settings.collapseIcon).removeClass(this._settings.expandIcon), this._element.trigger(n2.default.Event("expanded.lte.cardwidget"), this._parent);
          }, t4.remove = function() {
            this._parent.slideUp(), this._element.trigger(n2.default.Event("removed.lte.cardwidget"), this._parent);
          }, t4.toggle = function() {
            this._parent.hasClass(p3) ? this.expand() : this.collapse();
          }, t4.maximize = function() {
            this._parent.find(this._settings.maximizeTrigger + " ." + this._settings.maximizeIcon).addClass(this._settings.minimizeIcon).removeClass(this._settings.maximizeIcon), this._parent.css({ height: this._parent.height(), width: this._parent.width(), transition: "all .15s" }).delay(150).queue(function() {
              var e5 = n2.default(this);
              e5.addClass(b3), n2.default("html").addClass(b3), e5.hasClass(p3) && e5.addClass(_3), e5.dequeue();
            }), this._element.trigger(n2.default.Event("maximized.lte.cardwidget"), this._parent);
          }, t4.minimize = function() {
            this._parent.find(this._settings.maximizeTrigger + " ." + this._settings.minimizeIcon).addClass(this._settings.maximizeIcon).removeClass(this._settings.minimizeIcon), this._parent.css("cssText", "height: " + this._parent[0].style.height + " !important; width: " + this._parent[0].style.width + " !important; transition: all .15s;").delay(10).queue(function() {
              var e5 = n2.default(this);
              e5.removeClass(b3), n2.default("html").removeClass(b3), e5.css({ height: "inherit", width: "inherit" }), e5.hasClass(_3) && e5.removeClass(_3), e5.dequeue();
            }), this._element.trigger(n2.default.Event("minimized.lte.cardwidget"), this._parent);
          }, t4.toggleMaximize = function() {
            this._parent.hasClass(b3) ? this.minimize() : this.maximize();
          }, t4._init = function(e5) {
            var t5 = this;
            this._parent = e5, n2.default(this).find(this._settings.collapseTrigger).click(function() {
              t5.toggle();
            }), n2.default(this).find(this._settings.maximizeTrigger).click(function() {
              t5.toggleMaximize();
            }), n2.default(this).find(this._settings.removeTrigger).click(function() {
              t5.remove();
            });
          }, e4._jQueryInterface = function(t5) {
            var a4 = n2.default(this).data(c3), i4 = n2.default.extend({}, x4, n2.default(this).data());
            a4 || (a4 = new e4(n2.default(this), i4), n2.default(this).data(c3, "string" == typeof t5 ? a4 : t5)), "string" == typeof t5 && /collapse|expand|remove|toggle|maximize|minimize|toggleMaximize/.test(t5) ? a4[t5]() : "object" == typeof t5 && a4._init(n2.default(this));
          }, e4;
        }();
        n2.default(document).on("click", C3, function(e4) {
          e4 && e4.preventDefault(), I3._jQueryInterface.call(n2.default(this), "toggle");
        }), n2.default(document).on("click", y3, function(e4) {
          e4 && e4.preventDefault(), I3._jQueryInterface.call(n2.default(this), "remove");
        }), n2.default(document).on("click", w4, function(e4) {
          e4 && e4.preventDefault(), I3._jQueryInterface.call(n2.default(this), "toggleMaximize");
        }), n2.default.fn[u3] = I3._jQueryInterface, n2.default.fn[u3].Constructor = I3, n2.default.fn[u3].noConflict = function() {
          return n2.default.fn[u3] = h3, I3._jQueryInterface;
        };
        var T4 = "ControlSidebar", S2 = "lte.controlsidebar", j4 = n2.default.fn[T4], k3 = ".control-sidebar", Q2 = ".control-sidebar-content", H3 = '[data-widget="control-sidebar"]', z3 = ".main-header", F3 = ".main-footer", E = "control-sidebar-animate", L3 = "control-sidebar-open", D2 = "control-sidebar-slide-open", R = "layout-fixed", A3 = { controlsidebarSlide: true, scrollbarTheme: "os-theme-light", scrollbarAutoHide: "l", target: k3, animationSpeed: 300 }, M2 = function() {
          function e4(e5, t5) {
            this._element = e5, this._config = t5;
          }
          var t4 = e4.prototype;
          return t4.collapse = function() {
            var e5 = this, t5 = n2.default("body"), a4 = n2.default("html");
            this._config.controlsidebarSlide ? (a4.addClass(E), t5.removeClass(D2).delay(300).queue(function() {
              n2.default(k3).hide(), a4.removeClass(E), n2.default(this).dequeue();
            })) : t5.removeClass(L3), n2.default(this._element).trigger(n2.default.Event("collapsed.lte.controlsidebar")), setTimeout(function() {
              n2.default(e5._element).trigger(n2.default.Event("collapsed-done.lte.controlsidebar"));
            }, this._config.animationSpeed);
          }, t4.show = function(e5) {
            void 0 === e5 && (e5 = false);
            var t5 = n2.default("body"), a4 = n2.default("html");
            e5 && n2.default(k3).hide(), this._config.controlsidebarSlide ? (a4.addClass(E), n2.default(this._config.target).show().delay(10).queue(function() {
              t5.addClass(D2).delay(300).queue(function() {
                a4.removeClass(E), n2.default(this).dequeue();
              }), n2.default(this).dequeue();
            })) : t5.addClass(L3), this._fixHeight(), this._fixScrollHeight(), n2.default(this._element).trigger(n2.default.Event("expanded.lte.controlsidebar"));
          }, t4.toggle = function() {
            var e5 = n2.default("body"), t5 = this._config.target, a4 = !n2.default(t5).is(":visible"), i4 = e5.hasClass(L3) || e5.hasClass(D2), o3 = a4 && (e5.hasClass(L3) || e5.hasClass(D2));
            a4 || o3 ? this.show(a4) : i4 && this.collapse();
          }, t4._init = function() {
            var e5 = this, t5 = n2.default("body");
            t5.hasClass(L3) || t5.hasClass(D2) ? (n2.default(k3).not(this._config.target).hide(), n2.default(this._config.target).css("display", "block")) : n2.default(k3).hide(), this._fixHeight(), this._fixScrollHeight(), n2.default(window).resize(function() {
              e5._fixHeight(), e5._fixScrollHeight();
            }), n2.default(window).scroll(function() {
              var t6 = n2.default("body");
              (t6.hasClass(L3) || t6.hasClass(D2)) && e5._fixScrollHeight();
            });
          }, t4._isNavbarFixed = function() {
            var e5 = n2.default("body");
            return e5.hasClass("layout-navbar-fixed") || e5.hasClass("layout-sm-navbar-fixed") || e5.hasClass("layout-md-navbar-fixed") || e5.hasClass("layout-lg-navbar-fixed") || e5.hasClass("layout-xl-navbar-fixed");
          }, t4._isFooterFixed = function() {
            var e5 = n2.default("body");
            return e5.hasClass("layout-footer-fixed") || e5.hasClass("layout-sm-footer-fixed") || e5.hasClass("layout-md-footer-fixed") || e5.hasClass("layout-lg-footer-fixed") || e5.hasClass("layout-xl-footer-fixed");
          }, t4._fixScrollHeight = function() {
            var e5 = n2.default("body"), t5 = n2.default(this._config.target);
            if (e5.hasClass(R)) {
              var a4 = { scroll: n2.default(document).height(), window: n2.default(window).height(), header: n2.default(z3).outerHeight(), footer: n2.default(F3).outerHeight() }, i4 = Math.abs(a4.window + n2.default(window).scrollTop() - a4.scroll), o3 = n2.default(window).scrollTop(), l4 = this._isNavbarFixed() && "fixed" === n2.default(z3).css("position"), s4 = this._isFooterFixed() && "fixed" === n2.default(F3).css("position"), r4 = n2.default(this._config.target + ", " + this._config.target + " " + Q2);
              if (0 === o3 && 0 === i4)
                t5.css({ bottom: a4.footer, top: a4.header }), r4.css("height", a4.window - (a4.header + a4.footer));
              else if (i4 <= a4.footer)
                if (false === s4) {
                  var d3 = a4.header - o3;
                  t5.css("bottom", a4.footer - i4).css("top", d3 >= 0 ? d3 : 0), r4.css("height", a4.window - (a4.footer - i4));
                } else
                  t5.css("bottom", a4.footer);
              else
                o3 <= a4.header ? false === l4 ? (t5.css("top", a4.header - o3), r4.css("height", a4.window - (a4.header - o3))) : t5.css("top", a4.header) : false === l4 ? (t5.css("top", 0), r4.css("height", a4.window)) : t5.css("top", a4.header);
              s4 && l4 ? (r4.css("height", "100%"), t5.css("height", "")) : (s4 || l4) && (r4.css("height", "100%"), r4.css("height", ""));
            }
          }, t4._fixHeight = function() {
            var e5 = n2.default("body"), t5 = n2.default(this._config.target + " " + Q2);
            if (e5.hasClass(R)) {
              var a4 = n2.default(window).height(), i4 = n2.default(z3).outerHeight(), o3 = n2.default(F3).outerHeight(), l4 = a4 - i4;
              this._isFooterFixed() && "fixed" === n2.default(F3).css("position") && (l4 = a4 - i4 - o3), t5.css("height", l4), "undefined" != typeof n2.default.fn.overlayScrollbars && t5.overlayScrollbars({ className: this._config.scrollbarTheme, sizeAutoCapable: true, scrollbars: { autoHide: this._config.scrollbarAutoHide, clickScrolling: true } });
            } else
              t5.attr("style", "");
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(S2), i4 = n2.default.extend({}, A3, n2.default(this).data());
              if (a4 || (a4 = new e4(this, i4), n2.default(this).data(S2, a4)), "undefined" === a4[t5])
                throw new Error(t5 + " is not a function");
              a4[t5]();
            });
          }, e4;
        }();
        n2.default(document).on("click", H3, function(e4) {
          e4.preventDefault(), M2._jQueryInterface.call(n2.default(this), "toggle");
        }), n2.default(document).ready(function() {
          M2._jQueryInterface.call(n2.default(H3), "_init");
        }), n2.default.fn[T4] = M2._jQueryInterface, n2.default.fn[T4].Constructor = M2, n2.default.fn[T4].noConflict = function() {
          return n2.default.fn[T4] = j4, M2._jQueryInterface;
        };
        var q3 = "DirectChat", O2 = "lte.directchat", N3 = n2.default.fn[q3], P2 = function() {
          function e4(e5) {
            this._element = e5;
          }
          return e4.prototype.toggle = function() {
            n2.default(this._element).parents(".direct-chat").first().toggleClass("direct-chat-contacts-open"), n2.default(this._element).trigger(n2.default.Event("toggled.lte.directchat"));
          }, e4._jQueryInterface = function(t4) {
            return this.each(function() {
              var a4 = n2.default(this).data(O2);
              a4 || (a4 = new e4(n2.default(this)), n2.default(this).data(O2, a4)), a4[t4]();
            });
          }, e4;
        }();
        n2.default(document).on("click", '[data-widget="chat-pane-toggle"]', function(e4) {
          e4 && e4.preventDefault(), P2._jQueryInterface.call(n2.default(this), "toggle");
        }), n2.default.fn[q3] = P2._jQueryInterface, n2.default.fn[q3].Constructor = P2, n2.default.fn[q3].noConflict = function() {
          return n2.default.fn[q3] = N3, P2._jQueryInterface;
        };
        var U2 = "Dropdown", B3 = "lte.dropdown", $3 = n2.default.fn[U2], J2 = ".dropdown-menu", W2 = {}, V3 = function() {
          function e4(e5, t5) {
            this._config = t5, this._element = e5;
          }
          var t4 = e4.prototype;
          return t4.toggleSubmenu = function() {
            this._element.siblings().show().toggleClass("show"), this._element.next().hasClass("show") || this._element.parents(J2).first().find(".show").removeClass("show").hide(), this._element.parents("li.nav-item.dropdown.show").on("hidden.bs.dropdown", function() {
              n2.default(".dropdown-submenu .show").removeClass("show").hide();
            });
          }, t4.fixPosition = function() {
            var e5 = n2.default(".dropdown-menu.show");
            if (0 !== e5.length) {
              e5.hasClass("dropdown-menu-right") ? e5.css({ left: "inherit", right: 0 }) : e5.css({ left: 0, right: "inherit" });
              var t5 = e5.offset(), a4 = e5.width(), i4 = n2.default(window).width() - t5.left;
              t5.left < 0 ? e5.css({ left: "inherit", right: t5.left - 5 }) : i4 < a4 && e5.css({ left: "inherit", right: 0 });
            }
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(B3), i4 = n2.default.extend({}, W2, n2.default(this).data());
              a4 || (a4 = new e4(n2.default(this), i4), n2.default(this).data(B3, a4)), "toggleSubmenu" !== t5 && "fixPosition" !== t5 || a4[t5]();
            });
          }, e4;
        }();
        n2.default('.dropdown-menu [data-toggle="dropdown"]').on("click", function(e4) {
          e4.preventDefault(), e4.stopPropagation(), V3._jQueryInterface.call(n2.default(this), "toggleSubmenu");
        }), n2.default('.navbar [data-toggle="dropdown"]').on("click", function(e4) {
          e4.preventDefault(), n2.default(e4.target).parent().hasClass("dropdown-submenu") || setTimeout(function() {
            V3._jQueryInterface.call(n2.default(this), "fixPosition");
          }, 1);
        }), n2.default.fn[U2] = V3._jQueryInterface, n2.default.fn[U2].Constructor = V3, n2.default.fn[U2].noConflict = function() {
          return n2.default.fn[U2] = $3, V3._jQueryInterface;
        };
        var G2 = "ExpandableTable", K2 = "lte.expandableTable", X2 = n2.default.fn[G2], Y = ".expandable-body", Z2 = '[data-widget="expandable-table"]', ee = "aria-expanded", te = function() {
          function e4(e5, t5) {
            this._options = t5, this._element = e5;
          }
          var t4 = e4.prototype;
          return t4.init = function() {
            n2.default(Z2).each(function(e5, t5) {
              var a4 = n2.default(t5).attr(ee), i4 = n2.default(t5).next(Y).children().first().children();
              "true" === a4 ? i4.show() : "false" === a4 && (i4.hide(), i4.parent().parent().addClass("d-none"));
            });
          }, t4.toggleRow = function() {
            var e5 = this._element;
            "TR" !== e5[0].nodeName && "TR" !== (e5 = e5.parent())[0].nodeName && (e5 = e5.parent());
            var t5 = e5.attr(ee), a4 = e5.next(Y).children().first().children();
            a4.stop(), "true" === t5 ? (a4.slideUp(500, function() {
              e5.next(Y).addClass("d-none");
            }), e5.attr(ee, "false"), e5.trigger(n2.default.Event("collapsed.lte.expandableTable"))) : "false" === t5 && (e5.next(Y).removeClass("d-none"), a4.slideDown(500), e5.attr(ee, "true"), e5.trigger(n2.default.Event("expanded.lte.expandableTable")));
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(K2);
              a4 || (a4 = new e4(n2.default(this)), n2.default(this).data(K2, a4)), "string" == typeof t5 && /init|toggleRow/.test(t5) && a4[t5]();
            });
          }, e4;
        }();
        n2.default(".expandable-table").ready(function() {
          te._jQueryInterface.call(n2.default(this), "init");
        }), n2.default(document).on("click", Z2, function() {
          te._jQueryInterface.call(n2.default(this), "toggleRow");
        }), n2.default.fn[G2] = te._jQueryInterface, n2.default.fn[G2].Constructor = te, n2.default.fn[G2].noConflict = function() {
          return n2.default.fn[G2] = X2, te._jQueryInterface;
        };
        var ae = "Fullscreen", ne = "lte.fullscreen", ie = n2.default.fn[ae], oe = '[data-widget="fullscreen"]', le = oe + " i", se = { minimizeIcon: "fa-compress-arrows-alt", maximizeIcon: "fa-expand-arrows-alt" }, re = function() {
          function e4(e5, t5) {
            this.element = e5, this.options = n2.default.extend({}, se, t5);
          }
          var t4 = e4.prototype;
          return t4.toggle = function() {
            document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement ? this.windowed() : this.fullscreen();
          }, t4.toggleIcon = function() {
            document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement ? n2.default(le).removeClass(this.options.maximizeIcon).addClass(this.options.minimizeIcon) : n2.default(le).removeClass(this.options.minimizeIcon).addClass(this.options.maximizeIcon);
          }, t4.fullscreen = function() {
            document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.webkitRequestFullscreen ? document.documentElement.webkitRequestFullscreen() : document.documentElement.msRequestFullscreen && document.documentElement.msRequestFullscreen();
          }, t4.windowed = function() {
            document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
          }, e4._jQueryInterface = function(t5) {
            var a4 = n2.default(this).data(ne);
            a4 || (a4 = n2.default(this).data());
            var i4 = n2.default.extend({}, se, "object" == typeof t5 ? t5 : a4), o3 = new e4(n2.default(this), i4);
            n2.default(this).data(ne, "object" == typeof t5 ? t5 : a4), "string" == typeof t5 && /toggle|toggleIcon|fullscreen|windowed/.test(t5) ? o3[t5]() : o3.init();
          }, e4;
        }();
        n2.default(document).on("click", oe, function() {
          re._jQueryInterface.call(n2.default(this), "toggle");
        }), n2.default(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange", function() {
          re._jQueryInterface.call(n2.default(oe), "toggleIcon");
        }), n2.default.fn[ae] = re._jQueryInterface, n2.default.fn[ae].Constructor = re, n2.default.fn[ae].noConflict = function() {
          return n2.default.fn[ae] = ie, re._jQueryInterface;
        };
        var de = "lte.iframe", fe = n2.default.fn.IFrame, ue = '[data-widget="iframe"]', ce = '[data-widget="iframe-fullscreen"]', he = ".content-wrapper", ge = ".content-wrapper iframe", pe = ".content-wrapper.iframe-mode .nav", me = ".content-wrapper.iframe-mode .navbar-nav", ve = me + " .nav-item", _e = me + " .nav-link", be = ".content-wrapper.iframe-mode .tab-content", ye = be + " .tab-empty", Ce = be + " .tab-loading", we = be + " .tab-pane", xe = ".main-sidebar .nav-item > a.nav-link", Ie = ".main-header .nav-item a.nav-link", Te = ".main-header a.dropdown-item", Se = "iframe-mode", je = "iframe-mode-fullscreen", ke = { onTabClick: function(e4) {
          return e4;
        }, onTabChanged: function(e4) {
          return e4;
        }, onTabCreated: function(e4) {
          return e4;
        }, autoIframeMode: true, autoItemActive: true, autoShowNewTab: true, autoDarkMode: false, allowDuplicates: false, allowReload: true, loadingScreen: true, useNavbarItems: true, scrollOffset: 40, scrollBehaviorSwap: false, iconMaximize: "fa-expand", iconMinimize: "fa-compress" }, Qe = function() {
          function e4(e5, t5) {
            this._config = t5, this._element = e5, this._init();
          }
          var t4 = e4.prototype;
          return t4.onTabClick = function(e5) {
            this._config.onTabClick(e5);
          }, t4.onTabChanged = function(e5) {
            this._config.onTabChanged(e5);
          }, t4.onTabCreated = function(e5) {
            this._config.onTabCreated(e5);
          }, t4.createTab = function(e5, t5, a4, i4) {
            var o3 = this, l4 = "panel-" + a4, s4 = "tab-" + a4;
            this._config.allowDuplicates && (l4 += "-" + Math.floor(1e3 * Math.random()), s4 += "-" + Math.floor(1e3 * Math.random()));
            var r4 = '<li class="nav-item" role="presentation"><a href="#" class="btn-iframe-close" data-widget="iframe-close" data-type="only-this"><i class="fas fa-times"></i></a><a class="nav-link" data-toggle="row" id="' + s4 + '" href="#' + l4 + '" role="tab" aria-controls="' + l4 + '" aria-selected="false">' + e5 + "</a></li>";
            n2.default(me).append(unescape(escape(r4)));
            var d3 = '<div class="tab-pane fade" id="' + l4 + '" role="tabpanel" aria-labelledby="' + s4 + '"><iframe src="' + t5 + '"></iframe></div>';
            if (n2.default(be).append(unescape(escape(d3))), i4)
              if (this._config.loadingScreen) {
                var f4 = n2.default(Ce);
                f4.fadeIn(), n2.default(l4 + " iframe").ready(function() {
                  "number" == typeof o3._config.loadingScreen ? (o3.switchTab("#" + s4), setTimeout(function() {
                    f4.fadeOut();
                  }, o3._config.loadingScreen)) : (o3.switchTab("#" + s4), f4.fadeOut());
                });
              } else
                this.switchTab("#" + s4);
            this.onTabCreated(n2.default("#" + s4));
          }, t4.openTabSidebar = function(e5, t5) {
            void 0 === t5 && (t5 = this._config.autoShowNewTab);
            var a4 = n2.default(e5).clone();
            void 0 === a4.attr("href") && (a4 = n2.default(e5).parent("a").clone()), a4.find(".right, .search-path").remove();
            var i4 = a4.find("p").text();
            "" === i4 && (i4 = a4.text());
            var o3 = a4.attr("href");
            if ("#" !== o3 && "" !== o3 && void 0 !== o3) {
              var l4 = unescape(o3).replace("./", "").replace(/["#&'./:=?[\]]/gi, "-").replace(/(--)/gi, ""), s4 = "tab-" + l4;
              if (!this._config.allowDuplicates && n2.default("#" + s4).length > 0)
                return this.switchTab("#" + s4, this._config.allowReload);
              (!this._config.allowDuplicates && 0 === n2.default("#" + s4).length || this._config.allowDuplicates) && this.createTab(i4, o3, l4, t5);
            }
          }, t4.switchTab = function(e5, t5) {
            var a4 = this;
            void 0 === t5 && (t5 = false);
            var i4 = n2.default(e5), o3 = i4.attr("href");
            if (n2.default(ye).hide(), t5) {
              var l4 = n2.default(Ce);
              this._config.loadingScreen ? l4.show(0, function() {
                n2.default(o3 + " iframe").attr("src", n2.default(o3 + " iframe").attr("src")).ready(function() {
                  a4._config.loadingScreen && ("number" == typeof a4._config.loadingScreen ? setTimeout(function() {
                    l4.fadeOut();
                  }, a4._config.loadingScreen) : l4.fadeOut());
                });
              }) : n2.default(o3 + " iframe").attr("src", n2.default(o3 + " iframe").attr("src"));
            }
            n2.default(me + " .active").tab("dispose").removeClass("active"), this._fixHeight(), i4.tab("show"), i4.parents("li").addClass("active"), this.onTabChanged(i4), this._config.autoItemActive && this._setItemActive(n2.default(o3 + " iframe").attr("src"));
          }, t4.removeActiveTab = function(e5, t5) {
            if ("all" == e5)
              n2.default(ve).remove(), n2.default(we).remove(), n2.default(ye).show();
            else if ("all-other" == e5)
              n2.default(ve + ":not(.active)").remove(), n2.default(we + ":not(.active)").remove();
            else if ("only-this" == e5) {
              var a4 = n2.default(t5), i4 = a4.parent(".nav-item"), o3 = i4.parent(), l4 = i4.index(), s4 = a4.siblings(".nav-link").attr("aria-controls");
              if (i4.remove(), n2.default("#" + s4).remove(), n2.default(be).children().length == n2.default(ye + ", " + Ce).length)
                n2.default(ye).show();
              else {
                var r4 = l4 - 1;
                this.switchTab(o3.children().eq(r4).find("a.nav-link"));
              }
            } else {
              var d3 = n2.default(ve + ".active"), f4 = d3.parent(), u4 = d3.index();
              if (d3.remove(), n2.default(we + ".active").remove(), n2.default(be).children().length == n2.default(ye + ", " + Ce).length)
                n2.default(ye).show();
              else {
                var c4 = u4 - 1;
                this.switchTab(f4.children().eq(c4).find("a.nav-link"));
              }
            }
          }, t4.toggleFullscreen = function() {
            n2.default("body").hasClass(je) ? (n2.default(ce + " i").removeClass(this._config.iconMinimize).addClass(this._config.iconMaximize), n2.default("body").removeClass(je), n2.default(ye + ", " + Ce).height("100%"), n2.default(he).height("100%"), n2.default(ge).height("100%")) : (n2.default(ce + " i").removeClass(this._config.iconMaximize).addClass(this._config.iconMinimize), n2.default("body").addClass(je)), n2.default(window).trigger("resize"), this._fixHeight(true);
          }, t4._init = function() {
            var e5 = n2.default(be).children().length > 2;
            if (this._setupListeners(), this._fixHeight(true), e5) {
              var t5 = n2.default("" + we).first();
              console.log(t5);
              var a4 = "#tab-" + t5.attr("id").replace("panel-", "");
              this.switchTab(a4, true);
            }
          }, t4._initFrameElement = function() {
            if (window.frameElement && this._config.autoIframeMode) {
              var e5 = n2.default("body");
              e5.addClass(Se), this._config.autoDarkMode && e5.addClass("dark-mode");
            }
          }, t4._navScroll = function(e5) {
            var t5 = n2.default(me).scrollLeft();
            n2.default(me).animate({ scrollLeft: t5 + e5 }, 250, "linear");
          }, t4._setupListeners = function() {
            var e5 = this;
            n2.default(window).on("resize", function() {
              setTimeout(function() {
                e5._fixHeight();
              }, 1);
            }), n2.default(he).hasClass(Se) && (n2.default(document).on("click", xe + ", .sidebar-search-results .list-group-item", function(t6) {
              t6.preventDefault(), e5.openTabSidebar(t6.target);
            }), this._config.useNavbarItems && n2.default(document).on("click", Ie + ", " + Te, function(t6) {
              t6.preventDefault(), e5.openTabSidebar(t6.target);
            })), n2.default(document).on("click", _e, function(t6) {
              t6.preventDefault(), e5.onTabClick(t6.target), e5.switchTab(t6.target);
            }), n2.default(document).on("click", _e, function(t6) {
              t6.preventDefault(), e5.onTabClick(t6.target), e5.switchTab(t6.target);
            }), n2.default(document).on("click", '[data-widget="iframe-close"]', function(t6) {
              t6.preventDefault();
              var a5 = t6.target;
              "I" == a5.nodeName && (a5 = t6.target.offsetParent), e5.removeActiveTab(a5.attributes["data-type"] ? a5.attributes["data-type"].nodeValue : null, a5);
            }), n2.default(document).on("click", ce, function(t6) {
              t6.preventDefault(), e5.toggleFullscreen();
            });
            var t5 = false, a4 = null;
            n2.default(document).on("mousedown", '[data-widget="iframe-scrollleft"]', function(n3) {
              n3.preventDefault(), clearInterval(a4);
              var i4 = e5._config.scrollOffset;
              e5._config.scrollBehaviorSwap || (i4 = -i4), t5 = true, e5._navScroll(i4), a4 = setInterval(function() {
                e5._navScroll(i4);
              }, 250);
            }), n2.default(document).on("mousedown", '[data-widget="iframe-scrollright"]', function(n3) {
              n3.preventDefault(), clearInterval(a4);
              var i4 = e5._config.scrollOffset;
              e5._config.scrollBehaviorSwap && (i4 = -i4), t5 = true, e5._navScroll(i4), a4 = setInterval(function() {
                e5._navScroll(i4);
              }, 250);
            }), n2.default(document).on("mouseup", function() {
              t5 && (t5 = false, clearInterval(a4), a4 = null);
            });
          }, t4._setItemActive = function(e5) {
            n2.default(xe + ", " + Te).removeClass("active"), n2.default(Ie).parent().removeClass("active");
            var t5 = n2.default(Ie + '[href$="' + e5 + '"]'), a4 = n2.default('.main-header a.dropdown-item[href$="' + e5 + '"]'), i4 = n2.default(xe + '[href$="' + e5 + '"]');
            t5.each(function(e6, t6) {
              n2.default(t6).parent().addClass("active");
            }), a4.each(function(e6, t6) {
              n2.default(t6).addClass("active");
            }), i4.each(function(e6, t6) {
              n2.default(t6).addClass("active"), n2.default(t6).parents(".nav-treeview").prevAll(".nav-link").addClass("active");
            });
          }, t4._fixHeight = function(e5) {
            if (void 0 === e5 && (e5 = false), n2.default("body").hasClass(je)) {
              var t5 = n2.default(window).height(), a4 = n2.default(pe).outerHeight();
              n2.default(ye + ", " + Ce + ", " + ge).height(t5 - a4), n2.default(he).height(t5);
            } else {
              var i4 = parseFloat(n2.default(he).css("height")), o3 = n2.default(pe).outerHeight();
              1 == e5 ? setTimeout(function() {
                n2.default(ye + ", " + Ce).height(i4 - o3);
              }, 50) : n2.default(ge).height(i4 - o3);
            }
          }, e4._jQueryInterface = function(t5) {
            if (n2.default(ue).length > 0) {
              var a4 = n2.default(this).data(de);
              a4 || (a4 = n2.default(this).data());
              var i4 = n2.default.extend({}, ke, "object" == typeof t5 ? t5 : a4);
              localStorage.setItem("AdminLTE:IFrame:Options", JSON.stringify(i4));
              var o3 = new e4(n2.default(this), i4);
              n2.default(this).data(de, "object" == typeof t5 ? t5 : a4), "string" == typeof t5 && /createTab|openTabSidebar|switchTab|removeActiveTab/.test(t5) && o3[t5]();
            } else
              new e4(n2.default(this), JSON.parse(localStorage.getItem("AdminLTE:IFrame:Options")))._initFrameElement();
          }, e4;
        }();
        n2.default(window).on("load", function() {
          Qe._jQueryInterface.call(n2.default(ue));
        }), n2.default.fn.IFrame = Qe._jQueryInterface, n2.default.fn.IFrame.Constructor = Qe, n2.default.fn.IFrame.noConflict = function() {
          return n2.default.fn.IFrame = fe, Qe._jQueryInterface;
        };
        var He = "lte.layout", ze = n2.default.fn.Layout, Fe = ".main-header", Ee = ".main-sidebar", Le = ".main-sidebar .sidebar", De = ".main-footer", Re = "sidebar-focused", Ae = { scrollbarTheme: "os-theme-light", scrollbarAutoHide: "l", panelAutoHeight: true, panelAutoHeightMode: "min-height", preloadDuration: 200, loginRegisterAutoHeight: true }, Me = function() {
          function e4(e5, t5) {
            this._config = t5, this._element = e5;
          }
          var t4 = e4.prototype;
          return t4.fixLayoutHeight = function(e5) {
            void 0 === e5 && (e5 = null);
            var t5 = n2.default("body"), a4 = 0;
            (t5.hasClass("control-sidebar-slide-open") || t5.hasClass("control-sidebar-open") || "control_sidebar" === e5) && (a4 = n2.default(".control-sidebar-content").outerHeight());
            var i4 = { window: n2.default(window).height(), header: n2.default(Fe).length > 0 ? n2.default(Fe).outerHeight() : 0, footer: n2.default(De).length > 0 ? n2.default(De).outerHeight() : 0, sidebar: n2.default(Le).length > 0 ? n2.default(Le).height() : 0, controlSidebar: a4 }, o3 = this._max(i4), l4 = this._config.panelAutoHeight;
            true === l4 && (l4 = 0);
            var s4 = n2.default(".content-wrapper");
            false !== l4 && (o3 === i4.controlSidebar ? s4.css(this._config.panelAutoHeightMode, o3 + l4) : o3 === i4.window ? s4.css(this._config.panelAutoHeightMode, o3 + l4 - i4.header - i4.footer) : s4.css(this._config.panelAutoHeightMode, o3 + l4 - i4.header), this._isFooterFixed() && s4.css(this._config.panelAutoHeightMode, parseFloat(s4.css(this._config.panelAutoHeightMode)) + i4.footer)), t5.hasClass("layout-fixed") && ("undefined" != typeof n2.default.fn.overlayScrollbars ? n2.default(Le).overlayScrollbars({ className: this._config.scrollbarTheme, sizeAutoCapable: true, scrollbars: { autoHide: this._config.scrollbarAutoHide, clickScrolling: true } }) : n2.default(Le).css("overflow-y", "auto"));
          }, t4.fixLoginRegisterHeight = function() {
            var e5 = n2.default("body"), t5 = n2.default(".login-box, .register-box");
            if (e5.hasClass("iframe-mode"))
              e5.css("height", "100%"), n2.default(".wrapper").css("height", "100%"), n2.default("html").css("height", "100%");
            else if (0 === t5.length)
              e5.css("height", "auto"), n2.default("html").css("height", "auto");
            else {
              var a4 = t5.height();
              e5.css(this._config.panelAutoHeightMode) !== a4 && e5.css(this._config.panelAutoHeightMode, a4);
            }
          }, t4._init = function() {
            var e5 = this;
            this.fixLayoutHeight(), true === this._config.loginRegisterAutoHeight ? this.fixLoginRegisterHeight() : this._config.loginRegisterAutoHeight === parseInt(this._config.loginRegisterAutoHeight, 10) && setInterval(this.fixLoginRegisterHeight, this._config.loginRegisterAutoHeight), n2.default(Le).on("collapsed.lte.treeview expanded.lte.treeview", function() {
              e5.fixLayoutHeight();
            }), n2.default(Ee).on("mouseenter mouseleave", function() {
              n2.default("body").hasClass("sidebar-collapse") && e5.fixLayoutHeight();
            }), n2.default('[data-widget="pushmenu"]').on("collapsed.lte.pushmenu shown.lte.pushmenu", function() {
              setTimeout(function() {
                e5.fixLayoutHeight();
              }, 300);
            }), n2.default('[data-widget="control-sidebar"]').on("collapsed.lte.controlsidebar", function() {
              e5.fixLayoutHeight();
            }).on("expanded.lte.controlsidebar", function() {
              e5.fixLayoutHeight("control_sidebar");
            }), n2.default(window).resize(function() {
              e5.fixLayoutHeight();
            }), setTimeout(function() {
              n2.default("body.hold-transition").removeClass("hold-transition");
            }, 50), setTimeout(function() {
              var e6 = n2.default(".preloader");
              e6 && (e6.css("height", 0), setTimeout(function() {
                e6.children().hide();
              }, 200));
            }, this._config.preloadDuration);
          }, t4._max = function(e5) {
            var t5 = 0;
            return Object.keys(e5).forEach(function(a4) {
              e5[a4] > t5 && (t5 = e5[a4]);
            }), t5;
          }, t4._isFooterFixed = function() {
            return "fixed" === n2.default(De).css("position");
          }, e4._jQueryInterface = function(t5) {
            return void 0 === t5 && (t5 = ""), this.each(function() {
              var a4 = n2.default(this).data(He), i4 = n2.default.extend({}, Ae, n2.default(this).data());
              a4 || (a4 = new e4(n2.default(this), i4), n2.default(this).data(He, a4)), "init" === t5 || "" === t5 ? a4._init() : "fixLayoutHeight" !== t5 && "fixLoginRegisterHeight" !== t5 || a4[t5]();
            });
          }, e4;
        }();
        n2.default(window).on("load", function() {
          Me._jQueryInterface.call(n2.default("body"));
        }), n2.default(Le + " a").on("focusin", function() {
          n2.default(Ee).addClass(Re);
        }).on("focusout", function() {
          n2.default(Ee).removeClass(Re);
        }), n2.default.fn.Layout = Me._jQueryInterface, n2.default.fn.Layout.Constructor = Me, n2.default.fn.Layout.noConflict = function() {
          return n2.default.fn.Layout = ze, Me._jQueryInterface;
        };
        var qe = "PushMenu", Oe = "lte.pushmenu", Ne = "." + Oe, Pe = n2.default.fn[qe], Ue = '[data-widget="pushmenu"]', Be = "body", $e = "sidebar-collapse", Je = "sidebar-open", We = "sidebar-is-opening", Ve = "sidebar-closed", Ge = { autoCollapseSize: 992, enableRemember: false, noTransitionAfterReload: true, animationSpeed: 300 }, Ke = function() {
          function e4(e5, t5) {
            this._element = e5, this._options = n2.default.extend({}, Ge, t5), 0 === n2.default("#sidebar-overlay").length && this._addOverlay(), this._init();
          }
          var t4 = e4.prototype;
          return t4.expand = function() {
            var e5 = n2.default(Be);
            this._options.autoCollapseSize && n2.default(window).width() <= this._options.autoCollapseSize && e5.addClass(Je), e5.addClass(We).removeClass("sidebar-collapse sidebar-closed").delay(50).queue(function() {
              e5.removeClass(We), n2.default(this).dequeue();
            }), this._options.enableRemember && localStorage.setItem("remember" + Ne, Je), n2.default(this._element).trigger(n2.default.Event("shown.lte.pushmenu"));
          }, t4.collapse = function() {
            var e5 = this, t5 = n2.default(Be);
            this._options.autoCollapseSize && n2.default(window).width() <= this._options.autoCollapseSize && t5.removeClass(Je).addClass(Ve), t5.addClass($e), this._options.enableRemember && localStorage.setItem("remember" + Ne, $e), n2.default(this._element).trigger(n2.default.Event("collapsed.lte.pushmenu")), setTimeout(function() {
              n2.default(e5._element).trigger(n2.default.Event("collapsed-done.lte.pushmenu"));
            }, this._options.animationSpeed);
          }, t4.toggle = function() {
            n2.default(Be).hasClass($e) ? this.expand() : this.collapse();
          }, t4.autoCollapse = function(e5) {
            if (void 0 === e5 && (e5 = false), this._options.autoCollapseSize) {
              var t5 = n2.default(Be);
              n2.default(window).width() <= this._options.autoCollapseSize ? t5.hasClass(Je) || this.collapse() : true === e5 && (t5.hasClass(Je) ? t5.removeClass(Je) : t5.hasClass(Ve) && this.expand());
            }
          }, t4.remember = function() {
            if (this._options.enableRemember) {
              var e5 = n2.default("body");
              localStorage.getItem("remember" + Ne) === $e ? this._options.noTransitionAfterReload ? e5.addClass("hold-transition").addClass($e).delay(50).queue(function() {
                n2.default(this).removeClass("hold-transition"), n2.default(this).dequeue();
              }) : e5.addClass($e) : this._options.noTransitionAfterReload ? e5.addClass("hold-transition").removeClass($e).delay(50).queue(function() {
                n2.default(this).removeClass("hold-transition"), n2.default(this).dequeue();
              }) : e5.removeClass($e);
            }
          }, t4._init = function() {
            var e5 = this;
            this.remember(), this.autoCollapse(), n2.default(window).resize(function() {
              e5.autoCollapse(true);
            });
          }, t4._addOverlay = function() {
            var e5 = this, t5 = n2.default("<div />", { id: "sidebar-overlay" });
            t5.on("click", function() {
              e5.collapse();
            }), n2.default(".wrapper").append(t5);
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(Oe), i4 = n2.default.extend({}, Ge, n2.default(this).data());
              a4 || (a4 = new e4(this, i4), n2.default(this).data(Oe, a4)), "string" == typeof t5 && /collapse|expand|toggle/.test(t5) && a4[t5]();
            });
          }, e4;
        }();
        n2.default(document).on("click", Ue, function(e4) {
          e4.preventDefault();
          var t4 = e4.currentTarget;
          "pushmenu" !== n2.default(t4).data("widget") && (t4 = n2.default(t4).closest(Ue)), Ke._jQueryInterface.call(n2.default(t4), "toggle");
        }), n2.default(window).on("load", function() {
          Ke._jQueryInterface.call(n2.default(Ue));
        }), n2.default.fn[qe] = Ke._jQueryInterface, n2.default.fn[qe].Constructor = Ke, n2.default.fn[qe].noConflict = function() {
          return n2.default.fn[qe] = Pe, Ke._jQueryInterface;
        };
        var Xe = "SidebarSearch", Ye = "lte.sidebar-search", Ze = n2.default.fn[Xe], et = "sidebar-search-open", tt = "fa-search", at = "fa-times", nt = "sidebar-search-results", it = "list-group", ot = '[data-widget="sidebar-search"]', lt = ot + " .form-control", st = ot + " .btn", rt = st + " i", dt2 = ".sidebar-search-results", ft = ".sidebar-search-results .list-group", ut = { arrowSign: "->", minLength: 3, maxResults: 7, highlightName: true, highlightPath: false, highlightClass: "text-light", notFoundText: "No element found!" }, ct = [], ht = function() {
          function e4(e5, t4) {
            this.element = e5, this.options = n2.default.extend({}, ut, t4), this.items = [];
          }
          var a4 = e4.prototype;
          return a4.init = function() {
            var e5 = this;
            0 !== n2.default(ot).length && (0 === n2.default(ot).next(dt2).length && n2.default(ot).after(n2.default("<div />", { class: nt })), 0 === n2.default(dt2).children(".list-group").length && n2.default(dt2).append(n2.default("<div />", { class: it })), this._addNotFound(), n2.default(".main-sidebar .nav-sidebar").children().each(function(t4, a5) {
              e5._parseItem(a5);
            }));
          }, a4.search = function() {
            var e5 = this, t4 = n2.default(lt).val().toLowerCase();
            if (t4.length < this.options.minLength)
              return n2.default(ft).empty(), this._addNotFound(), void this.close();
            var a5 = ct.filter(function(e6) {
              return e6.name.toLowerCase().includes(t4);
            }), i4 = n2.default(a5.slice(0, this.options.maxResults));
            n2.default(ft).empty(), 0 === i4.length ? this._addNotFound() : i4.each(function(t5, a6) {
              n2.default(ft).append(e5._renderItem(escape(a6.name), encodeURI(a6.link), a6.path));
            }), this.open();
          }, a4.open = function() {
            n2.default(ot).parent().addClass(et), n2.default(rt).removeClass(tt).addClass(at);
          }, a4.close = function() {
            n2.default(ot).parent().removeClass(et), n2.default(rt).removeClass(at).addClass(tt);
          }, a4.toggle = function() {
            n2.default(ot).parent().hasClass(et) ? this.close() : this.open();
          }, a4._parseItem = function(e5, t4) {
            var a5 = this;
            if (void 0 === t4 && (t4 = []), !n2.default(e5).hasClass("nav-header")) {
              var i4 = {}, o3 = n2.default(e5).clone().find("> .nav-link"), l4 = n2.default(e5).clone().find("> .nav-treeview"), s4 = o3.attr("href"), r4 = o3.find("p").children().remove().end().text();
              if (i4.name = this._trimText(r4), i4.link = s4, i4.path = t4, 0 === l4.length)
                ct.push(i4);
              else {
                var d3 = i4.path.concat([i4.name]);
                l4.children().each(function(e6, t5) {
                  a5._parseItem(t5, d3);
                });
              }
            }
          }, a4._trimText = function(e5) {
            return t3.trim(e5.replace(/(\r\n|\n|\r)/gm, " "));
          }, a4._renderItem = function(e5, t4, a5) {
            var i4 = this;
            if (a5 = a5.join(" " + this.options.arrowSign + " "), e5 = unescape(e5), t4 = decodeURI(t4), this.options.highlightName || this.options.highlightPath) {
              var o3 = n2.default(lt).val().toLowerCase(), l4 = new RegExp(o3, "gi");
              this.options.highlightName && (e5 = e5.replace(l4, function(e6) {
                return '<strong class="' + i4.options.highlightClass + '">' + e6 + "</strong>";
              })), this.options.highlightPath && (a5 = a5.replace(l4, function(e6) {
                return '<strong class="' + i4.options.highlightClass + '">' + e6 + "</strong>";
              }));
            }
            var s4 = n2.default("<a/>", { href: decodeURIComponent(t4), class: "list-group-item" }), r4 = n2.default("<div/>", { class: "search-title" }).html(e5), d3 = n2.default("<div/>", { class: "search-path" }).html(a5);
            return s4.append(r4).append(d3), s4;
          }, a4._addNotFound = function() {
            n2.default(ft).append(this._renderItem(this.options.notFoundText, "#", []));
          }, e4._jQueryInterface = function(t4) {
            var a5 = n2.default(this).data(Ye);
            a5 || (a5 = n2.default(this).data());
            var i4 = n2.default.extend({}, ut, "object" == typeof t4 ? t4 : a5), o3 = new e4(n2.default(this), i4);
            n2.default(this).data(Ye, "object" == typeof t4 ? t4 : a5), "string" == typeof t4 && /init|toggle|close|open|search/.test(t4) ? o3[t4]() : o3.init();
          }, e4;
        }();
        n2.default(document).on("click", st, function(e4) {
          e4.preventDefault(), ht._jQueryInterface.call(n2.default(ot), "toggle");
        }), n2.default(document).on("keyup", lt, function(e4) {
          return 38 == e4.keyCode ? (e4.preventDefault(), void n2.default(ft).children().last().focus()) : 40 == e4.keyCode ? (e4.preventDefault(), void n2.default(ft).children().first().focus()) : void setTimeout(function() {
            ht._jQueryInterface.call(n2.default(ot), "search");
          }, 100);
        }), n2.default(document).on("keydown", ft, function(e4) {
          var t4 = n2.default(":focus");
          38 == e4.keyCode && (e4.preventDefault(), t4.is(":first-child") ? t4.siblings().last().focus() : t4.prev().focus()), 40 == e4.keyCode && (e4.preventDefault(), t4.is(":last-child") ? t4.siblings().first().focus() : t4.next().focus());
        }), n2.default(window).on("load", function() {
          ht._jQueryInterface.call(n2.default(ot), "init");
        }), n2.default.fn[Xe] = ht._jQueryInterface, n2.default.fn[Xe].Constructor = ht, n2.default.fn[Xe].noConflict = function() {
          return n2.default.fn[Xe] = Ze, ht._jQueryInterface;
        };
        var gt = "NavbarSearch", pt = "lte.navbar-search", mt = n2.default.fn[gt], vt = '[data-widget="navbar-search"]', _t = ".form-control", bt = "navbar-search-open", yt = { resetOnClose: true, target: ".navbar-search-block" }, Ct = function() {
          function e4(e5, t5) {
            this._element = e5, this._config = n2.default.extend({}, yt, t5);
          }
          var t4 = e4.prototype;
          return t4.open = function() {
            n2.default(this._config.target).css("display", "flex").hide().fadeIn().addClass(bt), n2.default(this._config.target + " " + _t).focus();
          }, t4.close = function() {
            n2.default(this._config.target).fadeOut().removeClass(bt), this._config.resetOnClose && n2.default(this._config.target + " " + _t).val("");
          }, t4.toggle = function() {
            n2.default(this._config.target).hasClass(bt) ? this.close() : this.open();
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(pt), i4 = n2.default.extend({}, yt, n2.default(this).data());
              if (a4 || (a4 = new e4(this, i4), n2.default(this).data(pt, a4)), !/toggle|close|open/.test(t5))
                throw new Error("Undefined method " + t5);
              a4[t5]();
            });
          }, e4;
        }();
        n2.default(document).on("click", vt, function(e4) {
          e4.preventDefault();
          var t4 = n2.default(e4.currentTarget);
          "navbar-search" !== t4.data("widget") && (t4 = t4.closest(vt)), Ct._jQueryInterface.call(t4, "toggle");
        }), n2.default.fn[gt] = Ct._jQueryInterface, n2.default.fn[gt].Constructor = Ct, n2.default.fn[gt].noConflict = function() {
          return n2.default.fn[gt] = mt, Ct._jQueryInterface;
        };
        var wt = n2.default.fn.Toasts, xt = "topRight", It = "topLeft", Tt = "bottomRight", St = "bottomLeft", jt = { position: xt, fixed: true, autohide: false, autoremove: true, delay: 1e3, fade: true, icon: null, image: null, imageAlt: null, imageHeight: "25px", title: null, subtitle: null, close: true, body: null, class: null }, kt = function() {
          function e4(e5, t5) {
            this._config = t5, this._prepareContainer(), n2.default("body").trigger(n2.default.Event("init.lte.toasts"));
          }
          var t4 = e4.prototype;
          return t4.create = function() {
            var e5 = n2.default('<div class="toast" role="alert" aria-live="assertive" aria-atomic="true"/>');
            e5.data("autohide", this._config.autohide), e5.data("animation", this._config.fade), this._config.class && e5.addClass(this._config.class), this._config.delay && 500 != this._config.delay && e5.data("delay", this._config.delay);
            var t5 = n2.default('<div class="toast-header">');
            if (null != this._config.image) {
              var a4 = n2.default("<img />").addClass("rounded mr-2").attr("src", this._config.image).attr("alt", this._config.imageAlt);
              null != this._config.imageHeight && a4.height(this._config.imageHeight).width("auto"), t5.append(a4);
            }
            if (null != this._config.icon && t5.append(n2.default("<i />").addClass("mr-2").addClass(this._config.icon)), null != this._config.title && t5.append(n2.default("<strong />").addClass("mr-auto").html(this._config.title)), null != this._config.subtitle && t5.append(n2.default("<small />").html(this._config.subtitle)), 1 == this._config.close) {
              var i4 = n2.default('<button data-dismiss="toast" />').attr("type", "button").addClass("ml-2 mb-1 close").attr("aria-label", "Close").append('<span aria-hidden="true">&times;</span>');
              null == this._config.title && i4.toggleClass("ml-2 ml-auto"), t5.append(i4);
            }
            e5.append(t5), null != this._config.body && e5.append(n2.default('<div class="toast-body" />').html(this._config.body)), n2.default(this._getContainerId()).prepend(e5);
            var o3 = n2.default("body");
            o3.trigger(n2.default.Event("created.lte.toasts")), e5.toast("show"), this._config.autoremove && e5.on("hidden.bs.toast", function() {
              n2.default(this).delay(200).remove(), o3.trigger(n2.default.Event("removed.lte.toasts"));
            });
          }, t4._getContainerId = function() {
            return this._config.position == xt ? "#toastsContainerTopRight" : this._config.position == It ? "#toastsContainerTopLeft" : this._config.position == Tt ? "#toastsContainerBottomRight" : this._config.position == St ? "#toastsContainerBottomLeft" : void 0;
          }, t4._prepareContainer = function() {
            if (0 === n2.default(this._getContainerId()).length) {
              var e5 = n2.default("<div />").attr("id", this._getContainerId().replace("#", ""));
              this._config.position == xt ? e5.addClass("toasts-top-right") : this._config.position == It ? e5.addClass("toasts-top-left") : this._config.position == Tt ? e5.addClass("toasts-bottom-right") : this._config.position == St && e5.addClass("toasts-bottom-left"), n2.default("body").append(e5);
            }
            this._config.fixed ? n2.default(this._getContainerId()).addClass("fixed") : n2.default(this._getContainerId()).removeClass("fixed");
          }, e4._jQueryInterface = function(t5, a4) {
            return this.each(function() {
              var i4 = n2.default.extend({}, jt, a4), o3 = new e4(n2.default(this), i4);
              "create" === t5 && o3[t5]();
            });
          }, e4;
        }();
        n2.default.fn.Toasts = kt._jQueryInterface, n2.default.fn.Toasts.Constructor = kt, n2.default.fn.Toasts.noConflict = function() {
          return n2.default.fn.Toasts = wt, kt._jQueryInterface;
        };
        var Qt = "TodoList", Ht = "lte.todolist", zt = n2.default.fn[Qt], Ft = "done", Et = { onCheck: function(e4) {
          return e4;
        }, onUnCheck: function(e4) {
          return e4;
        } }, Lt = function() {
          function e4(e5, t5) {
            this._config = t5, this._element = e5, this._init();
          }
          var t4 = e4.prototype;
          return t4.toggle = function(e5) {
            e5.parents("li").toggleClass(Ft), n2.default(e5).prop("checked") ? this.check(e5) : this.unCheck(n2.default(e5));
          }, t4.check = function(e5) {
            this._config.onCheck.call(e5);
          }, t4.unCheck = function(e5) {
            this._config.onUnCheck.call(e5);
          }, t4._init = function() {
            var e5 = this, t5 = this._element;
            t5.find("input:checkbox:checked").parents("li").toggleClass(Ft), t5.on("change", "input:checkbox", function(t6) {
              e5.toggle(n2.default(t6.target));
            });
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(Ht);
              a4 || (a4 = n2.default(this).data());
              var i4 = n2.default.extend({}, Et, "object" == typeof t5 ? t5 : a4), o3 = new e4(n2.default(this), i4);
              n2.default(this).data(Ht, "object" == typeof t5 ? t5 : a4), "init" === t5 && o3[t5]();
            });
          }, e4;
        }();
        n2.default(window).on("load", function() {
          Lt._jQueryInterface.call(n2.default('[data-widget="todo-list"]'));
        }), n2.default.fn[Qt] = Lt._jQueryInterface, n2.default.fn[Qt].Constructor = Lt, n2.default.fn[Qt].noConflict = function() {
          return n2.default.fn[Qt] = zt, Lt._jQueryInterface;
        };
        var Dt = "Treeview", Rt = "lte.treeview", At = n2.default.fn[Dt], Mt = ".nav-item", qt = ".nav-treeview", Ot = ".menu-open", Nt = '[data-widget="treeview"]', Pt = "menu-open", Ut = "menu-is-opening", Bt = { trigger: Nt + " .nav-link", animationSpeed: 300, accordion: true, expandSidebar: false, sidebarButtonSelector: '[data-widget="pushmenu"]' }, $t = function() {
          function e4(e5, t5) {
            this._config = t5, this._element = e5;
          }
          var t4 = e4.prototype;
          return t4.init = function() {
            n2.default(".nav-item.menu-open .nav-treeview.menu-open").css("display", "block"), this._setupListeners();
          }, t4.expand = function(e5, t5) {
            var a4 = this, i4 = n2.default.Event("expanded.lte.treeview");
            if (this._config.accordion) {
              var o3 = t5.siblings(Ot).first(), l4 = o3.find(qt).first();
              this.collapse(l4, o3);
            }
            t5.addClass(Ut), e5.stop().slideDown(this._config.animationSpeed, function() {
              t5.addClass(Pt), n2.default(a4._element).trigger(i4);
            }), this._config.expandSidebar && this._expandSidebar();
          }, t4.collapse = function(e5, t5) {
            var a4 = this, i4 = n2.default.Event("collapsed.lte.treeview");
            t5.removeClass("menu-is-opening menu-open"), e5.stop().slideUp(this._config.animationSpeed, function() {
              n2.default(a4._element).trigger(i4), e5.find(".menu-open > .nav-treeview").slideUp(), e5.find(Ot).removeClass("menu-is-opening menu-open");
            });
          }, t4.toggle = function(e5) {
            var t5 = n2.default(e5.currentTarget), a4 = t5.parent(), i4 = a4.find("> .nav-treeview");
            if (i4.is(qt) || (a4.is(Mt) || (i4 = a4.parent().find("> .nav-treeview")), i4.is(qt))) {
              e5.preventDefault();
              var o3 = t5.parents(Mt).first();
              o3.hasClass(Pt) ? this.collapse(n2.default(i4), o3) : this.expand(n2.default(i4), o3);
            }
          }, t4._setupListeners = function() {
            var e5 = this, t5 = void 0 !== this._element.attr("id") ? "#" + this._element.attr("id") : "";
            n2.default(document).on("click", "" + t5 + this._config.trigger, function(t6) {
              e5.toggle(t6);
            });
          }, t4._expandSidebar = function() {
            n2.default("body").hasClass("sidebar-collapse") && n2.default(this._config.sidebarButtonSelector).PushMenu("expand");
          }, e4._jQueryInterface = function(t5) {
            return this.each(function() {
              var a4 = n2.default(this).data(Rt), i4 = n2.default.extend({}, Bt, n2.default(this).data());
              a4 || (a4 = new e4(n2.default(this), i4), n2.default(this).data(Rt, a4)), "init" === t5 && a4[t5]();
            });
          }, e4;
        }();
        n2.default(window).on("load.lte.treeview", function() {
          n2.default(Nt).each(function() {
            $t._jQueryInterface.call(n2.default(this), "init");
          });
        }), n2.default.fn[Dt] = $t._jQueryInterface, n2.default.fn[Dt].Constructor = $t, n2.default.fn[Dt].noConflict = function() {
          return n2.default.fn[Dt] = At, $t._jQueryInterface;
        }, e3.CardRefresh = f3, e3.CardWidget = I3, e3.ControlSidebar = M2, e3.DirectChat = P2, e3.Dropdown = V3, e3.ExpandableTable = te, e3.Fullscreen = re, e3.IFrame = Qe, e3.Layout = Me, e3.NavbarSearch = Ct, e3.PushMenu = Ke, e3.SidebarSearch = ht, e3.Toasts = kt, e3.TodoList = Lt, e3.Treeview = $t, Object.defineProperty(e3, "__esModule", { value: true });
      });
    }
  });

  // node_modules/admin-lte/plugins/bootstrap/js/bootstrap.bundle.min.js
  var require_bootstrap_bundle_min = __commonJS({
    "node_modules/admin-lte/plugins/bootstrap/js/bootstrap.bundle.min.js"(exports, module) {
      !function(t3, e3) {
        "object" == typeof exports && "undefined" != typeof module ? e3(exports, require_jquery()) : "function" == typeof define && define.amd ? define(["exports", "jquery"], e3) : e3((t3 = "undefined" != typeof globalThis ? globalThis : t3 || self).bootstrap = {}, t3.jQuery);
      }(exports, function(t3, e3) {
        "use strict";
        function n2(t4) {
          return t4 && "object" == typeof t4 && "default" in t4 ? t4 : { default: t4 };
        }
        var i3 = n2(e3);
        function o2(t4, e4) {
          for (var n3 = 0; n3 < e4.length; n3++) {
            var i4 = e4[n3];
            i4.enumerable = i4.enumerable || false, i4.configurable = true, "value" in i4 && (i4.writable = true), Object.defineProperty(t4, i4.key, i4);
          }
        }
        function r3(t4, e4, n3) {
          return e4 && o2(t4.prototype, e4), n3 && o2(t4, n3), Object.defineProperty(t4, "prototype", { writable: false }), t4;
        }
        function a3() {
          return a3 = Object.assign ? Object.assign.bind() : function(t4) {
            for (var e4 = 1; e4 < arguments.length; e4++) {
              var n3 = arguments[e4];
              for (var i4 in n3)
                Object.prototype.hasOwnProperty.call(n3, i4) && (t4[i4] = n3[i4]);
            }
            return t4;
          }, a3.apply(this, arguments);
        }
        function s3(t4, e4) {
          return s3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e5) {
            return t5.__proto__ = e5, t5;
          }, s3(t4, e4);
        }
        var l3 = "transitionend";
        var u3 = { TRANSITION_END: "bsTransitionEnd", getUID: function(t4) {
          do {
            t4 += ~~(1e6 * Math.random());
          } while (document.getElementById(t4));
          return t4;
        }, getSelectorFromElement: function(t4) {
          var e4 = t4.getAttribute("data-target");
          if (!e4 || "#" === e4) {
            var n3 = t4.getAttribute("href");
            e4 = n3 && "#" !== n3 ? n3.trim() : "";
          }
          try {
            return document.querySelector(e4) ? e4 : null;
          } catch (t5) {
            return null;
          }
        }, getTransitionDurationFromElement: function(t4) {
          if (!t4)
            return 0;
          var e4 = i3.default(t4).css("transition-duration"), n3 = i3.default(t4).css("transition-delay"), o3 = parseFloat(e4), r4 = parseFloat(n3);
          return o3 || r4 ? (e4 = e4.split(",")[0], n3 = n3.split(",")[0], 1e3 * (parseFloat(e4) + parseFloat(n3))) : 0;
        }, reflow: function(t4) {
          return t4.offsetHeight;
        }, triggerTransitionEnd: function(t4) {
          i3.default(t4).trigger(l3);
        }, supportsTransitionEnd: function() {
          return Boolean(l3);
        }, isElement: function(t4) {
          return (t4[0] || t4).nodeType;
        }, typeCheckConfig: function(t4, e4, n3) {
          for (var i4 in n3)
            if (Object.prototype.hasOwnProperty.call(n3, i4)) {
              var o3 = n3[i4], r4 = e4[i4], a4 = r4 && u3.isElement(r4) ? "element" : null === (s4 = r4) || "undefined" == typeof s4 ? "" + s4 : {}.toString.call(s4).match(/\s([a-z]+)/i)[1].toLowerCase();
              if (!new RegExp(o3).test(a4))
                throw new Error(t4.toUpperCase() + ': Option "' + i4 + '" provided type "' + a4 + '" but expected type "' + o3 + '".');
            }
          var s4;
        }, findShadowRoot: function(t4) {
          if (!document.documentElement.attachShadow)
            return null;
          if ("function" == typeof t4.getRootNode) {
            var e4 = t4.getRootNode();
            return e4 instanceof ShadowRoot ? e4 : null;
          }
          return t4 instanceof ShadowRoot ? t4 : t4.parentNode ? u3.findShadowRoot(t4.parentNode) : null;
        }, jQueryDetection: function() {
          if ("undefined" == typeof i3.default)
            throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
          var t4 = i3.default.fn.jquery.split(" ")[0].split(".");
          if (t4[0] < 2 && t4[1] < 9 || 1 === t4[0] && 9 === t4[1] && t4[2] < 1 || t4[0] >= 4)
            throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
        } };
        u3.jQueryDetection(), i3.default.fn.emulateTransitionEnd = function(t4) {
          var e4 = this, n3 = false;
          return i3.default(this).one(u3.TRANSITION_END, function() {
            n3 = true;
          }), setTimeout(function() {
            n3 || u3.triggerTransitionEnd(e4);
          }, t4), this;
        }, i3.default.event.special[u3.TRANSITION_END] = { bindType: l3, delegateType: l3, handle: function(t4) {
          if (i3.default(t4.target).is(this))
            return t4.handleObj.handler.apply(this, arguments);
        } };
        var f3 = "bs.alert", d2 = i3.default.fn.alert, c3 = function() {
          function t4(t5) {
            this._element = t5;
          }
          var e4 = t4.prototype;
          return e4.close = function(t5) {
            var e5 = this._element;
            t5 && (e5 = this._getRootElement(t5)), this._triggerCloseEvent(e5).isDefaultPrevented() || this._removeElement(e5);
          }, e4.dispose = function() {
            i3.default.removeData(this._element, f3), this._element = null;
          }, e4._getRootElement = function(t5) {
            var e5 = u3.getSelectorFromElement(t5), n3 = false;
            return e5 && (n3 = document.querySelector(e5)), n3 || (n3 = i3.default(t5).closest(".alert")[0]), n3;
          }, e4._triggerCloseEvent = function(t5) {
            var e5 = i3.default.Event("close.bs.alert");
            return i3.default(t5).trigger(e5), e5;
          }, e4._removeElement = function(t5) {
            var e5 = this;
            if (i3.default(t5).removeClass("show"), i3.default(t5).hasClass("fade")) {
              var n3 = u3.getTransitionDurationFromElement(t5);
              i3.default(t5).one(u3.TRANSITION_END, function(n4) {
                return e5._destroyElement(t5, n4);
              }).emulateTransitionEnd(n3);
            } else
              this._destroyElement(t5);
          }, e4._destroyElement = function(t5) {
            i3.default(t5).detach().trigger("closed.bs.alert").remove();
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this), o3 = n3.data(f3);
              o3 || (o3 = new t4(this), n3.data(f3, o3)), "close" === e5 && o3[e5](this);
            });
          }, t4._handleDismiss = function(t5) {
            return function(e5) {
              e5 && e5.preventDefault(), t5.close(this);
            };
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }]), t4;
        }();
        i3.default(document).on("click.bs.alert.data-api", '[data-dismiss="alert"]', c3._handleDismiss(new c3())), i3.default.fn.alert = c3._jQueryInterface, i3.default.fn.alert.Constructor = c3, i3.default.fn.alert.noConflict = function() {
          return i3.default.fn.alert = d2, c3._jQueryInterface;
        };
        var h3 = "bs.button", p3 = i3.default.fn.button, m3 = "active", g4 = '[data-toggle^="button"]', _3 = 'input:not([type="hidden"])', v3 = ".btn", b3 = function() {
          function t4(t5) {
            this._element = t5, this.shouldAvoidTriggerChange = false;
          }
          var e4 = t4.prototype;
          return e4.toggle = function() {
            var t5 = true, e5 = true, n3 = i3.default(this._element).closest('[data-toggle="buttons"]')[0];
            if (n3) {
              var o3 = this._element.querySelector(_3);
              if (o3) {
                if ("radio" === o3.type)
                  if (o3.checked && this._element.classList.contains(m3))
                    t5 = false;
                  else {
                    var r4 = n3.querySelector(".active");
                    r4 && i3.default(r4).removeClass(m3);
                  }
                t5 && ("checkbox" !== o3.type && "radio" !== o3.type || (o3.checked = !this._element.classList.contains(m3)), this.shouldAvoidTriggerChange || i3.default(o3).trigger("change")), o3.focus(), e5 = false;
              }
            }
            this._element.hasAttribute("disabled") || this._element.classList.contains("disabled") || (e5 && this._element.setAttribute("aria-pressed", !this._element.classList.contains(m3)), t5 && i3.default(this._element).toggleClass(m3));
          }, e4.dispose = function() {
            i3.default.removeData(this._element, h3), this._element = null;
          }, t4._jQueryInterface = function(e5, n3) {
            return this.each(function() {
              var o3 = i3.default(this), r4 = o3.data(h3);
              r4 || (r4 = new t4(this), o3.data(h3, r4)), r4.shouldAvoidTriggerChange = n3, "toggle" === e5 && r4[e5]();
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }]), t4;
        }();
        i3.default(document).on("click.bs.button.data-api", g4, function(t4) {
          var e4 = t4.target, n3 = e4;
          if (i3.default(e4).hasClass("btn") || (e4 = i3.default(e4).closest(v3)[0]), !e4 || e4.hasAttribute("disabled") || e4.classList.contains("disabled"))
            t4.preventDefault();
          else {
            var o3 = e4.querySelector(_3);
            if (o3 && (o3.hasAttribute("disabled") || o3.classList.contains("disabled")))
              return void t4.preventDefault();
            "INPUT" !== n3.tagName && "LABEL" === e4.tagName || b3._jQueryInterface.call(i3.default(e4), "toggle", "INPUT" === n3.tagName);
          }
        }).on("focus.bs.button.data-api blur.bs.button.data-api", g4, function(t4) {
          var e4 = i3.default(t4.target).closest(v3)[0];
          i3.default(e4).toggleClass("focus", /^focus(in)?$/.test(t4.type));
        }), i3.default(window).on("load.bs.button.data-api", function() {
          for (var t4 = [].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')), e4 = 0, n3 = t4.length; e4 < n3; e4++) {
            var i4 = t4[e4], o3 = i4.querySelector(_3);
            o3.checked || o3.hasAttribute("checked") ? i4.classList.add(m3) : i4.classList.remove(m3);
          }
          for (var r4 = 0, a4 = (t4 = [].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length; r4 < a4; r4++) {
            var s4 = t4[r4];
            "true" === s4.getAttribute("aria-pressed") ? s4.classList.add(m3) : s4.classList.remove(m3);
          }
        }), i3.default.fn.button = b3._jQueryInterface, i3.default.fn.button.Constructor = b3, i3.default.fn.button.noConflict = function() {
          return i3.default.fn.button = p3, b3._jQueryInterface;
        };
        var y3 = "carousel", E = "bs.carousel", w4 = i3.default.fn[y3], T4 = "active", C3 = "next", S2 = "prev", N3 = "slid.bs.carousel", D2 = ".active.carousel-item", A3 = { interval: 5e3, keyboard: true, slide: false, pause: "hover", wrap: true, touch: true }, k3 = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" }, I3 = { TOUCH: "touch", PEN: "pen" }, O2 = function() {
          function t4(t5, e5) {
            this._items = null, this._interval = null, this._activeElement = null, this._isPaused = false, this._isSliding = false, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e5), this._element = t5, this._indicatorsElement = this._element.querySelector(".carousel-indicators"), this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners();
          }
          var e4 = t4.prototype;
          return e4.next = function() {
            this._isSliding || this._slide(C3);
          }, e4.nextWhenVisible = function() {
            var t5 = i3.default(this._element);
            !document.hidden && t5.is(":visible") && "hidden" !== t5.css("visibility") && this.next();
          }, e4.prev = function() {
            this._isSliding || this._slide(S2);
          }, e4.pause = function(t5) {
            t5 || (this._isPaused = true), this._element.querySelector(".carousel-item-next, .carousel-item-prev") && (u3.triggerTransitionEnd(this._element), this.cycle(true)), clearInterval(this._interval), this._interval = null;
          }, e4.cycle = function(t5) {
            t5 || (this._isPaused = false), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._updateInterval(), this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
          }, e4.to = function(t5) {
            var e5 = this;
            this._activeElement = this._element.querySelector(D2);
            var n3 = this._getItemIndex(this._activeElement);
            if (!(t5 > this._items.length - 1 || t5 < 0))
              if (this._isSliding)
                i3.default(this._element).one(N3, function() {
                  return e5.to(t5);
                });
              else {
                if (n3 === t5)
                  return this.pause(), void this.cycle();
                var o3 = t5 > n3 ? C3 : S2;
                this._slide(o3, this._items[t5]);
              }
          }, e4.dispose = function() {
            i3.default(this._element).off(".bs.carousel"), i3.default.removeData(this._element, E), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null;
          }, e4._getConfig = function(t5) {
            return t5 = a3({}, A3, t5), u3.typeCheckConfig(y3, t5, k3), t5;
          }, e4._handleSwipe = function() {
            var t5 = Math.abs(this.touchDeltaX);
            if (!(t5 <= 40)) {
              var e5 = t5 / this.touchDeltaX;
              this.touchDeltaX = 0, e5 > 0 && this.prev(), e5 < 0 && this.next();
            }
          }, e4._addEventListeners = function() {
            var t5 = this;
            this._config.keyboard && i3.default(this._element).on("keydown.bs.carousel", function(e5) {
              return t5._keydown(e5);
            }), "hover" === this._config.pause && i3.default(this._element).on("mouseenter.bs.carousel", function(e5) {
              return t5.pause(e5);
            }).on("mouseleave.bs.carousel", function(e5) {
              return t5.cycle(e5);
            }), this._config.touch && this._addTouchEventListeners();
          }, e4._addTouchEventListeners = function() {
            var t5 = this;
            if (this._touchSupported) {
              var e5 = function(e6) {
                t5._pointerEvent && I3[e6.originalEvent.pointerType.toUpperCase()] ? t5.touchStartX = e6.originalEvent.clientX : t5._pointerEvent || (t5.touchStartX = e6.originalEvent.touches[0].clientX);
              }, n3 = function(e6) {
                t5._pointerEvent && I3[e6.originalEvent.pointerType.toUpperCase()] && (t5.touchDeltaX = e6.originalEvent.clientX - t5.touchStartX), t5._handleSwipe(), "hover" === t5._config.pause && (t5.pause(), t5.touchTimeout && clearTimeout(t5.touchTimeout), t5.touchTimeout = setTimeout(function(e7) {
                  return t5.cycle(e7);
                }, 500 + t5._config.interval));
              };
              i3.default(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel", function(t6) {
                return t6.preventDefault();
              }), this._pointerEvent ? (i3.default(this._element).on("pointerdown.bs.carousel", function(t6) {
                return e5(t6);
              }), i3.default(this._element).on("pointerup.bs.carousel", function(t6) {
                return n3(t6);
              }), this._element.classList.add("pointer-event")) : (i3.default(this._element).on("touchstart.bs.carousel", function(t6) {
                return e5(t6);
              }), i3.default(this._element).on("touchmove.bs.carousel", function(e6) {
                return function(e7) {
                  t5.touchDeltaX = e7.originalEvent.touches && e7.originalEvent.touches.length > 1 ? 0 : e7.originalEvent.touches[0].clientX - t5.touchStartX;
                }(e6);
              }), i3.default(this._element).on("touchend.bs.carousel", function(t6) {
                return n3(t6);
              }));
            }
          }, e4._keydown = function(t5) {
            if (!/input|textarea/i.test(t5.target.tagName))
              switch (t5.which) {
                case 37:
                  t5.preventDefault(), this.prev();
                  break;
                case 39:
                  t5.preventDefault(), this.next();
              }
          }, e4._getItemIndex = function(t5) {
            return this._items = t5 && t5.parentNode ? [].slice.call(t5.parentNode.querySelectorAll(".carousel-item")) : [], this._items.indexOf(t5);
          }, e4._getItemByDirection = function(t5, e5) {
            var n3 = t5 === C3, i4 = t5 === S2, o3 = this._getItemIndex(e5), r4 = this._items.length - 1;
            if ((i4 && 0 === o3 || n3 && o3 === r4) && !this._config.wrap)
              return e5;
            var a4 = (o3 + (t5 === S2 ? -1 : 1)) % this._items.length;
            return -1 === a4 ? this._items[this._items.length - 1] : this._items[a4];
          }, e4._triggerSlideEvent = function(t5, e5) {
            var n3 = this._getItemIndex(t5), o3 = this._getItemIndex(this._element.querySelector(D2)), r4 = i3.default.Event("slide.bs.carousel", { relatedTarget: t5, direction: e5, from: o3, to: n3 });
            return i3.default(this._element).trigger(r4), r4;
          }, e4._setActiveIndicatorElement = function(t5) {
            if (this._indicatorsElement) {
              var e5 = [].slice.call(this._indicatorsElement.querySelectorAll(".active"));
              i3.default(e5).removeClass(T4);
              var n3 = this._indicatorsElement.children[this._getItemIndex(t5)];
              n3 && i3.default(n3).addClass(T4);
            }
          }, e4._updateInterval = function() {
            var t5 = this._activeElement || this._element.querySelector(D2);
            if (t5) {
              var e5 = parseInt(t5.getAttribute("data-interval"), 10);
              e5 ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, this._config.interval = e5) : this._config.interval = this._config.defaultInterval || this._config.interval;
            }
          }, e4._slide = function(t5, e5) {
            var n3, o3, r4, a4 = this, s4 = this._element.querySelector(D2), l4 = this._getItemIndex(s4), f4 = e5 || s4 && this._getItemByDirection(t5, s4), d3 = this._getItemIndex(f4), c4 = Boolean(this._interval);
            if (t5 === C3 ? (n3 = "carousel-item-left", o3 = "carousel-item-next", r4 = "left") : (n3 = "carousel-item-right", o3 = "carousel-item-prev", r4 = "right"), f4 && i3.default(f4).hasClass(T4))
              this._isSliding = false;
            else if (!this._triggerSlideEvent(f4, r4).isDefaultPrevented() && s4 && f4) {
              this._isSliding = true, c4 && this.pause(), this._setActiveIndicatorElement(f4), this._activeElement = f4;
              var h4 = i3.default.Event(N3, { relatedTarget: f4, direction: r4, from: l4, to: d3 });
              if (i3.default(this._element).hasClass("slide")) {
                i3.default(f4).addClass(o3), u3.reflow(f4), i3.default(s4).addClass(n3), i3.default(f4).addClass(n3);
                var p4 = u3.getTransitionDurationFromElement(s4);
                i3.default(s4).one(u3.TRANSITION_END, function() {
                  i3.default(f4).removeClass(n3 + " " + o3).addClass(T4), i3.default(s4).removeClass("active " + o3 + " " + n3), a4._isSliding = false, setTimeout(function() {
                    return i3.default(a4._element).trigger(h4);
                  }, 0);
                }).emulateTransitionEnd(p4);
              } else
                i3.default(s4).removeClass(T4), i3.default(f4).addClass(T4), this._isSliding = false, i3.default(this._element).trigger(h4);
              c4 && this.cycle();
            }
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this).data(E), o3 = a3({}, A3, i3.default(this).data());
              "object" == typeof e5 && (o3 = a3({}, o3, e5));
              var r4 = "string" == typeof e5 ? e5 : o3.slide;
              if (n3 || (n3 = new t4(this, o3), i3.default(this).data(E, n3)), "number" == typeof e5)
                n3.to(e5);
              else if ("string" == typeof r4) {
                if ("undefined" == typeof n3[r4])
                  throw new TypeError('No method named "' + r4 + '"');
                n3[r4]();
              } else
                o3.interval && o3.ride && (n3.pause(), n3.cycle());
            });
          }, t4._dataApiClickHandler = function(e5) {
            var n3 = u3.getSelectorFromElement(this);
            if (n3) {
              var o3 = i3.default(n3)[0];
              if (o3 && i3.default(o3).hasClass("carousel")) {
                var r4 = a3({}, i3.default(o3).data(), i3.default(this).data()), s4 = this.getAttribute("data-slide-to");
                s4 && (r4.interval = false), t4._jQueryInterface.call(i3.default(o3), r4), s4 && i3.default(o3).data(E).to(s4), e5.preventDefault();
              }
            }
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return A3;
          } }]), t4;
        }();
        i3.default(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", O2._dataApiClickHandler), i3.default(window).on("load.bs.carousel.data-api", function() {
          for (var t4 = [].slice.call(document.querySelectorAll('[data-ride="carousel"]')), e4 = 0, n3 = t4.length; e4 < n3; e4++) {
            var o3 = i3.default(t4[e4]);
            O2._jQueryInterface.call(o3, o3.data());
          }
        }), i3.default.fn[y3] = O2._jQueryInterface, i3.default.fn[y3].Constructor = O2, i3.default.fn[y3].noConflict = function() {
          return i3.default.fn[y3] = w4, O2._jQueryInterface;
        };
        var x4 = "collapse", j4 = "bs.collapse", L3 = i3.default.fn[x4], P2 = "show", F3 = "collapse", R = "collapsing", B3 = "collapsed", H3 = "width", M2 = '[data-toggle="collapse"]', q3 = { toggle: true, parent: "" }, Q2 = { toggle: "boolean", parent: "(string|element)" }, W2 = function() {
          function t4(t5, e5) {
            this._isTransitioning = false, this._element = t5, this._config = this._getConfig(e5), this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + t5.id + '"],[data-toggle="collapse"][data-target="#' + t5.id + '"]'));
            for (var n3 = [].slice.call(document.querySelectorAll(M2)), i4 = 0, o3 = n3.length; i4 < o3; i4++) {
              var r4 = n3[i4], a4 = u3.getSelectorFromElement(r4), s4 = [].slice.call(document.querySelectorAll(a4)).filter(function(e6) {
                return e6 === t5;
              });
              null !== a4 && s4.length > 0 && (this._selector = a4, this._triggerArray.push(r4));
            }
            this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
          }
          var e4 = t4.prototype;
          return e4.toggle = function() {
            i3.default(this._element).hasClass(P2) ? this.hide() : this.show();
          }, e4.show = function() {
            var e5, n3, o3 = this;
            if (!(this._isTransitioning || i3.default(this._element).hasClass(P2) || (this._parent && 0 === (e5 = [].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function(t5) {
              return "string" == typeof o3._config.parent ? t5.getAttribute("data-parent") === o3._config.parent : t5.classList.contains(F3);
            })).length && (e5 = null), e5 && (n3 = i3.default(e5).not(this._selector).data(j4)) && n3._isTransitioning))) {
              var r4 = i3.default.Event("show.bs.collapse");
              if (i3.default(this._element).trigger(r4), !r4.isDefaultPrevented()) {
                e5 && (t4._jQueryInterface.call(i3.default(e5).not(this._selector), "hide"), n3 || i3.default(e5).data(j4, null));
                var a4 = this._getDimension();
                i3.default(this._element).removeClass(F3).addClass(R), this._element.style[a4] = 0, this._triggerArray.length && i3.default(this._triggerArray).removeClass(B3).attr("aria-expanded", true), this.setTransitioning(true);
                var s4 = "scroll" + (a4[0].toUpperCase() + a4.slice(1)), l4 = u3.getTransitionDurationFromElement(this._element);
                i3.default(this._element).one(u3.TRANSITION_END, function() {
                  i3.default(o3._element).removeClass(R).addClass("collapse show"), o3._element.style[a4] = "", o3.setTransitioning(false), i3.default(o3._element).trigger("shown.bs.collapse");
                }).emulateTransitionEnd(l4), this._element.style[a4] = this._element[s4] + "px";
              }
            }
          }, e4.hide = function() {
            var t5 = this;
            if (!this._isTransitioning && i3.default(this._element).hasClass(P2)) {
              var e5 = i3.default.Event("hide.bs.collapse");
              if (i3.default(this._element).trigger(e5), !e5.isDefaultPrevented()) {
                var n3 = this._getDimension();
                this._element.style[n3] = this._element.getBoundingClientRect()[n3] + "px", u3.reflow(this._element), i3.default(this._element).addClass(R).removeClass("collapse show");
                var o3 = this._triggerArray.length;
                if (o3 > 0)
                  for (var r4 = 0; r4 < o3; r4++) {
                    var a4 = this._triggerArray[r4], s4 = u3.getSelectorFromElement(a4);
                    null !== s4 && (i3.default([].slice.call(document.querySelectorAll(s4))).hasClass(P2) || i3.default(a4).addClass(B3).attr("aria-expanded", false));
                  }
                this.setTransitioning(true), this._element.style[n3] = "";
                var l4 = u3.getTransitionDurationFromElement(this._element);
                i3.default(this._element).one(u3.TRANSITION_END, function() {
                  t5.setTransitioning(false), i3.default(t5._element).removeClass(R).addClass(F3).trigger("hidden.bs.collapse");
                }).emulateTransitionEnd(l4);
              }
            }
          }, e4.setTransitioning = function(t5) {
            this._isTransitioning = t5;
          }, e4.dispose = function() {
            i3.default.removeData(this._element, j4), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null;
          }, e4._getConfig = function(t5) {
            return (t5 = a3({}, q3, t5)).toggle = Boolean(t5.toggle), u3.typeCheckConfig(x4, t5, Q2), t5;
          }, e4._getDimension = function() {
            return i3.default(this._element).hasClass(H3) ? H3 : "height";
          }, e4._getParent = function() {
            var e5, n3 = this;
            u3.isElement(this._config.parent) ? (e5 = this._config.parent, "undefined" != typeof this._config.parent.jquery && (e5 = this._config.parent[0])) : e5 = document.querySelector(this._config.parent);
            var o3 = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]', r4 = [].slice.call(e5.querySelectorAll(o3));
            return i3.default(r4).each(function(e6, i4) {
              n3._addAriaAndCollapsedClass(t4._getTargetFromElement(i4), [i4]);
            }), e5;
          }, e4._addAriaAndCollapsedClass = function(t5, e5) {
            var n3 = i3.default(t5).hasClass(P2);
            e5.length && i3.default(e5).toggleClass(B3, !n3).attr("aria-expanded", n3);
          }, t4._getTargetFromElement = function(t5) {
            var e5 = u3.getSelectorFromElement(t5);
            return e5 ? document.querySelector(e5) : null;
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this), o3 = n3.data(j4), r4 = a3({}, q3, n3.data(), "object" == typeof e5 && e5 ? e5 : {});
              if (!o3 && r4.toggle && "string" == typeof e5 && /show|hide/.test(e5) && (r4.toggle = false), o3 || (o3 = new t4(this, r4), n3.data(j4, o3)), "string" == typeof e5) {
                if ("undefined" == typeof o3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                o3[e5]();
              }
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return q3;
          } }]), t4;
        }();
        i3.default(document).on("click.bs.collapse.data-api", M2, function(t4) {
          "A" === t4.currentTarget.tagName && t4.preventDefault();
          var e4 = i3.default(this), n3 = u3.getSelectorFromElement(this), o3 = [].slice.call(document.querySelectorAll(n3));
          i3.default(o3).each(function() {
            var t5 = i3.default(this), n4 = t5.data(j4) ? "toggle" : e4.data();
            W2._jQueryInterface.call(t5, n4);
          });
        }), i3.default.fn[x4] = W2._jQueryInterface, i3.default.fn[x4].Constructor = W2, i3.default.fn[x4].noConflict = function() {
          return i3.default.fn[x4] = L3, W2._jQueryInterface;
        };
        var U2 = "undefined" != typeof window && "undefined" != typeof document && "undefined" != typeof navigator, V3 = function() {
          for (var t4 = ["Edge", "Trident", "Firefox"], e4 = 0; e4 < t4.length; e4 += 1)
            if (U2 && navigator.userAgent.indexOf(t4[e4]) >= 0)
              return 1;
          return 0;
        }(), Y = U2 && window.Promise ? function(t4) {
          var e4 = false;
          return function() {
            e4 || (e4 = true, window.Promise.resolve().then(function() {
              e4 = false, t4();
            }));
          };
        } : function(t4) {
          var e4 = false;
          return function() {
            e4 || (e4 = true, setTimeout(function() {
              e4 = false, t4();
            }, V3));
          };
        };
        function z3(t4) {
          return t4 && "[object Function]" === {}.toString.call(t4);
        }
        function K2(t4, e4) {
          if (1 !== t4.nodeType)
            return [];
          var n3 = t4.ownerDocument.defaultView.getComputedStyle(t4, null);
          return e4 ? n3[e4] : n3;
        }
        function X2(t4) {
          return "HTML" === t4.nodeName ? t4 : t4.parentNode || t4.host;
        }
        function G2(t4) {
          if (!t4)
            return document.body;
          switch (t4.nodeName) {
            case "HTML":
            case "BODY":
              return t4.ownerDocument.body;
            case "#document":
              return t4.body;
          }
          var e4 = K2(t4), n3 = e4.overflow, i4 = e4.overflowX, o3 = e4.overflowY;
          return /(auto|scroll|overlay)/.test(n3 + o3 + i4) ? t4 : G2(X2(t4));
        }
        function $3(t4) {
          return t4 && t4.referenceNode ? t4.referenceNode : t4;
        }
        var J2 = U2 && !(!window.MSInputMethodContext || !document.documentMode), Z2 = U2 && /MSIE 10/.test(navigator.userAgent);
        function tt(t4) {
          return 11 === t4 ? J2 : 10 === t4 ? Z2 : J2 || Z2;
        }
        function et(t4) {
          if (!t4)
            return document.documentElement;
          for (var e4 = tt(10) ? document.body : null, n3 = t4.offsetParent || null; n3 === e4 && t4.nextElementSibling; )
            n3 = (t4 = t4.nextElementSibling).offsetParent;
          var i4 = n3 && n3.nodeName;
          return i4 && "BODY" !== i4 && "HTML" !== i4 ? -1 !== ["TH", "TD", "TABLE"].indexOf(n3.nodeName) && "static" === K2(n3, "position") ? et(n3) : n3 : t4 ? t4.ownerDocument.documentElement : document.documentElement;
        }
        function nt(t4) {
          return null !== t4.parentNode ? nt(t4.parentNode) : t4;
        }
        function it(t4, e4) {
          if (!(t4 && t4.nodeType && e4 && e4.nodeType))
            return document.documentElement;
          var n3 = t4.compareDocumentPosition(e4) & Node.DOCUMENT_POSITION_FOLLOWING, i4 = n3 ? t4 : e4, o3 = n3 ? e4 : t4, r4 = document.createRange();
          r4.setStart(i4, 0), r4.setEnd(o3, 0);
          var a4, s4, l4 = r4.commonAncestorContainer;
          if (t4 !== l4 && e4 !== l4 || i4.contains(o3))
            return "BODY" === (s4 = (a4 = l4).nodeName) || "HTML" !== s4 && et(a4.firstElementChild) !== a4 ? et(l4) : l4;
          var u4 = nt(t4);
          return u4.host ? it(u4.host, e4) : it(t4, nt(e4).host);
        }
        function ot(t4) {
          var e4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "top", n3 = "top" === e4 ? "scrollTop" : "scrollLeft", i4 = t4.nodeName;
          if ("BODY" === i4 || "HTML" === i4) {
            var o3 = t4.ownerDocument.documentElement, r4 = t4.ownerDocument.scrollingElement || o3;
            return r4[n3];
          }
          return t4[n3];
        }
        function rt(t4, e4) {
          var n3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], i4 = ot(e4, "top"), o3 = ot(e4, "left"), r4 = n3 ? -1 : 1;
          return t4.top += i4 * r4, t4.bottom += i4 * r4, t4.left += o3 * r4, t4.right += o3 * r4, t4;
        }
        function at(t4, e4) {
          var n3 = "x" === e4 ? "Left" : "Top", i4 = "Left" === n3 ? "Right" : "Bottom";
          return parseFloat(t4["border" + n3 + "Width"]) + parseFloat(t4["border" + i4 + "Width"]);
        }
        function st(t4, e4, n3, i4) {
          return Math.max(e4["offset" + t4], e4["scroll" + t4], n3["client" + t4], n3["offset" + t4], n3["scroll" + t4], tt(10) ? parseInt(n3["offset" + t4]) + parseInt(i4["margin" + ("Height" === t4 ? "Top" : "Left")]) + parseInt(i4["margin" + ("Height" === t4 ? "Bottom" : "Right")]) : 0);
        }
        function lt(t4) {
          var e4 = t4.body, n3 = t4.documentElement, i4 = tt(10) && getComputedStyle(n3);
          return { height: st("Height", e4, n3, i4), width: st("Width", e4, n3, i4) };
        }
        var ut = function(t4, e4) {
          if (!(t4 instanceof e4))
            throw new TypeError("Cannot call a class as a function");
        }, ft = function() {
          function t4(t5, e4) {
            for (var n3 = 0; n3 < e4.length; n3++) {
              var i4 = e4[n3];
              i4.enumerable = i4.enumerable || false, i4.configurable = true, "value" in i4 && (i4.writable = true), Object.defineProperty(t5, i4.key, i4);
            }
          }
          return function(e4, n3, i4) {
            return n3 && t4(e4.prototype, n3), i4 && t4(e4, i4), e4;
          };
        }(), dt2 = function(t4, e4, n3) {
          return e4 in t4 ? Object.defineProperty(t4, e4, { value: n3, enumerable: true, configurable: true, writable: true }) : t4[e4] = n3, t4;
        }, ct = Object.assign || function(t4) {
          for (var e4 = 1; e4 < arguments.length; e4++) {
            var n3 = arguments[e4];
            for (var i4 in n3)
              Object.prototype.hasOwnProperty.call(n3, i4) && (t4[i4] = n3[i4]);
          }
          return t4;
        };
        function ht(t4) {
          return ct({}, t4, { right: t4.left + t4.width, bottom: t4.top + t4.height });
        }
        function pt(t4) {
          var e4 = {};
          try {
            if (tt(10)) {
              e4 = t4.getBoundingClientRect();
              var n3 = ot(t4, "top"), i4 = ot(t4, "left");
              e4.top += n3, e4.left += i4, e4.bottom += n3, e4.right += i4;
            } else
              e4 = t4.getBoundingClientRect();
          } catch (t5) {
          }
          var o3 = { left: e4.left, top: e4.top, width: e4.right - e4.left, height: e4.bottom - e4.top }, r4 = "HTML" === t4.nodeName ? lt(t4.ownerDocument) : {}, a4 = r4.width || t4.clientWidth || o3.width, s4 = r4.height || t4.clientHeight || o3.height, l4 = t4.offsetWidth - a4, u4 = t4.offsetHeight - s4;
          if (l4 || u4) {
            var f4 = K2(t4);
            l4 -= at(f4, "x"), u4 -= at(f4, "y"), o3.width -= l4, o3.height -= u4;
          }
          return ht(o3);
        }
        function mt(t4, e4) {
          var n3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], i4 = tt(10), o3 = "HTML" === e4.nodeName, r4 = pt(t4), a4 = pt(e4), s4 = G2(t4), l4 = K2(e4), u4 = parseFloat(l4.borderTopWidth), f4 = parseFloat(l4.borderLeftWidth);
          n3 && o3 && (a4.top = Math.max(a4.top, 0), a4.left = Math.max(a4.left, 0));
          var d3 = ht({ top: r4.top - a4.top - u4, left: r4.left - a4.left - f4, width: r4.width, height: r4.height });
          if (d3.marginTop = 0, d3.marginLeft = 0, !i4 && o3) {
            var c4 = parseFloat(l4.marginTop), h4 = parseFloat(l4.marginLeft);
            d3.top -= u4 - c4, d3.bottom -= u4 - c4, d3.left -= f4 - h4, d3.right -= f4 - h4, d3.marginTop = c4, d3.marginLeft = h4;
          }
          return (i4 && !n3 ? e4.contains(s4) : e4 === s4 && "BODY" !== s4.nodeName) && (d3 = rt(d3, e4)), d3;
        }
        function gt(t4) {
          var e4 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = t4.ownerDocument.documentElement, i4 = mt(t4, n3), o3 = Math.max(n3.clientWidth, window.innerWidth || 0), r4 = Math.max(n3.clientHeight, window.innerHeight || 0), a4 = e4 ? 0 : ot(n3), s4 = e4 ? 0 : ot(n3, "left"), l4 = { top: a4 - i4.top + i4.marginTop, left: s4 - i4.left + i4.marginLeft, width: o3, height: r4 };
          return ht(l4);
        }
        function _t(t4) {
          var e4 = t4.nodeName;
          if ("BODY" === e4 || "HTML" === e4)
            return false;
          if ("fixed" === K2(t4, "position"))
            return true;
          var n3 = X2(t4);
          return !!n3 && _t(n3);
        }
        function vt(t4) {
          if (!t4 || !t4.parentElement || tt())
            return document.documentElement;
          for (var e4 = t4.parentElement; e4 && "none" === K2(e4, "transform"); )
            e4 = e4.parentElement;
          return e4 || document.documentElement;
        }
        function bt(t4, e4, n3, i4) {
          var o3 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], r4 = { top: 0, left: 0 }, a4 = o3 ? vt(t4) : it(t4, $3(e4));
          if ("viewport" === i4)
            r4 = gt(a4, o3);
          else {
            var s4 = void 0;
            "scrollParent" === i4 ? "BODY" === (s4 = G2(X2(e4))).nodeName && (s4 = t4.ownerDocument.documentElement) : s4 = "window" === i4 ? t4.ownerDocument.documentElement : i4;
            var l4 = mt(s4, a4, o3);
            if ("HTML" !== s4.nodeName || _t(a4))
              r4 = l4;
            else {
              var u4 = lt(t4.ownerDocument), f4 = u4.height, d3 = u4.width;
              r4.top += l4.top - l4.marginTop, r4.bottom = f4 + l4.top, r4.left += l4.left - l4.marginLeft, r4.right = d3 + l4.left;
            }
          }
          var c4 = "number" == typeof (n3 = n3 || 0);
          return r4.left += c4 ? n3 : n3.left || 0, r4.top += c4 ? n3 : n3.top || 0, r4.right -= c4 ? n3 : n3.right || 0, r4.bottom -= c4 ? n3 : n3.bottom || 0, r4;
        }
        function yt(t4) {
          return t4.width * t4.height;
        }
        function Et(t4, e4, n3, i4, o3) {
          var r4 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0;
          if (-1 === t4.indexOf("auto"))
            return t4;
          var a4 = bt(n3, i4, r4, o3), s4 = { top: { width: a4.width, height: e4.top - a4.top }, right: { width: a4.right - e4.right, height: a4.height }, bottom: { width: a4.width, height: a4.bottom - e4.bottom }, left: { width: e4.left - a4.left, height: a4.height } }, l4 = Object.keys(s4).map(function(t5) {
            return ct({ key: t5 }, s4[t5], { area: yt(s4[t5]) });
          }).sort(function(t5, e5) {
            return e5.area - t5.area;
          }), u4 = l4.filter(function(t5) {
            var e5 = t5.width, i5 = t5.height;
            return e5 >= n3.clientWidth && i5 >= n3.clientHeight;
          }), f4 = u4.length > 0 ? u4[0].key : l4[0].key, d3 = t4.split("-")[1];
          return f4 + (d3 ? "-" + d3 : "");
        }
        function wt(t4, e4, n3) {
          var i4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, o3 = i4 ? vt(e4) : it(e4, $3(n3));
          return mt(n3, o3, i4);
        }
        function Tt(t4) {
          var e4 = t4.ownerDocument.defaultView.getComputedStyle(t4), n3 = parseFloat(e4.marginTop || 0) + parseFloat(e4.marginBottom || 0), i4 = parseFloat(e4.marginLeft || 0) + parseFloat(e4.marginRight || 0);
          return { width: t4.offsetWidth + i4, height: t4.offsetHeight + n3 };
        }
        function Ct(t4) {
          var e4 = { left: "right", right: "left", bottom: "top", top: "bottom" };
          return t4.replace(/left|right|bottom|top/g, function(t5) {
            return e4[t5];
          });
        }
        function St(t4, e4, n3) {
          n3 = n3.split("-")[0];
          var i4 = Tt(t4), o3 = { width: i4.width, height: i4.height }, r4 = -1 !== ["right", "left"].indexOf(n3), a4 = r4 ? "top" : "left", s4 = r4 ? "left" : "top", l4 = r4 ? "height" : "width", u4 = r4 ? "width" : "height";
          return o3[a4] = e4[a4] + e4[l4] / 2 - i4[l4] / 2, o3[s4] = n3 === s4 ? e4[s4] - i4[u4] : e4[Ct(s4)], o3;
        }
        function Nt(t4, e4) {
          return Array.prototype.find ? t4.find(e4) : t4.filter(e4)[0];
        }
        function Dt(t4, e4, n3) {
          return (void 0 === n3 ? t4 : t4.slice(0, function(t5, e5, n4) {
            if (Array.prototype.findIndex)
              return t5.findIndex(function(t6) {
                return t6.name === n4;
              });
            var i4 = Nt(t5, function(t6) {
              return t6.name === n4;
            });
            return t5.indexOf(i4);
          }(t4, 0, n3))).forEach(function(t5) {
            t5.function && console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
            var n4 = t5.function || t5.fn;
            t5.enabled && z3(n4) && (e4.offsets.popper = ht(e4.offsets.popper), e4.offsets.reference = ht(e4.offsets.reference), e4 = n4(e4, t5));
          }), e4;
        }
        function At() {
          if (!this.state.isDestroyed) {
            var t4 = { instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: false, offsets: {} };
            t4.offsets.reference = wt(this.state, this.popper, this.reference, this.options.positionFixed), t4.placement = Et(this.options.placement, t4.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), t4.originalPlacement = t4.placement, t4.positionFixed = this.options.positionFixed, t4.offsets.popper = St(this.popper, t4.offsets.reference, t4.placement), t4.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute", t4 = Dt(this.modifiers, t4), this.state.isCreated ? this.options.onUpdate(t4) : (this.state.isCreated = true, this.options.onCreate(t4));
          }
        }
        function kt(t4, e4) {
          return t4.some(function(t5) {
            var n3 = t5.name;
            return t5.enabled && n3 === e4;
          });
        }
        function It(t4) {
          for (var e4 = [false, "ms", "Webkit", "Moz", "O"], n3 = t4.charAt(0).toUpperCase() + t4.slice(1), i4 = 0; i4 < e4.length; i4++) {
            var o3 = e4[i4], r4 = o3 ? "" + o3 + n3 : t4;
            if ("undefined" != typeof document.body.style[r4])
              return r4;
          }
          return null;
        }
        function Ot() {
          return this.state.isDestroyed = true, kt(this.modifiers, "applyStyle") && (this.popper.removeAttribute("x-placement"), this.popper.style.position = "", this.popper.style.top = "", this.popper.style.left = "", this.popper.style.right = "", this.popper.style.bottom = "", this.popper.style.willChange = "", this.popper.style[It("transform")] = ""), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;
        }
        function xt(t4) {
          var e4 = t4.ownerDocument;
          return e4 ? e4.defaultView : window;
        }
        function jt(t4, e4, n3, i4) {
          var o3 = "BODY" === t4.nodeName, r4 = o3 ? t4.ownerDocument.defaultView : t4;
          r4.addEventListener(e4, n3, { passive: true }), o3 || jt(G2(r4.parentNode), e4, n3, i4), i4.push(r4);
        }
        function Lt(t4, e4, n3, i4) {
          n3.updateBound = i4, xt(t4).addEventListener("resize", n3.updateBound, { passive: true });
          var o3 = G2(t4);
          return jt(o3, "scroll", n3.updateBound, n3.scrollParents), n3.scrollElement = o3, n3.eventsEnabled = true, n3;
        }
        function Pt() {
          this.state.eventsEnabled || (this.state = Lt(this.reference, this.options, this.state, this.scheduleUpdate));
        }
        function Ft() {
          var t4, e4;
          this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = (t4 = this.reference, e4 = this.state, xt(t4).removeEventListener("resize", e4.updateBound), e4.scrollParents.forEach(function(t5) {
            t5.removeEventListener("scroll", e4.updateBound);
          }), e4.updateBound = null, e4.scrollParents = [], e4.scrollElement = null, e4.eventsEnabled = false, e4));
        }
        function Rt(t4) {
          return "" !== t4 && !isNaN(parseFloat(t4)) && isFinite(t4);
        }
        function Bt(t4, e4) {
          Object.keys(e4).forEach(function(n3) {
            var i4 = "";
            -1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(n3) && Rt(e4[n3]) && (i4 = "px"), t4.style[n3] = e4[n3] + i4;
          });
        }
        var Ht = U2 && /Firefox/i.test(navigator.userAgent);
        function Mt(t4, e4, n3) {
          var i4 = Nt(t4, function(t5) {
            return t5.name === e4;
          }), o3 = !!i4 && t4.some(function(t5) {
            return t5.name === n3 && t5.enabled && t5.order < i4.order;
          });
          if (!o3) {
            var r4 = "`" + e4 + "`", a4 = "`" + n3 + "`";
            console.warn(a4 + " modifier is required by " + r4 + " modifier in order to work, be sure to include it before " + r4 + "!");
          }
          return o3;
        }
        var qt = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"], Qt = qt.slice(3);
        function Wt(t4) {
          var e4 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = Qt.indexOf(t4), i4 = Qt.slice(n3 + 1).concat(Qt.slice(0, n3));
          return e4 ? i4.reverse() : i4;
        }
        var Ut = { placement: "bottom", positionFixed: false, eventsEnabled: true, removeOnDestroy: false, onCreate: function() {
        }, onUpdate: function() {
        }, modifiers: { shift: { order: 100, enabled: true, fn: function(t4) {
          var e4 = t4.placement, n3 = e4.split("-")[0], i4 = e4.split("-")[1];
          if (i4) {
            var o3 = t4.offsets, r4 = o3.reference, a4 = o3.popper, s4 = -1 !== ["bottom", "top"].indexOf(n3), l4 = s4 ? "left" : "top", u4 = s4 ? "width" : "height", f4 = { start: dt2({}, l4, r4[l4]), end: dt2({}, l4, r4[l4] + r4[u4] - a4[u4]) };
            t4.offsets.popper = ct({}, a4, f4[i4]);
          }
          return t4;
        } }, offset: { order: 200, enabled: true, fn: function(t4, e4) {
          var n3, i4 = e4.offset, o3 = t4.placement, r4 = t4.offsets, a4 = r4.popper, s4 = r4.reference, l4 = o3.split("-")[0];
          return n3 = Rt(+i4) ? [+i4, 0] : function(t5, e5, n4, i5) {
            var o4 = [0, 0], r5 = -1 !== ["right", "left"].indexOf(i5), a5 = t5.split(/(\+|\-)/).map(function(t6) {
              return t6.trim();
            }), s5 = a5.indexOf(Nt(a5, function(t6) {
              return -1 !== t6.search(/,|\s/);
            }));
            a5[s5] && -1 === a5[s5].indexOf(",") && console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
            var l5 = /\s*,\s*|\s+/, u4 = -1 !== s5 ? [a5.slice(0, s5).concat([a5[s5].split(l5)[0]]), [a5[s5].split(l5)[1]].concat(a5.slice(s5 + 1))] : [a5];
            return u4 = u4.map(function(t6, i6) {
              var o5 = (1 === i6 ? !r5 : r5) ? "height" : "width", a6 = false;
              return t6.reduce(function(t7, e6) {
                return "" === t7[t7.length - 1] && -1 !== ["+", "-"].indexOf(e6) ? (t7[t7.length - 1] = e6, a6 = true, t7) : a6 ? (t7[t7.length - 1] += e6, a6 = false, t7) : t7.concat(e6);
              }, []).map(function(t7) {
                return function(t8, e6, n5, i7) {
                  var o6 = t8.match(/((?:\-|\+)?\d*\.?\d*)(.*)/), r6 = +o6[1], a7 = o6[2];
                  return r6 ? 0 === a7.indexOf("%") ? ht("%p" === a7 ? n5 : i7)[e6] / 100 * r6 : "vh" === a7 || "vw" === a7 ? ("vh" === a7 ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0) : Math.max(document.documentElement.clientWidth, window.innerWidth || 0)) / 100 * r6 : r6 : t8;
                }(t7, o5, e5, n4);
              });
            }), u4.forEach(function(t6, e6) {
              t6.forEach(function(n5, i6) {
                Rt(n5) && (o4[e6] += n5 * ("-" === t6[i6 - 1] ? -1 : 1));
              });
            }), o4;
          }(i4, a4, s4, l4), "left" === l4 ? (a4.top += n3[0], a4.left -= n3[1]) : "right" === l4 ? (a4.top += n3[0], a4.left += n3[1]) : "top" === l4 ? (a4.left += n3[0], a4.top -= n3[1]) : "bottom" === l4 && (a4.left += n3[0], a4.top += n3[1]), t4.popper = a4, t4;
        }, offset: 0 }, preventOverflow: { order: 300, enabled: true, fn: function(t4, e4) {
          var n3 = e4.boundariesElement || et(t4.instance.popper);
          t4.instance.reference === n3 && (n3 = et(n3));
          var i4 = It("transform"), o3 = t4.instance.popper.style, r4 = o3.top, a4 = o3.left, s4 = o3[i4];
          o3.top = "", o3.left = "", o3[i4] = "";
          var l4 = bt(t4.instance.popper, t4.instance.reference, e4.padding, n3, t4.positionFixed);
          o3.top = r4, o3.left = a4, o3[i4] = s4, e4.boundaries = l4;
          var u4 = e4.priority, f4 = t4.offsets.popper, d3 = { primary: function(t5) {
            var n4 = f4[t5];
            return f4[t5] < l4[t5] && !e4.escapeWithReference && (n4 = Math.max(f4[t5], l4[t5])), dt2({}, t5, n4);
          }, secondary: function(t5) {
            var n4 = "right" === t5 ? "left" : "top", i5 = f4[n4];
            return f4[t5] > l4[t5] && !e4.escapeWithReference && (i5 = Math.min(f4[n4], l4[t5] - ("right" === t5 ? f4.width : f4.height))), dt2({}, n4, i5);
          } };
          return u4.forEach(function(t5) {
            var e5 = -1 !== ["left", "top"].indexOf(t5) ? "primary" : "secondary";
            f4 = ct({}, f4, d3[e5](t5));
          }), t4.offsets.popper = f4, t4;
        }, priority: ["left", "right", "top", "bottom"], padding: 5, boundariesElement: "scrollParent" }, keepTogether: { order: 400, enabled: true, fn: function(t4) {
          var e4 = t4.offsets, n3 = e4.popper, i4 = e4.reference, o3 = t4.placement.split("-")[0], r4 = Math.floor, a4 = -1 !== ["top", "bottom"].indexOf(o3), s4 = a4 ? "right" : "bottom", l4 = a4 ? "left" : "top", u4 = a4 ? "width" : "height";
          return n3[s4] < r4(i4[l4]) && (t4.offsets.popper[l4] = r4(i4[l4]) - n3[u4]), n3[l4] > r4(i4[s4]) && (t4.offsets.popper[l4] = r4(i4[s4])), t4;
        } }, arrow: { order: 500, enabled: true, fn: function(t4, e4) {
          var n3;
          if (!Mt(t4.instance.modifiers, "arrow", "keepTogether"))
            return t4;
          var i4 = e4.element;
          if ("string" == typeof i4) {
            if (!(i4 = t4.instance.popper.querySelector(i4)))
              return t4;
          } else if (!t4.instance.popper.contains(i4))
            return console.warn("WARNING: `arrow.element` must be child of its popper element!"), t4;
          var o3 = t4.placement.split("-")[0], r4 = t4.offsets, a4 = r4.popper, s4 = r4.reference, l4 = -1 !== ["left", "right"].indexOf(o3), u4 = l4 ? "height" : "width", f4 = l4 ? "Top" : "Left", d3 = f4.toLowerCase(), c4 = l4 ? "left" : "top", h4 = l4 ? "bottom" : "right", p4 = Tt(i4)[u4];
          s4[h4] - p4 < a4[d3] && (t4.offsets.popper[d3] -= a4[d3] - (s4[h4] - p4)), s4[d3] + p4 > a4[h4] && (t4.offsets.popper[d3] += s4[d3] + p4 - a4[h4]), t4.offsets.popper = ht(t4.offsets.popper);
          var m4 = s4[d3] + s4[u4] / 2 - p4 / 2, g5 = K2(t4.instance.popper), _4 = parseFloat(g5["margin" + f4]), v4 = parseFloat(g5["border" + f4 + "Width"]), b4 = m4 - t4.offsets.popper[d3] - _4 - v4;
          return b4 = Math.max(Math.min(a4[u4] - p4, b4), 0), t4.arrowElement = i4, t4.offsets.arrow = (dt2(n3 = {}, d3, Math.round(b4)), dt2(n3, c4, ""), n3), t4;
        }, element: "[x-arrow]" }, flip: { order: 600, enabled: true, fn: function(t4, e4) {
          if (kt(t4.instance.modifiers, "inner"))
            return t4;
          if (t4.flipped && t4.placement === t4.originalPlacement)
            return t4;
          var n3 = bt(t4.instance.popper, t4.instance.reference, e4.padding, e4.boundariesElement, t4.positionFixed), i4 = t4.placement.split("-")[0], o3 = Ct(i4), r4 = t4.placement.split("-")[1] || "", a4 = [];
          switch (e4.behavior) {
            case "flip":
              a4 = [i4, o3];
              break;
            case "clockwise":
              a4 = Wt(i4);
              break;
            case "counterclockwise":
              a4 = Wt(i4, true);
              break;
            default:
              a4 = e4.behavior;
          }
          return a4.forEach(function(s4, l4) {
            if (i4 !== s4 || a4.length === l4 + 1)
              return t4;
            i4 = t4.placement.split("-")[0], o3 = Ct(i4);
            var u4 = t4.offsets.popper, f4 = t4.offsets.reference, d3 = Math.floor, c4 = "left" === i4 && d3(u4.right) > d3(f4.left) || "right" === i4 && d3(u4.left) < d3(f4.right) || "top" === i4 && d3(u4.bottom) > d3(f4.top) || "bottom" === i4 && d3(u4.top) < d3(f4.bottom), h4 = d3(u4.left) < d3(n3.left), p4 = d3(u4.right) > d3(n3.right), m4 = d3(u4.top) < d3(n3.top), g5 = d3(u4.bottom) > d3(n3.bottom), _4 = "left" === i4 && h4 || "right" === i4 && p4 || "top" === i4 && m4 || "bottom" === i4 && g5, v4 = -1 !== ["top", "bottom"].indexOf(i4), b4 = !!e4.flipVariations && (v4 && "start" === r4 && h4 || v4 && "end" === r4 && p4 || !v4 && "start" === r4 && m4 || !v4 && "end" === r4 && g5), y4 = !!e4.flipVariationsByContent && (v4 && "start" === r4 && p4 || v4 && "end" === r4 && h4 || !v4 && "start" === r4 && g5 || !v4 && "end" === r4 && m4), E2 = b4 || y4;
            (c4 || _4 || E2) && (t4.flipped = true, (c4 || _4) && (i4 = a4[l4 + 1]), E2 && (r4 = function(t5) {
              return "end" === t5 ? "start" : "start" === t5 ? "end" : t5;
            }(r4)), t4.placement = i4 + (r4 ? "-" + r4 : ""), t4.offsets.popper = ct({}, t4.offsets.popper, St(t4.instance.popper, t4.offsets.reference, t4.placement)), t4 = Dt(t4.instance.modifiers, t4, "flip"));
          }), t4;
        }, behavior: "flip", padding: 5, boundariesElement: "viewport", flipVariations: false, flipVariationsByContent: false }, inner: { order: 700, enabled: false, fn: function(t4) {
          var e4 = t4.placement, n3 = e4.split("-")[0], i4 = t4.offsets, o3 = i4.popper, r4 = i4.reference, a4 = -1 !== ["left", "right"].indexOf(n3), s4 = -1 === ["top", "left"].indexOf(n3);
          return o3[a4 ? "left" : "top"] = r4[n3] - (s4 ? o3[a4 ? "width" : "height"] : 0), t4.placement = Ct(e4), t4.offsets.popper = ht(o3), t4;
        } }, hide: { order: 800, enabled: true, fn: function(t4) {
          if (!Mt(t4.instance.modifiers, "hide", "preventOverflow"))
            return t4;
          var e4 = t4.offsets.reference, n3 = Nt(t4.instance.modifiers, function(t5) {
            return "preventOverflow" === t5.name;
          }).boundaries;
          if (e4.bottom < n3.top || e4.left > n3.right || e4.top > n3.bottom || e4.right < n3.left) {
            if (true === t4.hide)
              return t4;
            t4.hide = true, t4.attributes["x-out-of-boundaries"] = "";
          } else {
            if (false === t4.hide)
              return t4;
            t4.hide = false, t4.attributes["x-out-of-boundaries"] = false;
          }
          return t4;
        } }, computeStyle: { order: 850, enabled: true, fn: function(t4, e4) {
          var n3 = e4.x, i4 = e4.y, o3 = t4.offsets.popper, r4 = Nt(t4.instance.modifiers, function(t5) {
            return "applyStyle" === t5.name;
          }).gpuAcceleration;
          void 0 !== r4 && console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
          var a4, s4, l4 = void 0 !== r4 ? r4 : e4.gpuAcceleration, u4 = et(t4.instance.popper), f4 = pt(u4), d3 = { position: o3.position }, c4 = function(t5, e5) {
            var n4 = t5.offsets, i5 = n4.popper, o4 = n4.reference, r5 = Math.round, a5 = Math.floor, s5 = function(t6) {
              return t6;
            }, l5 = r5(o4.width), u5 = r5(i5.width), f5 = -1 !== ["left", "right"].indexOf(t5.placement), d4 = -1 !== t5.placement.indexOf("-"), c5 = e5 ? f5 || d4 || l5 % 2 == u5 % 2 ? r5 : a5 : s5, h5 = e5 ? r5 : s5;
            return { left: c5(l5 % 2 == 1 && u5 % 2 == 1 && !d4 && e5 ? i5.left - 1 : i5.left), top: h5(i5.top), bottom: h5(i5.bottom), right: c5(i5.right) };
          }(t4, window.devicePixelRatio < 2 || !Ht), h4 = "bottom" === n3 ? "top" : "bottom", p4 = "right" === i4 ? "left" : "right", m4 = It("transform");
          if (s4 = "bottom" === h4 ? "HTML" === u4.nodeName ? -u4.clientHeight + c4.bottom : -f4.height + c4.bottom : c4.top, a4 = "right" === p4 ? "HTML" === u4.nodeName ? -u4.clientWidth + c4.right : -f4.width + c4.right : c4.left, l4 && m4)
            d3[m4] = "translate3d(" + a4 + "px, " + s4 + "px, 0)", d3[h4] = 0, d3[p4] = 0, d3.willChange = "transform";
          else {
            var g5 = "bottom" === h4 ? -1 : 1, _4 = "right" === p4 ? -1 : 1;
            d3[h4] = s4 * g5, d3[p4] = a4 * _4, d3.willChange = h4 + ", " + p4;
          }
          var v4 = { "x-placement": t4.placement };
          return t4.attributes = ct({}, v4, t4.attributes), t4.styles = ct({}, d3, t4.styles), t4.arrowStyles = ct({}, t4.offsets.arrow, t4.arrowStyles), t4;
        }, gpuAcceleration: true, x: "bottom", y: "right" }, applyStyle: { order: 900, enabled: true, fn: function(t4) {
          var e4, n3;
          return Bt(t4.instance.popper, t4.styles), e4 = t4.instance.popper, n3 = t4.attributes, Object.keys(n3).forEach(function(t5) {
            false !== n3[t5] ? e4.setAttribute(t5, n3[t5]) : e4.removeAttribute(t5);
          }), t4.arrowElement && Object.keys(t4.arrowStyles).length && Bt(t4.arrowElement, t4.arrowStyles), t4;
        }, onLoad: function(t4, e4, n3, i4, o3) {
          var r4 = wt(o3, e4, t4, n3.positionFixed), a4 = Et(n3.placement, r4, e4, t4, n3.modifiers.flip.boundariesElement, n3.modifiers.flip.padding);
          return e4.setAttribute("x-placement", a4), Bt(e4, { position: n3.positionFixed ? "fixed" : "absolute" }), n3;
        }, gpuAcceleration: void 0 } } }, Vt = function() {
          function t4(e4, n3) {
            var i4 = this, o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            ut(this, t4), this.scheduleUpdate = function() {
              return requestAnimationFrame(i4.update);
            }, this.update = Y(this.update.bind(this)), this.options = ct({}, t4.Defaults, o3), this.state = { isDestroyed: false, isCreated: false, scrollParents: [] }, this.reference = e4 && e4.jquery ? e4[0] : e4, this.popper = n3 && n3.jquery ? n3[0] : n3, this.options.modifiers = {}, Object.keys(ct({}, t4.Defaults.modifiers, o3.modifiers)).forEach(function(e5) {
              i4.options.modifiers[e5] = ct({}, t4.Defaults.modifiers[e5] || {}, o3.modifiers ? o3.modifiers[e5] : {});
            }), this.modifiers = Object.keys(this.options.modifiers).map(function(t5) {
              return ct({ name: t5 }, i4.options.modifiers[t5]);
            }).sort(function(t5, e5) {
              return t5.order - e5.order;
            }), this.modifiers.forEach(function(t5) {
              t5.enabled && z3(t5.onLoad) && t5.onLoad(i4.reference, i4.popper, i4.options, t5, i4.state);
            }), this.update();
            var r4 = this.options.eventsEnabled;
            r4 && this.enableEventListeners(), this.state.eventsEnabled = r4;
          }
          return ft(t4, [{ key: "update", value: function() {
            return At.call(this);
          } }, { key: "destroy", value: function() {
            return Ot.call(this);
          } }, { key: "enableEventListeners", value: function() {
            return Pt.call(this);
          } }, { key: "disableEventListeners", value: function() {
            return Ft.call(this);
          } }]), t4;
        }();
        Vt.Utils = ("undefined" != typeof window ? window : global).PopperUtils, Vt.placements = qt, Vt.Defaults = Ut;
        var Yt = Vt, zt = "dropdown", Kt = "bs.dropdown", Xt = i3.default.fn[zt], Gt = new RegExp("38|40|27"), $t = "disabled", Jt = "show", Zt = "dropdown-menu-right", te = "hide.bs.dropdown", ee = "hidden.bs.dropdown", ne = "click.bs.dropdown.data-api", ie = "keydown.bs.dropdown.data-api", oe = '[data-toggle="dropdown"]', re = ".dropdown-menu", ae = { offset: 0, flip: true, boundary: "scrollParent", reference: "toggle", display: "dynamic", popperConfig: null }, se = { offset: "(number|string|function)", flip: "boolean", boundary: "(string|element)", reference: "(string|element)", display: "string", popperConfig: "(null|object)" }, le = function() {
          function t4(t5, e5) {
            this._element = t5, this._popper = null, this._config = this._getConfig(e5), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
          }
          var e4 = t4.prototype;
          return e4.toggle = function() {
            if (!this._element.disabled && !i3.default(this._element).hasClass($t)) {
              var e5 = i3.default(this._menu).hasClass(Jt);
              t4._clearMenus(), e5 || this.show(true);
            }
          }, e4.show = function(e5) {
            if (void 0 === e5 && (e5 = false), !(this._element.disabled || i3.default(this._element).hasClass($t) || i3.default(this._menu).hasClass(Jt))) {
              var n3 = { relatedTarget: this._element }, o3 = i3.default.Event("show.bs.dropdown", n3), r4 = t4._getParentFromElement(this._element);
              if (i3.default(r4).trigger(o3), !o3.isDefaultPrevented()) {
                if (!this._inNavbar && e5) {
                  if ("undefined" == typeof Yt)
                    throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");
                  var a4 = this._element;
                  "parent" === this._config.reference ? a4 = r4 : u3.isElement(this._config.reference) && (a4 = this._config.reference, "undefined" != typeof this._config.reference.jquery && (a4 = this._config.reference[0])), "scrollParent" !== this._config.boundary && i3.default(r4).addClass("position-static"), this._popper = new Yt(a4, this._menu, this._getPopperConfig());
                }
                "ontouchstart" in document.documentElement && 0 === i3.default(r4).closest(".navbar-nav").length && i3.default(document.body).children().on("mouseover", null, i3.default.noop), this._element.focus(), this._element.setAttribute("aria-expanded", true), i3.default(this._menu).toggleClass(Jt), i3.default(r4).toggleClass(Jt).trigger(i3.default.Event("shown.bs.dropdown", n3));
              }
            }
          }, e4.hide = function() {
            if (!this._element.disabled && !i3.default(this._element).hasClass($t) && i3.default(this._menu).hasClass(Jt)) {
              var e5 = { relatedTarget: this._element }, n3 = i3.default.Event(te, e5), o3 = t4._getParentFromElement(this._element);
              i3.default(o3).trigger(n3), n3.isDefaultPrevented() || (this._popper && this._popper.destroy(), i3.default(this._menu).toggleClass(Jt), i3.default(o3).toggleClass(Jt).trigger(i3.default.Event(ee, e5)));
            }
          }, e4.dispose = function() {
            i3.default.removeData(this._element, Kt), i3.default(this._element).off(".bs.dropdown"), this._element = null, this._menu = null, null !== this._popper && (this._popper.destroy(), this._popper = null);
          }, e4.update = function() {
            this._inNavbar = this._detectNavbar(), null !== this._popper && this._popper.scheduleUpdate();
          }, e4._addEventListeners = function() {
            var t5 = this;
            i3.default(this._element).on("click.bs.dropdown", function(e5) {
              e5.preventDefault(), e5.stopPropagation(), t5.toggle();
            });
          }, e4._getConfig = function(t5) {
            return t5 = a3({}, this.constructor.Default, i3.default(this._element).data(), t5), u3.typeCheckConfig(zt, t5, this.constructor.DefaultType), t5;
          }, e4._getMenuElement = function() {
            if (!this._menu) {
              var e5 = t4._getParentFromElement(this._element);
              e5 && (this._menu = e5.querySelector(re));
            }
            return this._menu;
          }, e4._getPlacement = function() {
            var t5 = i3.default(this._element.parentNode), e5 = "bottom-start";
            return t5.hasClass("dropup") ? e5 = i3.default(this._menu).hasClass(Zt) ? "top-end" : "top-start" : t5.hasClass("dropright") ? e5 = "right-start" : t5.hasClass("dropleft") ? e5 = "left-start" : i3.default(this._menu).hasClass(Zt) && (e5 = "bottom-end"), e5;
          }, e4._detectNavbar = function() {
            return i3.default(this._element).closest(".navbar").length > 0;
          }, e4._getOffset = function() {
            var t5 = this, e5 = {};
            return "function" == typeof this._config.offset ? e5.fn = function(e6) {
              return e6.offsets = a3({}, e6.offsets, t5._config.offset(e6.offsets, t5._element)), e6;
            } : e5.offset = this._config.offset, e5;
          }, e4._getPopperConfig = function() {
            var t5 = { placement: this._getPlacement(), modifiers: { offset: this._getOffset(), flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } };
            return "static" === this._config.display && (t5.modifiers.applyStyle = { enabled: false }), a3({}, t5, this._config.popperConfig);
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this).data(Kt);
              if (n3 || (n3 = new t4(this, "object" == typeof e5 ? e5 : null), i3.default(this).data(Kt, n3)), "string" == typeof e5) {
                if ("undefined" == typeof n3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                n3[e5]();
              }
            });
          }, t4._clearMenus = function(e5) {
            if (!e5 || 3 !== e5.which && ("keyup" !== e5.type || 9 === e5.which))
              for (var n3 = [].slice.call(document.querySelectorAll(oe)), o3 = 0, r4 = n3.length; o3 < r4; o3++) {
                var a4 = t4._getParentFromElement(n3[o3]), s4 = i3.default(n3[o3]).data(Kt), l4 = { relatedTarget: n3[o3] };
                if (e5 && "click" === e5.type && (l4.clickEvent = e5), s4) {
                  var u4 = s4._menu;
                  if (i3.default(a4).hasClass(Jt) && !(e5 && ("click" === e5.type && /input|textarea/i.test(e5.target.tagName) || "keyup" === e5.type && 9 === e5.which) && i3.default.contains(a4, e5.target))) {
                    var f4 = i3.default.Event(te, l4);
                    i3.default(a4).trigger(f4), f4.isDefaultPrevented() || ("ontouchstart" in document.documentElement && i3.default(document.body).children().off("mouseover", null, i3.default.noop), n3[o3].setAttribute("aria-expanded", "false"), s4._popper && s4._popper.destroy(), i3.default(u4).removeClass(Jt), i3.default(a4).removeClass(Jt).trigger(i3.default.Event(ee, l4)));
                  }
                }
              }
          }, t4._getParentFromElement = function(t5) {
            var e5, n3 = u3.getSelectorFromElement(t5);
            return n3 && (e5 = document.querySelector(n3)), e5 || t5.parentNode;
          }, t4._dataApiKeydownHandler = function(e5) {
            if (!(/input|textarea/i.test(e5.target.tagName) ? 32 === e5.which || 27 !== e5.which && (40 !== e5.which && 38 !== e5.which || i3.default(e5.target).closest(re).length) : !Gt.test(e5.which)) && !this.disabled && !i3.default(this).hasClass($t)) {
              var n3 = t4._getParentFromElement(this), o3 = i3.default(n3).hasClass(Jt);
              if (o3 || 27 !== e5.which) {
                if (e5.preventDefault(), e5.stopPropagation(), !o3 || 27 === e5.which || 32 === e5.which)
                  return 27 === e5.which && i3.default(n3.querySelector(oe)).trigger("focus"), void i3.default(this).trigger("click");
                var r4 = [].slice.call(n3.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter(function(t5) {
                  return i3.default(t5).is(":visible");
                });
                if (0 !== r4.length) {
                  var a4 = r4.indexOf(e5.target);
                  38 === e5.which && a4 > 0 && a4--, 40 === e5.which && a4 < r4.length - 1 && a4++, a4 < 0 && (a4 = 0), r4[a4].focus();
                }
              }
            }
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return ae;
          } }, { key: "DefaultType", get: function() {
            return se;
          } }]), t4;
        }();
        i3.default(document).on(ie, oe, le._dataApiKeydownHandler).on(ie, re, le._dataApiKeydownHandler).on(ne + " keyup.bs.dropdown.data-api", le._clearMenus).on(ne, oe, function(t4) {
          t4.preventDefault(), t4.stopPropagation(), le._jQueryInterface.call(i3.default(this), "toggle");
        }).on(ne, ".dropdown form", function(t4) {
          t4.stopPropagation();
        }), i3.default.fn[zt] = le._jQueryInterface, i3.default.fn[zt].Constructor = le, i3.default.fn[zt].noConflict = function() {
          return i3.default.fn[zt] = Xt, le._jQueryInterface;
        };
        var ue = "bs.modal", fe = i3.default.fn.modal, de = "modal-open", ce = "fade", he = "show", pe = "modal-static", me = "hidden.bs.modal", ge = "show.bs.modal", _e = "focusin.bs.modal", ve = "resize.bs.modal", be = "click.dismiss.bs.modal", ye = "keydown.dismiss.bs.modal", Ee = "mousedown.dismiss.bs.modal", we = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", Te = { backdrop: true, keyboard: true, focus: true, show: true }, Ce = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean", show: "boolean" }, Se = function() {
          function t4(t5, e5) {
            this._config = this._getConfig(e5), this._element = t5, this._dialog = t5.querySelector(".modal-dialog"), this._backdrop = null, this._isShown = false, this._isBodyOverflowing = false, this._ignoreBackdropClick = false, this._isTransitioning = false, this._scrollbarWidth = 0;
          }
          var e4 = t4.prototype;
          return e4.toggle = function(t5) {
            return this._isShown ? this.hide() : this.show(t5);
          }, e4.show = function(t5) {
            var e5 = this;
            if (!this._isShown && !this._isTransitioning) {
              var n3 = i3.default.Event(ge, { relatedTarget: t5 });
              i3.default(this._element).trigger(n3), n3.isDefaultPrevented() || (this._isShown = true, i3.default(this._element).hasClass(ce) && (this._isTransitioning = true), this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), i3.default(this._element).on(be, '[data-dismiss="modal"]', function(t6) {
                return e5.hide(t6);
              }), i3.default(this._dialog).on(Ee, function() {
                i3.default(e5._element).one("mouseup.dismiss.bs.modal", function(t6) {
                  i3.default(t6.target).is(e5._element) && (e5._ignoreBackdropClick = true);
                });
              }), this._showBackdrop(function() {
                return e5._showElement(t5);
              }));
            }
          }, e4.hide = function(t5) {
            var e5 = this;
            if (t5 && t5.preventDefault(), this._isShown && !this._isTransitioning) {
              var n3 = i3.default.Event("hide.bs.modal");
              if (i3.default(this._element).trigger(n3), this._isShown && !n3.isDefaultPrevented()) {
                this._isShown = false;
                var o3 = i3.default(this._element).hasClass(ce);
                if (o3 && (this._isTransitioning = true), this._setEscapeEvent(), this._setResizeEvent(), i3.default(document).off(_e), i3.default(this._element).removeClass(he), i3.default(this._element).off(be), i3.default(this._dialog).off(Ee), o3) {
                  var r4 = u3.getTransitionDurationFromElement(this._element);
                  i3.default(this._element).one(u3.TRANSITION_END, function(t6) {
                    return e5._hideModal(t6);
                  }).emulateTransitionEnd(r4);
                } else
                  this._hideModal();
              }
            }
          }, e4.dispose = function() {
            [window, this._element, this._dialog].forEach(function(t5) {
              return i3.default(t5).off(".bs.modal");
            }), i3.default(document).off(_e), i3.default.removeData(this._element, ue), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null;
          }, e4.handleUpdate = function() {
            this._adjustDialog();
          }, e4._getConfig = function(t5) {
            return t5 = a3({}, Te, t5), u3.typeCheckConfig("modal", t5, Ce), t5;
          }, e4._triggerBackdropTransition = function() {
            var t5 = this, e5 = i3.default.Event("hidePrevented.bs.modal");
            if (i3.default(this._element).trigger(e5), !e5.isDefaultPrevented()) {
              var n3 = this._element.scrollHeight > document.documentElement.clientHeight;
              n3 || (this._element.style.overflowY = "hidden"), this._element.classList.add(pe);
              var o3 = u3.getTransitionDurationFromElement(this._dialog);
              i3.default(this._element).off(u3.TRANSITION_END), i3.default(this._element).one(u3.TRANSITION_END, function() {
                t5._element.classList.remove(pe), n3 || i3.default(t5._element).one(u3.TRANSITION_END, function() {
                  t5._element.style.overflowY = "";
                }).emulateTransitionEnd(t5._element, o3);
              }).emulateTransitionEnd(o3), this._element.focus();
            }
          }, e4._showElement = function(t5) {
            var e5 = this, n3 = i3.default(this._element).hasClass(ce), o3 = this._dialog ? this._dialog.querySelector(".modal-body") : null;
            this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), i3.default(this._dialog).hasClass("modal-dialog-scrollable") && o3 ? o3.scrollTop = 0 : this._element.scrollTop = 0, n3 && u3.reflow(this._element), i3.default(this._element).addClass(he), this._config.focus && this._enforceFocus();
            var r4 = i3.default.Event("shown.bs.modal", { relatedTarget: t5 }), a4 = function() {
              e5._config.focus && e5._element.focus(), e5._isTransitioning = false, i3.default(e5._element).trigger(r4);
            };
            if (n3) {
              var s4 = u3.getTransitionDurationFromElement(this._dialog);
              i3.default(this._dialog).one(u3.TRANSITION_END, a4).emulateTransitionEnd(s4);
            } else
              a4();
          }, e4._enforceFocus = function() {
            var t5 = this;
            i3.default(document).off(_e).on(_e, function(e5) {
              document !== e5.target && t5._element !== e5.target && 0 === i3.default(t5._element).has(e5.target).length && t5._element.focus();
            });
          }, e4._setEscapeEvent = function() {
            var t5 = this;
            this._isShown ? i3.default(this._element).on(ye, function(e5) {
              t5._config.keyboard && 27 === e5.which ? (e5.preventDefault(), t5.hide()) : t5._config.keyboard || 27 !== e5.which || t5._triggerBackdropTransition();
            }) : this._isShown || i3.default(this._element).off(ye);
          }, e4._setResizeEvent = function() {
            var t5 = this;
            this._isShown ? i3.default(window).on(ve, function(e5) {
              return t5.handleUpdate(e5);
            }) : i3.default(window).off(ve);
          }, e4._hideModal = function() {
            var t5 = this;
            this._element.style.display = "none", this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = false, this._showBackdrop(function() {
              i3.default(document.body).removeClass(de), t5._resetAdjustments(), t5._resetScrollbar(), i3.default(t5._element).trigger(me);
            });
          }, e4._removeBackdrop = function() {
            this._backdrop && (i3.default(this._backdrop).remove(), this._backdrop = null);
          }, e4._showBackdrop = function(t5) {
            var e5 = this, n3 = i3.default(this._element).hasClass(ce) ? ce : "";
            if (this._isShown && this._config.backdrop) {
              if (this._backdrop = document.createElement("div"), this._backdrop.className = "modal-backdrop", n3 && this._backdrop.classList.add(n3), i3.default(this._backdrop).appendTo(document.body), i3.default(this._element).on(be, function(t6) {
                e5._ignoreBackdropClick ? e5._ignoreBackdropClick = false : t6.target === t6.currentTarget && ("static" === e5._config.backdrop ? e5._triggerBackdropTransition() : e5.hide());
              }), n3 && u3.reflow(this._backdrop), i3.default(this._backdrop).addClass(he), !t5)
                return;
              if (!n3)
                return void t5();
              var o3 = u3.getTransitionDurationFromElement(this._backdrop);
              i3.default(this._backdrop).one(u3.TRANSITION_END, t5).emulateTransitionEnd(o3);
            } else if (!this._isShown && this._backdrop) {
              i3.default(this._backdrop).removeClass(he);
              var r4 = function() {
                e5._removeBackdrop(), t5 && t5();
              };
              if (i3.default(this._element).hasClass(ce)) {
                var a4 = u3.getTransitionDurationFromElement(this._backdrop);
                i3.default(this._backdrop).one(u3.TRANSITION_END, r4).emulateTransitionEnd(a4);
              } else
                r4();
            } else
              t5 && t5();
          }, e4._adjustDialog = function() {
            var t5 = this._element.scrollHeight > document.documentElement.clientHeight;
            !this._isBodyOverflowing && t5 && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t5 && (this._element.style.paddingRight = this._scrollbarWidth + "px");
          }, e4._resetAdjustments = function() {
            this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
          }, e4._checkScrollbar = function() {
            var t5 = document.body.getBoundingClientRect();
            this._isBodyOverflowing = Math.round(t5.left + t5.right) < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth();
          }, e4._setScrollbar = function() {
            var t5 = this;
            if (this._isBodyOverflowing) {
              var e5 = [].slice.call(document.querySelectorAll(we)), n3 = [].slice.call(document.querySelectorAll(".sticky-top"));
              i3.default(e5).each(function(e6, n4) {
                var o4 = n4.style.paddingRight, r5 = i3.default(n4).css("padding-right");
                i3.default(n4).data("padding-right", o4).css("padding-right", parseFloat(r5) + t5._scrollbarWidth + "px");
              }), i3.default(n3).each(function(e6, n4) {
                var o4 = n4.style.marginRight, r5 = i3.default(n4).css("margin-right");
                i3.default(n4).data("margin-right", o4).css("margin-right", parseFloat(r5) - t5._scrollbarWidth + "px");
              });
              var o3 = document.body.style.paddingRight, r4 = i3.default(document.body).css("padding-right");
              i3.default(document.body).data("padding-right", o3).css("padding-right", parseFloat(r4) + this._scrollbarWidth + "px");
            }
            i3.default(document.body).addClass(de);
          }, e4._resetScrollbar = function() {
            var t5 = [].slice.call(document.querySelectorAll(we));
            i3.default(t5).each(function(t6, e6) {
              var n4 = i3.default(e6).data("padding-right");
              i3.default(e6).removeData("padding-right"), e6.style.paddingRight = n4 || "";
            });
            var e5 = [].slice.call(document.querySelectorAll(".sticky-top"));
            i3.default(e5).each(function(t6, e6) {
              var n4 = i3.default(e6).data("margin-right");
              "undefined" != typeof n4 && i3.default(e6).css("margin-right", n4).removeData("margin-right");
            });
            var n3 = i3.default(document.body).data("padding-right");
            i3.default(document.body).removeData("padding-right"), document.body.style.paddingRight = n3 || "";
          }, e4._getScrollbarWidth = function() {
            var t5 = document.createElement("div");
            t5.className = "modal-scrollbar-measure", document.body.appendChild(t5);
            var e5 = t5.getBoundingClientRect().width - t5.clientWidth;
            return document.body.removeChild(t5), e5;
          }, t4._jQueryInterface = function(e5, n3) {
            return this.each(function() {
              var o3 = i3.default(this).data(ue), r4 = a3({}, Te, i3.default(this).data(), "object" == typeof e5 && e5 ? e5 : {});
              if (o3 || (o3 = new t4(this, r4), i3.default(this).data(ue, o3)), "string" == typeof e5) {
                if ("undefined" == typeof o3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                o3[e5](n3);
              } else
                r4.show && o3.show(n3);
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return Te;
          } }]), t4;
        }();
        i3.default(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(t4) {
          var e4, n3 = this, o3 = u3.getSelectorFromElement(this);
          o3 && (e4 = document.querySelector(o3));
          var r4 = i3.default(e4).data(ue) ? "toggle" : a3({}, i3.default(e4).data(), i3.default(this).data());
          "A" !== this.tagName && "AREA" !== this.tagName || t4.preventDefault();
          var s4 = i3.default(e4).one(ge, function(t5) {
            t5.isDefaultPrevented() || s4.one(me, function() {
              i3.default(n3).is(":visible") && n3.focus();
            });
          });
          Se._jQueryInterface.call(i3.default(e4), r4, this);
        }), i3.default.fn.modal = Se._jQueryInterface, i3.default.fn.modal.Constructor = Se, i3.default.fn.modal.noConflict = function() {
          return i3.default.fn.modal = fe, Se._jQueryInterface;
        };
        var Ne = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"], De = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i, Ae = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;
        function ke(t4, e4, n3) {
          if (0 === t4.length)
            return t4;
          if (n3 && "function" == typeof n3)
            return n3(t4);
          for (var i4 = new window.DOMParser().parseFromString(t4, "text/html"), o3 = Object.keys(e4), r4 = [].slice.call(i4.body.querySelectorAll("*")), a4 = function(t5, n4) {
            var i5 = r4[t5], a5 = i5.nodeName.toLowerCase();
            if (-1 === o3.indexOf(i5.nodeName.toLowerCase()))
              return i5.parentNode.removeChild(i5), "continue";
            var s5 = [].slice.call(i5.attributes), l5 = [].concat(e4["*"] || [], e4[a5] || []);
            s5.forEach(function(t6) {
              (function(t7, e5) {
                var n5 = t7.nodeName.toLowerCase();
                if (-1 !== e5.indexOf(n5))
                  return -1 === Ne.indexOf(n5) || Boolean(De.test(t7.nodeValue) || Ae.test(t7.nodeValue));
                for (var i6 = e5.filter(function(t8) {
                  return t8 instanceof RegExp;
                }), o4 = 0, r5 = i6.length; o4 < r5; o4++)
                  if (i6[o4].test(n5))
                    return true;
                return false;
              })(t6, l5) || i5.removeAttribute(t6.nodeName);
            });
          }, s4 = 0, l4 = r4.length; s4 < l4; s4++)
            a4(s4);
          return i4.body.innerHTML;
        }
        var Ie = "tooltip", Oe = "bs.tooltip", xe = i3.default.fn.tooltip, je = new RegExp("(^|\\s)bs-tooltip\\S+", "g"), Le = ["sanitize", "whiteList", "sanitizeFn"], Pe = "fade", Fe = "show", Re = "show", Be = "out", He = "hover", Me = "focus", qe = { AUTO: "auto", TOP: "top", RIGHT: "right", BOTTOM: "bottom", LEFT: "left" }, Qe = { animation: true, template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: false, selector: false, placement: "top", offset: 0, container: false, fallbackPlacement: "flip", boundary: "scrollParent", customClass: "", sanitize: true, sanitizeFn: null, whiteList: { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "srcset", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, popperConfig: null }, We = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(number|string|function)", container: "(string|element|boolean)", fallbackPlacement: "(string|array)", boundary: "(string|element)", customClass: "(string|function)", sanitize: "boolean", sanitizeFn: "(null|function)", whiteList: "object", popperConfig: "(null|object)" }, Ue = { HIDE: "hide.bs.tooltip", HIDDEN: "hidden.bs.tooltip", SHOW: "show.bs.tooltip", SHOWN: "shown.bs.tooltip", INSERTED: "inserted.bs.tooltip", CLICK: "click.bs.tooltip", FOCUSIN: "focusin.bs.tooltip", FOCUSOUT: "focusout.bs.tooltip", MOUSEENTER: "mouseenter.bs.tooltip", MOUSELEAVE: "mouseleave.bs.tooltip" }, Ve = function() {
          function t4(t5, e5) {
            if ("undefined" == typeof Yt)
              throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");
            this._isEnabled = true, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t5, this.config = this._getConfig(e5), this.tip = null, this._setListeners();
          }
          var e4 = t4.prototype;
          return e4.enable = function() {
            this._isEnabled = true;
          }, e4.disable = function() {
            this._isEnabled = false;
          }, e4.toggleEnabled = function() {
            this._isEnabled = !this._isEnabled;
          }, e4.toggle = function(t5) {
            if (this._isEnabled)
              if (t5) {
                var e5 = this.constructor.DATA_KEY, n3 = i3.default(t5.currentTarget).data(e5);
                n3 || (n3 = new this.constructor(t5.currentTarget, this._getDelegateConfig()), i3.default(t5.currentTarget).data(e5, n3)), n3._activeTrigger.click = !n3._activeTrigger.click, n3._isWithActiveTrigger() ? n3._enter(null, n3) : n3._leave(null, n3);
              } else {
                if (i3.default(this.getTipElement()).hasClass(Fe))
                  return void this._leave(null, this);
                this._enter(null, this);
              }
          }, e4.dispose = function() {
            clearTimeout(this._timeout), i3.default.removeData(this.element, this.constructor.DATA_KEY), i3.default(this.element).off(this.constructor.EVENT_KEY), i3.default(this.element).closest(".modal").off("hide.bs.modal", this._hideModalHandler), this.tip && i3.default(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, this._activeTrigger = null, this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null;
          }, e4.show = function() {
            var t5 = this;
            if ("none" === i3.default(this.element).css("display"))
              throw new Error("Please use show on visible elements");
            var e5 = i3.default.Event(this.constructor.Event.SHOW);
            if (this.isWithContent() && this._isEnabled) {
              i3.default(this.element).trigger(e5);
              var n3 = u3.findShadowRoot(this.element), o3 = i3.default.contains(null !== n3 ? n3 : this.element.ownerDocument.documentElement, this.element);
              if (e5.isDefaultPrevented() || !o3)
                return;
              var r4 = this.getTipElement(), a4 = u3.getUID(this.constructor.NAME);
              r4.setAttribute("id", a4), this.element.setAttribute("aria-describedby", a4), this.setContent(), this.config.animation && i3.default(r4).addClass(Pe);
              var s4 = "function" == typeof this.config.placement ? this.config.placement.call(this, r4, this.element) : this.config.placement, l4 = this._getAttachment(s4);
              this.addAttachmentClass(l4);
              var f4 = this._getContainer();
              i3.default(r4).data(this.constructor.DATA_KEY, this), i3.default.contains(this.element.ownerDocument.documentElement, this.tip) || i3.default(r4).appendTo(f4), i3.default(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new Yt(this.element, r4, this._getPopperConfig(l4)), i3.default(r4).addClass(Fe), i3.default(r4).addClass(this.config.customClass), "ontouchstart" in document.documentElement && i3.default(document.body).children().on("mouseover", null, i3.default.noop);
              var d3 = function() {
                t5.config.animation && t5._fixTransition();
                var e6 = t5._hoverState;
                t5._hoverState = null, i3.default(t5.element).trigger(t5.constructor.Event.SHOWN), e6 === Be && t5._leave(null, t5);
              };
              if (i3.default(this.tip).hasClass(Pe)) {
                var c4 = u3.getTransitionDurationFromElement(this.tip);
                i3.default(this.tip).one(u3.TRANSITION_END, d3).emulateTransitionEnd(c4);
              } else
                d3();
            }
          }, e4.hide = function(t5) {
            var e5 = this, n3 = this.getTipElement(), o3 = i3.default.Event(this.constructor.Event.HIDE), r4 = function() {
              e5._hoverState !== Re && n3.parentNode && n3.parentNode.removeChild(n3), e5._cleanTipClass(), e5.element.removeAttribute("aria-describedby"), i3.default(e5.element).trigger(e5.constructor.Event.HIDDEN), null !== e5._popper && e5._popper.destroy(), t5 && t5();
            };
            if (i3.default(this.element).trigger(o3), !o3.isDefaultPrevented()) {
              if (i3.default(n3).removeClass(Fe), "ontouchstart" in document.documentElement && i3.default(document.body).children().off("mouseover", null, i3.default.noop), this._activeTrigger.click = false, this._activeTrigger.focus = false, this._activeTrigger.hover = false, i3.default(this.tip).hasClass(Pe)) {
                var a4 = u3.getTransitionDurationFromElement(n3);
                i3.default(n3).one(u3.TRANSITION_END, r4).emulateTransitionEnd(a4);
              } else
                r4();
              this._hoverState = "";
            }
          }, e4.update = function() {
            null !== this._popper && this._popper.scheduleUpdate();
          }, e4.isWithContent = function() {
            return Boolean(this.getTitle());
          }, e4.addAttachmentClass = function(t5) {
            i3.default(this.getTipElement()).addClass("bs-tooltip-" + t5);
          }, e4.getTipElement = function() {
            return this.tip = this.tip || i3.default(this.config.template)[0], this.tip;
          }, e4.setContent = function() {
            var t5 = this.getTipElement();
            this.setElementContent(i3.default(t5.querySelectorAll(".tooltip-inner")), this.getTitle()), i3.default(t5).removeClass("fade show");
          }, e4.setElementContent = function(t5, e5) {
            "object" != typeof e5 || !e5.nodeType && !e5.jquery ? this.config.html ? (this.config.sanitize && (e5 = ke(e5, this.config.whiteList, this.config.sanitizeFn)), t5.html(e5)) : t5.text(e5) : this.config.html ? i3.default(e5).parent().is(t5) || t5.empty().append(e5) : t5.text(i3.default(e5).text());
          }, e4.getTitle = function() {
            var t5 = this.element.getAttribute("data-original-title");
            return t5 || (t5 = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t5;
          }, e4._getPopperConfig = function(t5) {
            var e5 = this;
            return a3({}, { placement: t5, modifiers: { offset: this._getOffset(), flip: { behavior: this.config.fallbackPlacement }, arrow: { element: ".arrow" }, preventOverflow: { boundariesElement: this.config.boundary } }, onCreate: function(t6) {
              t6.originalPlacement !== t6.placement && e5._handlePopperPlacementChange(t6);
            }, onUpdate: function(t6) {
              return e5._handlePopperPlacementChange(t6);
            } }, this.config.popperConfig);
          }, e4._getOffset = function() {
            var t5 = this, e5 = {};
            return "function" == typeof this.config.offset ? e5.fn = function(e6) {
              return e6.offsets = a3({}, e6.offsets, t5.config.offset(e6.offsets, t5.element)), e6;
            } : e5.offset = this.config.offset, e5;
          }, e4._getContainer = function() {
            return false === this.config.container ? document.body : u3.isElement(this.config.container) ? i3.default(this.config.container) : i3.default(document).find(this.config.container);
          }, e4._getAttachment = function(t5) {
            return qe[t5.toUpperCase()];
          }, e4._setListeners = function() {
            var t5 = this;
            this.config.trigger.split(" ").forEach(function(e5) {
              if ("click" === e5)
                i3.default(t5.element).on(t5.constructor.Event.CLICK, t5.config.selector, function(e6) {
                  return t5.toggle(e6);
                });
              else if ("manual" !== e5) {
                var n3 = e5 === He ? t5.constructor.Event.MOUSEENTER : t5.constructor.Event.FOCUSIN, o3 = e5 === He ? t5.constructor.Event.MOUSELEAVE : t5.constructor.Event.FOCUSOUT;
                i3.default(t5.element).on(n3, t5.config.selector, function(e6) {
                  return t5._enter(e6);
                }).on(o3, t5.config.selector, function(e6) {
                  return t5._leave(e6);
                });
              }
            }), this._hideModalHandler = function() {
              t5.element && t5.hide();
            }, i3.default(this.element).closest(".modal").on("hide.bs.modal", this._hideModalHandler), this.config.selector ? this.config = a3({}, this.config, { trigger: "manual", selector: "" }) : this._fixTitle();
          }, e4._fixTitle = function() {
            var t5 = typeof this.element.getAttribute("data-original-title");
            (this.element.getAttribute("title") || "string" !== t5) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
          }, e4._enter = function(t5, e5) {
            var n3 = this.constructor.DATA_KEY;
            (e5 = e5 || i3.default(t5.currentTarget).data(n3)) || (e5 = new this.constructor(t5.currentTarget, this._getDelegateConfig()), i3.default(t5.currentTarget).data(n3, e5)), t5 && (e5._activeTrigger["focusin" === t5.type ? Me : He] = true), i3.default(e5.getTipElement()).hasClass(Fe) || e5._hoverState === Re ? e5._hoverState = Re : (clearTimeout(e5._timeout), e5._hoverState = Re, e5.config.delay && e5.config.delay.show ? e5._timeout = setTimeout(function() {
              e5._hoverState === Re && e5.show();
            }, e5.config.delay.show) : e5.show());
          }, e4._leave = function(t5, e5) {
            var n3 = this.constructor.DATA_KEY;
            (e5 = e5 || i3.default(t5.currentTarget).data(n3)) || (e5 = new this.constructor(t5.currentTarget, this._getDelegateConfig()), i3.default(t5.currentTarget).data(n3, e5)), t5 && (e5._activeTrigger["focusout" === t5.type ? Me : He] = false), e5._isWithActiveTrigger() || (clearTimeout(e5._timeout), e5._hoverState = Be, e5.config.delay && e5.config.delay.hide ? e5._timeout = setTimeout(function() {
              e5._hoverState === Be && e5.hide();
            }, e5.config.delay.hide) : e5.hide());
          }, e4._isWithActiveTrigger = function() {
            for (var t5 in this._activeTrigger)
              if (this._activeTrigger[t5])
                return true;
            return false;
          }, e4._getConfig = function(t5) {
            var e5 = i3.default(this.element).data();
            return Object.keys(e5).forEach(function(t6) {
              -1 !== Le.indexOf(t6) && delete e5[t6];
            }), "number" == typeof (t5 = a3({}, this.constructor.Default, e5, "object" == typeof t5 && t5 ? t5 : {})).delay && (t5.delay = { show: t5.delay, hide: t5.delay }), "number" == typeof t5.title && (t5.title = t5.title.toString()), "number" == typeof t5.content && (t5.content = t5.content.toString()), u3.typeCheckConfig(Ie, t5, this.constructor.DefaultType), t5.sanitize && (t5.template = ke(t5.template, t5.whiteList, t5.sanitizeFn)), t5;
          }, e4._getDelegateConfig = function() {
            var t5 = {};
            if (this.config)
              for (var e5 in this.config)
                this.constructor.Default[e5] !== this.config[e5] && (t5[e5] = this.config[e5]);
            return t5;
          }, e4._cleanTipClass = function() {
            var t5 = i3.default(this.getTipElement()), e5 = t5.attr("class").match(je);
            null !== e5 && e5.length && t5.removeClass(e5.join(""));
          }, e4._handlePopperPlacementChange = function(t5) {
            this.tip = t5.instance.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t5.placement));
          }, e4._fixTransition = function() {
            var t5 = this.getTipElement(), e5 = this.config.animation;
            null === t5.getAttribute("x-placement") && (i3.default(t5).removeClass(Pe), this.config.animation = false, this.hide(), this.show(), this.config.animation = e5);
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this), o3 = n3.data(Oe), r4 = "object" == typeof e5 && e5;
              if ((o3 || !/dispose|hide/.test(e5)) && (o3 || (o3 = new t4(this, r4), n3.data(Oe, o3)), "string" == typeof e5)) {
                if ("undefined" == typeof o3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                o3[e5]();
              }
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return Qe;
          } }, { key: "NAME", get: function() {
            return Ie;
          } }, { key: "DATA_KEY", get: function() {
            return Oe;
          } }, { key: "Event", get: function() {
            return Ue;
          } }, { key: "EVENT_KEY", get: function() {
            return ".bs.tooltip";
          } }, { key: "DefaultType", get: function() {
            return We;
          } }]), t4;
        }();
        i3.default.fn.tooltip = Ve._jQueryInterface, i3.default.fn.tooltip.Constructor = Ve, i3.default.fn.tooltip.noConflict = function() {
          return i3.default.fn.tooltip = xe, Ve._jQueryInterface;
        };
        var Ye = "bs.popover", ze = i3.default.fn.popover, Ke = new RegExp("(^|\\s)bs-popover\\S+", "g"), Xe = a3({}, Ve.Default, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }), Ge = a3({}, Ve.DefaultType, { content: "(string|element|function)" }), $e = { HIDE: "hide.bs.popover", HIDDEN: "hidden.bs.popover", SHOW: "show.bs.popover", SHOWN: "shown.bs.popover", INSERTED: "inserted.bs.popover", CLICK: "click.bs.popover", FOCUSIN: "focusin.bs.popover", FOCUSOUT: "focusout.bs.popover", MOUSEENTER: "mouseenter.bs.popover", MOUSELEAVE: "mouseleave.bs.popover" }, Je = function(t4) {
          var e4, n3;
          function o3() {
            return t4.apply(this, arguments) || this;
          }
          n3 = t4, (e4 = o3).prototype = Object.create(n3.prototype), e4.prototype.constructor = e4, s3(e4, n3);
          var a4 = o3.prototype;
          return a4.isWithContent = function() {
            return this.getTitle() || this._getContent();
          }, a4.addAttachmentClass = function(t5) {
            i3.default(this.getTipElement()).addClass("bs-popover-" + t5);
          }, a4.getTipElement = function() {
            return this.tip = this.tip || i3.default(this.config.template)[0], this.tip;
          }, a4.setContent = function() {
            var t5 = i3.default(this.getTipElement());
            this.setElementContent(t5.find(".popover-header"), this.getTitle());
            var e5 = this._getContent();
            "function" == typeof e5 && (e5 = e5.call(this.element)), this.setElementContent(t5.find(".popover-body"), e5), t5.removeClass("fade show");
          }, a4._getContent = function() {
            return this.element.getAttribute("data-content") || this.config.content;
          }, a4._cleanTipClass = function() {
            var t5 = i3.default(this.getTipElement()), e5 = t5.attr("class").match(Ke);
            null !== e5 && e5.length > 0 && t5.removeClass(e5.join(""));
          }, o3._jQueryInterface = function(t5) {
            return this.each(function() {
              var e5 = i3.default(this).data(Ye), n4 = "object" == typeof t5 ? t5 : null;
              if ((e5 || !/dispose|hide/.test(t5)) && (e5 || (e5 = new o3(this, n4), i3.default(this).data(Ye, e5)), "string" == typeof t5)) {
                if ("undefined" == typeof e5[t5])
                  throw new TypeError('No method named "' + t5 + '"');
                e5[t5]();
              }
            });
          }, r3(o3, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return Xe;
          } }, { key: "NAME", get: function() {
            return "popover";
          } }, { key: "DATA_KEY", get: function() {
            return Ye;
          } }, { key: "Event", get: function() {
            return $e;
          } }, { key: "EVENT_KEY", get: function() {
            return ".bs.popover";
          } }, { key: "DefaultType", get: function() {
            return Ge;
          } }]), o3;
        }(Ve);
        i3.default.fn.popover = Je._jQueryInterface, i3.default.fn.popover.Constructor = Je, i3.default.fn.popover.noConflict = function() {
          return i3.default.fn.popover = ze, Je._jQueryInterface;
        };
        var Ze = "scrollspy", tn2 = "bs.scrollspy", en2 = i3.default.fn[Ze], nn2 = "active", on = "position", rn = ".nav, .list-group", an = { offset: 10, method: "auto", target: "" }, sn = { offset: "number", method: "string", target: "(string|element)" }, ln = function() {
          function t4(t5, e5) {
            var n3 = this;
            this._element = t5, this._scrollElement = "BODY" === t5.tagName ? window : t5, this._config = this._getConfig(e5), this._selector = this._config.target + " .nav-link," + this._config.target + " .list-group-item," + this._config.target + " .dropdown-item", this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, i3.default(this._scrollElement).on("scroll.bs.scrollspy", function(t6) {
              return n3._process(t6);
            }), this.refresh(), this._process();
          }
          var e4 = t4.prototype;
          return e4.refresh = function() {
            var t5 = this, e5 = this._scrollElement === this._scrollElement.window ? "offset" : on, n3 = "auto" === this._config.method ? e5 : this._config.method, o3 = n3 === on ? this._getScrollTop() : 0;
            this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function(t6) {
              var e6, r4 = u3.getSelectorFromElement(t6);
              if (r4 && (e6 = document.querySelector(r4)), e6) {
                var a4 = e6.getBoundingClientRect();
                if (a4.width || a4.height)
                  return [i3.default(e6)[n3]().top + o3, r4];
              }
              return null;
            }).filter(Boolean).sort(function(t6, e6) {
              return t6[0] - e6[0];
            }).forEach(function(e6) {
              t5._offsets.push(e6[0]), t5._targets.push(e6[1]);
            });
          }, e4.dispose = function() {
            i3.default.removeData(this._element, tn2), i3.default(this._scrollElement).off(".bs.scrollspy"), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null;
          }, e4._getConfig = function(t5) {
            if ("string" != typeof (t5 = a3({}, an, "object" == typeof t5 && t5 ? t5 : {})).target && u3.isElement(t5.target)) {
              var e5 = i3.default(t5.target).attr("id");
              e5 || (e5 = u3.getUID(Ze), i3.default(t5.target).attr("id", e5)), t5.target = "#" + e5;
            }
            return u3.typeCheckConfig(Ze, t5, sn), t5;
          }, e4._getScrollTop = function() {
            return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
          }, e4._getScrollHeight = function() {
            return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
          }, e4._getOffsetHeight = function() {
            return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
          }, e4._process = function() {
            var t5 = this._getScrollTop() + this._config.offset, e5 = this._getScrollHeight(), n3 = this._config.offset + e5 - this._getOffsetHeight();
            if (this._scrollHeight !== e5 && this.refresh(), t5 >= n3) {
              var i4 = this._targets[this._targets.length - 1];
              this._activeTarget !== i4 && this._activate(i4);
            } else {
              if (this._activeTarget && t5 < this._offsets[0] && this._offsets[0] > 0)
                return this._activeTarget = null, void this._clear();
              for (var o3 = this._offsets.length; o3--; )
                this._activeTarget !== this._targets[o3] && t5 >= this._offsets[o3] && ("undefined" == typeof this._offsets[o3 + 1] || t5 < this._offsets[o3 + 1]) && this._activate(this._targets[o3]);
            }
          }, e4._activate = function(t5) {
            this._activeTarget = t5, this._clear();
            var e5 = this._selector.split(",").map(function(e6) {
              return e6 + '[data-target="' + t5 + '"],' + e6 + '[href="' + t5 + '"]';
            }), n3 = i3.default([].slice.call(document.querySelectorAll(e5.join(","))));
            n3.hasClass("dropdown-item") ? (n3.closest(".dropdown").find(".dropdown-toggle").addClass(nn2), n3.addClass(nn2)) : (n3.addClass(nn2), n3.parents(rn).prev(".nav-link, .list-group-item").addClass(nn2), n3.parents(rn).prev(".nav-item").children(".nav-link").addClass(nn2)), i3.default(this._scrollElement).trigger("activate.bs.scrollspy", { relatedTarget: t5 });
          }, e4._clear = function() {
            [].slice.call(document.querySelectorAll(this._selector)).filter(function(t5) {
              return t5.classList.contains(nn2);
            }).forEach(function(t5) {
              return t5.classList.remove(nn2);
            });
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this).data(tn2);
              if (n3 || (n3 = new t4(this, "object" == typeof e5 && e5), i3.default(this).data(tn2, n3)), "string" == typeof e5) {
                if ("undefined" == typeof n3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                n3[e5]();
              }
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "Default", get: function() {
            return an;
          } }]), t4;
        }();
        i3.default(window).on("load.bs.scrollspy.data-api", function() {
          for (var t4 = [].slice.call(document.querySelectorAll('[data-spy="scroll"]')), e4 = t4.length; e4--; ) {
            var n3 = i3.default(t4[e4]);
            ln._jQueryInterface.call(n3, n3.data());
          }
        }), i3.default.fn[Ze] = ln._jQueryInterface, i3.default.fn[Ze].Constructor = ln, i3.default.fn[Ze].noConflict = function() {
          return i3.default.fn[Ze] = en2, ln._jQueryInterface;
        };
        var un = "bs.tab", fn = i3.default.fn.tab, dn = "active", cn = "fade", hn = "show", pn = ".active", mn = "> li > .active", gn = function() {
          function t4(t5) {
            this._element = t5;
          }
          var e4 = t4.prototype;
          return e4.show = function() {
            var t5 = this;
            if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && i3.default(this._element).hasClass(dn) || i3.default(this._element).hasClass("disabled") || this._element.hasAttribute("disabled"))) {
              var e5, n3, o3 = i3.default(this._element).closest(".nav, .list-group")[0], r4 = u3.getSelectorFromElement(this._element);
              if (o3) {
                var a4 = "UL" === o3.nodeName || "OL" === o3.nodeName ? mn : pn;
                n3 = (n3 = i3.default.makeArray(i3.default(o3).find(a4)))[n3.length - 1];
              }
              var s4 = i3.default.Event("hide.bs.tab", { relatedTarget: this._element }), l4 = i3.default.Event("show.bs.tab", { relatedTarget: n3 });
              if (n3 && i3.default(n3).trigger(s4), i3.default(this._element).trigger(l4), !l4.isDefaultPrevented() && !s4.isDefaultPrevented()) {
                r4 && (e5 = document.querySelector(r4)), this._activate(this._element, o3);
                var f4 = function() {
                  var e6 = i3.default.Event("hidden.bs.tab", { relatedTarget: t5._element }), o4 = i3.default.Event("shown.bs.tab", { relatedTarget: n3 });
                  i3.default(n3).trigger(e6), i3.default(t5._element).trigger(o4);
                };
                e5 ? this._activate(e5, e5.parentNode, f4) : f4();
              }
            }
          }, e4.dispose = function() {
            i3.default.removeData(this._element, un), this._element = null;
          }, e4._activate = function(t5, e5, n3) {
            var o3 = this, r4 = (!e5 || "UL" !== e5.nodeName && "OL" !== e5.nodeName ? i3.default(e5).children(pn) : i3.default(e5).find(mn))[0], a4 = n3 && r4 && i3.default(r4).hasClass(cn), s4 = function() {
              return o3._transitionComplete(t5, r4, n3);
            };
            if (r4 && a4) {
              var l4 = u3.getTransitionDurationFromElement(r4);
              i3.default(r4).removeClass(hn).one(u3.TRANSITION_END, s4).emulateTransitionEnd(l4);
            } else
              s4();
          }, e4._transitionComplete = function(t5, e5, n3) {
            if (e5) {
              i3.default(e5).removeClass(dn);
              var o3 = i3.default(e5.parentNode).find("> .dropdown-menu .active")[0];
              o3 && i3.default(o3).removeClass(dn), "tab" === e5.getAttribute("role") && e5.setAttribute("aria-selected", false);
            }
            i3.default(t5).addClass(dn), "tab" === t5.getAttribute("role") && t5.setAttribute("aria-selected", true), u3.reflow(t5), t5.classList.contains(cn) && t5.classList.add(hn);
            var r4 = t5.parentNode;
            if (r4 && "LI" === r4.nodeName && (r4 = r4.parentNode), r4 && i3.default(r4).hasClass("dropdown-menu")) {
              var a4 = i3.default(t5).closest(".dropdown")[0];
              if (a4) {
                var s4 = [].slice.call(a4.querySelectorAll(".dropdown-toggle"));
                i3.default(s4).addClass(dn);
              }
              t5.setAttribute("aria-expanded", true);
            }
            n3 && n3();
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this), o3 = n3.data(un);
              if (o3 || (o3 = new t4(this), n3.data(un, o3)), "string" == typeof e5) {
                if ("undefined" == typeof o3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                o3[e5]();
              }
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }]), t4;
        }();
        i3.default(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]', function(t4) {
          t4.preventDefault(), gn._jQueryInterface.call(i3.default(this), "show");
        }), i3.default.fn.tab = gn._jQueryInterface, i3.default.fn.tab.Constructor = gn, i3.default.fn.tab.noConflict = function() {
          return i3.default.fn.tab = fn, gn._jQueryInterface;
        };
        var _n = "bs.toast", vn = i3.default.fn.toast, bn = "hide", yn = "show", En = "showing", wn = "click.dismiss.bs.toast", Tn = { animation: true, autohide: true, delay: 500 }, Cn = { animation: "boolean", autohide: "boolean", delay: "number" }, Sn = function() {
          function t4(t5, e5) {
            this._element = t5, this._config = this._getConfig(e5), this._timeout = null, this._setListeners();
          }
          var e4 = t4.prototype;
          return e4.show = function() {
            var t5 = this, e5 = i3.default.Event("show.bs.toast");
            if (i3.default(this._element).trigger(e5), !e5.isDefaultPrevented()) {
              this._clearTimeout(), this._config.animation && this._element.classList.add("fade");
              var n3 = function() {
                t5._element.classList.remove(En), t5._element.classList.add(yn), i3.default(t5._element).trigger("shown.bs.toast"), t5._config.autohide && (t5._timeout = setTimeout(function() {
                  t5.hide();
                }, t5._config.delay));
              };
              if (this._element.classList.remove(bn), u3.reflow(this._element), this._element.classList.add(En), this._config.animation) {
                var o3 = u3.getTransitionDurationFromElement(this._element);
                i3.default(this._element).one(u3.TRANSITION_END, n3).emulateTransitionEnd(o3);
              } else
                n3();
            }
          }, e4.hide = function() {
            if (this._element.classList.contains(yn)) {
              var t5 = i3.default.Event("hide.bs.toast");
              i3.default(this._element).trigger(t5), t5.isDefaultPrevented() || this._close();
            }
          }, e4.dispose = function() {
            this._clearTimeout(), this._element.classList.contains(yn) && this._element.classList.remove(yn), i3.default(this._element).off(wn), i3.default.removeData(this._element, _n), this._element = null, this._config = null;
          }, e4._getConfig = function(t5) {
            return t5 = a3({}, Tn, i3.default(this._element).data(), "object" == typeof t5 && t5 ? t5 : {}), u3.typeCheckConfig("toast", t5, this.constructor.DefaultType), t5;
          }, e4._setListeners = function() {
            var t5 = this;
            i3.default(this._element).on(wn, '[data-dismiss="toast"]', function() {
              return t5.hide();
            });
          }, e4._close = function() {
            var t5 = this, e5 = function() {
              t5._element.classList.add(bn), i3.default(t5._element).trigger("hidden.bs.toast");
            };
            if (this._element.classList.remove(yn), this._config.animation) {
              var n3 = u3.getTransitionDurationFromElement(this._element);
              i3.default(this._element).one(u3.TRANSITION_END, e5).emulateTransitionEnd(n3);
            } else
              e5();
          }, e4._clearTimeout = function() {
            clearTimeout(this._timeout), this._timeout = null;
          }, t4._jQueryInterface = function(e5) {
            return this.each(function() {
              var n3 = i3.default(this), o3 = n3.data(_n);
              if (o3 || (o3 = new t4(this, "object" == typeof e5 && e5), n3.data(_n, o3)), "string" == typeof e5) {
                if ("undefined" == typeof o3[e5])
                  throw new TypeError('No method named "' + e5 + '"');
                o3[e5](this);
              }
            });
          }, r3(t4, null, [{ key: "VERSION", get: function() {
            return "4.6.2";
          } }, { key: "DefaultType", get: function() {
            return Cn;
          } }, { key: "Default", get: function() {
            return Tn;
          } }]), t4;
        }();
        i3.default.fn.toast = Sn._jQueryInterface, i3.default.fn.toast.Constructor = Sn, i3.default.fn.toast.noConflict = function() {
          return i3.default.fn.toast = vn, Sn._jQueryInterface;
        }, t3.Alert = c3, t3.Button = b3, t3.Carousel = O2, t3.Collapse = W2, t3.Dropdown = le, t3.Modal = Se, t3.Popover = Je, t3.Scrollspy = ln, t3.Tab = gn, t3.Toast = Sn, t3.Tooltip = Ve, t3.Util = u3, Object.defineProperty(t3, "__esModule", { value: true });
      });
    }
  });

  // node_modules/admin-lte/plugins/moment/moment.min.js
  var require_moment_min = __commonJS({
    "node_modules/admin-lte/plugins/moment/moment.min.js"(exports, module) {
      !function(e3, t3) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = t3() : "function" == typeof define && define.amd ? define(t3) : e3.moment = t3();
      }(exports, function() {
        "use strict";
        var H3;
        function f3() {
          return H3.apply(null, arguments);
        }
        function a3(e4) {
          return e4 instanceof Array || "[object Array]" === Object.prototype.toString.call(e4);
        }
        function F3(e4) {
          return null != e4 && "[object Object]" === Object.prototype.toString.call(e4);
        }
        function c3(e4, t4) {
          return Object.prototype.hasOwnProperty.call(e4, t4);
        }
        function L3(e4) {
          if (Object.getOwnPropertyNames)
            return 0 === Object.getOwnPropertyNames(e4).length;
          for (var t4 in e4)
            if (c3(e4, t4))
              return;
          return 1;
        }
        function o2(e4) {
          return void 0 === e4;
        }
        function u3(e4) {
          return "number" == typeof e4 || "[object Number]" === Object.prototype.toString.call(e4);
        }
        function V3(e4) {
          return e4 instanceof Date || "[object Date]" === Object.prototype.toString.call(e4);
        }
        function G2(e4, t4) {
          for (var n3 = [], s4 = e4.length, i4 = 0; i4 < s4; ++i4)
            n3.push(t4(e4[i4], i4));
          return n3;
        }
        function E(e4, t4) {
          for (var n3 in t4)
            c3(t4, n3) && (e4[n3] = t4[n3]);
          return c3(t4, "toString") && (e4.toString = t4.toString), c3(t4, "valueOf") && (e4.valueOf = t4.valueOf), e4;
        }
        function l3(e4, t4, n3, s4) {
          return Pt(e4, t4, n3, s4, true).utc();
        }
        function m3(e4) {
          return null == e4._pf && (e4._pf = { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidEra: null, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false, parsedDateParts: [], era: null, meridiem: null, rfc2822: false, weekdayMismatch: false }), e4._pf;
        }
        function A3(e4) {
          if (null == e4._isValid) {
            var t4 = m3(e4), n3 = j4.call(t4.parsedDateParts, function(e5) {
              return null != e5;
            }), n3 = !isNaN(e4._d.getTime()) && t4.overflow < 0 && !t4.empty && !t4.invalidEra && !t4.invalidMonth && !t4.invalidWeekday && !t4.weekdayMismatch && !t4.nullInput && !t4.invalidFormat && !t4.userInvalidated && (!t4.meridiem || t4.meridiem && n3);
            if (e4._strict && (n3 = n3 && 0 === t4.charsLeftOver && 0 === t4.unusedTokens.length && void 0 === t4.bigHour), null != Object.isFrozen && Object.isFrozen(e4))
              return n3;
            e4._isValid = n3;
          }
          return e4._isValid;
        }
        function I3(e4) {
          var t4 = l3(NaN);
          return null != e4 ? E(m3(t4), e4) : m3(t4).userInvalidated = true, t4;
        }
        var j4 = Array.prototype.some || function(e4) {
          for (var t4 = Object(this), n3 = t4.length >>> 0, s4 = 0; s4 < n3; s4++)
            if (s4 in t4 && e4.call(this, t4[s4], s4, t4))
              return true;
          return false;
        }, Z2 = f3.momentProperties = [], z3 = false;
        function $3(e4, t4) {
          var n3, s4, i4, r4 = Z2.length;
          if (o2(t4._isAMomentObject) || (e4._isAMomentObject = t4._isAMomentObject), o2(t4._i) || (e4._i = t4._i), o2(t4._f) || (e4._f = t4._f), o2(t4._l) || (e4._l = t4._l), o2(t4._strict) || (e4._strict = t4._strict), o2(t4._tzm) || (e4._tzm = t4._tzm), o2(t4._isUTC) || (e4._isUTC = t4._isUTC), o2(t4._offset) || (e4._offset = t4._offset), o2(t4._pf) || (e4._pf = m3(t4)), o2(t4._locale) || (e4._locale = t4._locale), 0 < r4)
            for (n3 = 0; n3 < r4; n3++)
              o2(i4 = t4[s4 = Z2[n3]]) || (e4[s4] = i4);
          return e4;
        }
        function q3(e4) {
          $3(this, e4), this._d = new Date(null != e4._d ? e4._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), false === z3 && (z3 = true, f3.updateOffset(this), z3 = false);
        }
        function h3(e4) {
          return e4 instanceof q3 || null != e4 && null != e4._isAMomentObject;
        }
        function B3(e4) {
          false === f3.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e4);
        }
        function e3(r4, a4) {
          var o3 = true;
          return E(function() {
            if (null != f3.deprecationHandler && f3.deprecationHandler(null, r4), o3) {
              for (var e4, t4, n3 = [], s4 = arguments.length, i4 = 0; i4 < s4; i4++) {
                if (e4 = "", "object" == typeof arguments[i4]) {
                  for (t4 in e4 += "\n[" + i4 + "] ", arguments[0])
                    c3(arguments[0], t4) && (e4 += t4 + ": " + arguments[0][t4] + ", ");
                  e4 = e4.slice(0, -2);
                } else
                  e4 = arguments[i4];
                n3.push(e4);
              }
              B3(r4 + "\nArguments: " + Array.prototype.slice.call(n3).join("") + "\n" + new Error().stack), o3 = false;
            }
            return a4.apply(this, arguments);
          }, a4);
        }
        var J2 = {};
        function Q2(e4, t4) {
          null != f3.deprecationHandler && f3.deprecationHandler(e4, t4), J2[e4] || (B3(t4), J2[e4] = true);
        }
        function d2(e4) {
          return "undefined" != typeof Function && e4 instanceof Function || "[object Function]" === Object.prototype.toString.call(e4);
        }
        function X2(e4, t4) {
          var n3, s4 = E({}, e4);
          for (n3 in t4)
            c3(t4, n3) && (F3(e4[n3]) && F3(t4[n3]) ? (s4[n3] = {}, E(s4[n3], e4[n3]), E(s4[n3], t4[n3])) : null != t4[n3] ? s4[n3] = t4[n3] : delete s4[n3]);
          for (n3 in e4)
            c3(e4, n3) && !c3(t4, n3) && F3(e4[n3]) && (s4[n3] = E({}, s4[n3]));
          return s4;
        }
        function K2(e4) {
          null != e4 && this.set(e4);
        }
        f3.suppressDeprecationWarnings = false, f3.deprecationHandler = null;
        var ee = Object.keys || function(e4) {
          var t4, n3 = [];
          for (t4 in e4)
            c3(e4, t4) && n3.push(t4);
          return n3;
        };
        function r3(e4, t4, n3) {
          var s4 = "" + Math.abs(e4);
          return (0 <= e4 ? n3 ? "+" : "" : "-") + Math.pow(10, Math.max(0, t4 - s4.length)).toString().substr(1) + s4;
        }
        var te = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, ne = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, se = {}, ie = {};
        function s3(e4, t4, n3, s4) {
          var i4 = "string" == typeof s4 ? function() {
            return this[s4]();
          } : s4;
          e4 && (ie[e4] = i4), t4 && (ie[t4[0]] = function() {
            return r3(i4.apply(this, arguments), t4[1], t4[2]);
          }), n3 && (ie[n3] = function() {
            return this.localeData().ordinal(i4.apply(this, arguments), e4);
          });
        }
        function re(e4, t4) {
          return e4.isValid() ? (t4 = ae(t4, e4.localeData()), se[t4] = se[t4] || function(s4) {
            for (var e5, i4 = s4.match(te), t5 = 0, r4 = i4.length; t5 < r4; t5++)
              ie[i4[t5]] ? i4[t5] = ie[i4[t5]] : i4[t5] = (e5 = i4[t5]).match(/\[[\s\S]/) ? e5.replace(/^\[|\]$/g, "") : e5.replace(/\\/g, "");
            return function(e6) {
              for (var t6 = "", n3 = 0; n3 < r4; n3++)
                t6 += d2(i4[n3]) ? i4[n3].call(e6, s4) : i4[n3];
              return t6;
            };
          }(t4), se[t4](e4)) : e4.localeData().invalidDate();
        }
        function ae(e4, t4) {
          var n3 = 5;
          function s4(e5) {
            return t4.longDateFormat(e5) || e5;
          }
          for (ne.lastIndex = 0; 0 <= n3 && ne.test(e4); )
            e4 = e4.replace(ne, s4), ne.lastIndex = 0, --n3;
          return e4;
        }
        var oe = {};
        function t3(e4, t4) {
          var n3 = e4.toLowerCase();
          oe[n3] = oe[n3 + "s"] = oe[t4] = e4;
        }
        function _3(e4) {
          return "string" == typeof e4 ? oe[e4] || oe[e4.toLowerCase()] : void 0;
        }
        function ue(e4) {
          var t4, n3, s4 = {};
          for (n3 in e4)
            c3(e4, n3) && (t4 = _3(n3)) && (s4[t4] = e4[n3]);
          return s4;
        }
        var le = {};
        function n2(e4, t4) {
          le[e4] = t4;
        }
        function he(e4) {
          return e4 % 4 == 0 && e4 % 100 != 0 || e4 % 400 == 0;
        }
        function y3(e4) {
          return e4 < 0 ? Math.ceil(e4) || 0 : Math.floor(e4);
        }
        function g4(e4) {
          var e4 = +e4, t4 = 0;
          return t4 = 0 != e4 && isFinite(e4) ? y3(e4) : t4;
        }
        function de(t4, n3) {
          return function(e4) {
            return null != e4 ? (fe(this, t4, e4), f3.updateOffset(this, n3), this) : ce(this, t4);
          };
        }
        function ce(e4, t4) {
          return e4.isValid() ? e4._d["get" + (e4._isUTC ? "UTC" : "") + t4]() : NaN;
        }
        function fe(e4, t4, n3) {
          e4.isValid() && !isNaN(n3) && ("FullYear" === t4 && he(e4.year()) && 1 === e4.month() && 29 === e4.date() ? (n3 = g4(n3), e4._d["set" + (e4._isUTC ? "UTC" : "") + t4](n3, e4.month(), We(n3, e4.month()))) : e4._d["set" + (e4._isUTC ? "UTC" : "") + t4](n3));
        }
        var i3 = /\d/, w4 = /\d\d/, me = /\d{3}/, _e = /\d{4}/, ye = /[+-]?\d{6}/, p3 = /\d\d?/, ge = /\d\d\d\d?/, we = /\d\d\d\d\d\d?/, pe = /\d{1,3}/, ke = /\d{1,4}/, ve = /[+-]?\d{1,6}/, Me = /\d+/, De = /[+-]?\d+/, Se = /Z|[+-]\d\d:?\d\d/gi, Ye = /Z|[+-]\d\d(?::?\d\d)?/gi, k3 = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
        function v3(e4, n3, s4) {
          be[e4] = d2(n3) ? n3 : function(e5, t4) {
            return e5 && s4 ? s4 : n3;
          };
        }
        function Oe(e4, t4) {
          return c3(be, e4) ? be[e4](t4._strict, t4._locale) : new RegExp(M2(e4.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e5, t5, n3, s4, i4) {
            return t5 || n3 || s4 || i4;
          })));
        }
        function M2(e4) {
          return e4.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
        }
        var be = {}, xe = {};
        function D2(e4, n3) {
          var t4, s4, i4 = n3;
          for ("string" == typeof e4 && (e4 = [e4]), u3(n3) && (i4 = function(e5, t5) {
            t5[n3] = g4(e5);
          }), s4 = e4.length, t4 = 0; t4 < s4; t4++)
            xe[e4[t4]] = i4;
        }
        function Te(e4, i4) {
          D2(e4, function(e5, t4, n3, s4) {
            n3._w = n3._w || {}, i4(e5, n3._w, n3, s4);
          });
        }
        var S2, Y = 0, O2 = 1, b3 = 2, x4 = 3, T4 = 4, N3 = 5, Ne = 6, Pe = 7, Re = 8;
        function We(e4, t4) {
          if (isNaN(e4) || isNaN(t4))
            return NaN;
          var n3 = (t4 % (n3 = 12) + n3) % n3;
          return e4 += (t4 - n3) / 12, 1 == n3 ? he(e4) ? 29 : 28 : 31 - n3 % 7 % 2;
        }
        S2 = Array.prototype.indexOf || function(e4) {
          for (var t4 = 0; t4 < this.length; ++t4)
            if (this[t4] === e4)
              return t4;
          return -1;
        }, s3("M", ["MM", 2], "Mo", function() {
          return this.month() + 1;
        }), s3("MMM", 0, 0, function(e4) {
          return this.localeData().monthsShort(this, e4);
        }), s3("MMMM", 0, 0, function(e4) {
          return this.localeData().months(this, e4);
        }), t3("month", "M"), n2("month", 8), v3("M", p3), v3("MM", p3, w4), v3("MMM", function(e4, t4) {
          return t4.monthsShortRegex(e4);
        }), v3("MMMM", function(e4, t4) {
          return t4.monthsRegex(e4);
        }), D2(["M", "MM"], function(e4, t4) {
          t4[O2] = g4(e4) - 1;
        }), D2(["MMM", "MMMM"], function(e4, t4, n3, s4) {
          s4 = n3._locale.monthsParse(e4, s4, n3._strict);
          null != s4 ? t4[O2] = s4 : m3(n3).invalidMonth = e4;
        });
        var Ce = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), Ue = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), He = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, Fe = k3, Le = k3;
        function Ve(e4, t4) {
          var n3;
          if (e4.isValid()) {
            if ("string" == typeof t4) {
              if (/^\d+$/.test(t4))
                t4 = g4(t4);
              else if (!u3(t4 = e4.localeData().monthsParse(t4)))
                return;
            }
            n3 = Math.min(e4.date(), We(e4.year(), t4)), e4._d["set" + (e4._isUTC ? "UTC" : "") + "Month"](t4, n3);
          }
        }
        function Ge(e4) {
          return null != e4 ? (Ve(this, e4), f3.updateOffset(this, true), this) : ce(this, "Month");
        }
        function Ee() {
          function e4(e5, t5) {
            return t5.length - e5.length;
          }
          for (var t4, n3 = [], s4 = [], i4 = [], r4 = 0; r4 < 12; r4++)
            t4 = l3([2e3, r4]), n3.push(this.monthsShort(t4, "")), s4.push(this.months(t4, "")), i4.push(this.months(t4, "")), i4.push(this.monthsShort(t4, ""));
          for (n3.sort(e4), s4.sort(e4), i4.sort(e4), r4 = 0; r4 < 12; r4++)
            n3[r4] = M2(n3[r4]), s4[r4] = M2(s4[r4]);
          for (r4 = 0; r4 < 24; r4++)
            i4[r4] = M2(i4[r4]);
          this._monthsRegex = new RegExp("^(" + i4.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + s4.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + n3.join("|") + ")", "i");
        }
        function Ae(e4) {
          return he(e4) ? 366 : 365;
        }
        s3("Y", 0, 0, function() {
          var e4 = this.year();
          return e4 <= 9999 ? r3(e4, 4) : "+" + e4;
        }), s3(0, ["YY", 2], 0, function() {
          return this.year() % 100;
        }), s3(0, ["YYYY", 4], 0, "year"), s3(0, ["YYYYY", 5], 0, "year"), s3(0, ["YYYYYY", 6, true], 0, "year"), t3("year", "y"), n2("year", 1), v3("Y", De), v3("YY", p3, w4), v3("YYYY", ke, _e), v3("YYYYY", ve, ye), v3("YYYYYY", ve, ye), D2(["YYYYY", "YYYYYY"], Y), D2("YYYY", function(e4, t4) {
          t4[Y] = 2 === e4.length ? f3.parseTwoDigitYear(e4) : g4(e4);
        }), D2("YY", function(e4, t4) {
          t4[Y] = f3.parseTwoDigitYear(e4);
        }), D2("Y", function(e4, t4) {
          t4[Y] = parseInt(e4, 10);
        }), f3.parseTwoDigitYear = function(e4) {
          return g4(e4) + (68 < g4(e4) ? 1900 : 2e3);
        };
        var Ie = de("FullYear", true);
        function je(e4, t4, n3, s4, i4, r4, a4) {
          var o3;
          return e4 < 100 && 0 <= e4 ? (o3 = new Date(e4 + 400, t4, n3, s4, i4, r4, a4), isFinite(o3.getFullYear()) && o3.setFullYear(e4)) : o3 = new Date(e4, t4, n3, s4, i4, r4, a4), o3;
        }
        function Ze(e4) {
          var t4;
          return e4 < 100 && 0 <= e4 ? ((t4 = Array.prototype.slice.call(arguments))[0] = e4 + 400, t4 = new Date(Date.UTC.apply(null, t4)), isFinite(t4.getUTCFullYear()) && t4.setUTCFullYear(e4)) : t4 = new Date(Date.UTC.apply(null, arguments)), t4;
        }
        function ze(e4, t4, n3) {
          n3 = 7 + t4 - n3;
          return n3 - (7 + Ze(e4, 0, n3).getUTCDay() - t4) % 7 - 1;
        }
        function $e(e4, t4, n3, s4, i4) {
          var r4, t4 = 1 + 7 * (t4 - 1) + (7 + n3 - s4) % 7 + ze(e4, s4, i4), n3 = t4 <= 0 ? Ae(r4 = e4 - 1) + t4 : t4 > Ae(e4) ? (r4 = e4 + 1, t4 - Ae(e4)) : (r4 = e4, t4);
          return { year: r4, dayOfYear: n3 };
        }
        function qe(e4, t4, n3) {
          var s4, i4, r4 = ze(e4.year(), t4, n3), r4 = Math.floor((e4.dayOfYear() - r4 - 1) / 7) + 1;
          return r4 < 1 ? s4 = r4 + P2(i4 = e4.year() - 1, t4, n3) : r4 > P2(e4.year(), t4, n3) ? (s4 = r4 - P2(e4.year(), t4, n3), i4 = e4.year() + 1) : (i4 = e4.year(), s4 = r4), { week: s4, year: i4 };
        }
        function P2(e4, t4, n3) {
          var s4 = ze(e4, t4, n3), t4 = ze(e4 + 1, t4, n3);
          return (Ae(e4) - s4 + t4) / 7;
        }
        s3("w", ["ww", 2], "wo", "week"), s3("W", ["WW", 2], "Wo", "isoWeek"), t3("week", "w"), t3("isoWeek", "W"), n2("week", 5), n2("isoWeek", 5), v3("w", p3), v3("ww", p3, w4), v3("W", p3), v3("WW", p3, w4), Te(["w", "ww", "W", "WW"], function(e4, t4, n3, s4) {
          t4[s4.substr(0, 1)] = g4(e4);
        });
        function Be(e4, t4) {
          return e4.slice(t4, 7).concat(e4.slice(0, t4));
        }
        s3("d", 0, "do", "day"), s3("dd", 0, 0, function(e4) {
          return this.localeData().weekdaysMin(this, e4);
        }), s3("ddd", 0, 0, function(e4) {
          return this.localeData().weekdaysShort(this, e4);
        }), s3("dddd", 0, 0, function(e4) {
          return this.localeData().weekdays(this, e4);
        }), s3("e", 0, 0, "weekday"), s3("E", 0, 0, "isoWeekday"), t3("day", "d"), t3("weekday", "e"), t3("isoWeekday", "E"), n2("day", 11), n2("weekday", 11), n2("isoWeekday", 11), v3("d", p3), v3("e", p3), v3("E", p3), v3("dd", function(e4, t4) {
          return t4.weekdaysMinRegex(e4);
        }), v3("ddd", function(e4, t4) {
          return t4.weekdaysShortRegex(e4);
        }), v3("dddd", function(e4, t4) {
          return t4.weekdaysRegex(e4);
        }), Te(["dd", "ddd", "dddd"], function(e4, t4, n3, s4) {
          s4 = n3._locale.weekdaysParse(e4, s4, n3._strict);
          null != s4 ? t4.d = s4 : m3(n3).invalidWeekday = e4;
        }), Te(["d", "e", "E"], function(e4, t4, n3, s4) {
          t4[s4] = g4(e4);
        });
        var Je = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Qe = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), Xe = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), Ke = k3, et = k3, tt = k3;
        function nt() {
          function e4(e5, t5) {
            return t5.length - e5.length;
          }
          for (var t4, n3, s4, i4 = [], r4 = [], a4 = [], o3 = [], u4 = 0; u4 < 7; u4++)
            s4 = l3([2e3, 1]).day(u4), t4 = M2(this.weekdaysMin(s4, "")), n3 = M2(this.weekdaysShort(s4, "")), s4 = M2(this.weekdays(s4, "")), i4.push(t4), r4.push(n3), a4.push(s4), o3.push(t4), o3.push(n3), o3.push(s4);
          i4.sort(e4), r4.sort(e4), a4.sort(e4), o3.sort(e4), this._weekdaysRegex = new RegExp("^(" + o3.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + a4.join("|") + ")", "i"), this._weekdaysShortStrictRegex = new RegExp("^(" + r4.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + i4.join("|") + ")", "i");
        }
        function st() {
          return this.hours() % 12 || 12;
        }
        function it(e4, t4) {
          s3(e4, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), t4);
          });
        }
        function rt(e4, t4) {
          return t4._meridiemParse;
        }
        s3("H", ["HH", 2], 0, "hour"), s3("h", ["hh", 2], 0, st), s3("k", ["kk", 2], 0, function() {
          return this.hours() || 24;
        }), s3("hmm", 0, 0, function() {
          return "" + st.apply(this) + r3(this.minutes(), 2);
        }), s3("hmmss", 0, 0, function() {
          return "" + st.apply(this) + r3(this.minutes(), 2) + r3(this.seconds(), 2);
        }), s3("Hmm", 0, 0, function() {
          return "" + this.hours() + r3(this.minutes(), 2);
        }), s3("Hmmss", 0, 0, function() {
          return "" + this.hours() + r3(this.minutes(), 2) + r3(this.seconds(), 2);
        }), it("a", true), it("A", false), t3("hour", "h"), n2("hour", 13), v3("a", rt), v3("A", rt), v3("H", p3), v3("h", p3), v3("k", p3), v3("HH", p3, w4), v3("hh", p3, w4), v3("kk", p3, w4), v3("hmm", ge), v3("hmmss", we), v3("Hmm", ge), v3("Hmmss", we), D2(["H", "HH"], x4), D2(["k", "kk"], function(e4, t4, n3) {
          e4 = g4(e4);
          t4[x4] = 24 === e4 ? 0 : e4;
        }), D2(["a", "A"], function(e4, t4, n3) {
          n3._isPm = n3._locale.isPM(e4), n3._meridiem = e4;
        }), D2(["h", "hh"], function(e4, t4, n3) {
          t4[x4] = g4(e4), m3(n3).bigHour = true;
        }), D2("hmm", function(e4, t4, n3) {
          var s4 = e4.length - 2;
          t4[x4] = g4(e4.substr(0, s4)), t4[T4] = g4(e4.substr(s4)), m3(n3).bigHour = true;
        }), D2("hmmss", function(e4, t4, n3) {
          var s4 = e4.length - 4, i4 = e4.length - 2;
          t4[x4] = g4(e4.substr(0, s4)), t4[T4] = g4(e4.substr(s4, 2)), t4[N3] = g4(e4.substr(i4)), m3(n3).bigHour = true;
        }), D2("Hmm", function(e4, t4, n3) {
          var s4 = e4.length - 2;
          t4[x4] = g4(e4.substr(0, s4)), t4[T4] = g4(e4.substr(s4));
        }), D2("Hmmss", function(e4, t4, n3) {
          var s4 = e4.length - 4, i4 = e4.length - 2;
          t4[x4] = g4(e4.substr(0, s4)), t4[T4] = g4(e4.substr(s4, 2)), t4[N3] = g4(e4.substr(i4));
        });
        k3 = de("Hours", true);
        var at, ot = { calendar: { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" }, longDateFormat: { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, invalidDate: "Invalid date", ordinal: "%d", dayOfMonthOrdinalParse: /\d{1,2}/, relativeTime: { future: "in %s", past: "%s ago", s: "a few seconds", ss: "%d seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", w: "a week", ww: "%d weeks", M: "a month", MM: "%d months", y: "a year", yy: "%d years" }, months: Ce, monthsShort: Ue, week: { dow: 0, doy: 6 }, weekdays: Je, weekdaysMin: Xe, weekdaysShort: Qe, meridiemParse: /[ap]\.?m?\.?/i }, R = {}, ut = {};
        function lt(e4) {
          return e4 && e4.toLowerCase().replace("_", "-");
        }
        function ht(e4) {
          for (var t4, n3, s4, i4, r4 = 0; r4 < e4.length; ) {
            for (t4 = (i4 = lt(e4[r4]).split("-")).length, n3 = (n3 = lt(e4[r4 + 1])) ? n3.split("-") : null; 0 < t4; ) {
              if (s4 = dt2(i4.slice(0, t4).join("-")))
                return s4;
              if (n3 && n3.length >= t4 && function(e5, t5) {
                for (var n4 = Math.min(e5.length, t5.length), s5 = 0; s5 < n4; s5 += 1)
                  if (e5[s5] !== t5[s5])
                    return s5;
                return n4;
              }(i4, n3) >= t4 - 1)
                break;
              t4--;
            }
            r4++;
          }
          return at;
        }
        function dt2(t4) {
          var e4;
          if (void 0 === R[t4] && "undefined" != typeof module && module && module.exports && null != t4.match("^[^/\\\\]*$"))
            try {
              e4 = at._abbr, __require("./locale/" + t4), ct(e4);
            } catch (e5) {
              R[t4] = null;
            }
          return R[t4];
        }
        function ct(e4, t4) {
          return e4 && ((t4 = o2(t4) ? mt(e4) : ft(e4, t4)) ? at = t4 : "undefined" != typeof console && console.warn && console.warn("Locale " + e4 + " not found. Did you forget to load it?")), at._abbr;
        }
        function ft(e4, t4) {
          if (null === t4)
            return delete R[e4], null;
          var n3, s4 = ot;
          if (t4.abbr = e4, null != R[e4])
            Q2("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), s4 = R[e4]._config;
          else if (null != t4.parentLocale)
            if (null != R[t4.parentLocale])
              s4 = R[t4.parentLocale]._config;
            else {
              if (null == (n3 = dt2(t4.parentLocale)))
                return ut[t4.parentLocale] || (ut[t4.parentLocale] = []), ut[t4.parentLocale].push({ name: e4, config: t4 }), null;
              s4 = n3._config;
            }
          return R[e4] = new K2(X2(s4, t4)), ut[e4] && ut[e4].forEach(function(e5) {
            ft(e5.name, e5.config);
          }), ct(e4), R[e4];
        }
        function mt(e4) {
          var t4;
          if (!(e4 = e4 && e4._locale && e4._locale._abbr ? e4._locale._abbr : e4))
            return at;
          if (!a3(e4)) {
            if (t4 = dt2(e4))
              return t4;
            e4 = [e4];
          }
          return ht(e4);
        }
        function _t(e4) {
          var t4 = e4._a;
          return t4 && -2 === m3(e4).overflow && (t4 = t4[O2] < 0 || 11 < t4[O2] ? O2 : t4[b3] < 1 || t4[b3] > We(t4[Y], t4[O2]) ? b3 : t4[x4] < 0 || 24 < t4[x4] || 24 === t4[x4] && (0 !== t4[T4] || 0 !== t4[N3] || 0 !== t4[Ne]) ? x4 : t4[T4] < 0 || 59 < t4[T4] ? T4 : t4[N3] < 0 || 59 < t4[N3] ? N3 : t4[Ne] < 0 || 999 < t4[Ne] ? Ne : -1, m3(e4)._overflowDayOfYear && (t4 < Y || b3 < t4) && (t4 = b3), m3(e4)._overflowWeeks && -1 === t4 && (t4 = Pe), m3(e4)._overflowWeekday && -1 === t4 && (t4 = Re), m3(e4).overflow = t4), e4;
        }
        var yt = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, gt = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, wt = /Z|[+-]\d\d(?::?\d\d)?/, pt = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/], ["YYYYMM", /\d{6}/, false], ["YYYY", /\d{4}/, false]], kt = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]], vt = /^\/?Date\((-?\d+)/i, Mt = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, Dt = { UT: 0, GMT: 0, EDT: -240, EST: -300, CDT: -300, CST: -360, MDT: -360, MST: -420, PDT: -420, PST: -480 };
        function St(e4) {
          var t4, n3, s4, i4, r4, a4, o3 = e4._i, u4 = yt.exec(o3) || gt.exec(o3), o3 = pt.length, l4 = kt.length;
          if (u4) {
            for (m3(e4).iso = true, t4 = 0, n3 = o3; t4 < n3; t4++)
              if (pt[t4][1].exec(u4[1])) {
                i4 = pt[t4][0], s4 = false !== pt[t4][2];
                break;
              }
            if (null == i4)
              e4._isValid = false;
            else {
              if (u4[3]) {
                for (t4 = 0, n3 = l4; t4 < n3; t4++)
                  if (kt[t4][1].exec(u4[3])) {
                    r4 = (u4[2] || " ") + kt[t4][0];
                    break;
                  }
                if (null == r4)
                  return void (e4._isValid = false);
              }
              if (s4 || null == r4) {
                if (u4[4]) {
                  if (!wt.exec(u4[4]))
                    return void (e4._isValid = false);
                  a4 = "Z";
                }
                e4._f = i4 + (r4 || "") + (a4 || ""), Tt(e4);
              } else
                e4._isValid = false;
            }
          } else
            e4._isValid = false;
        }
        function Yt(e4, t4, n3, s4, i4, r4) {
          e4 = [function(e5) {
            e5 = parseInt(e5, 10);
            {
              if (e5 <= 49)
                return 2e3 + e5;
              if (e5 <= 999)
                return 1900 + e5;
            }
            return e5;
          }(e4), Ue.indexOf(t4), parseInt(n3, 10), parseInt(s4, 10), parseInt(i4, 10)];
          return r4 && e4.push(parseInt(r4, 10)), e4;
        }
        function Ot(e4) {
          var t4, n3, s4, i4, r4 = Mt.exec(e4._i.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, ""));
          r4 ? (t4 = Yt(r4[4], r4[3], r4[2], r4[5], r4[6], r4[7]), n3 = r4[1], s4 = t4, i4 = e4, n3 && Qe.indexOf(n3) !== new Date(s4[0], s4[1], s4[2]).getDay() ? (m3(i4).weekdayMismatch = true, i4._isValid = false) : (e4._a = t4, e4._tzm = (n3 = r4[8], s4 = r4[9], i4 = r4[10], n3 ? Dt[n3] : s4 ? 0 : 60 * (((n3 = parseInt(i4, 10)) - (s4 = n3 % 100)) / 100) + s4), e4._d = Ze.apply(null, e4._a), e4._d.setUTCMinutes(e4._d.getUTCMinutes() - e4._tzm), m3(e4).rfc2822 = true)) : e4._isValid = false;
        }
        function bt(e4, t4, n3) {
          return null != e4 ? e4 : null != t4 ? t4 : n3;
        }
        function xt(e4) {
          var t4, n3, s4, i4, r4, a4, o3, u4, l4, h4, d3, c4 = [];
          if (!e4._d) {
            for (s4 = e4, i4 = new Date(f3.now()), n3 = s4._useUTC ? [i4.getUTCFullYear(), i4.getUTCMonth(), i4.getUTCDate()] : [i4.getFullYear(), i4.getMonth(), i4.getDate()], e4._w && null == e4._a[b3] && null == e4._a[O2] && (null != (i4 = (s4 = e4)._w).GG || null != i4.W || null != i4.E ? (u4 = 1, l4 = 4, r4 = bt(i4.GG, s4._a[Y], qe(W2(), 1, 4).year), a4 = bt(i4.W, 1), ((o3 = bt(i4.E, 1)) < 1 || 7 < o3) && (h4 = true)) : (u4 = s4._locale._week.dow, l4 = s4._locale._week.doy, d3 = qe(W2(), u4, l4), r4 = bt(i4.gg, s4._a[Y], d3.year), a4 = bt(i4.w, d3.week), null != i4.d ? ((o3 = i4.d) < 0 || 6 < o3) && (h4 = true) : null != i4.e ? (o3 = i4.e + u4, (i4.e < 0 || 6 < i4.e) && (h4 = true)) : o3 = u4), a4 < 1 || a4 > P2(r4, u4, l4) ? m3(s4)._overflowWeeks = true : null != h4 ? m3(s4)._overflowWeekday = true : (d3 = $e(r4, a4, o3, u4, l4), s4._a[Y] = d3.year, s4._dayOfYear = d3.dayOfYear)), null != e4._dayOfYear && (i4 = bt(e4._a[Y], n3[Y]), (e4._dayOfYear > Ae(i4) || 0 === e4._dayOfYear) && (m3(e4)._overflowDayOfYear = true), h4 = Ze(i4, 0, e4._dayOfYear), e4._a[O2] = h4.getUTCMonth(), e4._a[b3] = h4.getUTCDate()), t4 = 0; t4 < 3 && null == e4._a[t4]; ++t4)
              e4._a[t4] = c4[t4] = n3[t4];
            for (; t4 < 7; t4++)
              e4._a[t4] = c4[t4] = null == e4._a[t4] ? 2 === t4 ? 1 : 0 : e4._a[t4];
            24 === e4._a[x4] && 0 === e4._a[T4] && 0 === e4._a[N3] && 0 === e4._a[Ne] && (e4._nextDay = true, e4._a[x4] = 0), e4._d = (e4._useUTC ? Ze : je).apply(null, c4), r4 = e4._useUTC ? e4._d.getUTCDay() : e4._d.getDay(), null != e4._tzm && e4._d.setUTCMinutes(e4._d.getUTCMinutes() - e4._tzm), e4._nextDay && (e4._a[x4] = 24), e4._w && void 0 !== e4._w.d && e4._w.d !== r4 && (m3(e4).weekdayMismatch = true);
          }
        }
        function Tt(e4) {
          if (e4._f === f3.ISO_8601)
            St(e4);
          else if (e4._f === f3.RFC_2822)
            Ot(e4);
          else {
            e4._a = [], m3(e4).empty = true;
            for (var t4, n3, s4, i4, r4, a4 = "" + e4._i, o3 = a4.length, u4 = 0, l4 = ae(e4._f, e4._locale).match(te) || [], h4 = l4.length, d3 = 0; d3 < h4; d3++)
              n3 = l4[d3], (t4 = (a4.match(Oe(n3, e4)) || [])[0]) && (0 < (s4 = a4.substr(0, a4.indexOf(t4))).length && m3(e4).unusedInput.push(s4), a4 = a4.slice(a4.indexOf(t4) + t4.length), u4 += t4.length), ie[n3] ? (t4 ? m3(e4).empty = false : m3(e4).unusedTokens.push(n3), s4 = n3, r4 = e4, null != (i4 = t4) && c3(xe, s4) && xe[s4](i4, r4._a, r4, s4)) : e4._strict && !t4 && m3(e4).unusedTokens.push(n3);
            m3(e4).charsLeftOver = o3 - u4, 0 < a4.length && m3(e4).unusedInput.push(a4), e4._a[x4] <= 12 && true === m3(e4).bigHour && 0 < e4._a[x4] && (m3(e4).bigHour = void 0), m3(e4).parsedDateParts = e4._a.slice(0), m3(e4).meridiem = e4._meridiem, e4._a[x4] = function(e5, t5, n4) {
              if (null == n4)
                return t5;
              return null != e5.meridiemHour ? e5.meridiemHour(t5, n4) : null != e5.isPM ? ((e5 = e5.isPM(n4)) && t5 < 12 && (t5 += 12), t5 = e5 || 12 !== t5 ? t5 : 0) : t5;
            }(e4._locale, e4._a[x4], e4._meridiem), null !== (o3 = m3(e4).era) && (e4._a[Y] = e4._locale.erasConvertYear(o3, e4._a[Y])), xt(e4), _t(e4);
          }
        }
        function Nt(e4) {
          var t4, n3, s4, i4 = e4._i, r4 = e4._f;
          if (e4._locale = e4._locale || mt(e4._l), null === i4 || void 0 === r4 && "" === i4)
            return I3({ nullInput: true });
          if ("string" == typeof i4 && (e4._i = i4 = e4._locale.preparse(i4)), h3(i4))
            return new q3(_t(i4));
          if (V3(i4))
            e4._d = i4;
          else if (a3(r4))
            !function(e5) {
              var t5, n4, s5, i5, r5, a4, o3 = false, u4 = e5._f.length;
              if (0 === u4)
                return m3(e5).invalidFormat = true, e5._d = new Date(NaN);
              for (i5 = 0; i5 < u4; i5++)
                r5 = 0, a4 = false, t5 = $3({}, e5), null != e5._useUTC && (t5._useUTC = e5._useUTC), t5._f = e5._f[i5], Tt(t5), A3(t5) && (a4 = true), r5 = (r5 += m3(t5).charsLeftOver) + 10 * m3(t5).unusedTokens.length, m3(t5).score = r5, o3 ? r5 < s5 && (s5 = r5, n4 = t5) : (null == s5 || r5 < s5 || a4) && (s5 = r5, n4 = t5, a4 && (o3 = true));
              E(e5, n4 || t5);
            }(e4);
          else if (r4)
            Tt(e4);
          else if (o2(r4 = (i4 = e4)._i))
            i4._d = new Date(f3.now());
          else
            V3(r4) ? i4._d = new Date(r4.valueOf()) : "string" == typeof r4 ? (n3 = i4, null !== (t4 = vt.exec(n3._i)) ? n3._d = new Date(+t4[1]) : (St(n3), false === n3._isValid && (delete n3._isValid, Ot(n3), false === n3._isValid && (delete n3._isValid, n3._strict ? n3._isValid = false : f3.createFromInputFallback(n3))))) : a3(r4) ? (i4._a = G2(r4.slice(0), function(e5) {
              return parseInt(e5, 10);
            }), xt(i4)) : F3(r4) ? (t4 = i4)._d || (s4 = void 0 === (n3 = ue(t4._i)).day ? n3.date : n3.day, t4._a = G2([n3.year, n3.month, s4, n3.hour, n3.minute, n3.second, n3.millisecond], function(e5) {
              return e5 && parseInt(e5, 10);
            }), xt(t4)) : u3(r4) ? i4._d = new Date(r4) : f3.createFromInputFallback(i4);
          return A3(e4) || (e4._d = null), e4;
        }
        function Pt(e4, t4, n3, s4, i4) {
          var r4 = {};
          return true !== t4 && false !== t4 || (s4 = t4, t4 = void 0), true !== n3 && false !== n3 || (s4 = n3, n3 = void 0), (F3(e4) && L3(e4) || a3(e4) && 0 === e4.length) && (e4 = void 0), r4._isAMomentObject = true, r4._useUTC = r4._isUTC = i4, r4._l = n3, r4._i = e4, r4._f = t4, r4._strict = s4, (i4 = new q3(_t(Nt(i4 = r4))))._nextDay && (i4.add(1, "d"), i4._nextDay = void 0), i4;
        }
        function W2(e4, t4, n3, s4) {
          return Pt(e4, t4, n3, s4, false);
        }
        f3.createFromInputFallback = e3("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(e4) {
          e4._d = new Date(e4._i + (e4._useUTC ? " UTC" : ""));
        }), f3.ISO_8601 = function() {
        }, f3.RFC_2822 = function() {
        };
        ge = e3("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
          var e4 = W2.apply(null, arguments);
          return this.isValid() && e4.isValid() ? e4 < this ? this : e4 : I3();
        }), we = e3("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
          var e4 = W2.apply(null, arguments);
          return this.isValid() && e4.isValid() ? this < e4 ? this : e4 : I3();
        });
        function Rt(e4, t4) {
          var n3, s4;
          if (!(t4 = 1 === t4.length && a3(t4[0]) ? t4[0] : t4).length)
            return W2();
          for (n3 = t4[0], s4 = 1; s4 < t4.length; ++s4)
            t4[s4].isValid() && !t4[s4][e4](n3) || (n3 = t4[s4]);
          return n3;
        }
        var Wt = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
        function Ct(e4) {
          var e4 = ue(e4), t4 = e4.year || 0, n3 = e4.quarter || 0, s4 = e4.month || 0, i4 = e4.week || e4.isoWeek || 0, r4 = e4.day || 0, a4 = e4.hour || 0, o3 = e4.minute || 0, u4 = e4.second || 0, l4 = e4.millisecond || 0;
          this._isValid = function(e5) {
            var t5, n4, s5 = false, i5 = Wt.length;
            for (t5 in e5)
              if (c3(e5, t5) && (-1 === S2.call(Wt, t5) || null != e5[t5] && isNaN(e5[t5])))
                return false;
            for (n4 = 0; n4 < i5; ++n4)
              if (e5[Wt[n4]]) {
                if (s5)
                  return false;
                parseFloat(e5[Wt[n4]]) !== g4(e5[Wt[n4]]) && (s5 = true);
              }
            return true;
          }(e4), this._milliseconds = +l4 + 1e3 * u4 + 6e4 * o3 + 1e3 * a4 * 60 * 60, this._days = +r4 + 7 * i4, this._months = +s4 + 3 * n3 + 12 * t4, this._data = {}, this._locale = mt(), this._bubble();
        }
        function Ut(e4) {
          return e4 instanceof Ct;
        }
        function Ht(e4) {
          return e4 < 0 ? -1 * Math.round(-1 * e4) : Math.round(e4);
        }
        function Ft(e4, n3) {
          s3(e4, 0, 0, function() {
            var e5 = this.utcOffset(), t4 = "+";
            return e5 < 0 && (e5 = -e5, t4 = "-"), t4 + r3(~~(e5 / 60), 2) + n3 + r3(~~e5 % 60, 2);
          });
        }
        Ft("Z", ":"), Ft("ZZ", ""), v3("Z", Ye), v3("ZZ", Ye), D2(["Z", "ZZ"], function(e4, t4, n3) {
          n3._useUTC = true, n3._tzm = Vt(Ye, e4);
        });
        var Lt = /([\+\-]|\d\d)/gi;
        function Vt(e4, t4) {
          var t4 = (t4 || "").match(e4);
          return null === t4 ? null : 0 === (t4 = 60 * (e4 = ((t4[t4.length - 1] || []) + "").match(Lt) || ["-", 0, 0])[1] + g4(e4[2])) ? 0 : "+" === e4[0] ? t4 : -t4;
        }
        function Gt(e4, t4) {
          var n3;
          return t4._isUTC ? (t4 = t4.clone(), n3 = (h3(e4) || V3(e4) ? e4 : W2(e4)).valueOf() - t4.valueOf(), t4._d.setTime(t4._d.valueOf() + n3), f3.updateOffset(t4, false), t4) : W2(e4).local();
        }
        function Et(e4) {
          return -Math.round(e4._d.getTimezoneOffset());
        }
        function At() {
          return !!this.isValid() && (this._isUTC && 0 === this._offset);
        }
        f3.updateOffset = function() {
        };
        var It = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, jt = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function C3(e4, t4) {
          var n3, s4 = e4, i4 = null;
          return Ut(e4) ? s4 = { ms: e4._milliseconds, d: e4._days, M: e4._months } : u3(e4) || !isNaN(+e4) ? (s4 = {}, t4 ? s4[t4] = +e4 : s4.milliseconds = +e4) : (i4 = It.exec(e4)) ? (n3 = "-" === i4[1] ? -1 : 1, s4 = { y: 0, d: g4(i4[b3]) * n3, h: g4(i4[x4]) * n3, m: g4(i4[T4]) * n3, s: g4(i4[N3]) * n3, ms: g4(Ht(1e3 * i4[Ne])) * n3 }) : (i4 = jt.exec(e4)) ? (n3 = "-" === i4[1] ? -1 : 1, s4 = { y: Zt(i4[2], n3), M: Zt(i4[3], n3), w: Zt(i4[4], n3), d: Zt(i4[5], n3), h: Zt(i4[6], n3), m: Zt(i4[7], n3), s: Zt(i4[8], n3) }) : null == s4 ? s4 = {} : "object" == typeof s4 && ("from" in s4 || "to" in s4) && (t4 = function(e5, t5) {
            var n4;
            if (!e5.isValid() || !t5.isValid())
              return { milliseconds: 0, months: 0 };
            t5 = Gt(t5, e5), e5.isBefore(t5) ? n4 = zt(e5, t5) : ((n4 = zt(t5, e5)).milliseconds = -n4.milliseconds, n4.months = -n4.months);
            return n4;
          }(W2(s4.from), W2(s4.to)), (s4 = {}).ms = t4.milliseconds, s4.M = t4.months), i4 = new Ct(s4), Ut(e4) && c3(e4, "_locale") && (i4._locale = e4._locale), Ut(e4) && c3(e4, "_isValid") && (i4._isValid = e4._isValid), i4;
        }
        function Zt(e4, t4) {
          e4 = e4 && parseFloat(e4.replace(",", "."));
          return (isNaN(e4) ? 0 : e4) * t4;
        }
        function zt(e4, t4) {
          var n3 = {};
          return n3.months = t4.month() - e4.month() + 12 * (t4.year() - e4.year()), e4.clone().add(n3.months, "M").isAfter(t4) && --n3.months, n3.milliseconds = +t4 - +e4.clone().add(n3.months, "M"), n3;
        }
        function $t(s4, i4) {
          return function(e4, t4) {
            var n3;
            return null === t4 || isNaN(+t4) || (Q2(i4, "moment()." + i4 + "(period, number) is deprecated. Please use moment()." + i4 + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), n3 = e4, e4 = t4, t4 = n3), qt(this, C3(e4, t4), s4), this;
          };
        }
        function qt(e4, t4, n3, s4) {
          var i4 = t4._milliseconds, r4 = Ht(t4._days), t4 = Ht(t4._months);
          e4.isValid() && (s4 = null == s4 || s4, t4 && Ve(e4, ce(e4, "Month") + t4 * n3), r4 && fe(e4, "Date", ce(e4, "Date") + r4 * n3), i4 && e4._d.setTime(e4._d.valueOf() + i4 * n3), s4 && f3.updateOffset(e4, r4 || t4));
        }
        C3.fn = Ct.prototype, C3.invalid = function() {
          return C3(NaN);
        };
        Ce = $t(1, "add"), Je = $t(-1, "subtract");
        function Bt(e4) {
          return "string" == typeof e4 || e4 instanceof String;
        }
        function Jt(e4) {
          return h3(e4) || V3(e4) || Bt(e4) || u3(e4) || function(t4) {
            var e5 = a3(t4), n3 = false;
            e5 && (n3 = 0 === t4.filter(function(e6) {
              return !u3(e6) && Bt(t4);
            }).length);
            return e5 && n3;
          }(e4) || function(e5) {
            var t4, n3, s4 = F3(e5) && !L3(e5), i4 = false, r4 = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"], a4 = r4.length;
            for (t4 = 0; t4 < a4; t4 += 1)
              n3 = r4[t4], i4 = i4 || c3(e5, n3);
            return s4 && i4;
          }(e4) || null == e4;
        }
        function Qt(e4, t4) {
          if (e4.date() < t4.date())
            return -Qt(t4, e4);
          var n3 = 12 * (t4.year() - e4.year()) + (t4.month() - e4.month()), s4 = e4.clone().add(n3, "months"), t4 = t4 - s4 < 0 ? (t4 - s4) / (s4 - e4.clone().add(n3 - 1, "months")) : (t4 - s4) / (e4.clone().add(1 + n3, "months") - s4);
          return -(n3 + t4) || 0;
        }
        function Xt(e4) {
          return void 0 === e4 ? this._locale._abbr : (null != (e4 = mt(e4)) && (this._locale = e4), this);
        }
        f3.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", f3.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
        Xe = e3("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e4) {
          return void 0 === e4 ? this.localeData() : this.locale(e4);
        });
        function Kt() {
          return this._locale;
        }
        var en2 = 126227808e5;
        function tn2(e4, t4) {
          return (e4 % t4 + t4) % t4;
        }
        function nn2(e4, t4, n3) {
          return e4 < 100 && 0 <= e4 ? new Date(e4 + 400, t4, n3) - en2 : new Date(e4, t4, n3).valueOf();
        }
        function sn(e4, t4, n3) {
          return e4 < 100 && 0 <= e4 ? Date.UTC(e4 + 400, t4, n3) - en2 : Date.UTC(e4, t4, n3);
        }
        function rn(e4, t4) {
          return t4.erasAbbrRegex(e4);
        }
        function an() {
          for (var e4 = [], t4 = [], n3 = [], s4 = [], i4 = this.eras(), r4 = 0, a4 = i4.length; r4 < a4; ++r4)
            t4.push(M2(i4[r4].name)), e4.push(M2(i4[r4].abbr)), n3.push(M2(i4[r4].narrow)), s4.push(M2(i4[r4].name)), s4.push(M2(i4[r4].abbr)), s4.push(M2(i4[r4].narrow));
          this._erasRegex = new RegExp("^(" + s4.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + t4.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + e4.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp("^(" + n3.join("|") + ")", "i");
        }
        function on(e4, t4) {
          s3(0, [e4, e4.length], 0, t4);
        }
        function un(e4, t4, n3, s4, i4) {
          var r4;
          return null == e4 ? qe(this, s4, i4).year : (r4 = P2(e4, s4, i4), function(e5, t5, n4, s5, i5) {
            e5 = $e(e5, t5, n4, s5, i5), t5 = Ze(e5.year, 0, e5.dayOfYear);
            return this.year(t5.getUTCFullYear()), this.month(t5.getUTCMonth()), this.date(t5.getUTCDate()), this;
          }.call(this, e4, t4 = r4 < t4 ? r4 : t4, n3, s4, i4));
        }
        s3("N", 0, 0, "eraAbbr"), s3("NN", 0, 0, "eraAbbr"), s3("NNN", 0, 0, "eraAbbr"), s3("NNNN", 0, 0, "eraName"), s3("NNNNN", 0, 0, "eraNarrow"), s3("y", ["y", 1], "yo", "eraYear"), s3("y", ["yy", 2], 0, "eraYear"), s3("y", ["yyy", 3], 0, "eraYear"), s3("y", ["yyyy", 4], 0, "eraYear"), v3("N", rn), v3("NN", rn), v3("NNN", rn), v3("NNNN", function(e4, t4) {
          return t4.erasNameRegex(e4);
        }), v3("NNNNN", function(e4, t4) {
          return t4.erasNarrowRegex(e4);
        }), D2(["N", "NN", "NNN", "NNNN", "NNNNN"], function(e4, t4, n3, s4) {
          s4 = n3._locale.erasParse(e4, s4, n3._strict);
          s4 ? m3(n3).era = s4 : m3(n3).invalidEra = e4;
        }), v3("y", Me), v3("yy", Me), v3("yyy", Me), v3("yyyy", Me), v3("yo", function(e4, t4) {
          return t4._eraYearOrdinalRegex || Me;
        }), D2(["y", "yy", "yyy", "yyyy"], Y), D2(["yo"], function(e4, t4, n3, s4) {
          var i4;
          n3._locale._eraYearOrdinalRegex && (i4 = e4.match(n3._locale._eraYearOrdinalRegex)), n3._locale.eraYearOrdinalParse ? t4[Y] = n3._locale.eraYearOrdinalParse(e4, i4) : t4[Y] = parseInt(e4, 10);
        }), s3(0, ["gg", 2], 0, function() {
          return this.weekYear() % 100;
        }), s3(0, ["GG", 2], 0, function() {
          return this.isoWeekYear() % 100;
        }), on("gggg", "weekYear"), on("ggggg", "weekYear"), on("GGGG", "isoWeekYear"), on("GGGGG", "isoWeekYear"), t3("weekYear", "gg"), t3("isoWeekYear", "GG"), n2("weekYear", 1), n2("isoWeekYear", 1), v3("G", De), v3("g", De), v3("GG", p3, w4), v3("gg", p3, w4), v3("GGGG", ke, _e), v3("gggg", ke, _e), v3("GGGGG", ve, ye), v3("ggggg", ve, ye), Te(["gggg", "ggggg", "GGGG", "GGGGG"], function(e4, t4, n3, s4) {
          t4[s4.substr(0, 2)] = g4(e4);
        }), Te(["gg", "GG"], function(e4, t4, n3, s4) {
          t4[s4] = f3.parseTwoDigitYear(e4);
        }), s3("Q", 0, "Qo", "quarter"), t3("quarter", "Q"), n2("quarter", 7), v3("Q", i3), D2("Q", function(e4, t4) {
          t4[O2] = 3 * (g4(e4) - 1);
        }), s3("D", ["DD", 2], "Do", "date"), t3("date", "D"), n2("date", 9), v3("D", p3), v3("DD", p3, w4), v3("Do", function(e4, t4) {
          return e4 ? t4._dayOfMonthOrdinalParse || t4._ordinalParse : t4._dayOfMonthOrdinalParseLenient;
        }), D2(["D", "DD"], b3), D2("Do", function(e4, t4) {
          t4[b3] = g4(e4.match(p3)[0]);
        });
        ke = de("Date", true);
        s3("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), t3("dayOfYear", "DDD"), n2("dayOfYear", 4), v3("DDD", pe), v3("DDDD", me), D2(["DDD", "DDDD"], function(e4, t4, n3) {
          n3._dayOfYear = g4(e4);
        }), s3("m", ["mm", 2], 0, "minute"), t3("minute", "m"), n2("minute", 14), v3("m", p3), v3("mm", p3, w4), D2(["m", "mm"], T4);
        var ln, _e = de("Minutes", false), ve = (s3("s", ["ss", 2], 0, "second"), t3("second", "s"), n2("second", 15), v3("s", p3), v3("ss", p3, w4), D2(["s", "ss"], N3), de("Seconds", false));
        for (s3("S", 0, 0, function() {
          return ~~(this.millisecond() / 100);
        }), s3(0, ["SS", 2], 0, function() {
          return ~~(this.millisecond() / 10);
        }), s3(0, ["SSS", 3], 0, "millisecond"), s3(0, ["SSSS", 4], 0, function() {
          return 10 * this.millisecond();
        }), s3(0, ["SSSSS", 5], 0, function() {
          return 100 * this.millisecond();
        }), s3(0, ["SSSSSS", 6], 0, function() {
          return 1e3 * this.millisecond();
        }), s3(0, ["SSSSSSS", 7], 0, function() {
          return 1e4 * this.millisecond();
        }), s3(0, ["SSSSSSSS", 8], 0, function() {
          return 1e5 * this.millisecond();
        }), s3(0, ["SSSSSSSSS", 9], 0, function() {
          return 1e6 * this.millisecond();
        }), t3("millisecond", "ms"), n2("millisecond", 16), v3("S", pe, i3), v3("SS", pe, w4), v3("SSS", pe, me), ln = "SSSS"; ln.length <= 9; ln += "S")
          v3(ln, Me);
        function hn(e4, t4) {
          t4[Ne] = g4(1e3 * ("0." + e4));
        }
        for (ln = "S"; ln.length <= 9; ln += "S")
          D2(ln, hn);
        ye = de("Milliseconds", false), s3("z", 0, 0, "zoneAbbr"), s3("zz", 0, 0, "zoneName");
        i3 = q3.prototype;
        function dn(e4) {
          return e4;
        }
        i3.add = Ce, i3.calendar = function(e4, t4) {
          1 === arguments.length && (arguments[0] ? Jt(arguments[0]) ? (e4 = arguments[0], t4 = void 0) : function(e5) {
            for (var t5 = F3(e5) && !L3(e5), n4 = false, s4 = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"], i4 = 0; i4 < s4.length; i4 += 1)
              n4 = n4 || c3(e5, s4[i4]);
            return t5 && n4;
          }(arguments[0]) && (t4 = arguments[0], e4 = void 0) : t4 = e4 = void 0);
          var e4 = e4 || W2(), n3 = Gt(e4, this).startOf("day"), n3 = f3.calendarFormat(this, n3) || "sameElse", t4 = t4 && (d2(t4[n3]) ? t4[n3].call(this, e4) : t4[n3]);
          return this.format(t4 || this.localeData().calendar(n3, this, W2(e4)));
        }, i3.clone = function() {
          return new q3(this);
        }, i3.diff = function(e4, t4, n3) {
          var s4, i4, r4;
          if (!this.isValid())
            return NaN;
          if (!(s4 = Gt(e4, this)).isValid())
            return NaN;
          switch (i4 = 6e4 * (s4.utcOffset() - this.utcOffset()), t4 = _3(t4)) {
            case "year":
              r4 = Qt(this, s4) / 12;
              break;
            case "month":
              r4 = Qt(this, s4);
              break;
            case "quarter":
              r4 = Qt(this, s4) / 3;
              break;
            case "second":
              r4 = (this - s4) / 1e3;
              break;
            case "minute":
              r4 = (this - s4) / 6e4;
              break;
            case "hour":
              r4 = (this - s4) / 36e5;
              break;
            case "day":
              r4 = (this - s4 - i4) / 864e5;
              break;
            case "week":
              r4 = (this - s4 - i4) / 6048e5;
              break;
            default:
              r4 = this - s4;
          }
          return n3 ? r4 : y3(r4);
        }, i3.endOf = function(e4) {
          var t4, n3;
          if (void 0 === (e4 = _3(e4)) || "millisecond" === e4 || !this.isValid())
            return this;
          switch (n3 = this._isUTC ? sn : nn2, e4) {
            case "year":
              t4 = n3(this.year() + 1, 0, 1) - 1;
              break;
            case "quarter":
              t4 = n3(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
              break;
            case "month":
              t4 = n3(this.year(), this.month() + 1, 1) - 1;
              break;
            case "week":
              t4 = n3(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
              break;
            case "isoWeek":
              t4 = n3(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
              break;
            case "day":
            case "date":
              t4 = n3(this.year(), this.month(), this.date() + 1) - 1;
              break;
            case "hour":
              t4 = this._d.valueOf(), t4 += 36e5 - tn2(t4 + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5) - 1;
              break;
            case "minute":
              t4 = this._d.valueOf(), t4 += 6e4 - tn2(t4, 6e4) - 1;
              break;
            case "second":
              t4 = this._d.valueOf(), t4 += 1e3 - tn2(t4, 1e3) - 1;
              break;
          }
          return this._d.setTime(t4), f3.updateOffset(this, true), this;
        }, i3.format = function(e4) {
          return e4 = e4 || (this.isUtc() ? f3.defaultFormatUtc : f3.defaultFormat), e4 = re(this, e4), this.localeData().postformat(e4);
        }, i3.from = function(e4, t4) {
          return this.isValid() && (h3(e4) && e4.isValid() || W2(e4).isValid()) ? C3({ to: this, from: e4 }).locale(this.locale()).humanize(!t4) : this.localeData().invalidDate();
        }, i3.fromNow = function(e4) {
          return this.from(W2(), e4);
        }, i3.to = function(e4, t4) {
          return this.isValid() && (h3(e4) && e4.isValid() || W2(e4).isValid()) ? C3({ from: this, to: e4 }).locale(this.locale()).humanize(!t4) : this.localeData().invalidDate();
        }, i3.toNow = function(e4) {
          return this.to(W2(), e4);
        }, i3.get = function(e4) {
          return d2(this[e4 = _3(e4)]) ? this[e4]() : this;
        }, i3.invalidAt = function() {
          return m3(this).overflow;
        }, i3.isAfter = function(e4, t4) {
          return e4 = h3(e4) ? e4 : W2(e4), !(!this.isValid() || !e4.isValid()) && ("millisecond" === (t4 = _3(t4) || "millisecond") ? this.valueOf() > e4.valueOf() : e4.valueOf() < this.clone().startOf(t4).valueOf());
        }, i3.isBefore = function(e4, t4) {
          return e4 = h3(e4) ? e4 : W2(e4), !(!this.isValid() || !e4.isValid()) && ("millisecond" === (t4 = _3(t4) || "millisecond") ? this.valueOf() < e4.valueOf() : this.clone().endOf(t4).valueOf() < e4.valueOf());
        }, i3.isBetween = function(e4, t4, n3, s4) {
          return e4 = h3(e4) ? e4 : W2(e4), t4 = h3(t4) ? t4 : W2(t4), !!(this.isValid() && e4.isValid() && t4.isValid()) && (("(" === (s4 = s4 || "()")[0] ? this.isAfter(e4, n3) : !this.isBefore(e4, n3)) && (")" === s4[1] ? this.isBefore(t4, n3) : !this.isAfter(t4, n3)));
        }, i3.isSame = function(e4, t4) {
          var e4 = h3(e4) ? e4 : W2(e4);
          return !(!this.isValid() || !e4.isValid()) && ("millisecond" === (t4 = _3(t4) || "millisecond") ? this.valueOf() === e4.valueOf() : (e4 = e4.valueOf(), this.clone().startOf(t4).valueOf() <= e4 && e4 <= this.clone().endOf(t4).valueOf()));
        }, i3.isSameOrAfter = function(e4, t4) {
          return this.isSame(e4, t4) || this.isAfter(e4, t4);
        }, i3.isSameOrBefore = function(e4, t4) {
          return this.isSame(e4, t4) || this.isBefore(e4, t4);
        }, i3.isValid = function() {
          return A3(this);
        }, i3.lang = Xe, i3.locale = Xt, i3.localeData = Kt, i3.max = we, i3.min = ge, i3.parsingFlags = function() {
          return E({}, m3(this));
        }, i3.set = function(e4, t4) {
          if ("object" == typeof e4)
            for (var n3 = function(e5) {
              var t5, n4 = [];
              for (t5 in e5)
                c3(e5, t5) && n4.push({ unit: t5, priority: le[t5] });
              return n4.sort(function(e6, t6) {
                return e6.priority - t6.priority;
              }), n4;
            }(e4 = ue(e4)), s4 = n3.length, i4 = 0; i4 < s4; i4++)
              this[n3[i4].unit](e4[n3[i4].unit]);
          else if (d2(this[e4 = _3(e4)]))
            return this[e4](t4);
          return this;
        }, i3.startOf = function(e4) {
          var t4, n3;
          if (void 0 === (e4 = _3(e4)) || "millisecond" === e4 || !this.isValid())
            return this;
          switch (n3 = this._isUTC ? sn : nn2, e4) {
            case "year":
              t4 = n3(this.year(), 0, 1);
              break;
            case "quarter":
              t4 = n3(this.year(), this.month() - this.month() % 3, 1);
              break;
            case "month":
              t4 = n3(this.year(), this.month(), 1);
              break;
            case "week":
              t4 = n3(this.year(), this.month(), this.date() - this.weekday());
              break;
            case "isoWeek":
              t4 = n3(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
              break;
            case "day":
            case "date":
              t4 = n3(this.year(), this.month(), this.date());
              break;
            case "hour":
              t4 = this._d.valueOf(), t4 -= tn2(t4 + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5);
              break;
            case "minute":
              t4 = this._d.valueOf(), t4 -= tn2(t4, 6e4);
              break;
            case "second":
              t4 = this._d.valueOf(), t4 -= tn2(t4, 1e3);
              break;
          }
          return this._d.setTime(t4), f3.updateOffset(this, true), this;
        }, i3.subtract = Je, i3.toArray = function() {
          var e4 = this;
          return [e4.year(), e4.month(), e4.date(), e4.hour(), e4.minute(), e4.second(), e4.millisecond()];
        }, i3.toObject = function() {
          var e4 = this;
          return { years: e4.year(), months: e4.month(), date: e4.date(), hours: e4.hours(), minutes: e4.minutes(), seconds: e4.seconds(), milliseconds: e4.milliseconds() };
        }, i3.toDate = function() {
          return new Date(this.valueOf());
        }, i3.toISOString = function(e4) {
          if (!this.isValid())
            return null;
          var t4 = (e4 = true !== e4) ? this.clone().utc() : this;
          return t4.year() < 0 || 9999 < t4.year() ? re(t4, e4 ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : d2(Date.prototype.toISOString) ? e4 ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", re(t4, "Z")) : re(t4, e4 ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
        }, i3.inspect = function() {
          if (!this.isValid())
            return "moment.invalid(/* " + this._i + " */)";
          var e4, t4 = "moment", n3 = "";
          return this.isLocal() || (t4 = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone", n3 = "Z"), t4 = "[" + t4 + '("]', e4 = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", this.format(t4 + e4 + "-MM-DD[T]HH:mm:ss.SSS" + (n3 + '[")]'));
        }, "undefined" != typeof Symbol && null != Symbol.for && (i3[Symbol.for("nodejs.util.inspect.custom")] = function() {
          return "Moment<" + this.format() + ">";
        }), i3.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, i3.toString = function() {
          return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        }, i3.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, i3.valueOf = function() {
          return this._d.valueOf() - 6e4 * (this._offset || 0);
        }, i3.creationData = function() {
          return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict };
        }, i3.eraName = function() {
          for (var e4, t4 = this.localeData().eras(), n3 = 0, s4 = t4.length; n3 < s4; ++n3) {
            if (e4 = this.clone().startOf("day").valueOf(), t4[n3].since <= e4 && e4 <= t4[n3].until)
              return t4[n3].name;
            if (t4[n3].until <= e4 && e4 <= t4[n3].since)
              return t4[n3].name;
          }
          return "";
        }, i3.eraNarrow = function() {
          for (var e4, t4 = this.localeData().eras(), n3 = 0, s4 = t4.length; n3 < s4; ++n3) {
            if (e4 = this.clone().startOf("day").valueOf(), t4[n3].since <= e4 && e4 <= t4[n3].until)
              return t4[n3].narrow;
            if (t4[n3].until <= e4 && e4 <= t4[n3].since)
              return t4[n3].narrow;
          }
          return "";
        }, i3.eraAbbr = function() {
          for (var e4, t4 = this.localeData().eras(), n3 = 0, s4 = t4.length; n3 < s4; ++n3) {
            if (e4 = this.clone().startOf("day").valueOf(), t4[n3].since <= e4 && e4 <= t4[n3].until)
              return t4[n3].abbr;
            if (t4[n3].until <= e4 && e4 <= t4[n3].since)
              return t4[n3].abbr;
          }
          return "";
        }, i3.eraYear = function() {
          for (var e4, t4, n3 = this.localeData().eras(), s4 = 0, i4 = n3.length; s4 < i4; ++s4)
            if (e4 = n3[s4].since <= n3[s4].until ? 1 : -1, t4 = this.clone().startOf("day").valueOf(), n3[s4].since <= t4 && t4 <= n3[s4].until || n3[s4].until <= t4 && t4 <= n3[s4].since)
              return (this.year() - f3(n3[s4].since).year()) * e4 + n3[s4].offset;
          return this.year();
        }, i3.year = Ie, i3.isLeapYear = function() {
          return he(this.year());
        }, i3.weekYear = function(e4) {
          return un.call(this, e4, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
        }, i3.isoWeekYear = function(e4) {
          return un.call(this, e4, this.isoWeek(), this.isoWeekday(), 1, 4);
        }, i3.quarter = i3.quarters = function(e4) {
          return null == e4 ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e4 - 1) + this.month() % 3);
        }, i3.month = Ge, i3.daysInMonth = function() {
          return We(this.year(), this.month());
        }, i3.week = i3.weeks = function(e4) {
          var t4 = this.localeData().week(this);
          return null == e4 ? t4 : this.add(7 * (e4 - t4), "d");
        }, i3.isoWeek = i3.isoWeeks = function(e4) {
          var t4 = qe(this, 1, 4).week;
          return null == e4 ? t4 : this.add(7 * (e4 - t4), "d");
        }, i3.weeksInYear = function() {
          var e4 = this.localeData()._week;
          return P2(this.year(), e4.dow, e4.doy);
        }, i3.weeksInWeekYear = function() {
          var e4 = this.localeData()._week;
          return P2(this.weekYear(), e4.dow, e4.doy);
        }, i3.isoWeeksInYear = function() {
          return P2(this.year(), 1, 4);
        }, i3.isoWeeksInISOWeekYear = function() {
          return P2(this.isoWeekYear(), 1, 4);
        }, i3.date = ke, i3.day = i3.days = function(e4) {
          if (!this.isValid())
            return null != e4 ? this : NaN;
          var t4, n3, s4 = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
          return null != e4 ? (t4 = e4, n3 = this.localeData(), e4 = "string" != typeof t4 ? t4 : isNaN(t4) ? "number" == typeof (t4 = n3.weekdaysParse(t4)) ? t4 : null : parseInt(t4, 10), this.add(e4 - s4, "d")) : s4;
        }, i3.weekday = function(e4) {
          if (!this.isValid())
            return null != e4 ? this : NaN;
          var t4 = (this.day() + 7 - this.localeData()._week.dow) % 7;
          return null == e4 ? t4 : this.add(e4 - t4, "d");
        }, i3.isoWeekday = function(e4) {
          return this.isValid() ? null != e4 ? (t4 = e4, n3 = this.localeData(), n3 = "string" == typeof t4 ? n3.weekdaysParse(t4) % 7 || 7 : isNaN(t4) ? null : t4, this.day(this.day() % 7 ? n3 : n3 - 7)) : this.day() || 7 : null != e4 ? this : NaN;
          var t4, n3;
        }, i3.dayOfYear = function(e4) {
          var t4 = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
          return null == e4 ? t4 : this.add(e4 - t4, "d");
        }, i3.hour = i3.hours = k3, i3.minute = i3.minutes = _e, i3.second = i3.seconds = ve, i3.millisecond = i3.milliseconds = ye, i3.utcOffset = function(e4, t4, n3) {
          var s4, i4 = this._offset || 0;
          if (!this.isValid())
            return null != e4 ? this : NaN;
          if (null == e4)
            return this._isUTC ? i4 : Et(this);
          if ("string" == typeof e4) {
            if (null === (e4 = Vt(Ye, e4)))
              return this;
          } else
            Math.abs(e4) < 16 && !n3 && (e4 *= 60);
          return !this._isUTC && t4 && (s4 = Et(this)), this._offset = e4, this._isUTC = true, null != s4 && this.add(s4, "m"), i4 !== e4 && (!t4 || this._changeInProgress ? qt(this, C3(e4 - i4, "m"), 1, false) : this._changeInProgress || (this._changeInProgress = true, f3.updateOffset(this, true), this._changeInProgress = null)), this;
        }, i3.utc = function(e4) {
          return this.utcOffset(0, e4);
        }, i3.local = function(e4) {
          return this._isUTC && (this.utcOffset(0, e4), this._isUTC = false, e4 && this.subtract(Et(this), "m")), this;
        }, i3.parseZone = function() {
          var e4;
          return null != this._tzm ? this.utcOffset(this._tzm, false, true) : "string" == typeof this._i && (null != (e4 = Vt(Se, this._i)) ? this.utcOffset(e4) : this.utcOffset(0, true)), this;
        }, i3.hasAlignedHourOffset = function(e4) {
          return !!this.isValid() && (e4 = e4 ? W2(e4).utcOffset() : 0, (this.utcOffset() - e4) % 60 == 0);
        }, i3.isDST = function() {
          return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
        }, i3.isLocal = function() {
          return !!this.isValid() && !this._isUTC;
        }, i3.isUtcOffset = function() {
          return !!this.isValid() && this._isUTC;
        }, i3.isUtc = At, i3.isUTC = At, i3.zoneAbbr = function() {
          return this._isUTC ? "UTC" : "";
        }, i3.zoneName = function() {
          return this._isUTC ? "Coordinated Universal Time" : "";
        }, i3.dates = e3("dates accessor is deprecated. Use date instead.", ke), i3.months = e3("months accessor is deprecated. Use month instead", Ge), i3.years = e3("years accessor is deprecated. Use year instead", Ie), i3.zone = e3("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", function(e4, t4) {
          return null != e4 ? (this.utcOffset(e4 = "string" != typeof e4 ? -e4 : e4, t4), this) : -this.utcOffset();
        }), i3.isDSTShifted = e3("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", function() {
          if (!o2(this._isDSTShifted))
            return this._isDSTShifted;
          var e4, t4 = {};
          return $3(t4, this), (t4 = Nt(t4))._a ? (e4 = (t4._isUTC ? l3 : W2)(t4._a), this._isDSTShifted = this.isValid() && 0 < function(e5, t5, n3) {
            for (var s4 = Math.min(e5.length, t5.length), i4 = Math.abs(e5.length - t5.length), r4 = 0, a4 = 0; a4 < s4; a4++)
              (n3 && e5[a4] !== t5[a4] || !n3 && g4(e5[a4]) !== g4(t5[a4])) && r4++;
            return r4 + i4;
          }(t4._a, e4.toArray())) : this._isDSTShifted = false, this._isDSTShifted;
        });
        w4 = K2.prototype;
        function cn(e4, t4, n3, s4) {
          var i4 = mt(), s4 = l3().set(s4, t4);
          return i4[n3](s4, e4);
        }
        function fn(e4, t4, n3) {
          if (u3(e4) && (t4 = e4, e4 = void 0), e4 = e4 || "", null != t4)
            return cn(e4, t4, n3, "month");
          for (var s4 = [], i4 = 0; i4 < 12; i4++)
            s4[i4] = cn(e4, i4, n3, "month");
          return s4;
        }
        function mn(e4, t4, n3, s4) {
          t4 = ("boolean" == typeof e4 ? u3(t4) && (n3 = t4, t4 = void 0) : (t4 = e4, e4 = false, u3(n3 = t4) && (n3 = t4, t4 = void 0)), t4 || "");
          var i4, r4 = mt(), a4 = e4 ? r4._week.dow : 0, o3 = [];
          if (null != n3)
            return cn(t4, (n3 + a4) % 7, s4, "day");
          for (i4 = 0; i4 < 7; i4++)
            o3[i4] = cn(t4, (i4 + a4) % 7, s4, "day");
          return o3;
        }
        w4.calendar = function(e4, t4, n3) {
          return d2(e4 = this._calendar[e4] || this._calendar.sameElse) ? e4.call(t4, n3) : e4;
        }, w4.longDateFormat = function(e4) {
          var t4 = this._longDateFormat[e4], n3 = this._longDateFormat[e4.toUpperCase()];
          return t4 || !n3 ? t4 : (this._longDateFormat[e4] = n3.match(te).map(function(e5) {
            return "MMMM" === e5 || "MM" === e5 || "DD" === e5 || "dddd" === e5 ? e5.slice(1) : e5;
          }).join(""), this._longDateFormat[e4]);
        }, w4.invalidDate = function() {
          return this._invalidDate;
        }, w4.ordinal = function(e4) {
          return this._ordinal.replace("%d", e4);
        }, w4.preparse = dn, w4.postformat = dn, w4.relativeTime = function(e4, t4, n3, s4) {
          var i4 = this._relativeTime[n3];
          return d2(i4) ? i4(e4, t4, n3, s4) : i4.replace(/%d/i, e4);
        }, w4.pastFuture = function(e4, t4) {
          return d2(e4 = this._relativeTime[0 < e4 ? "future" : "past"]) ? e4(t4) : e4.replace(/%s/i, t4);
        }, w4.set = function(e4) {
          var t4, n3;
          for (n3 in e4)
            c3(e4, n3) && (d2(t4 = e4[n3]) ? this[n3] = t4 : this["_" + n3] = t4);
          this._config = e4, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
        }, w4.eras = function(e4, t4) {
          for (var n3, s4 = this._eras || mt("en")._eras, i4 = 0, r4 = s4.length; i4 < r4; ++i4) {
            switch (typeof s4[i4].since) {
              case "string":
                n3 = f3(s4[i4].since).startOf("day"), s4[i4].since = n3.valueOf();
                break;
            }
            switch (typeof s4[i4].until) {
              case "undefined":
                s4[i4].until = 1 / 0;
                break;
              case "string":
                n3 = f3(s4[i4].until).startOf("day").valueOf(), s4[i4].until = n3.valueOf();
                break;
            }
          }
          return s4;
        }, w4.erasParse = function(e4, t4, n3) {
          var s4, i4, r4, a4, o3, u4 = this.eras();
          for (e4 = e4.toUpperCase(), s4 = 0, i4 = u4.length; s4 < i4; ++s4)
            if (r4 = u4[s4].name.toUpperCase(), a4 = u4[s4].abbr.toUpperCase(), o3 = u4[s4].narrow.toUpperCase(), n3)
              switch (t4) {
                case "N":
                case "NN":
                case "NNN":
                  if (a4 === e4)
                    return u4[s4];
                  break;
                case "NNNN":
                  if (r4 === e4)
                    return u4[s4];
                  break;
                case "NNNNN":
                  if (o3 === e4)
                    return u4[s4];
                  break;
              }
            else if (0 <= [r4, a4, o3].indexOf(e4))
              return u4[s4];
        }, w4.erasConvertYear = function(e4, t4) {
          var n3 = e4.since <= e4.until ? 1 : -1;
          return void 0 === t4 ? f3(e4.since).year() : f3(e4.since).year() + (t4 - e4.offset) * n3;
        }, w4.erasAbbrRegex = function(e4) {
          return c3(this, "_erasAbbrRegex") || an.call(this), e4 ? this._erasAbbrRegex : this._erasRegex;
        }, w4.erasNameRegex = function(e4) {
          return c3(this, "_erasNameRegex") || an.call(this), e4 ? this._erasNameRegex : this._erasRegex;
        }, w4.erasNarrowRegex = function(e4) {
          return c3(this, "_erasNarrowRegex") || an.call(this), e4 ? this._erasNarrowRegex : this._erasRegex;
        }, w4.months = function(e4, t4) {
          return e4 ? (a3(this._months) ? this._months : this._months[(this._months.isFormat || He).test(t4) ? "format" : "standalone"])[e4.month()] : a3(this._months) ? this._months : this._months.standalone;
        }, w4.monthsShort = function(e4, t4) {
          return e4 ? (a3(this._monthsShort) ? this._monthsShort : this._monthsShort[He.test(t4) ? "format" : "standalone"])[e4.month()] : a3(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
        }, w4.monthsParse = function(e4, t4, n3) {
          var s4, i4;
          if (this._monthsParseExact)
            return function(e5, t5, n4) {
              var s5, i5, r4, e5 = e5.toLocaleLowerCase();
              if (!this._monthsParse)
                for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], s5 = 0; s5 < 12; ++s5)
                  r4 = l3([2e3, s5]), this._shortMonthsParse[s5] = this.monthsShort(r4, "").toLocaleLowerCase(), this._longMonthsParse[s5] = this.months(r4, "").toLocaleLowerCase();
              return n4 ? "MMM" === t5 ? -1 !== (i5 = S2.call(this._shortMonthsParse, e5)) ? i5 : null : -1 !== (i5 = S2.call(this._longMonthsParse, e5)) ? i5 : null : "MMM" === t5 ? -1 !== (i5 = S2.call(this._shortMonthsParse, e5)) || -1 !== (i5 = S2.call(this._longMonthsParse, e5)) ? i5 : null : -1 !== (i5 = S2.call(this._longMonthsParse, e5)) || -1 !== (i5 = S2.call(this._shortMonthsParse, e5)) ? i5 : null;
            }.call(this, e4, t4, n3);
          for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), s4 = 0; s4 < 12; s4++) {
            if (i4 = l3([2e3, s4]), n3 && !this._longMonthsParse[s4] && (this._longMonthsParse[s4] = new RegExp("^" + this.months(i4, "").replace(".", "") + "$", "i"), this._shortMonthsParse[s4] = new RegExp("^" + this.monthsShort(i4, "").replace(".", "") + "$", "i")), n3 || this._monthsParse[s4] || (i4 = "^" + this.months(i4, "") + "|^" + this.monthsShort(i4, ""), this._monthsParse[s4] = new RegExp(i4.replace(".", ""), "i")), n3 && "MMMM" === t4 && this._longMonthsParse[s4].test(e4))
              return s4;
            if (n3 && "MMM" === t4 && this._shortMonthsParse[s4].test(e4))
              return s4;
            if (!n3 && this._monthsParse[s4].test(e4))
              return s4;
          }
        }, w4.monthsRegex = function(e4) {
          return this._monthsParseExact ? (c3(this, "_monthsRegex") || Ee.call(this), e4 ? this._monthsStrictRegex : this._monthsRegex) : (c3(this, "_monthsRegex") || (this._monthsRegex = Le), this._monthsStrictRegex && e4 ? this._monthsStrictRegex : this._monthsRegex);
        }, w4.monthsShortRegex = function(e4) {
          return this._monthsParseExact ? (c3(this, "_monthsRegex") || Ee.call(this), e4 ? this._monthsShortStrictRegex : this._monthsShortRegex) : (c3(this, "_monthsShortRegex") || (this._monthsShortRegex = Fe), this._monthsShortStrictRegex && e4 ? this._monthsShortStrictRegex : this._monthsShortRegex);
        }, w4.week = function(e4) {
          return qe(e4, this._week.dow, this._week.doy).week;
        }, w4.firstDayOfYear = function() {
          return this._week.doy;
        }, w4.firstDayOfWeek = function() {
          return this._week.dow;
        }, w4.weekdays = function(e4, t4) {
          return t4 = a3(this._weekdays) ? this._weekdays : this._weekdays[e4 && true !== e4 && this._weekdays.isFormat.test(t4) ? "format" : "standalone"], true === e4 ? Be(t4, this._week.dow) : e4 ? t4[e4.day()] : t4;
        }, w4.weekdaysMin = function(e4) {
          return true === e4 ? Be(this._weekdaysMin, this._week.dow) : e4 ? this._weekdaysMin[e4.day()] : this._weekdaysMin;
        }, w4.weekdaysShort = function(e4) {
          return true === e4 ? Be(this._weekdaysShort, this._week.dow) : e4 ? this._weekdaysShort[e4.day()] : this._weekdaysShort;
        }, w4.weekdaysParse = function(e4, t4, n3) {
          var s4, i4;
          if (this._weekdaysParseExact)
            return function(e5, t5, n4) {
              var s5, i5, r4, e5 = e5.toLocaleLowerCase();
              if (!this._weekdaysParse)
                for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], s5 = 0; s5 < 7; ++s5)
                  r4 = l3([2e3, 1]).day(s5), this._minWeekdaysParse[s5] = this.weekdaysMin(r4, "").toLocaleLowerCase(), this._shortWeekdaysParse[s5] = this.weekdaysShort(r4, "").toLocaleLowerCase(), this._weekdaysParse[s5] = this.weekdays(r4, "").toLocaleLowerCase();
              return n4 ? "dddd" === t5 ? -1 !== (i5 = S2.call(this._weekdaysParse, e5)) ? i5 : null : "ddd" === t5 ? -1 !== (i5 = S2.call(this._shortWeekdaysParse, e5)) ? i5 : null : -1 !== (i5 = S2.call(this._minWeekdaysParse, e5)) ? i5 : null : "dddd" === t5 ? -1 !== (i5 = S2.call(this._weekdaysParse, e5)) || -1 !== (i5 = S2.call(this._shortWeekdaysParse, e5)) || -1 !== (i5 = S2.call(this._minWeekdaysParse, e5)) ? i5 : null : "ddd" === t5 ? -1 !== (i5 = S2.call(this._shortWeekdaysParse, e5)) || -1 !== (i5 = S2.call(this._weekdaysParse, e5)) || -1 !== (i5 = S2.call(this._minWeekdaysParse, e5)) ? i5 : null : -1 !== (i5 = S2.call(this._minWeekdaysParse, e5)) || -1 !== (i5 = S2.call(this._weekdaysParse, e5)) || -1 !== (i5 = S2.call(this._shortWeekdaysParse, e5)) ? i5 : null;
            }.call(this, e4, t4, n3);
          for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), s4 = 0; s4 < 7; s4++) {
            if (i4 = l3([2e3, 1]).day(s4), n3 && !this._fullWeekdaysParse[s4] && (this._fullWeekdaysParse[s4] = new RegExp("^" + this.weekdays(i4, "").replace(".", "\\.?") + "$", "i"), this._shortWeekdaysParse[s4] = new RegExp("^" + this.weekdaysShort(i4, "").replace(".", "\\.?") + "$", "i"), this._minWeekdaysParse[s4] = new RegExp("^" + this.weekdaysMin(i4, "").replace(".", "\\.?") + "$", "i")), this._weekdaysParse[s4] || (i4 = "^" + this.weekdays(i4, "") + "|^" + this.weekdaysShort(i4, "") + "|^" + this.weekdaysMin(i4, ""), this._weekdaysParse[s4] = new RegExp(i4.replace(".", ""), "i")), n3 && "dddd" === t4 && this._fullWeekdaysParse[s4].test(e4))
              return s4;
            if (n3 && "ddd" === t4 && this._shortWeekdaysParse[s4].test(e4))
              return s4;
            if (n3 && "dd" === t4 && this._minWeekdaysParse[s4].test(e4))
              return s4;
            if (!n3 && this._weekdaysParse[s4].test(e4))
              return s4;
          }
        }, w4.weekdaysRegex = function(e4) {
          return this._weekdaysParseExact ? (c3(this, "_weekdaysRegex") || nt.call(this), e4 ? this._weekdaysStrictRegex : this._weekdaysRegex) : (c3(this, "_weekdaysRegex") || (this._weekdaysRegex = Ke), this._weekdaysStrictRegex && e4 ? this._weekdaysStrictRegex : this._weekdaysRegex);
        }, w4.weekdaysShortRegex = function(e4) {
          return this._weekdaysParseExact ? (c3(this, "_weekdaysRegex") || nt.call(this), e4 ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (c3(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = et), this._weekdaysShortStrictRegex && e4 ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
        }, w4.weekdaysMinRegex = function(e4) {
          return this._weekdaysParseExact ? (c3(this, "_weekdaysRegex") || nt.call(this), e4 ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (c3(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = tt), this._weekdaysMinStrictRegex && e4 ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
        }, w4.isPM = function(e4) {
          return "p" === (e4 + "").toLowerCase().charAt(0);
        }, w4.meridiem = function(e4, t4, n3) {
          return 11 < e4 ? n3 ? "pm" : "PM" : n3 ? "am" : "AM";
        }, ct("en", { eras: [{ since: "0001-01-01", until: 1 / 0, offset: 1, name: "Anno Domini", narrow: "AD", abbr: "AD" }, { since: "0000-12-31", until: -1 / 0, offset: 1, name: "Before Christ", narrow: "BC", abbr: "BC" }], dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function(e4) {
          var t4 = e4 % 10;
          return e4 + (1 === g4(e4 % 100 / 10) ? "th" : 1 == t4 ? "st" : 2 == t4 ? "nd" : 3 == t4 ? "rd" : "th");
        } }), f3.lang = e3("moment.lang is deprecated. Use moment.locale instead.", ct), f3.langData = e3("moment.langData is deprecated. Use moment.localeData instead.", mt);
        var _n = Math.abs;
        function yn(e4, t4, n3, s4) {
          t4 = C3(t4, n3);
          return e4._milliseconds += s4 * t4._milliseconds, e4._days += s4 * t4._days, e4._months += s4 * t4._months, e4._bubble();
        }
        function gn(e4) {
          return e4 < 0 ? Math.floor(e4) : Math.ceil(e4);
        }
        function wn(e4) {
          return 4800 * e4 / 146097;
        }
        function pn(e4) {
          return 146097 * e4 / 4800;
        }
        function kn(e4) {
          return function() {
            return this.as(e4);
          };
        }
        pe = kn("ms"), me = kn("s"), Ce = kn("m"), we = kn("h"), ge = kn("d"), Je = kn("w"), k3 = kn("M"), _e = kn("Q"), ve = kn("y");
        function vn(e4) {
          return function() {
            return this.isValid() ? this._data[e4] : NaN;
          };
        }
        var ye = vn("milliseconds"), ke = vn("seconds"), Ie = vn("minutes"), w4 = vn("hours"), Mn = vn("days"), Dn = vn("months"), Sn = vn("years");
        var Yn = Math.round, On = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
        function bn(e4, t4, n3, s4) {
          var i4 = C3(e4).abs(), r4 = Yn(i4.as("s")), a4 = Yn(i4.as("m")), o3 = Yn(i4.as("h")), u4 = Yn(i4.as("d")), l4 = Yn(i4.as("M")), h4 = Yn(i4.as("w")), i4 = Yn(i4.as("y")), r4 = (r4 <= n3.ss ? ["s", r4] : r4 < n3.s && ["ss", r4]) || a4 <= 1 && ["m"] || a4 < n3.m && ["mm", a4] || o3 <= 1 && ["h"] || o3 < n3.h && ["hh", o3] || u4 <= 1 && ["d"] || u4 < n3.d && ["dd", u4];
          return (r4 = (r4 = null != n3.w ? r4 || h4 <= 1 && ["w"] || h4 < n3.w && ["ww", h4] : r4) || l4 <= 1 && ["M"] || l4 < n3.M && ["MM", l4] || i4 <= 1 && ["y"] || ["yy", i4])[2] = t4, r4[3] = 0 < +e4, r4[4] = s4, function(e5, t5, n4, s5, i5) {
            return i5.relativeTime(t5 || 1, !!n4, e5, s5);
          }.apply(null, r4);
        }
        var xn = Math.abs;
        function Tn(e4) {
          return (0 < e4) - (e4 < 0) || +e4;
        }
        function Nn() {
          if (!this.isValid())
            return this.localeData().invalidDate();
          var e4, t4, n3, s4, i4, r4, a4, o3 = xn(this._milliseconds) / 1e3, u4 = xn(this._days), l4 = xn(this._months), h4 = this.asSeconds();
          return h4 ? (e4 = y3(o3 / 60), t4 = y3(e4 / 60), o3 %= 60, e4 %= 60, n3 = y3(l4 / 12), l4 %= 12, s4 = o3 ? o3.toFixed(3).replace(/\.?0+$/, "") : "", i4 = Tn(this._months) !== Tn(h4) ? "-" : "", r4 = Tn(this._days) !== Tn(h4) ? "-" : "", a4 = Tn(this._milliseconds) !== Tn(h4) ? "-" : "", (h4 < 0 ? "-" : "") + "P" + (n3 ? i4 + n3 + "Y" : "") + (l4 ? i4 + l4 + "M" : "") + (u4 ? r4 + u4 + "D" : "") + (t4 || e4 || o3 ? "T" : "") + (t4 ? a4 + t4 + "H" : "") + (e4 ? a4 + e4 + "M" : "") + (o3 ? a4 + s4 + "S" : "")) : "P0D";
        }
        var U2 = Ct.prototype;
        return U2.isValid = function() {
          return this._isValid;
        }, U2.abs = function() {
          var e4 = this._data;
          return this._milliseconds = _n(this._milliseconds), this._days = _n(this._days), this._months = _n(this._months), e4.milliseconds = _n(e4.milliseconds), e4.seconds = _n(e4.seconds), e4.minutes = _n(e4.minutes), e4.hours = _n(e4.hours), e4.months = _n(e4.months), e4.years = _n(e4.years), this;
        }, U2.add = function(e4, t4) {
          return yn(this, e4, t4, 1);
        }, U2.subtract = function(e4, t4) {
          return yn(this, e4, t4, -1);
        }, U2.as = function(e4) {
          if (!this.isValid())
            return NaN;
          var t4, n3, s4 = this._milliseconds;
          if ("month" === (e4 = _3(e4)) || "quarter" === e4 || "year" === e4)
            switch (t4 = this._days + s4 / 864e5, n3 = this._months + wn(t4), e4) {
              case "month":
                return n3;
              case "quarter":
                return n3 / 3;
              case "year":
                return n3 / 12;
            }
          else
            switch (t4 = this._days + Math.round(pn(this._months)), e4) {
              case "week":
                return t4 / 7 + s4 / 6048e5;
              case "day":
                return t4 + s4 / 864e5;
              case "hour":
                return 24 * t4 + s4 / 36e5;
              case "minute":
                return 1440 * t4 + s4 / 6e4;
              case "second":
                return 86400 * t4 + s4 / 1e3;
              case "millisecond":
                return Math.floor(864e5 * t4) + s4;
              default:
                throw new Error("Unknown unit " + e4);
            }
        }, U2.asMilliseconds = pe, U2.asSeconds = me, U2.asMinutes = Ce, U2.asHours = we, U2.asDays = ge, U2.asWeeks = Je, U2.asMonths = k3, U2.asQuarters = _e, U2.asYears = ve, U2.valueOf = function() {
          return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * g4(this._months / 12) : NaN;
        }, U2._bubble = function() {
          var e4 = this._milliseconds, t4 = this._days, n3 = this._months, s4 = this._data;
          return 0 <= e4 && 0 <= t4 && 0 <= n3 || e4 <= 0 && t4 <= 0 && n3 <= 0 || (e4 += 864e5 * gn(pn(n3) + t4), n3 = t4 = 0), s4.milliseconds = e4 % 1e3, e4 = y3(e4 / 1e3), s4.seconds = e4 % 60, e4 = y3(e4 / 60), s4.minutes = e4 % 60, e4 = y3(e4 / 60), s4.hours = e4 % 24, t4 += y3(e4 / 24), n3 += e4 = y3(wn(t4)), t4 -= gn(pn(e4)), e4 = y3(n3 / 12), n3 %= 12, s4.days = t4, s4.months = n3, s4.years = e4, this;
        }, U2.clone = function() {
          return C3(this);
        }, U2.get = function(e4) {
          return e4 = _3(e4), this.isValid() ? this[e4 + "s"]() : NaN;
        }, U2.milliseconds = ye, U2.seconds = ke, U2.minutes = Ie, U2.hours = w4, U2.days = Mn, U2.weeks = function() {
          return y3(this.days() / 7);
        }, U2.months = Dn, U2.years = Sn, U2.humanize = function(e4, t4) {
          if (!this.isValid())
            return this.localeData().invalidDate();
          var n3 = false, s4 = On;
          return "object" == typeof e4 && (t4 = e4, e4 = false), "boolean" == typeof e4 && (n3 = e4), "object" == typeof t4 && (s4 = Object.assign({}, On, t4), null != t4.s && null == t4.ss && (s4.ss = t4.s - 1)), e4 = this.localeData(), t4 = bn(this, !n3, s4, e4), n3 && (t4 = e4.pastFuture(+this, t4)), e4.postformat(t4);
        }, U2.toISOString = Nn, U2.toString = Nn, U2.toJSON = Nn, U2.locale = Xt, U2.localeData = Kt, U2.toIsoString = e3("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", Nn), U2.lang = Xe, s3("X", 0, 0, "unix"), s3("x", 0, 0, "valueOf"), v3("x", De), v3("X", /[+-]?\d+(\.\d{1,3})?/), D2("X", function(e4, t4, n3) {
          n3._d = new Date(1e3 * parseFloat(e4));
        }), D2("x", function(e4, t4, n3) {
          n3._d = new Date(g4(e4));
        }), f3.version = "2.29.4", H3 = W2, f3.fn = i3, f3.min = function() {
          return Rt("isBefore", [].slice.call(arguments, 0));
        }, f3.max = function() {
          return Rt("isAfter", [].slice.call(arguments, 0));
        }, f3.now = function() {
          return Date.now ? Date.now() : +new Date();
        }, f3.utc = l3, f3.unix = function(e4) {
          return W2(1e3 * e4);
        }, f3.months = function(e4, t4) {
          return fn(e4, t4, "months");
        }, f3.isDate = V3, f3.locale = ct, f3.invalid = I3, f3.duration = C3, f3.isMoment = h3, f3.weekdays = function(e4, t4, n3) {
          return mn(e4, t4, n3, "weekdays");
        }, f3.parseZone = function() {
          return W2.apply(null, arguments).parseZone();
        }, f3.localeData = mt, f3.isDuration = Ut, f3.monthsShort = function(e4, t4) {
          return fn(e4, t4, "monthsShort");
        }, f3.weekdaysMin = function(e4, t4, n3) {
          return mn(e4, t4, n3, "weekdaysMin");
        }, f3.defineLocale = ft, f3.updateLocale = function(e4, t4) {
          var n3, s4;
          return null != t4 ? (s4 = ot, null != R[e4] && null != R[e4].parentLocale ? R[e4].set(X2(R[e4]._config, t4)) : (t4 = X2(s4 = null != (n3 = dt2(e4)) ? n3._config : s4, t4), null == n3 && (t4.abbr = e4), (s4 = new K2(t4)).parentLocale = R[e4], R[e4] = s4), ct(e4)) : null != R[e4] && (null != R[e4].parentLocale ? (R[e4] = R[e4].parentLocale, e4 === ct() && ct(e4)) : null != R[e4] && delete R[e4]), R[e4];
        }, f3.locales = function() {
          return ee(R);
        }, f3.weekdaysShort = function(e4, t4, n3) {
          return mn(e4, t4, n3, "weekdaysShort");
        }, f3.normalizeUnits = _3, f3.relativeTimeRounding = function(e4) {
          return void 0 === e4 ? Yn : "function" == typeof e4 && (Yn = e4, true);
        }, f3.relativeTimeThreshold = function(e4, t4) {
          return void 0 !== On[e4] && (void 0 === t4 ? On[e4] : (On[e4] = t4, "s" === e4 && (On.ss = t4 - 1), true));
        }, f3.calendarFormat = function(e4, t4) {
          return (e4 = e4.diff(t4, "days", true)) < -6 ? "sameElse" : e4 < -1 ? "lastWeek" : e4 < 0 ? "lastDay" : e4 < 1 ? "sameDay" : e4 < 2 ? "nextDay" : e4 < 7 ? "nextWeek" : "sameElse";
        }, f3.prototype = i3, f3.HTML5_FMT = { DATETIME_LOCAL: "YYYY-MM-DDTHH:mm", DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss", DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS", DATE: "YYYY-MM-DD", TIME: "HH:mm", TIME_SECONDS: "HH:mm:ss", TIME_MS: "HH:mm:ss.SSS", WEEK: "GGGG-[W]WW", MONTH: "YYYY-MM" }, f3;
      });
    }
  });

  // node_modules/preact/dist/preact.module.js
  var n;
  var l;
  var u;
  var i;
  var t;
  var o;
  var r;
  var f = {};
  var e = [];
  var c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
  function s(n2, l3) {
    for (var u3 in l3)
      n2[u3] = l3[u3];
    return n2;
  }
  function a(n2) {
    var l3 = n2.parentNode;
    l3 && l3.removeChild(n2);
  }
  function h(l3, u3, i3) {
    var t3, o2, r3, f3 = {};
    for (r3 in u3)
      "key" == r3 ? t3 = u3[r3] : "ref" == r3 ? o2 = u3[r3] : f3[r3] = u3[r3];
    if (arguments.length > 2 && (f3.children = arguments.length > 3 ? n.call(arguments, 2) : i3), "function" == typeof l3 && null != l3.defaultProps)
      for (r3 in l3.defaultProps)
        void 0 === f3[r3] && (f3[r3] = l3.defaultProps[r3]);
    return v(l3, f3, t3, o2, null);
  }
  function v(n2, i3, t3, o2, r3) {
    var f3 = { type: n2, props: i3, key: t3, ref: o2, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: null == r3 ? ++u : r3 };
    return null == r3 && null != l.vnode && l.vnode(f3), f3;
  }
  function y() {
    return { current: null };
  }
  function p(n2) {
    return n2.children;
  }
  function d(n2, l3) {
    this.props = n2, this.context = l3;
  }
  function _(n2, l3) {
    if (null == l3)
      return n2.__ ? _(n2.__, n2.__.__k.indexOf(n2) + 1) : null;
    for (var u3; l3 < n2.__k.length; l3++)
      if (null != (u3 = n2.__k[l3]) && null != u3.__e)
        return u3.__e;
    return "function" == typeof n2.type ? _(n2) : null;
  }
  function k(n2) {
    var l3, u3;
    if (null != (n2 = n2.__) && null != n2.__c) {
      for (n2.__e = n2.__c.base = null, l3 = 0; l3 < n2.__k.length; l3++)
        if (null != (u3 = n2.__k[l3]) && null != u3.__e) {
          n2.__e = n2.__c.base = u3.__e;
          break;
        }
      return k(n2);
    }
  }
  function b(n2) {
    (!n2.__d && (n2.__d = true) && t.push(n2) && !g.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || setTimeout)(g);
  }
  function g() {
    for (var n2; g.__r = t.length; )
      n2 = t.sort(function(n3, l3) {
        return n3.__v.__b - l3.__v.__b;
      }), t = [], n2.some(function(n3) {
        var l3, u3, i3, t3, o2, r3;
        n3.__d && (o2 = (t3 = (l3 = n3).__v).__e, (r3 = l3.__P) && (u3 = [], (i3 = s({}, t3)).__v = t3.__v + 1, j(r3, t3, i3, l3.__n, void 0 !== r3.ownerSVGElement, null != t3.__h ? [o2] : null, u3, null == o2 ? _(t3) : o2, t3.__h), z(u3, t3), t3.__e != o2 && k(t3)));
      });
  }
  function w(n2, l3, u3, i3, t3, o2, r3, c3, s3, a3) {
    var h3, y3, d2, k3, b3, g4, w4, x4 = i3 && i3.__k || e, C3 = x4.length;
    for (u3.__k = [], h3 = 0; h3 < l3.length; h3++)
      if (null != (k3 = u3.__k[h3] = null == (k3 = l3[h3]) || "boolean" == typeof k3 ? null : "string" == typeof k3 || "number" == typeof k3 || "bigint" == typeof k3 ? v(null, k3, null, null, k3) : Array.isArray(k3) ? v(p, { children: k3 }, null, null, null) : k3.__b > 0 ? v(k3.type, k3.props, k3.key, k3.ref ? k3.ref : null, k3.__v) : k3)) {
        if (k3.__ = u3, k3.__b = u3.__b + 1, null === (d2 = x4[h3]) || d2 && k3.key == d2.key && k3.type === d2.type)
          x4[h3] = void 0;
        else
          for (y3 = 0; y3 < C3; y3++) {
            if ((d2 = x4[y3]) && k3.key == d2.key && k3.type === d2.type) {
              x4[y3] = void 0;
              break;
            }
            d2 = null;
          }
        j(n2, k3, d2 = d2 || f, t3, o2, r3, c3, s3, a3), b3 = k3.__e, (y3 = k3.ref) && d2.ref != y3 && (w4 || (w4 = []), d2.ref && w4.push(d2.ref, null, k3), w4.push(y3, k3.__c || b3, k3)), null != b3 ? (null == g4 && (g4 = b3), "function" == typeof k3.type && k3.__k === d2.__k ? k3.__d = s3 = m(k3, s3, n2) : s3 = A(n2, k3, d2, x4, b3, s3), "function" == typeof u3.type && (u3.__d = s3)) : s3 && d2.__e == s3 && s3.parentNode != n2 && (s3 = _(d2));
      }
    for (u3.__e = g4, h3 = C3; h3--; )
      null != x4[h3] && N(x4[h3], x4[h3]);
    if (w4)
      for (h3 = 0; h3 < w4.length; h3++)
        M(w4[h3], w4[++h3], w4[++h3]);
  }
  function m(n2, l3, u3) {
    for (var i3, t3 = n2.__k, o2 = 0; t3 && o2 < t3.length; o2++)
      (i3 = t3[o2]) && (i3.__ = n2, l3 = "function" == typeof i3.type ? m(i3, l3, u3) : A(u3, i3, i3, t3, i3.__e, l3));
    return l3;
  }
  function x(n2, l3) {
    return l3 = l3 || [], null == n2 || "boolean" == typeof n2 || (Array.isArray(n2) ? n2.some(function(n3) {
      x(n3, l3);
    }) : l3.push(n2)), l3;
  }
  function A(n2, l3, u3, i3, t3, o2) {
    var r3, f3, e3;
    if (void 0 !== l3.__d)
      r3 = l3.__d, l3.__d = void 0;
    else if (null == u3 || t3 != o2 || null == t3.parentNode)
      n:
        if (null == o2 || o2.parentNode !== n2)
          n2.appendChild(t3), r3 = null;
        else {
          for (f3 = o2, e3 = 0; (f3 = f3.nextSibling) && e3 < i3.length; e3 += 1)
            if (f3 == t3)
              break n;
          n2.insertBefore(t3, o2), r3 = o2;
        }
    return void 0 !== r3 ? r3 : t3.nextSibling;
  }
  function C(n2, l3, u3, i3, t3) {
    var o2;
    for (o2 in u3)
      "children" === o2 || "key" === o2 || o2 in l3 || H(n2, o2, null, u3[o2], i3);
    for (o2 in l3)
      t3 && "function" != typeof l3[o2] || "children" === o2 || "key" === o2 || "value" === o2 || "checked" === o2 || u3[o2] === l3[o2] || H(n2, o2, l3[o2], u3[o2], i3);
  }
  function $2(n2, l3, u3) {
    "-" === l3[0] ? n2.setProperty(l3, u3) : n2[l3] = null == u3 ? "" : "number" != typeof u3 || c.test(l3) ? u3 : u3 + "px";
  }
  function H(n2, l3, u3, i3, t3) {
    var o2;
    n:
      if ("style" === l3)
        if ("string" == typeof u3)
          n2.style.cssText = u3;
        else {
          if ("string" == typeof i3 && (n2.style.cssText = i3 = ""), i3)
            for (l3 in i3)
              u3 && l3 in u3 || $2(n2.style, l3, "");
          if (u3)
            for (l3 in u3)
              i3 && u3[l3] === i3[l3] || $2(n2.style, l3, u3[l3]);
        }
      else if ("o" === l3[0] && "n" === l3[1])
        o2 = l3 !== (l3 = l3.replace(/Capture$/, "")), l3 = l3.toLowerCase() in n2 ? l3.toLowerCase().slice(2) : l3.slice(2), n2.l || (n2.l = {}), n2.l[l3 + o2] = u3, u3 ? i3 || n2.addEventListener(l3, o2 ? T : I, o2) : n2.removeEventListener(l3, o2 ? T : I, o2);
      else if ("dangerouslySetInnerHTML" !== l3) {
        if (t3)
          l3 = l3.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("href" !== l3 && "list" !== l3 && "form" !== l3 && "tabIndex" !== l3 && "download" !== l3 && l3 in n2)
          try {
            n2[l3] = null == u3 ? "" : u3;
            break n;
          } catch (n3) {
          }
        "function" == typeof u3 || (null == u3 || false === u3 && -1 == l3.indexOf("-") ? n2.removeAttribute(l3) : n2.setAttribute(l3, u3));
      }
  }
  function I(n2) {
    this.l[n2.type + false](l.event ? l.event(n2) : n2);
  }
  function T(n2) {
    this.l[n2.type + true](l.event ? l.event(n2) : n2);
  }
  function j(n2, u3, i3, t3, o2, r3, f3, e3, c3) {
    var a3, h3, v3, y3, _3, k3, b3, g4, m3, x4, A3, C3, $3, H3, I3, T4 = u3.type;
    if (void 0 !== u3.constructor)
      return null;
    null != i3.__h && (c3 = i3.__h, e3 = u3.__e = i3.__e, u3.__h = null, r3 = [e3]), (a3 = l.__b) && a3(u3);
    try {
      n:
        if ("function" == typeof T4) {
          if (g4 = u3.props, m3 = (a3 = T4.contextType) && t3[a3.__c], x4 = a3 ? m3 ? m3.props.value : a3.__ : t3, i3.__c ? b3 = (h3 = u3.__c = i3.__c).__ = h3.__E : ("prototype" in T4 && T4.prototype.render ? u3.__c = h3 = new T4(g4, x4) : (u3.__c = h3 = new d(g4, x4), h3.constructor = T4, h3.render = O), m3 && m3.sub(h3), h3.props = g4, h3.state || (h3.state = {}), h3.context = x4, h3.__n = t3, v3 = h3.__d = true, h3.__h = [], h3._sb = []), null == h3.__s && (h3.__s = h3.state), null != T4.getDerivedStateFromProps && (h3.__s == h3.state && (h3.__s = s({}, h3.__s)), s(h3.__s, T4.getDerivedStateFromProps(g4, h3.__s))), y3 = h3.props, _3 = h3.state, v3)
            null == T4.getDerivedStateFromProps && null != h3.componentWillMount && h3.componentWillMount(), null != h3.componentDidMount && h3.__h.push(h3.componentDidMount);
          else {
            if (null == T4.getDerivedStateFromProps && g4 !== y3 && null != h3.componentWillReceiveProps && h3.componentWillReceiveProps(g4, x4), !h3.__e && null != h3.shouldComponentUpdate && false === h3.shouldComponentUpdate(g4, h3.__s, x4) || u3.__v === i3.__v) {
              for (h3.props = g4, h3.state = h3.__s, u3.__v !== i3.__v && (h3.__d = false), h3.__v = u3, u3.__e = i3.__e, u3.__k = i3.__k, u3.__k.forEach(function(n3) {
                n3 && (n3.__ = u3);
              }), A3 = 0; A3 < h3._sb.length; A3++)
                h3.__h.push(h3._sb[A3]);
              h3._sb = [], h3.__h.length && f3.push(h3);
              break n;
            }
            null != h3.componentWillUpdate && h3.componentWillUpdate(g4, h3.__s, x4), null != h3.componentDidUpdate && h3.__h.push(function() {
              h3.componentDidUpdate(y3, _3, k3);
            });
          }
          if (h3.context = x4, h3.props = g4, h3.__v = u3, h3.__P = n2, C3 = l.__r, $3 = 0, "prototype" in T4 && T4.prototype.render) {
            for (h3.state = h3.__s, h3.__d = false, C3 && C3(u3), a3 = h3.render(h3.props, h3.state, h3.context), H3 = 0; H3 < h3._sb.length; H3++)
              h3.__h.push(h3._sb[H3]);
            h3._sb = [];
          } else
            do {
              h3.__d = false, C3 && C3(u3), a3 = h3.render(h3.props, h3.state, h3.context), h3.state = h3.__s;
            } while (h3.__d && ++$3 < 25);
          h3.state = h3.__s, null != h3.getChildContext && (t3 = s(s({}, t3), h3.getChildContext())), v3 || null == h3.getSnapshotBeforeUpdate || (k3 = h3.getSnapshotBeforeUpdate(y3, _3)), I3 = null != a3 && a3.type === p && null == a3.key ? a3.props.children : a3, w(n2, Array.isArray(I3) ? I3 : [I3], u3, i3, t3, o2, r3, f3, e3, c3), h3.base = u3.__e, u3.__h = null, h3.__h.length && f3.push(h3), b3 && (h3.__E = h3.__ = null), h3.__e = false;
        } else
          null == r3 && u3.__v === i3.__v ? (u3.__k = i3.__k, u3.__e = i3.__e) : u3.__e = L(i3.__e, u3, i3, t3, o2, r3, f3, c3);
      (a3 = l.diffed) && a3(u3);
    } catch (n3) {
      u3.__v = null, (c3 || null != r3) && (u3.__e = e3, u3.__h = !!c3, r3[r3.indexOf(e3)] = null), l.__e(n3, u3, i3);
    }
  }
  function z(n2, u3) {
    l.__c && l.__c(u3, n2), n2.some(function(u4) {
      try {
        n2 = u4.__h, u4.__h = [], n2.some(function(n3) {
          n3.call(u4);
        });
      } catch (n3) {
        l.__e(n3, u4.__v);
      }
    });
  }
  function L(l3, u3, i3, t3, o2, r3, e3, c3) {
    var s3, h3, v3, y3 = i3.props, p3 = u3.props, d2 = u3.type, k3 = 0;
    if ("svg" === d2 && (o2 = true), null != r3) {
      for (; k3 < r3.length; k3++)
        if ((s3 = r3[k3]) && "setAttribute" in s3 == !!d2 && (d2 ? s3.localName === d2 : 3 === s3.nodeType)) {
          l3 = s3, r3[k3] = null;
          break;
        }
    }
    if (null == l3) {
      if (null === d2)
        return document.createTextNode(p3);
      l3 = o2 ? document.createElementNS("http://www.w3.org/2000/svg", d2) : document.createElement(d2, p3.is && p3), r3 = null, c3 = false;
    }
    if (null === d2)
      y3 === p3 || c3 && l3.data === p3 || (l3.data = p3);
    else {
      if (r3 = r3 && n.call(l3.childNodes), h3 = (y3 = i3.props || f).dangerouslySetInnerHTML, v3 = p3.dangerouslySetInnerHTML, !c3) {
        if (null != r3)
          for (y3 = {}, k3 = 0; k3 < l3.attributes.length; k3++)
            y3[l3.attributes[k3].name] = l3.attributes[k3].value;
        (v3 || h3) && (v3 && (h3 && v3.__html == h3.__html || v3.__html === l3.innerHTML) || (l3.innerHTML = v3 && v3.__html || ""));
      }
      if (C(l3, p3, y3, o2, c3), v3)
        u3.__k = [];
      else if (k3 = u3.props.children, w(l3, Array.isArray(k3) ? k3 : [k3], u3, i3, t3, o2 && "foreignObject" !== d2, r3, e3, r3 ? r3[0] : i3.__k && _(i3, 0), c3), null != r3)
        for (k3 = r3.length; k3--; )
          null != r3[k3] && a(r3[k3]);
      c3 || ("value" in p3 && void 0 !== (k3 = p3.value) && (k3 !== l3.value || "progress" === d2 && !k3 || "option" === d2 && k3 !== y3.value) && H(l3, "value", k3, y3.value, false), "checked" in p3 && void 0 !== (k3 = p3.checked) && k3 !== l3.checked && H(l3, "checked", k3, y3.checked, false));
    }
    return l3;
  }
  function M(n2, u3, i3) {
    try {
      "function" == typeof n2 ? n2(u3) : n2.current = u3;
    } catch (n3) {
      l.__e(n3, i3);
    }
  }
  function N(n2, u3, i3) {
    var t3, o2;
    if (l.unmount && l.unmount(n2), (t3 = n2.ref) && (t3.current && t3.current !== n2.__e || M(t3, null, u3)), null != (t3 = n2.__c)) {
      if (t3.componentWillUnmount)
        try {
          t3.componentWillUnmount();
        } catch (n3) {
          l.__e(n3, u3);
        }
      t3.base = t3.__P = null, n2.__c = void 0;
    }
    if (t3 = n2.__k)
      for (o2 = 0; o2 < t3.length; o2++)
        t3[o2] && N(t3[o2], u3, i3 || "function" != typeof n2.type);
    i3 || null == n2.__e || a(n2.__e), n2.__ = n2.__e = n2.__d = void 0;
  }
  function O(n2, l3, u3) {
    return this.constructor(n2, u3);
  }
  function P(u3, i3, t3) {
    var o2, r3, e3;
    l.__ && l.__(u3, i3), r3 = (o2 = "function" == typeof t3) ? null : t3 && t3.__k || i3.__k, e3 = [], j(i3, u3 = (!o2 && t3 || i3).__k = h(p, null, [u3]), r3 || f, f, void 0 !== i3.ownerSVGElement, !o2 && t3 ? [t3] : r3 ? null : i3.firstChild ? n.call(i3.childNodes) : null, e3, !o2 && t3 ? t3 : r3 ? r3.__e : i3.firstChild, o2), z(e3, u3);
  }
  function B(n2, l3) {
    var u3 = { __c: l3 = "__cC" + r++, __: n2, Consumer: function(n3, l4) {
      return n3.children(l4);
    }, Provider: function(n3) {
      var u4, i3;
      return this.getChildContext || (u4 = [], (i3 = {})[l3] = this, this.getChildContext = function() {
        return i3;
      }, this.shouldComponentUpdate = function(n4) {
        this.props.value !== n4.value && u4.some(b);
      }, this.sub = function(n4) {
        u4.push(n4);
        var l4 = n4.componentWillUnmount;
        n4.componentWillUnmount = function() {
          u4.splice(u4.indexOf(n4), 1), l4 && l4.call(n4);
        };
      }), n3.children;
    } };
    return u3.Provider.__ = u3.Consumer.contextType = u3;
  }
  n = e.slice, l = { __e: function(n2, l3, u3, i3) {
    for (var t3, o2, r3; l3 = l3.__; )
      if ((t3 = l3.__c) && !t3.__)
        try {
          if ((o2 = t3.constructor) && null != o2.getDerivedStateFromError && (t3.setState(o2.getDerivedStateFromError(n2)), r3 = t3.__d), null != t3.componentDidCatch && (t3.componentDidCatch(n2, i3 || {}), r3 = t3.__d), r3)
            return t3.__E = t3;
        } catch (l4) {
          n2 = l4;
        }
    throw n2;
  } }, u = 0, i = function(n2) {
    return null != n2 && void 0 === n2.constructor;
  }, d.prototype.setState = function(n2, l3) {
    var u3;
    u3 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = s({}, this.state), "function" == typeof n2 && (n2 = n2(s({}, u3), this.props)), n2 && s(u3, n2), null != n2 && this.__v && (l3 && this._sb.push(l3), b(this));
  }, d.prototype.forceUpdate = function(n2) {
    this.__v && (this.__e = true, n2 && this.__h.push(n2), b(this));
  }, d.prototype.render = p, t = [], g.__r = 0, r = 0;

  // node_modules/preact/hooks/dist/hooks.module.js
  var t2;
  var r2;
  var u2;
  var i2;
  var f2 = [];
  var c2 = [];
  var e2 = l.__b;
  var a2 = l.__r;
  var v2 = l.diffed;
  var l2 = l.__c;
  var m2 = l.unmount;
  function b2() {
    for (var t3; t3 = f2.shift(); )
      if (t3.__P && t3.__H)
        try {
          t3.__H.__h.forEach(k2), t3.__H.__h.forEach(w2), t3.__H.__h = [];
        } catch (r3) {
          t3.__H.__h = [], l.__e(r3, t3.__v);
        }
  }
  l.__b = function(n2) {
    r2 = null, e2 && e2(n2);
  }, l.__r = function(n2) {
    a2 && a2(n2), t2 = 0;
    var i3 = (r2 = n2.__c).__H;
    i3 && (u2 === r2 ? (i3.__h = [], r2.__h = [], i3.__.forEach(function(n3) {
      n3.__N && (n3.__ = n3.__N), n3.__V = c2, n3.__N = n3.i = void 0;
    })) : (i3.__h.forEach(k2), i3.__h.forEach(w2), i3.__h = [])), u2 = r2;
  }, l.diffed = function(t3) {
    v2 && v2(t3);
    var o2 = t3.__c;
    o2 && o2.__H && (o2.__H.__h.length && (1 !== f2.push(o2) && i2 === l.requestAnimationFrame || ((i2 = l.requestAnimationFrame) || j2)(b2)), o2.__H.__.forEach(function(n2) {
      n2.i && (n2.__H = n2.i), n2.__V !== c2 && (n2.__ = n2.__V), n2.i = void 0, n2.__V = c2;
    })), u2 = r2 = null;
  }, l.__c = function(t3, r3) {
    r3.some(function(t4) {
      try {
        t4.__h.forEach(k2), t4.__h = t4.__h.filter(function(n2) {
          return !n2.__ || w2(n2);
        });
      } catch (u3) {
        r3.some(function(n2) {
          n2.__h && (n2.__h = []);
        }), r3 = [], l.__e(u3, t4.__v);
      }
    }), l2 && l2(t3, r3);
  }, l.unmount = function(t3) {
    m2 && m2(t3);
    var r3, u3 = t3.__c;
    u3 && u3.__H && (u3.__H.__.forEach(function(n2) {
      try {
        k2(n2);
      } catch (n3) {
        r3 = n3;
      }
    }), u3.__H = void 0, r3 && l.__e(r3, u3.__v));
  };
  var g2 = "function" == typeof requestAnimationFrame;
  function j2(n2) {
    var t3, r3 = function() {
      clearTimeout(u3), g2 && cancelAnimationFrame(t3), setTimeout(n2);
    }, u3 = setTimeout(r3, 100);
    g2 && (t3 = requestAnimationFrame(r3));
  }
  function k2(n2) {
    var t3 = r2, u3 = n2.__c;
    "function" == typeof u3 && (n2.__c = void 0, u3()), r2 = t3;
  }
  function w2(n2) {
    var t3 = r2;
    n2.__c = n2.__(), r2 = t3;
  }

  // node_modules/preact/compat/dist/compat.module.js
  function g3(n2, t3) {
    for (var e3 in t3)
      n2[e3] = t3[e3];
    return n2;
  }
  function C2(n2, t3) {
    for (var e3 in n2)
      if ("__source" !== e3 && !(e3 in t3))
        return true;
    for (var r3 in t3)
      if ("__source" !== r3 && n2[r3] !== t3[r3])
        return true;
    return false;
  }
  function w3(n2) {
    this.props = n2;
  }
  (w3.prototype = new d()).isPureReactComponent = true, w3.prototype.shouldComponentUpdate = function(n2, t3) {
    return C2(this.props, n2) || C2(this.state, t3);
  };
  var x3 = l.__b;
  l.__b = function(n2) {
    n2.type && n2.type.__f && n2.ref && (n2.props.ref = n2.ref, n2.ref = null), x3 && x3(n2);
  };
  var N2 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
  var T3 = l.__e;
  l.__e = function(n2, t3, e3, r3) {
    if (n2.then) {
      for (var u3, o2 = t3; o2 = o2.__; )
        if ((u3 = o2.__c) && u3.__c)
          return null == t3.__e && (t3.__e = e3.__e, t3.__k = e3.__k), u3.__c(n2, t3);
    }
    T3(n2, t3, e3, r3);
  };
  var I2 = l.unmount;
  function L2(n2, t3, e3) {
    return n2 && (n2.__c && n2.__c.__H && (n2.__c.__H.__.forEach(function(n3) {
      "function" == typeof n3.__c && n3.__c();
    }), n2.__c.__H = null), null != (n2 = g3({}, n2)).__c && (n2.__c.__P === e3 && (n2.__c.__P = t3), n2.__c = null), n2.__k = n2.__k && n2.__k.map(function(n3) {
      return L2(n3, t3, e3);
    })), n2;
  }
  function U(n2, t3, e3) {
    return n2 && (n2.__v = null, n2.__k = n2.__k && n2.__k.map(function(n3) {
      return U(n3, t3, e3);
    }), n2.__c && n2.__c.__P === t3 && (n2.__e && e3.insertBefore(n2.__e, n2.__d), n2.__c.__e = true, n2.__c.__P = e3)), n2;
  }
  function D() {
    this.__u = 0, this.t = null, this.__b = null;
  }
  function F2(n2) {
    var t3 = n2.__.__c;
    return t3 && t3.__a && t3.__a(n2);
  }
  function V2() {
    this.u = null, this.o = null;
  }
  l.unmount = function(n2) {
    var t3 = n2.__c;
    t3 && t3.__R && t3.__R(), t3 && true === n2.__h && (n2.type = null), I2 && I2(n2);
  }, (D.prototype = new d()).__c = function(n2, t3) {
    var e3 = t3.__c, r3 = this;
    null == r3.t && (r3.t = []), r3.t.push(e3);
    var u3 = F2(r3.__v), o2 = false, i3 = function() {
      o2 || (o2 = true, e3.__R = null, u3 ? u3(l3) : l3());
    };
    e3.__R = i3;
    var l3 = function() {
      if (!--r3.__u) {
        if (r3.state.__a) {
          var n3 = r3.state.__a;
          r3.__v.__k[0] = U(n3, n3.__c.__P, n3.__c.__O);
        }
        var t4;
        for (r3.setState({ __a: r3.__b = null }); t4 = r3.t.pop(); )
          t4.forceUpdate();
      }
    }, c3 = true === t3.__h;
    r3.__u++ || c3 || r3.setState({ __a: r3.__b = r3.__v.__k[0] }), n2.then(i3, i3);
  }, D.prototype.componentWillUnmount = function() {
    this.t = [];
  }, D.prototype.render = function(n2, e3) {
    if (this.__b) {
      if (this.__v.__k) {
        var r3 = document.createElement("div"), o2 = this.__v.__k[0].__c;
        this.__v.__k[0] = L2(this.__b, r3, o2.__O = o2.__P);
      }
      this.__b = null;
    }
    var i3 = e3.__a && h(p, null, n2.fallback);
    return i3 && (i3.__h = null), [h(p, null, e3.__a ? null : n2.children), i3];
  };
  var W = function(n2, t3, e3) {
    if (++e3[1] === e3[0] && n2.o.delete(t3), n2.props.revealOrder && ("t" !== n2.props.revealOrder[0] || !n2.o.size))
      for (e3 = n2.u; e3; ) {
        for (; e3.length > 3; )
          e3.pop()();
        if (e3[1] < e3[0])
          break;
        n2.u = e3 = e3[2];
      }
  };
  (V2.prototype = new d()).__a = function(n2) {
    var t3 = this, e3 = F2(t3.__v), r3 = t3.o.get(n2);
    return r3[0]++, function(u3) {
      var o2 = function() {
        t3.props.revealOrder ? (r3.push(u3), W(t3, n2, r3)) : u3();
      };
      e3 ? e3(o2) : o2();
    };
  }, V2.prototype.render = function(n2) {
    this.u = null, this.o = /* @__PURE__ */ new Map();
    var t3 = x(n2.children);
    n2.revealOrder && "b" === n2.revealOrder[0] && t3.reverse();
    for (var e3 = t3.length; e3--; )
      this.o.set(t3[e3], this.u = [1, 0, this.u]);
    return n2.children;
  }, V2.prototype.componentDidUpdate = V2.prototype.componentDidMount = function() {
    var n2 = this;
    this.o.forEach(function(t3, e3) {
      W(n2, e3, t3);
    });
  };
  var z2 = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
  var B2 = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
  var H2 = "undefined" != typeof document;
  var Z = function(n2) {
    return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/i : /fil|che|ra/i).test(n2);
  };
  d.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(t3) {
    Object.defineProperty(d.prototype, t3, { configurable: true, get: function() {
      return this["UNSAFE_" + t3];
    }, set: function(n2) {
      Object.defineProperty(this, t3, { configurable: true, writable: true, value: n2 });
    } });
  });
  var G = l.event;
  function J() {
  }
  function K() {
    return this.cancelBubble;
  }
  function Q() {
    return this.defaultPrevented;
  }
  l.event = function(n2) {
    return G && (n2 = G(n2)), n2.persist = J, n2.isPropagationStopped = K, n2.isDefaultPrevented = Q, n2.nativeEvent = n2;
  };
  var X;
  var nn = { configurable: true, get: function() {
    return this.class;
  } };
  var tn = l.vnode;
  l.vnode = function(n2) {
    var t3 = n2.type, e3 = n2.props, u3 = e3;
    if ("string" == typeof t3) {
      var o2 = -1 === t3.indexOf("-");
      for (var i3 in u3 = {}, e3) {
        var l3 = e3[i3];
        H2 && "children" === i3 && "noscript" === t3 || "value" === i3 && "defaultValue" in e3 && null == l3 || ("defaultValue" === i3 && "value" in e3 && null == e3.value ? i3 = "value" : "download" === i3 && true === l3 ? l3 = "" : /ondoubleclick/i.test(i3) ? i3 = "ondblclick" : /^onchange(textarea|input)/i.test(i3 + t3) && !Z(e3.type) ? i3 = "oninput" : /^onfocus$/i.test(i3) ? i3 = "onfocusin" : /^onblur$/i.test(i3) ? i3 = "onfocusout" : /^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i3) ? i3 = i3.toLowerCase() : o2 && B2.test(i3) ? i3 = i3.replace(/[A-Z0-9]/g, "-$&").toLowerCase() : null === l3 && (l3 = void 0), /^oninput$/i.test(i3) && (i3 = i3.toLowerCase(), u3[i3] && (i3 = "oninputCapture")), u3[i3] = l3);
      }
      "select" == t3 && u3.multiple && Array.isArray(u3.value) && (u3.value = x(e3.children).forEach(function(n3) {
        n3.props.selected = -1 != u3.value.indexOf(n3.props.value);
      })), "select" == t3 && null != u3.defaultValue && (u3.value = x(e3.children).forEach(function(n3) {
        n3.props.selected = u3.multiple ? -1 != u3.defaultValue.indexOf(n3.props.value) : u3.defaultValue == n3.props.value;
      })), n2.props = u3, e3.class != e3.className && (nn.enumerable = "className" in e3, null != e3.className && (u3.class = e3.className), Object.defineProperty(u3, "className", nn));
    }
    n2.$$typeof = z2, tn && tn(n2);
  };
  var en = l.__r;
  l.__r = function(n2) {
    en && en(n2), X = n2.__c;
  };

  // node_modules/@fullcalendar/core/internal-common.js
  function injectStyles(css) {
    if (!css || typeof document === "undefined") {
      return;
    }
    const head = document.head || document.getElementsByTagName("head")[0];
    const style = document.createElement("style");
    style.type = "text/css";
    head.appendChild(style);
    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }
  var DelayedRunner = class {
    constructor(drainedOption) {
      this.drainedOption = drainedOption;
      this.isRunning = false;
      this.isDirty = false;
      this.pauseDepths = {};
      this.timeoutId = 0;
    }
    request(delay) {
      this.isDirty = true;
      if (!this.isPaused()) {
        this.clearTimeout();
        if (delay == null) {
          this.tryDrain();
        } else {
          this.timeoutId = setTimeout(
            this.tryDrain.bind(this),
            delay
          );
        }
      }
    }
    pause(scope = "") {
      let { pauseDepths } = this;
      pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;
      this.clearTimeout();
    }
    resume(scope = "", force) {
      let { pauseDepths } = this;
      if (scope in pauseDepths) {
        if (force) {
          delete pauseDepths[scope];
        } else {
          pauseDepths[scope] -= 1;
          let depth = pauseDepths[scope];
          if (depth <= 0) {
            delete pauseDepths[scope];
          }
        }
        this.tryDrain();
      }
    }
    isPaused() {
      return Object.keys(this.pauseDepths).length;
    }
    tryDrain() {
      if (!this.isRunning && !this.isPaused()) {
        this.isRunning = true;
        while (this.isDirty) {
          this.isDirty = false;
          this.drained();
        }
        this.isRunning = false;
      }
    }
    clear() {
      this.clearTimeout();
      this.isDirty = false;
      this.pauseDepths = {};
    }
    clearTimeout() {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
        this.timeoutId = 0;
      }
    }
    drained() {
      if (this.drainedOption) {
        this.drainedOption();
      }
    }
  };
  var { hasOwnProperty } = Object.prototype;
  function mergeProps(propObjs, complexPropsMap) {
    let dest = {};
    if (complexPropsMap) {
      for (let name in complexPropsMap) {
        let complexObjs = [];
        for (let i3 = propObjs.length - 1; i3 >= 0; i3 -= 1) {
          let val = propObjs[i3][name];
          if (typeof val === "object" && val) {
            complexObjs.unshift(val);
          } else if (val !== void 0) {
            dest[name] = val;
            break;
          }
        }
        if (complexObjs.length) {
          dest[name] = mergeProps(complexObjs);
        }
      }
    }
    for (let i3 = propObjs.length - 1; i3 >= 0; i3 -= 1) {
      let props = propObjs[i3];
      for (let name in props) {
        if (!(name in dest)) {
          dest[name] = props[name];
        }
      }
    }
    return dest;
  }
  function filterHash(hash, func) {
    let filtered = {};
    for (let key in hash) {
      if (func(hash[key], key)) {
        filtered[key] = hash[key];
      }
    }
    return filtered;
  }
  function mapHash(hash, func) {
    let newHash = {};
    for (let key in hash) {
      newHash[key] = func(hash[key], key);
    }
    return newHash;
  }
  function arrayToHash(a3) {
    let hash = {};
    for (let item of a3) {
      hash[item] = true;
    }
    return hash;
  }
  function hashValuesToArray(obj) {
    let a3 = [];
    for (let key in obj) {
      a3.push(obj[key]);
    }
    return a3;
  }
  function isPropsEqual(obj0, obj1) {
    if (obj0 === obj1) {
      return true;
    }
    for (let key in obj0) {
      if (hasOwnProperty.call(obj0, key)) {
        if (!(key in obj1)) {
          return false;
        }
      }
    }
    for (let key in obj1) {
      if (hasOwnProperty.call(obj1, key)) {
        if (obj0[key] !== obj1[key]) {
          return false;
        }
      }
    }
    return true;
  }
  function getUnequalProps(obj0, obj1) {
    let keys = [];
    for (let key in obj0) {
      if (hasOwnProperty.call(obj0, key)) {
        if (!(key in obj1)) {
          keys.push(key);
        }
      }
    }
    for (let key in obj1) {
      if (hasOwnProperty.call(obj1, key)) {
        if (obj0[key] !== obj1[key]) {
          keys.push(key);
        }
      }
    }
    return keys;
  }
  function compareObjs(oldProps, newProps, equalityFuncs = {}) {
    if (oldProps === newProps) {
      return true;
    }
    for (let key in newProps) {
      if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key]))
        ;
      else {
        return false;
      }
    }
    for (let key in oldProps) {
      if (!(key in newProps)) {
        return false;
      }
    }
    return true;
  }
  function isObjValsEqual(val0, val1, comparator) {
    if (val0 === val1 || comparator === true) {
      return true;
    }
    if (comparator) {
      return comparator(val0, val1);
    }
    return false;
  }
  function collectFromHash(hash, startIndex = 0, endIndex, step = 1) {
    let res = [];
    if (endIndex == null) {
      endIndex = Object.keys(hash).length;
    }
    for (let i3 = startIndex; i3 < endIndex; i3 += step) {
      let val = hash[i3];
      if (val !== void 0) {
        res.push(val);
      }
    }
    return res;
  }
  function isArraysEqual(a0, a1, equalityFunc) {
    if (a0 === a1) {
      return true;
    }
    let len = a0.length;
    let i3;
    if (len !== a1.length) {
      return false;
    }
    for (i3 = 0; i3 < len; i3 += 1) {
      if (!(equalityFunc ? equalityFunc(a0[i3], a1[i3]) : a0[i3] === a1[i3])) {
        return false;
      }
    }
    return true;
  }
  function memoize(workerFunc, resEquality, teardownFunc) {
    let currentArgs;
    let currentRes;
    return function(...newArgs) {
      if (!currentArgs) {
        currentRes = workerFunc.apply(this, newArgs);
      } else if (!isArraysEqual(currentArgs, newArgs)) {
        if (teardownFunc) {
          teardownFunc(currentRes);
        }
        let res = workerFunc.apply(this, newArgs);
        if (!resEquality || !resEquality(res, currentRes)) {
          currentRes = res;
        }
      }
      currentArgs = newArgs;
      return currentRes;
    };
  }
  function memoizeObjArg(workerFunc, resEquality, teardownFunc) {
    let currentArg;
    let currentRes;
    return (newArg) => {
      if (!currentArg) {
        currentRes = workerFunc.call(this, newArg);
      } else if (!isPropsEqual(currentArg, newArg)) {
        if (teardownFunc) {
          teardownFunc(currentRes);
        }
        let res = workerFunc.call(this, newArg);
        if (!resEquality || !resEquality(res, currentRes)) {
          currentRes = res;
        }
      }
      currentArg = newArg;
      return currentRes;
    };
  }
  function removeElement(el) {
    if (el.parentNode) {
      el.parentNode.removeChild(el);
    }
  }
  function elementClosest(el, selector) {
    if (el.closest) {
      return el.closest(selector);
    }
    if (!document.documentElement.contains(el)) {
      return null;
    }
    do {
      if (elementMatches(el, selector)) {
        return el;
      }
      el = el.parentElement || el.parentNode;
    } while (el !== null && el.nodeType === 1);
    return null;
  }
  function elementMatches(el, selector) {
    let method = el.matches || el.matchesSelector || el.msMatchesSelector;
    return method.call(el, selector);
  }
  function findElements(container, selector) {
    let containers = container instanceof HTMLElement ? [container] : container;
    let allMatches = [];
    for (let i3 = 0; i3 < containers.length; i3 += 1) {
      let matches = containers[i3].querySelectorAll(selector);
      for (let j4 = 0; j4 < matches.length; j4 += 1) {
        allMatches.push(matches[j4]);
      }
    }
    return allMatches;
  }
  var PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;
  function applyStyleProp(el, name, val) {
    if (val == null) {
      el.style[name] = "";
    } else if (typeof val === "number" && PIXEL_PROP_RE.test(name)) {
      el.style[name] = `${val}px`;
    } else {
      el.style[name] = val;
    }
  }
  var guid$1 = 0;
  function getUniqueDomId() {
    guid$1 += 1;
    return "fc-dom-" + guid$1;
  }
  function buildDelegationHandler(selector, handler) {
    return (ev) => {
      let matchedChild = elementClosest(ev.target, selector);
      if (matchedChild) {
        handler.call(matchedChild, ev, matchedChild);
      }
    };
  }
  function listenBySelector(container, eventType, selector, handler) {
    let attachedHandler = buildDelegationHandler(selector, handler);
    container.addEventListener(eventType, attachedHandler);
    return () => {
      container.removeEventListener(eventType, attachedHandler);
    };
  }
  function listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {
    let currentMatchedChild;
    return listenBySelector(container, "mouseover", selector, (mouseOverEv, matchedChild) => {
      if (matchedChild !== currentMatchedChild) {
        currentMatchedChild = matchedChild;
        onMouseEnter(mouseOverEv, matchedChild);
        let realOnMouseLeave = (mouseLeaveEv) => {
          currentMatchedChild = null;
          onMouseLeave(mouseLeaveEv, matchedChild);
          matchedChild.removeEventListener("mouseleave", realOnMouseLeave);
        };
        matchedChild.addEventListener("mouseleave", realOnMouseLeave);
      }
    });
  }
  var guidNumber = 0;
  function guid() {
    guidNumber += 1;
    return String(guidNumber);
  }
  function parseFieldSpecs(input) {
    let specs = [];
    let tokens = [];
    let i3;
    let token;
    if (typeof input === "string") {
      tokens = input.split(/\s*,\s*/);
    } else if (typeof input === "function") {
      tokens = [input];
    } else if (Array.isArray(input)) {
      tokens = input;
    }
    for (i3 = 0; i3 < tokens.length; i3 += 1) {
      token = tokens[i3];
      if (typeof token === "string") {
        specs.push(token.charAt(0) === "-" ? { field: token.substring(1), order: -1 } : { field: token, order: 1 });
      } else if (typeof token === "function") {
        specs.push({ func: token });
      }
    }
    return specs;
  }
  function padStart(val, len) {
    let s3 = String(val);
    return "000".substr(0, len - s3.length) + s3;
  }
  function formatWithOrdinals(formatter, args, fallbackText) {
    if (typeof formatter === "function") {
      return formatter(...args);
    }
    if (typeof formatter === "string") {
      return args.reduce((str, arg, index) => str.replace("$" + index, arg || ""), formatter);
    }
    return fallbackText;
  }
  function isInt(n2) {
    return n2 % 1 === 0;
  }
  function computeSmallestCellWidth(cellEl) {
    let allWidthEl = cellEl.querySelector(".fc-scrollgrid-shrink-frame");
    let contentWidthEl = cellEl.querySelector(".fc-scrollgrid-shrink-cushion");
    if (!allWidthEl) {
      throw new Error("needs fc-scrollgrid-shrink-frame className");
    }
    if (!contentWidthEl) {
      throw new Error("needs fc-scrollgrid-shrink-cushion className");
    }
    return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + contentWidthEl.getBoundingClientRect().width;
  }
  function addDays(m3, n2) {
    let a3 = dateToUtcArray(m3);
    a3[2] += n2;
    return arrayToUtcDate(a3);
  }
  function addMs(m3, n2) {
    let a3 = dateToUtcArray(m3);
    a3[6] += n2;
    return arrayToUtcDate(a3);
  }
  function diffDays(m0, m1) {
    return (m1.valueOf() - m0.valueOf()) / (1e3 * 60 * 60 * 24);
  }
  function diffHours(m0, m1) {
    return (m1.valueOf() - m0.valueOf()) / (1e3 * 60 * 60);
  }
  function diffMinutes(m0, m1) {
    return (m1.valueOf() - m0.valueOf()) / (1e3 * 60);
  }
  function diffSeconds(m0, m1) {
    return (m1.valueOf() - m0.valueOf()) / 1e3;
  }
  function diffDayAndTime(m0, m1) {
    let m0day = startOfDay(m0);
    let m1day = startOfDay(m1);
    return {
      years: 0,
      months: 0,
      days: Math.round(diffDays(m0day, m1day)),
      milliseconds: m1.valueOf() - m1day.valueOf() - (m0.valueOf() - m0day.valueOf())
    };
  }
  function diffWholeWeeks(m0, m1) {
    let d2 = diffWholeDays(m0, m1);
    if (d2 !== null && d2 % 7 === 0) {
      return d2 / 7;
    }
    return null;
  }
  function diffWholeDays(m0, m1) {
    if (timeAsMs(m0) === timeAsMs(m1)) {
      return Math.round(diffDays(m0, m1));
    }
    return null;
  }
  function startOfDay(m3) {
    return arrayToUtcDate([
      m3.getUTCFullYear(),
      m3.getUTCMonth(),
      m3.getUTCDate()
    ]);
  }
  function startOfHour(m3) {
    return arrayToUtcDate([
      m3.getUTCFullYear(),
      m3.getUTCMonth(),
      m3.getUTCDate(),
      m3.getUTCHours()
    ]);
  }
  function startOfMinute(m3) {
    return arrayToUtcDate([
      m3.getUTCFullYear(),
      m3.getUTCMonth(),
      m3.getUTCDate(),
      m3.getUTCHours(),
      m3.getUTCMinutes()
    ]);
  }
  function startOfSecond(m3) {
    return arrayToUtcDate([
      m3.getUTCFullYear(),
      m3.getUTCMonth(),
      m3.getUTCDate(),
      m3.getUTCHours(),
      m3.getUTCMinutes(),
      m3.getUTCSeconds()
    ]);
  }
  function weekOfYear(marker, dow, doy) {
    let y3 = marker.getUTCFullYear();
    let w4 = weekOfGivenYear(marker, y3, dow, doy);
    if (w4 < 1) {
      return weekOfGivenYear(marker, y3 - 1, dow, doy);
    }
    let nextW = weekOfGivenYear(marker, y3 + 1, dow, doy);
    if (nextW >= 1) {
      return Math.min(w4, nextW);
    }
    return w4;
  }
  function weekOfGivenYear(marker, year, dow, doy) {
    let firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);
    let dayStart = startOfDay(marker);
    let days = Math.round(diffDays(firstWeekStart, dayStart));
    return Math.floor(days / 7) + 1;
  }
  function firstWeekOffset(year, dow, doy) {
    let fwd = 7 + dow - doy;
    let fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;
    return -fwdlw + fwd - 1;
  }
  function dateToLocalArray(date) {
    return [
      date.getFullYear(),
      date.getMonth(),
      date.getDate(),
      date.getHours(),
      date.getMinutes(),
      date.getSeconds(),
      date.getMilliseconds()
    ];
  }
  function arrayToLocalDate(a3) {
    return new Date(
      a3[0],
      a3[1] || 0,
      a3[2] == null ? 1 : a3[2],
      a3[3] || 0,
      a3[4] || 0,
      a3[5] || 0
    );
  }
  function dateToUtcArray(date) {
    return [
      date.getUTCFullYear(),
      date.getUTCMonth(),
      date.getUTCDate(),
      date.getUTCHours(),
      date.getUTCMinutes(),
      date.getUTCSeconds(),
      date.getUTCMilliseconds()
    ];
  }
  function arrayToUtcDate(a3) {
    if (a3.length === 1) {
      a3 = a3.concat([0]);
    }
    return new Date(Date.UTC(...a3));
  }
  function isValidDate(m3) {
    return !isNaN(m3.valueOf());
  }
  function timeAsMs(m3) {
    return m3.getUTCHours() * 1e3 * 60 * 60 + m3.getUTCMinutes() * 1e3 * 60 + m3.getUTCSeconds() * 1e3 + m3.getUTCMilliseconds();
  }
  var calendarSystemClassMap = {};
  function registerCalendarSystem(name, theClass) {
    calendarSystemClassMap[name] = theClass;
  }
  function createCalendarSystem(name) {
    return new calendarSystemClassMap[name]();
  }
  var GregorianCalendarSystem = class {
    getMarkerYear(d2) {
      return d2.getUTCFullYear();
    }
    getMarkerMonth(d2) {
      return d2.getUTCMonth();
    }
    getMarkerDay(d2) {
      return d2.getUTCDate();
    }
    arrayToMarker(arr) {
      return arrayToUtcDate(arr);
    }
    markerToArray(marker) {
      return dateToUtcArray(marker);
    }
  };
  registerCalendarSystem("gregory", GregorianCalendarSystem);
  var PARSE_RE = /^(-?)(?:(\d+)\.)?(\d+):(\d\d)(?::(\d\d)(?:\.(\d\d\d))?)?/;
  function createDuration(input, unit) {
    if (typeof input === "string") {
      return parseString(input);
    }
    if (typeof input === "object" && input) {
      return parseObject(input);
    }
    if (typeof input === "number") {
      return parseObject({ [unit || "milliseconds"]: input });
    }
    return null;
  }
  function parseString(s3) {
    let m3 = PARSE_RE.exec(s3);
    if (m3) {
      let sign = m3[1] ? -1 : 1;
      return {
        years: 0,
        months: 0,
        days: sign * (m3[2] ? parseInt(m3[2], 10) : 0),
        milliseconds: sign * ((m3[3] ? parseInt(m3[3], 10) : 0) * 60 * 60 * 1e3 + (m3[4] ? parseInt(m3[4], 10) : 0) * 60 * 1e3 + (m3[5] ? parseInt(m3[5], 10) : 0) * 1e3 + (m3[6] ? parseInt(m3[6], 10) : 0))
      };
    }
    return null;
  }
  function parseObject(obj) {
    let duration = {
      years: obj.years || obj.year || 0,
      months: obj.months || obj.month || 0,
      days: obj.days || obj.day || 0,
      milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1e3 + (obj.minutes || obj.minute || 0) * 60 * 1e3 + (obj.seconds || obj.second || 0) * 1e3 + (obj.milliseconds || obj.millisecond || obj.ms || 0)
    };
    let weeks = obj.weeks || obj.week;
    if (weeks) {
      duration.days += weeks * 7;
      duration.specifiedWeeks = true;
    }
    return duration;
  }
  function durationsEqual(d0, d1) {
    return d0.years === d1.years && d0.months === d1.months && d0.days === d1.days && d0.milliseconds === d1.milliseconds;
  }
  function subtractDurations(d1, d0) {
    return {
      years: d1.years - d0.years,
      months: d1.months - d0.months,
      days: d1.days - d0.days,
      milliseconds: d1.milliseconds - d0.milliseconds
    };
  }
  function asRoughYears(dur) {
    return asRoughDays(dur) / 365;
  }
  function asRoughMonths(dur) {
    return asRoughDays(dur) / 30;
  }
  function asRoughDays(dur) {
    return asRoughMs(dur) / 864e5;
  }
  function asRoughMs(dur) {
    return dur.years * (365 * 864e5) + dur.months * (30 * 864e5) + dur.days * 864e5 + dur.milliseconds;
  }
  function greatestDurationDenominator(dur) {
    let ms = dur.milliseconds;
    if (ms) {
      if (ms % 1e3 !== 0) {
        return { unit: "millisecond", value: ms };
      }
      if (ms % (1e3 * 60) !== 0) {
        return { unit: "second", value: ms / 1e3 };
      }
      if (ms % (1e3 * 60 * 60) !== 0) {
        return { unit: "minute", value: ms / (1e3 * 60) };
      }
      if (ms) {
        return { unit: "hour", value: ms / (1e3 * 60 * 60) };
      }
    }
    if (dur.days) {
      if (dur.specifiedWeeks && dur.days % 7 === 0) {
        return { unit: "week", value: dur.days / 7 };
      }
      return { unit: "day", value: dur.days };
    }
    if (dur.months) {
      return { unit: "month", value: dur.months };
    }
    if (dur.years) {
      return { unit: "year", value: dur.years };
    }
    return { unit: "millisecond", value: 0 };
  }
  function buildIsoString(marker, timeZoneOffset, stripZeroTime = false) {
    let s3 = marker.toISOString();
    s3 = s3.replace(".000", "");
    if (stripZeroTime) {
      s3 = s3.replace("T00:00:00Z", "");
    }
    if (s3.length > 10) {
      if (timeZoneOffset == null) {
        s3 = s3.replace("Z", "");
      } else if (timeZoneOffset !== 0) {
        s3 = s3.replace("Z", formatTimeZoneOffset(timeZoneOffset, true));
      }
    }
    return s3;
  }
  function formatTimeZoneOffset(minutes, doIso = false) {
    let sign = minutes < 0 ? "-" : "+";
    let abs = Math.abs(minutes);
    let hours = Math.floor(abs / 60);
    let mins = Math.round(abs % 60);
    if (doIso) {
      return `${sign + padStart(hours, 2)}:${padStart(mins, 2)}`;
    }
    return `GMT${sign}${hours}${mins ? `:${padStart(mins, 2)}` : ""}`;
  }
  var ISO_RE = /^\s*(\d{4})(-?(\d{2})(-?(\d{2})([T ](\d{2}):?(\d{2})(:?(\d{2})(\.(\d+))?)?(Z|(([-+])(\d{2})(:?(\d{2}))?))?)?)?)?$/;
  function parse(str) {
    let m3 = ISO_RE.exec(str);
    if (m3) {
      let marker = new Date(Date.UTC(Number(m3[1]), m3[3] ? Number(m3[3]) - 1 : 0, Number(m3[5] || 1), Number(m3[7] || 0), Number(m3[8] || 0), Number(m3[10] || 0), m3[12] ? Number(`0.${m3[12]}`) * 1e3 : 0));
      if (isValidDate(marker)) {
        let timeZoneOffset = null;
        if (m3[13]) {
          timeZoneOffset = (m3[15] === "-" ? -1 : 1) * (Number(m3[16] || 0) * 60 + Number(m3[18] || 0));
        }
        return {
          marker,
          isTimeUnspecified: !m3[6],
          timeZoneOffset
        };
      }
    }
    return null;
  }
  var DateEnv = class {
    constructor(settings) {
      let timeZone = this.timeZone = settings.timeZone;
      let isNamedTimeZone = timeZone !== "local" && timeZone !== "UTC";
      if (settings.namedTimeZoneImpl && isNamedTimeZone) {
        this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);
      }
      this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);
      this.calendarSystem = createCalendarSystem(settings.calendarSystem);
      this.locale = settings.locale;
      this.weekDow = settings.locale.week.dow;
      this.weekDoy = settings.locale.week.doy;
      if (settings.weekNumberCalculation === "ISO") {
        this.weekDow = 1;
        this.weekDoy = 4;
      }
      if (typeof settings.firstDay === "number") {
        this.weekDow = settings.firstDay;
      }
      if (typeof settings.weekNumberCalculation === "function") {
        this.weekNumberFunc = settings.weekNumberCalculation;
      }
      this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;
      this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText;
      this.cmdFormatter = settings.cmdFormatter;
      this.defaultSeparator = settings.defaultSeparator;
    }
    createMarker(input) {
      let meta = this.createMarkerMeta(input);
      if (meta === null) {
        return null;
      }
      return meta.marker;
    }
    createNowMarker() {
      if (this.canComputeOffset) {
        return this.timestampToMarker(new Date().valueOf());
      }
      return arrayToUtcDate(dateToLocalArray(new Date()));
    }
    createMarkerMeta(input) {
      if (typeof input === "string") {
        return this.parse(input);
      }
      let marker = null;
      if (typeof input === "number") {
        marker = this.timestampToMarker(input);
      } else if (input instanceof Date) {
        input = input.valueOf();
        if (!isNaN(input)) {
          marker = this.timestampToMarker(input);
        }
      } else if (Array.isArray(input)) {
        marker = arrayToUtcDate(input);
      }
      if (marker === null || !isValidDate(marker)) {
        return null;
      }
      return { marker, isTimeUnspecified: false, forcedTzo: null };
    }
    parse(s3) {
      let parts = parse(s3);
      if (parts === null) {
        return null;
      }
      let { marker } = parts;
      let forcedTzo = null;
      if (parts.timeZoneOffset !== null) {
        if (this.canComputeOffset) {
          marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1e3);
        } else {
          forcedTzo = parts.timeZoneOffset;
        }
      }
      return { marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo };
    }
    getYear(marker) {
      return this.calendarSystem.getMarkerYear(marker);
    }
    getMonth(marker) {
      return this.calendarSystem.getMarkerMonth(marker);
    }
    add(marker, dur) {
      let a3 = this.calendarSystem.markerToArray(marker);
      a3[0] += dur.years;
      a3[1] += dur.months;
      a3[2] += dur.days;
      a3[6] += dur.milliseconds;
      return this.calendarSystem.arrayToMarker(a3);
    }
    subtract(marker, dur) {
      let a3 = this.calendarSystem.markerToArray(marker);
      a3[0] -= dur.years;
      a3[1] -= dur.months;
      a3[2] -= dur.days;
      a3[6] -= dur.milliseconds;
      return this.calendarSystem.arrayToMarker(a3);
    }
    addYears(marker, n2) {
      let a3 = this.calendarSystem.markerToArray(marker);
      a3[0] += n2;
      return this.calendarSystem.arrayToMarker(a3);
    }
    addMonths(marker, n2) {
      let a3 = this.calendarSystem.markerToArray(marker);
      a3[1] += n2;
      return this.calendarSystem.arrayToMarker(a3);
    }
    diffWholeYears(m0, m1) {
      let { calendarSystem } = this;
      if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) && calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {
        return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);
      }
      return null;
    }
    diffWholeMonths(m0, m1) {
      let { calendarSystem } = this;
      if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {
        return calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0) + (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;
      }
      return null;
    }
    greatestWholeUnit(m0, m1) {
      let n2 = this.diffWholeYears(m0, m1);
      if (n2 !== null) {
        return { unit: "year", value: n2 };
      }
      n2 = this.diffWholeMonths(m0, m1);
      if (n2 !== null) {
        return { unit: "month", value: n2 };
      }
      n2 = diffWholeWeeks(m0, m1);
      if (n2 !== null) {
        return { unit: "week", value: n2 };
      }
      n2 = diffWholeDays(m0, m1);
      if (n2 !== null) {
        return { unit: "day", value: n2 };
      }
      n2 = diffHours(m0, m1);
      if (isInt(n2)) {
        return { unit: "hour", value: n2 };
      }
      n2 = diffMinutes(m0, m1);
      if (isInt(n2)) {
        return { unit: "minute", value: n2 };
      }
      n2 = diffSeconds(m0, m1);
      if (isInt(n2)) {
        return { unit: "second", value: n2 };
      }
      return { unit: "millisecond", value: m1.valueOf() - m0.valueOf() };
    }
    countDurationsBetween(m0, m1, d2) {
      let diff;
      if (d2.years) {
        diff = this.diffWholeYears(m0, m1);
        if (diff !== null) {
          return diff / asRoughYears(d2);
        }
      }
      if (d2.months) {
        diff = this.diffWholeMonths(m0, m1);
        if (diff !== null) {
          return diff / asRoughMonths(d2);
        }
      }
      if (d2.days) {
        diff = diffWholeDays(m0, m1);
        if (diff !== null) {
          return diff / asRoughDays(d2);
        }
      }
      return (m1.valueOf() - m0.valueOf()) / asRoughMs(d2);
    }
    startOf(m3, unit) {
      if (unit === "year") {
        return this.startOfYear(m3);
      }
      if (unit === "month") {
        return this.startOfMonth(m3);
      }
      if (unit === "week") {
        return this.startOfWeek(m3);
      }
      if (unit === "day") {
        return startOfDay(m3);
      }
      if (unit === "hour") {
        return startOfHour(m3);
      }
      if (unit === "minute") {
        return startOfMinute(m3);
      }
      if (unit === "second") {
        return startOfSecond(m3);
      }
      return null;
    }
    startOfYear(m3) {
      return this.calendarSystem.arrayToMarker([
        this.calendarSystem.getMarkerYear(m3)
      ]);
    }
    startOfMonth(m3) {
      return this.calendarSystem.arrayToMarker([
        this.calendarSystem.getMarkerYear(m3),
        this.calendarSystem.getMarkerMonth(m3)
      ]);
    }
    startOfWeek(m3) {
      return this.calendarSystem.arrayToMarker([
        this.calendarSystem.getMarkerYear(m3),
        this.calendarSystem.getMarkerMonth(m3),
        m3.getUTCDate() - (m3.getUTCDay() - this.weekDow + 7) % 7
      ]);
    }
    computeWeekNumber(marker) {
      if (this.weekNumberFunc) {
        return this.weekNumberFunc(this.toDate(marker));
      }
      return weekOfYear(marker, this.weekDow, this.weekDoy);
    }
    format(marker, formatter, dateOptions = {}) {
      return formatter.format({
        marker,
        timeZoneOffset: dateOptions.forcedTzo != null ? dateOptions.forcedTzo : this.offsetForMarker(marker)
      }, this);
    }
    formatRange(start, end, formatter, dateOptions = {}) {
      if (dateOptions.isEndExclusive) {
        end = addMs(end, -1);
      }
      return formatter.formatRange({
        marker: start,
        timeZoneOffset: dateOptions.forcedStartTzo != null ? dateOptions.forcedStartTzo : this.offsetForMarker(start)
      }, {
        marker: end,
        timeZoneOffset: dateOptions.forcedEndTzo != null ? dateOptions.forcedEndTzo : this.offsetForMarker(end)
      }, this, dateOptions.defaultSeparator);
    }
    formatIso(marker, extraOptions = {}) {
      let timeZoneOffset = null;
      if (!extraOptions.omitTimeZoneOffset) {
        if (extraOptions.forcedTzo != null) {
          timeZoneOffset = extraOptions.forcedTzo;
        } else {
          timeZoneOffset = this.offsetForMarker(marker);
        }
      }
      return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);
    }
    timestampToMarker(ms) {
      if (this.timeZone === "local") {
        return arrayToUtcDate(dateToLocalArray(new Date(ms)));
      }
      if (this.timeZone === "UTC" || !this.namedTimeZoneImpl) {
        return new Date(ms);
      }
      return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));
    }
    offsetForMarker(m3) {
      if (this.timeZone === "local") {
        return -arrayToLocalDate(dateToUtcArray(m3)).getTimezoneOffset();
      }
      if (this.timeZone === "UTC") {
        return 0;
      }
      if (this.namedTimeZoneImpl) {
        return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m3));
      }
      return null;
    }
    toDate(m3, forcedTzo) {
      if (this.timeZone === "local") {
        return arrayToLocalDate(dateToUtcArray(m3));
      }
      if (this.timeZone === "UTC") {
        return new Date(m3.valueOf());
      }
      if (!this.namedTimeZoneImpl) {
        return new Date(m3.valueOf() - (forcedTzo || 0));
      }
      return new Date(m3.valueOf() - this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m3)) * 1e3 * 60);
    }
  };
  var Theme = class {
    constructor(calendarOptions) {
      if (this.iconOverrideOption) {
        this.setIconOverride(calendarOptions[this.iconOverrideOption]);
      }
    }
    setIconOverride(iconOverrideHash) {
      let iconClassesCopy;
      let buttonName;
      if (typeof iconOverrideHash === "object" && iconOverrideHash) {
        iconClassesCopy = Object.assign({}, this.iconClasses);
        for (buttonName in iconOverrideHash) {
          iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);
        }
        this.iconClasses = iconClassesCopy;
      } else if (iconOverrideHash === false) {
        this.iconClasses = {};
      }
    }
    applyIconOverridePrefix(className) {
      let prefix = this.iconOverridePrefix;
      if (prefix && className.indexOf(prefix) !== 0) {
        className = prefix + className;
      }
      return className;
    }
    getClass(key) {
      return this.classes[key] || "";
    }
    getIconClass(buttonName, isRtl) {
      let className;
      if (isRtl && this.rtlIconClasses) {
        className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];
      } else {
        className = this.iconClasses[buttonName];
      }
      if (className) {
        return `${this.baseIconClass} ${className}`;
      }
      return "";
    }
    getCustomButtonIconClass(customButtonProps) {
      let className;
      if (this.iconOverrideCustomButtonOption) {
        className = customButtonProps[this.iconOverrideCustomButtonOption];
        if (className) {
          return `${this.baseIconClass} ${this.applyIconOverridePrefix(className)}`;
        }
      }
      return "";
    }
  };
  Theme.prototype.classes = {};
  Theme.prototype.iconClasses = {};
  Theme.prototype.baseIconClass = "";
  Theme.prototype.iconOverridePrefix = "";
  var EXTENDED_SETTINGS_AND_SEVERITIES = {
    week: 3,
    separator: 0,
    omitZeroMinute: 0,
    meridiem: 0,
    omitCommas: 0
  };
  var STANDARD_DATE_PROP_SEVERITIES = {
    timeZoneName: 7,
    era: 6,
    year: 5,
    month: 4,
    day: 2,
    weekday: 2,
    hour: 1,
    minute: 1,
    second: 1
  };
  var MERIDIEM_RE = /\s*([ap])\.?m\.?/i;
  var COMMA_RE = /,/g;
  var MULTI_SPACE_RE = /\s+/g;
  var LTR_RE = /\u200e/g;
  var UTC_RE = /UTC|GMT/;
  var NativeFormatter = class {
    constructor(formatSettings) {
      let standardDateProps = {};
      let extendedSettings = {};
      let severity = 0;
      for (let name in formatSettings) {
        if (name in EXTENDED_SETTINGS_AND_SEVERITIES) {
          extendedSettings[name] = formatSettings[name];
          severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name], severity);
        } else {
          standardDateProps[name] = formatSettings[name];
          if (name in STANDARD_DATE_PROP_SEVERITIES) {
            severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name], severity);
          }
        }
      }
      this.standardDateProps = standardDateProps;
      this.extendedSettings = extendedSettings;
      this.severity = severity;
      this.buildFormattingFunc = memoize(buildFormattingFunc);
    }
    format(date, context) {
      return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);
    }
    formatRange(start, end, context, betterDefaultSeparator) {
      let { standardDateProps, extendedSettings } = this;
      let diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);
      if (!diffSeverity) {
        return this.format(start, context);
      }
      let biggestUnitForPartial = diffSeverity;
      if (biggestUnitForPartial > 1 && (standardDateProps.year === "numeric" || standardDateProps.year === "2-digit") && (standardDateProps.month === "numeric" || standardDateProps.month === "2-digit") && (standardDateProps.day === "numeric" || standardDateProps.day === "2-digit")) {
        biggestUnitForPartial = 1;
      }
      let full0 = this.format(start, context);
      let full1 = this.format(end, context);
      if (full0 === full1) {
        return full0;
      }
      let partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);
      let partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);
      let partial0 = partialFormattingFunc(start);
      let partial1 = partialFormattingFunc(end);
      let insertion = findCommonInsertion(full0, partial0, full1, partial1);
      let separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || "";
      if (insertion) {
        return insertion.before + partial0 + separator + partial1 + insertion.after;
      }
      return full0 + separator + full1;
    }
    getLargestUnit() {
      switch (this.severity) {
        case 7:
        case 6:
        case 5:
          return "year";
        case 4:
          return "month";
        case 3:
          return "week";
        case 2:
          return "day";
        default:
          return "time";
      }
    }
  };
  function buildFormattingFunc(standardDateProps, extendedSettings, context) {
    let standardDatePropCnt = Object.keys(standardDateProps).length;
    if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === "short") {
      return (date) => formatTimeZoneOffset(date.timeZoneOffset);
    }
    if (standardDatePropCnt === 0 && extendedSettings.week) {
      return (date) => formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.weekTextLong, context.locale, extendedSettings.week);
    }
    return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);
  }
  function buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {
    standardDateProps = Object.assign({}, standardDateProps);
    extendedSettings = Object.assign({}, extendedSettings);
    sanitizeSettings(standardDateProps, extendedSettings);
    standardDateProps.timeZone = "UTC";
    let normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);
    let zeroFormat;
    if (extendedSettings.omitZeroMinute) {
      let zeroProps = Object.assign({}, standardDateProps);
      delete zeroProps.minute;
      zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);
    }
    return (date) => {
      let { marker } = date;
      let format;
      if (zeroFormat && !marker.getUTCMinutes()) {
        format = zeroFormat;
      } else {
        format = normalFormat;
      }
      let s3 = format.format(marker);
      return postProcess(s3, date, standardDateProps, extendedSettings, context);
    };
  }
  function sanitizeSettings(standardDateProps, extendedSettings) {
    if (standardDateProps.timeZoneName) {
      if (!standardDateProps.hour) {
        standardDateProps.hour = "2-digit";
      }
      if (!standardDateProps.minute) {
        standardDateProps.minute = "2-digit";
      }
    }
    if (standardDateProps.timeZoneName === "long") {
      standardDateProps.timeZoneName = "short";
    }
    if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {
      delete extendedSettings.omitZeroMinute;
    }
  }
  function postProcess(s3, date, standardDateProps, extendedSettings, context) {
    s3 = s3.replace(LTR_RE, "");
    if (standardDateProps.timeZoneName === "short") {
      s3 = injectTzoStr(s3, context.timeZone === "UTC" || date.timeZoneOffset == null ? "UTC" : formatTimeZoneOffset(date.timeZoneOffset));
    }
    if (extendedSettings.omitCommas) {
      s3 = s3.replace(COMMA_RE, "").trim();
    }
    if (extendedSettings.omitZeroMinute) {
      s3 = s3.replace(":00", "");
    }
    if (extendedSettings.meridiem === false) {
      s3 = s3.replace(MERIDIEM_RE, "").trim();
    } else if (extendedSettings.meridiem === "narrow") {
      s3 = s3.replace(MERIDIEM_RE, (m0, m1) => m1.toLocaleLowerCase());
    } else if (extendedSettings.meridiem === "short") {
      s3 = s3.replace(MERIDIEM_RE, (m0, m1) => `${m1.toLocaleLowerCase()}m`);
    } else if (extendedSettings.meridiem === "lowercase") {
      s3 = s3.replace(MERIDIEM_RE, (m0) => m0.toLocaleLowerCase());
    }
    s3 = s3.replace(MULTI_SPACE_RE, " ");
    s3 = s3.trim();
    return s3;
  }
  function injectTzoStr(s3, tzoStr) {
    let replaced = false;
    s3 = s3.replace(UTC_RE, () => {
      replaced = true;
      return tzoStr;
    });
    if (!replaced) {
      s3 += ` ${tzoStr}`;
    }
    return s3;
  }
  function formatWeekNumber(num, weekText, weekTextLong, locale, display) {
    let parts = [];
    if (display === "long") {
      parts.push(weekTextLong);
    } else if (display === "short" || display === "narrow") {
      parts.push(weekText);
    }
    if (display === "long" || display === "short") {
      parts.push(" ");
    }
    parts.push(locale.simpleNumberFormat.format(num));
    if (locale.options.direction === "rtl") {
      parts.reverse();
    }
    return parts.join("");
  }
  function computeMarkerDiffSeverity(d0, d1, ca) {
    if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {
      return 5;
    }
    if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {
      return 4;
    }
    if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {
      return 2;
    }
    if (timeAsMs(d0) !== timeAsMs(d1)) {
      return 1;
    }
    return 0;
  }
  function computePartialFormattingOptions(options, biggestUnit) {
    let partialOptions = {};
    for (let name in options) {
      if (!(name in STANDARD_DATE_PROP_SEVERITIES) || STANDARD_DATE_PROP_SEVERITIES[name] <= biggestUnit) {
        partialOptions[name] = options[name];
      }
    }
    return partialOptions;
  }
  function findCommonInsertion(full0, partial0, full1, partial1) {
    let i0 = 0;
    while (i0 < full0.length) {
      let found0 = full0.indexOf(partial0, i0);
      if (found0 === -1) {
        break;
      }
      let before0 = full0.substr(0, found0);
      i0 = found0 + partial0.length;
      let after0 = full0.substr(i0);
      let i1 = 0;
      while (i1 < full1.length) {
        let found1 = full1.indexOf(partial1, i1);
        if (found1 === -1) {
          break;
        }
        let before1 = full1.substr(0, found1);
        i1 = found1 + partial1.length;
        let after1 = full1.substr(i1);
        if (before0 === before1 && after0 === after1) {
          return {
            before: before0,
            after: after0
          };
        }
      }
    }
    return null;
  }
  function expandZonedMarker(dateInfo, calendarSystem) {
    let a3 = calendarSystem.markerToArray(dateInfo.marker);
    return {
      marker: dateInfo.marker,
      timeZoneOffset: dateInfo.timeZoneOffset,
      array: a3,
      year: a3[0],
      month: a3[1],
      day: a3[2],
      hour: a3[3],
      minute: a3[4],
      second: a3[5],
      millisecond: a3[6]
    };
  }
  function createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {
    let startInfo = expandZonedMarker(start, context.calendarSystem);
    let endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;
    return {
      date: startInfo,
      start: startInfo,
      end: endInfo,
      timeZone: context.timeZone,
      localeCodes: context.locale.codes,
      defaultSeparator: betterDefaultSeparator || context.defaultSeparator
    };
  }
  var CmdFormatter = class {
    constructor(cmdStr) {
      this.cmdStr = cmdStr;
    }
    format(date, context, betterDefaultSeparator) {
      return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
    }
    formatRange(start, end, context, betterDefaultSeparator) {
      return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
    }
  };
  var FuncFormatter = class {
    constructor(func) {
      this.func = func;
    }
    format(date, context, betterDefaultSeparator) {
      return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
    }
    formatRange(start, end, context, betterDefaultSeparator) {
      return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
    }
  };
  function createFormatter(input) {
    if (typeof input === "object" && input) {
      return new NativeFormatter(input);
    }
    if (typeof input === "string") {
      return new CmdFormatter(input);
    }
    if (typeof input === "function") {
      return new FuncFormatter(input);
    }
    return null;
  }
  var BASE_OPTION_REFINERS = {
    navLinkDayClick: identity,
    navLinkWeekClick: identity,
    duration: createDuration,
    bootstrapFontAwesome: identity,
    buttonIcons: identity,
    customButtons: identity,
    defaultAllDayEventDuration: createDuration,
    defaultTimedEventDuration: createDuration,
    nextDayThreshold: createDuration,
    scrollTime: createDuration,
    scrollTimeReset: Boolean,
    slotMinTime: createDuration,
    slotMaxTime: createDuration,
    dayPopoverFormat: createFormatter,
    slotDuration: createDuration,
    snapDuration: createDuration,
    headerToolbar: identity,
    footerToolbar: identity,
    defaultRangeSeparator: String,
    titleRangeSeparator: String,
    forceEventDuration: Boolean,
    dayHeaders: Boolean,
    dayHeaderFormat: createFormatter,
    dayHeaderClassNames: identity,
    dayHeaderContent: identity,
    dayHeaderDidMount: identity,
    dayHeaderWillUnmount: identity,
    dayCellClassNames: identity,
    dayCellContent: identity,
    dayCellDidMount: identity,
    dayCellWillUnmount: identity,
    initialView: String,
    aspectRatio: Number,
    weekends: Boolean,
    weekNumberCalculation: identity,
    weekNumbers: Boolean,
    weekNumberClassNames: identity,
    weekNumberContent: identity,
    weekNumberDidMount: identity,
    weekNumberWillUnmount: identity,
    editable: Boolean,
    viewClassNames: identity,
    viewDidMount: identity,
    viewWillUnmount: identity,
    nowIndicator: Boolean,
    nowIndicatorClassNames: identity,
    nowIndicatorContent: identity,
    nowIndicatorDidMount: identity,
    nowIndicatorWillUnmount: identity,
    showNonCurrentDates: Boolean,
    lazyFetching: Boolean,
    startParam: String,
    endParam: String,
    timeZoneParam: String,
    timeZone: String,
    locales: identity,
    locale: identity,
    themeSystem: String,
    dragRevertDuration: Number,
    dragScroll: Boolean,
    allDayMaintainDuration: Boolean,
    unselectAuto: Boolean,
    dropAccept: identity,
    eventOrder: parseFieldSpecs,
    eventOrderStrict: Boolean,
    handleWindowResize: Boolean,
    windowResizeDelay: Number,
    longPressDelay: Number,
    eventDragMinDistance: Number,
    expandRows: Boolean,
    height: identity,
    contentHeight: identity,
    direction: String,
    weekNumberFormat: createFormatter,
    eventResizableFromStart: Boolean,
    displayEventTime: Boolean,
    displayEventEnd: Boolean,
    weekText: String,
    weekTextLong: String,
    progressiveEventRendering: Boolean,
    businessHours: identity,
    initialDate: identity,
    now: identity,
    eventDataTransform: identity,
    stickyHeaderDates: identity,
    stickyFooterScrollbar: identity,
    viewHeight: identity,
    defaultAllDay: Boolean,
    eventSourceFailure: identity,
    eventSourceSuccess: identity,
    eventDisplay: String,
    eventStartEditable: Boolean,
    eventDurationEditable: Boolean,
    eventOverlap: identity,
    eventConstraint: identity,
    eventAllow: identity,
    eventBackgroundColor: String,
    eventBorderColor: String,
    eventTextColor: String,
    eventColor: String,
    eventClassNames: identity,
    eventContent: identity,
    eventDidMount: identity,
    eventWillUnmount: identity,
    selectConstraint: identity,
    selectOverlap: identity,
    selectAllow: identity,
    droppable: Boolean,
    unselectCancel: String,
    slotLabelFormat: identity,
    slotLaneClassNames: identity,
    slotLaneContent: identity,
    slotLaneDidMount: identity,
    slotLaneWillUnmount: identity,
    slotLabelClassNames: identity,
    slotLabelContent: identity,
    slotLabelDidMount: identity,
    slotLabelWillUnmount: identity,
    dayMaxEvents: identity,
    dayMaxEventRows: identity,
    dayMinWidth: Number,
    slotLabelInterval: createDuration,
    allDayText: String,
    allDayClassNames: identity,
    allDayContent: identity,
    allDayDidMount: identity,
    allDayWillUnmount: identity,
    slotMinWidth: Number,
    navLinks: Boolean,
    eventTimeFormat: createFormatter,
    rerenderDelay: Number,
    moreLinkText: identity,
    moreLinkHint: identity,
    selectMinDistance: Number,
    selectable: Boolean,
    selectLongPressDelay: Number,
    eventLongPressDelay: Number,
    selectMirror: Boolean,
    eventMaxStack: Number,
    eventMinHeight: Number,
    eventMinWidth: Number,
    eventShortHeight: Number,
    slotEventOverlap: Boolean,
    plugins: identity,
    firstDay: Number,
    dayCount: Number,
    dateAlignment: String,
    dateIncrement: createDuration,
    hiddenDays: identity,
    monthMode: Boolean,
    fixedWeekCount: Boolean,
    validRange: identity,
    visibleRange: identity,
    titleFormat: identity,
    eventInteractive: Boolean,
    noEventsText: String,
    viewHint: identity,
    navLinkHint: identity,
    closeHint: String,
    timeHint: String,
    eventHint: String,
    moreLinkClick: identity,
    moreLinkClassNames: identity,
    moreLinkContent: identity,
    moreLinkDidMount: identity,
    moreLinkWillUnmount: identity,
    handleCustomRendering: identity,
    customRenderingMetaMap: identity,
    customRenderingReplacesEl: Boolean
  };
  var BASE_OPTION_DEFAULTS = {
    eventDisplay: "auto",
    defaultRangeSeparator: " - ",
    titleRangeSeparator: " \u2013 ",
    defaultTimedEventDuration: "01:00:00",
    defaultAllDayEventDuration: { day: 1 },
    forceEventDuration: false,
    nextDayThreshold: "00:00:00",
    dayHeaders: true,
    initialView: "",
    aspectRatio: 1.35,
    headerToolbar: {
      start: "title",
      center: "",
      end: "today prev,next"
    },
    weekends: true,
    weekNumbers: false,
    weekNumberCalculation: "local",
    editable: false,
    nowIndicator: false,
    scrollTime: "06:00:00",
    scrollTimeReset: true,
    slotMinTime: "00:00:00",
    slotMaxTime: "24:00:00",
    showNonCurrentDates: true,
    lazyFetching: true,
    startParam: "start",
    endParam: "end",
    timeZoneParam: "timeZone",
    timeZone: "local",
    locales: [],
    locale: "",
    themeSystem: "standard",
    dragRevertDuration: 500,
    dragScroll: true,
    allDayMaintainDuration: false,
    unselectAuto: true,
    dropAccept: "*",
    eventOrder: "start,-duration,allDay,title",
    dayPopoverFormat: { month: "long", day: "numeric", year: "numeric" },
    handleWindowResize: true,
    windowResizeDelay: 100,
    longPressDelay: 1e3,
    eventDragMinDistance: 5,
    expandRows: false,
    navLinks: false,
    selectable: false,
    eventMinHeight: 15,
    eventMinWidth: 30,
    eventShortHeight: 30
  };
  var CALENDAR_LISTENER_REFINERS = {
    datesSet: identity,
    eventsSet: identity,
    eventAdd: identity,
    eventChange: identity,
    eventRemove: identity,
    windowResize: identity,
    eventClick: identity,
    eventMouseEnter: identity,
    eventMouseLeave: identity,
    select: identity,
    unselect: identity,
    loading: identity,
    _unmount: identity,
    _beforeprint: identity,
    _afterprint: identity,
    _noEventDrop: identity,
    _noEventResize: identity,
    _resize: identity,
    _scrollRequest: identity
  };
  var CALENDAR_OPTION_REFINERS = {
    buttonText: identity,
    buttonHints: identity,
    views: identity,
    plugins: identity,
    initialEvents: identity,
    events: identity,
    eventSources: identity
  };
  var COMPLEX_OPTION_COMPARATORS = {
    headerToolbar: isMaybeObjectsEqual,
    footerToolbar: isMaybeObjectsEqual,
    buttonText: isMaybeObjectsEqual,
    buttonHints: isMaybeObjectsEqual,
    buttonIcons: isMaybeObjectsEqual,
    dateIncrement: isMaybeObjectsEqual
  };
  function isMaybeObjectsEqual(a3, b3) {
    if (typeof a3 === "object" && typeof b3 === "object" && a3 && b3) {
      return isPropsEqual(a3, b3);
    }
    return a3 === b3;
  }
  var VIEW_OPTION_REFINERS = {
    type: String,
    component: identity,
    buttonText: String,
    buttonTextKey: String,
    dateProfileGeneratorClass: identity,
    usesMinMaxTime: Boolean,
    classNames: identity,
    content: identity,
    didMount: identity,
    willUnmount: identity
  };
  function mergeRawOptions(optionSets) {
    return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);
  }
  function refineProps(input, refiners) {
    let refined = {};
    let extra = {};
    for (let propName in refiners) {
      if (propName in input) {
        refined[propName] = refiners[propName](input[propName]);
      }
    }
    for (let propName in input) {
      if (!(propName in refiners)) {
        extra[propName] = input[propName];
      }
    }
    return { refined, extra };
  }
  function identity(raw) {
    return raw;
  }
  function flushSync(runBeforeFlush) {
    runBeforeFlush();
    let oldDebounceRendering = l.debounceRendering;
    let callbackQ = [];
    function execCallbackSync(callback) {
      callbackQ.push(callback);
    }
    l.debounceRendering = execCallbackSync;
    P(h(FakeComponent, {}), document.createElement("div"));
    while (callbackQ.length) {
      callbackQ.shift()();
    }
    l.debounceRendering = oldDebounceRendering;
  }
  var FakeComponent = class extends d {
    render() {
      return h("div", {});
    }
    componentDidMount() {
      this.setState({});
    }
  };
  function createContext(defaultValue) {
    let ContextType = B(defaultValue);
    let origProvider = ContextType.Provider;
    ContextType.Provider = function() {
      let isNew = !this.getChildContext;
      let children = origProvider.apply(this, arguments);
      if (isNew) {
        let subs = [];
        this.shouldComponentUpdate = (_props) => {
          if (this.props.value !== _props.value) {
            subs.forEach((c3) => {
              c3.context = _props.value;
              c3.forceUpdate();
            });
          }
        };
        this.sub = (c3) => {
          subs.push(c3);
          let old = c3.componentWillUnmount;
          c3.componentWillUnmount = () => {
            subs.splice(subs.indexOf(c3), 1);
            old && old.call(c3);
          };
        };
      }
      return children;
    };
    return ContextType;
  }
  var ScrollResponder = class {
    constructor(execFunc, emitter, scrollTime, scrollTimeReset) {
      this.execFunc = execFunc;
      this.emitter = emitter;
      this.scrollTime = scrollTime;
      this.scrollTimeReset = scrollTimeReset;
      this.handleScrollRequest = (request) => {
        this.queuedRequest = Object.assign({}, this.queuedRequest || {}, request);
        this.drain();
      };
      emitter.on("_scrollRequest", this.handleScrollRequest);
      this.fireInitialScroll();
    }
    detach() {
      this.emitter.off("_scrollRequest", this.handleScrollRequest);
    }
    update(isDatesNew) {
      if (isDatesNew && this.scrollTimeReset) {
        this.fireInitialScroll();
      } else {
        this.drain();
      }
    }
    fireInitialScroll() {
      this.handleScrollRequest({
        time: this.scrollTime
      });
    }
    drain() {
      if (this.queuedRequest && this.execFunc(this.queuedRequest)) {
        this.queuedRequest = null;
      }
    }
  };
  var ViewContextType = createContext({});
  function buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {
    return {
      dateEnv,
      options: viewOptions,
      pluginHooks,
      emitter,
      dispatch,
      getCurrentData,
      calendarApi,
      viewSpec,
      viewApi,
      dateProfileGenerator,
      theme,
      isRtl: viewOptions.direction === "rtl",
      addResizeHandler(handler) {
        emitter.on("_resize", handler);
      },
      removeResizeHandler(handler) {
        emitter.off("_resize", handler);
      },
      createScrollResponder(execFunc) {
        return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);
      },
      registerInteractiveComponent,
      unregisterInteractiveComponent
    };
  }
  var PureComponent = class extends d {
    shouldComponentUpdate(nextProps, nextState) {
      if (this.debug) {
        console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));
      }
      return !compareObjs(this.props, nextProps, this.propEquality) || !compareObjs(this.state, nextState, this.stateEquality);
    }
    safeSetState(newState) {
      if (!compareObjs(this.state, Object.assign(Object.assign({}, this.state), newState), this.stateEquality)) {
        this.setState(newState);
      }
    }
  };
  PureComponent.addPropsEquality = addPropsEquality;
  PureComponent.addStateEquality = addStateEquality;
  PureComponent.contextType = ViewContextType;
  PureComponent.prototype.propEquality = {};
  PureComponent.prototype.stateEquality = {};
  var BaseComponent = class extends PureComponent {
  };
  BaseComponent.contextType = ViewContextType;
  function addPropsEquality(propEquality) {
    let hash = Object.create(this.prototype.propEquality);
    Object.assign(hash, propEquality);
    this.prototype.propEquality = hash;
  }
  function addStateEquality(stateEquality) {
    let hash = Object.create(this.prototype.stateEquality);
    Object.assign(hash, stateEquality);
    this.prototype.stateEquality = hash;
  }
  function setRef(ref, current) {
    if (typeof ref === "function") {
      ref(current);
    } else if (ref) {
      ref.current = current;
    }
  }
  var ContentInjector = class extends BaseComponent {
    constructor() {
      super(...arguments);
      this.id = guid();
      this.currentDomNodes = [];
      this.queuedDomNodes = [];
      this.handleEl = (el) => {
        if (this.props.elRef) {
          setRef(this.props.elRef, el);
        }
      };
    }
    render() {
      const { props, context } = this;
      const { options } = context;
      const { generator, renderProps } = props;
      const attrs = buildElAttrs(props);
      let innerContent;
      let queuedDomNodes = [];
      if (hasCustomRenderingHandler(props.generatorName, options)) {
        if (options.customRenderingReplacesEl) {
          delete attrs.elRef;
        }
      } else {
        const customContent = typeof generator === "function" ? generator(renderProps, h) : generator;
        if (typeof customContent === "string" || i(customContent) || Array.isArray(customContent)) {
          innerContent = customContent;
        } else if (typeof customContent === "object") {
          if ("html" in customContent) {
            attrs.dangerouslySetInnerHTML = { __html: customContent.html };
          } else if ("domNodes" in customContent) {
            queuedDomNodes = Array.prototype.slice.call(customContent.domNodes);
          }
        }
      }
      this.queuedDomNodes = queuedDomNodes;
      return h(props.elTag, attrs, innerContent);
    }
    componentDidMount() {
      this.applyQueueudDomNodes();
      this.triggerCustomRendering(true);
    }
    componentDidUpdate() {
      this.applyQueueudDomNodes();
      this.triggerCustomRendering(true);
    }
    componentWillUnmount() {
      this.triggerCustomRendering(false);
    }
    triggerCustomRendering(isActive) {
      const { props, context } = this;
      const { handleCustomRendering, customRenderingMetaMap } = context.options;
      if (handleCustomRendering) {
        const customRenderingMeta = customRenderingMetaMap === null || customRenderingMetaMap === void 0 ? void 0 : customRenderingMetaMap[props.generatorName];
        if (customRenderingMeta) {
          handleCustomRendering(Object.assign({ id: this.id, isActive, containerEl: this.base, reportNewContainerEl: this.handleEl, generatorMeta: customRenderingMeta }, props));
        }
      }
    }
    applyQueueudDomNodes() {
      const { queuedDomNodes, currentDomNodes } = this;
      const el = this.base;
      if (!isArraysEqual(queuedDomNodes, currentDomNodes)) {
        currentDomNodes.forEach(removeElement);
        for (let newNode of queuedDomNodes) {
          el.appendChild(newNode);
        }
        this.currentDomNodes = queuedDomNodes;
      }
    }
  };
  ContentInjector.addPropsEquality({
    elClasses: isArraysEqual,
    elStyle: isPropsEqual,
    elAttrs: isPropsEqual,
    renderProps: isPropsEqual
  });
  function hasCustomRenderingHandler(generatorName, options) {
    var _a;
    return Boolean(options.handleCustomRendering && generatorName && ((_a = options.customRenderingMetaMap) === null || _a === void 0 ? void 0 : _a[generatorName]));
  }
  function buildElAttrs(props, extraClassNames) {
    const attrs = Object.assign(Object.assign({}, props.elAttrs), { ref: props.elRef });
    if (props.elClasses || extraClassNames) {
      attrs.className = (props.elClasses || []).concat(extraClassNames || []).concat(attrs.className || []).filter(Boolean).join(" ");
    }
    if (props.elStyle) {
      attrs.style = props.elStyle;
    }
    return attrs;
  }
  var RenderId = createContext(0);
  var ContentContainer = class extends d {
    constructor() {
      super(...arguments);
      this.InnerContent = InnerContentInjector.bind(void 0, this);
    }
    render() {
      const { props } = this;
      const generatedClassNames = generateClassNames(props.classNameGenerator, props.renderProps);
      if (props.children) {
        const elAttrs = buildElAttrs(props, generatedClassNames);
        const children = props.children(this.InnerContent, props.renderProps, elAttrs);
        if (props.elTag) {
          return h(props.elTag, elAttrs, children);
        } else {
          return children;
        }
      } else {
        return h(ContentInjector, Object.assign(Object.assign({}, props), { elTag: props.elTag || "div", elClasses: (props.elClasses || []).concat(generatedClassNames), renderId: this.context }));
      }
    }
    componentDidMount() {
      var _a, _b;
      (_b = (_a = this.props).didMount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.base }));
    }
    componentWillUnmount() {
      var _a, _b;
      (_b = (_a = this.props).willUnmount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.base }));
    }
  };
  ContentContainer.contextType = RenderId;
  function InnerContentInjector(containerComponent, props) {
    const parentProps = containerComponent.props;
    return h(ContentInjector, Object.assign({ renderProps: parentProps.renderProps, generatorName: parentProps.generatorName, generator: parentProps.generator, renderId: containerComponent.context }, props));
  }
  function generateClassNames(classNameGenerator, renderProps) {
    const classNames = typeof classNameGenerator === "function" ? classNameGenerator(renderProps) : classNameGenerator || [];
    return typeof classNames === "string" ? [classNames] : classNames;
  }
  function buildViewClassNames(viewSpec) {
    return [
      `fc-${viewSpec.type}-view`,
      "fc-view"
    ];
  }
  function parseRange(input, dateEnv) {
    let start = null;
    let end = null;
    if (input.start) {
      start = dateEnv.createMarker(input.start);
    }
    if (input.end) {
      end = dateEnv.createMarker(input.end);
    }
    if (!start && !end) {
      return null;
    }
    if (start && end && end < start) {
      return null;
    }
    return { start, end };
  }
  function intersectRanges(range0, range1) {
    let { start, end } = range0;
    let newRange = null;
    if (range1.start !== null) {
      if (start === null) {
        start = range1.start;
      } else {
        start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));
      }
    }
    if (range1.end != null) {
      if (end === null) {
        end = range1.end;
      } else {
        end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));
      }
    }
    if (start === null || end === null || start < end) {
      newRange = { start, end };
    }
    return newRange;
  }
  function rangesIntersect(range0, range1) {
    return (range0.end === null || range1.start === null || range0.end > range1.start) && (range0.start === null || range1.end === null || range0.start < range1.end);
  }
  function rangeContainsMarker(range, date) {
    return (range.start === null || date >= range.start) && (range.end === null || date < range.end);
  }
  function constrainMarkerToRange(date, range) {
    if (range.start != null && date < range.start) {
      return range.start;
    }
    if (range.end != null && date >= range.end) {
      return new Date(range.end.valueOf() - 1);
    }
    return date;
  }
  function computeAlignedDayRange(timedRange) {
    let dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;
    let start = startOfDay(timedRange.start);
    let end = addDays(start, dayCnt);
    return { start, end };
  }
  function computeVisibleDayRange(timedRange, nextDayThreshold = createDuration(0)) {
    let startDay = null;
    let endDay = null;
    if (timedRange.end) {
      endDay = startOfDay(timedRange.end);
      let endTimeMS = timedRange.end.valueOf() - endDay.valueOf();
      if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {
        endDay = addDays(endDay, 1);
      }
    }
    if (timedRange.start) {
      startDay = startOfDay(timedRange.start);
      if (endDay && endDay <= startDay) {
        endDay = addDays(startDay, 1);
      }
    }
    return { start: startDay, end: endDay };
  }
  function diffDates(date0, date1, dateEnv, largeUnit) {
    if (largeUnit === "year") {
      return createDuration(dateEnv.diffWholeYears(date0, date1), "year");
    }
    if (largeUnit === "month") {
      return createDuration(dateEnv.diffWholeMonths(date0, date1), "month");
    }
    return diffDayAndTime(date0, date1);
  }
  function reduceCurrentDate(currentDate, action) {
    switch (action.type) {
      case "CHANGE_DATE":
        return action.dateMarker;
      default:
        return currentDate;
    }
  }
  function getInitialDate(options, dateEnv) {
    let initialDateInput = options.initialDate;
    if (initialDateInput != null) {
      return dateEnv.createMarker(initialDateInput);
    }
    return getNow(options.now, dateEnv);
  }
  function getNow(nowInput, dateEnv) {
    if (typeof nowInput === "function") {
      nowInput = nowInput();
    }
    if (nowInput == null) {
      return dateEnv.createNowMarker();
    }
    return dateEnv.createMarker(nowInput);
  }
  var DateProfileGenerator = class {
    constructor(props) {
      this.props = props;
      this.nowDate = getNow(props.nowInput, props.dateEnv);
      this.initHiddenDays();
    }
    buildPrev(currentDateProfile, currentDate, forceToValid) {
      let { dateEnv } = this.props;
      let prevDate = dateEnv.subtract(
        dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit),
        currentDateProfile.dateIncrement
      );
      return this.build(prevDate, -1, forceToValid);
    }
    buildNext(currentDateProfile, currentDate, forceToValid) {
      let { dateEnv } = this.props;
      let nextDate = dateEnv.add(
        dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit),
        currentDateProfile.dateIncrement
      );
      return this.build(nextDate, 1, forceToValid);
    }
    build(currentDate, direction, forceToValid = true) {
      let { props } = this;
      let validRange;
      let currentInfo;
      let isRangeAllDay;
      let renderRange;
      let activeRange;
      let isValid;
      validRange = this.buildValidRange();
      validRange = this.trimHiddenDays(validRange);
      if (forceToValid) {
        currentDate = constrainMarkerToRange(currentDate, validRange);
      }
      currentInfo = this.buildCurrentRangeInfo(currentDate, direction);
      isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);
      renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);
      renderRange = this.trimHiddenDays(renderRange);
      activeRange = renderRange;
      if (!props.showNonCurrentDates) {
        activeRange = intersectRanges(activeRange, currentInfo.range);
      }
      activeRange = this.adjustActiveRange(activeRange);
      activeRange = intersectRanges(activeRange, validRange);
      isValid = rangesIntersect(currentInfo.range, validRange);
      return {
        validRange,
        currentRange: currentInfo.range,
        currentRangeUnit: currentInfo.unit,
        isRangeAllDay,
        activeRange,
        renderRange,
        slotMinTime: props.slotMinTime,
        slotMaxTime: props.slotMaxTime,
        isValid,
        dateIncrement: this.buildDateIncrement(currentInfo.duration)
      };
    }
    buildValidRange() {
      let input = this.props.validRangeInput;
      let simpleInput = typeof input === "function" ? input.call(this.props.calendarApi, this.nowDate) : input;
      return this.refineRange(simpleInput) || { start: null, end: null };
    }
    buildCurrentRangeInfo(date, direction) {
      let { props } = this;
      let duration = null;
      let unit = null;
      let range = null;
      let dayCount;
      if (props.duration) {
        duration = props.duration;
        unit = props.durationUnit;
        range = this.buildRangeFromDuration(date, direction, duration, unit);
      } else if (dayCount = this.props.dayCount) {
        unit = "day";
        range = this.buildRangeFromDayCount(date, direction, dayCount);
      } else if (range = this.buildCustomVisibleRange(date)) {
        unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;
      } else {
        duration = this.getFallbackDuration();
        unit = greatestDurationDenominator(duration).unit;
        range = this.buildRangeFromDuration(date, direction, duration, unit);
      }
      return { duration, unit, range };
    }
    getFallbackDuration() {
      return createDuration({ day: 1 });
    }
    adjustActiveRange(range) {
      let { dateEnv, usesMinMaxTime, slotMinTime, slotMaxTime } = this.props;
      let { start, end } = range;
      if (usesMinMaxTime) {
        if (asRoughDays(slotMinTime) < 0) {
          start = startOfDay(start);
          start = dateEnv.add(start, slotMinTime);
        }
        if (asRoughDays(slotMaxTime) > 1) {
          end = startOfDay(end);
          end = addDays(end, -1);
          end = dateEnv.add(end, slotMaxTime);
        }
      }
      return { start, end };
    }
    buildRangeFromDuration(date, direction, duration, unit) {
      let { dateEnv, dateAlignment } = this.props;
      let start;
      let end;
      let res;
      if (!dateAlignment) {
        let { dateIncrement } = this.props;
        if (dateIncrement) {
          if (asRoughMs(dateIncrement) < asRoughMs(duration)) {
            dateAlignment = greatestDurationDenominator(dateIncrement).unit;
          } else {
            dateAlignment = unit;
          }
        } else {
          dateAlignment = unit;
        }
      }
      if (asRoughDays(duration) <= 1) {
        if (this.isHiddenDay(start)) {
          start = this.skipHiddenDays(start, direction);
          start = startOfDay(start);
        }
      }
      function computeRes() {
        start = dateEnv.startOf(date, dateAlignment);
        end = dateEnv.add(start, duration);
        res = { start, end };
      }
      computeRes();
      if (!this.trimHiddenDays(res)) {
        date = this.skipHiddenDays(date, direction);
        computeRes();
      }
      return res;
    }
    buildRangeFromDayCount(date, direction, dayCount) {
      let { dateEnv, dateAlignment } = this.props;
      let runningCount = 0;
      let start = date;
      let end;
      if (dateAlignment) {
        start = dateEnv.startOf(start, dateAlignment);
      }
      start = startOfDay(start);
      start = this.skipHiddenDays(start, direction);
      end = start;
      do {
        end = addDays(end, 1);
        if (!this.isHiddenDay(end)) {
          runningCount += 1;
        }
      } while (runningCount < dayCount);
      return { start, end };
    }
    buildCustomVisibleRange(date) {
      let { props } = this;
      let input = props.visibleRangeInput;
      let simpleInput = typeof input === "function" ? input.call(props.calendarApi, props.dateEnv.toDate(date)) : input;
      let range = this.refineRange(simpleInput);
      if (range && (range.start == null || range.end == null)) {
        return null;
      }
      return range;
    }
    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {
      return currentRange;
    }
    buildDateIncrement(fallback) {
      let { dateIncrement } = this.props;
      let customAlignment;
      if (dateIncrement) {
        return dateIncrement;
      }
      if (customAlignment = this.props.dateAlignment) {
        return createDuration(1, customAlignment);
      }
      if (fallback) {
        return fallback;
      }
      return createDuration({ days: 1 });
    }
    refineRange(rangeInput) {
      if (rangeInput) {
        let range = parseRange(rangeInput, this.props.dateEnv);
        if (range) {
          range = computeVisibleDayRange(range);
        }
        return range;
      }
      return null;
    }
    initHiddenDays() {
      let hiddenDays = this.props.hiddenDays || [];
      let isHiddenDayHash = [];
      let dayCnt = 0;
      let i3;
      if (this.props.weekends === false) {
        hiddenDays.push(0, 6);
      }
      for (i3 = 0; i3 < 7; i3 += 1) {
        if (!(isHiddenDayHash[i3] = hiddenDays.indexOf(i3) !== -1)) {
          dayCnt += 1;
        }
      }
      if (!dayCnt) {
        throw new Error("invalid hiddenDays");
      }
      this.isHiddenDayHash = isHiddenDayHash;
    }
    trimHiddenDays(range) {
      let { start, end } = range;
      if (start) {
        start = this.skipHiddenDays(start);
      }
      if (end) {
        end = this.skipHiddenDays(end, -1, true);
      }
      if (start == null || end == null || start < end) {
        return { start, end };
      }
      return null;
    }
    isHiddenDay(day) {
      if (day instanceof Date) {
        day = day.getUTCDay();
      }
      return this.isHiddenDayHash[day];
    }
    skipHiddenDays(date, inc = 1, isExclusive = false) {
      while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {
        date = addDays(date, inc);
      }
      return date;
    }
  };
  function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {
    return {
      instanceId: guid(),
      defId,
      range,
      forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,
      forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo
    };
  }
  function parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {
    for (let i3 = 0; i3 < recurringTypes.length; i3 += 1) {
      let parsed = recurringTypes[i3].parse(refined, dateEnv);
      if (parsed) {
        let { allDay } = refined;
        if (allDay == null) {
          allDay = defaultAllDay;
          if (allDay == null) {
            allDay = parsed.allDayGuess;
            if (allDay == null) {
              allDay = false;
            }
          }
        }
        return {
          allDay,
          duration: parsed.duration,
          typeData: parsed.typeData,
          typeId: i3
        };
      }
    }
    return null;
  }
  function expandRecurring(eventStore, framingRange, context) {
    let { dateEnv, pluginHooks, options } = context;
    let { defs, instances } = eventStore;
    instances = filterHash(instances, (instance) => !defs[instance.defId].recurringDef);
    for (let defId in defs) {
      let def = defs[defId];
      if (def.recurringDef) {
        let { duration } = def.recurringDef;
        if (!duration) {
          duration = def.allDay ? options.defaultAllDayEventDuration : options.defaultTimedEventDuration;
        }
        let starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);
        for (let start of starts) {
          let instance = createEventInstance(defId, {
            start,
            end: dateEnv.add(start, duration)
          });
          instances[instance.instanceId] = instance;
        }
      }
    }
    return { defs, instances };
  }
  function expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {
    let typeDef = recurringTypes[eventDef.recurringDef.typeId];
    let markers = typeDef.expand(eventDef.recurringDef.typeData, {
      start: dateEnv.subtract(framingRange.start, duration),
      end: framingRange.end
    }, dateEnv);
    if (eventDef.allDay) {
      markers = markers.map(startOfDay);
    }
    return markers;
  }
  var EVENT_NON_DATE_REFINERS = {
    id: String,
    groupId: String,
    title: String,
    url: String,
    interactive: Boolean
  };
  var EVENT_DATE_REFINERS = {
    start: identity,
    end: identity,
    date: identity,
    allDay: Boolean
  };
  var EVENT_REFINERS = Object.assign(Object.assign(Object.assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), { extendedProps: identity });
  function parseEvent(raw, eventSource, context, allowOpenRange, refiners = buildEventRefiners(context)) {
    let { refined, extra } = refineEventDef(raw, context, refiners);
    let defaultAllDay = computeIsDefaultAllDay(eventSource, context);
    let recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);
    if (recurringRes) {
      let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : "", recurringRes.allDay, Boolean(recurringRes.duration), context);
      def.recurringDef = {
        typeId: recurringRes.typeId,
        typeData: recurringRes.typeData,
        duration: recurringRes.duration
      };
      return { def, instance: null };
    }
    let singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);
    if (singleRes) {
      let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : "", singleRes.allDay, singleRes.hasEnd, context);
      let instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);
      return { def, instance };
    }
    return null;
  }
  function refineEventDef(raw, context, refiners = buildEventRefiners(context)) {
    return refineProps(raw, refiners);
  }
  function buildEventRefiners(context) {
    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);
  }
  function parseEventDef(refined, extra, sourceId, allDay, hasEnd, context) {
    let def = {
      title: refined.title || "",
      groupId: refined.groupId || "",
      publicId: refined.id || "",
      url: refined.url || "",
      recurringDef: null,
      defId: guid(),
      sourceId,
      allDay,
      hasEnd,
      interactive: refined.interactive,
      ui: createEventUi(refined, context),
      extendedProps: Object.assign(Object.assign({}, refined.extendedProps || {}), extra)
    };
    for (let memberAdder of context.pluginHooks.eventDefMemberAdders) {
      Object.assign(def, memberAdder(refined));
    }
    Object.freeze(def.ui.classNames);
    Object.freeze(def.extendedProps);
    return def;
  }
  function parseSingle(refined, defaultAllDay, context, allowOpenRange) {
    let { allDay } = refined;
    let startMeta;
    let startMarker = null;
    let hasEnd = false;
    let endMeta;
    let endMarker = null;
    let startInput = refined.start != null ? refined.start : refined.date;
    startMeta = context.dateEnv.createMarkerMeta(startInput);
    if (startMeta) {
      startMarker = startMeta.marker;
    } else if (!allowOpenRange) {
      return null;
    }
    if (refined.end != null) {
      endMeta = context.dateEnv.createMarkerMeta(refined.end);
    }
    if (allDay == null) {
      if (defaultAllDay != null) {
        allDay = defaultAllDay;
      } else {
        allDay = (!startMeta || startMeta.isTimeUnspecified) && (!endMeta || endMeta.isTimeUnspecified);
      }
    }
    if (allDay && startMarker) {
      startMarker = startOfDay(startMarker);
    }
    if (endMeta) {
      endMarker = endMeta.marker;
      if (allDay) {
        endMarker = startOfDay(endMarker);
      }
      if (startMarker && endMarker <= startMarker) {
        endMarker = null;
      }
    }
    if (endMarker) {
      hasEnd = true;
    } else if (!allowOpenRange) {
      hasEnd = context.options.forceEventDuration || false;
      endMarker = context.dateEnv.add(startMarker, allDay ? context.options.defaultAllDayEventDuration : context.options.defaultTimedEventDuration);
    }
    return {
      allDay,
      hasEnd,
      range: { start: startMarker, end: endMarker },
      forcedStartTzo: startMeta ? startMeta.forcedTzo : null,
      forcedEndTzo: endMeta ? endMeta.forcedTzo : null
    };
  }
  function computeIsDefaultAllDay(eventSource, context) {
    let res = null;
    if (eventSource) {
      res = eventSource.defaultAllDay;
    }
    if (res == null) {
      res = context.options.defaultAllDay;
    }
    return res;
  }
  function parseEvents(rawEvents, eventSource, context, allowOpenRange) {
    let eventStore = createEmptyEventStore();
    let eventRefiners = buildEventRefiners(context);
    for (let rawEvent of rawEvents) {
      let tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners);
      if (tuple) {
        eventTupleToStore(tuple, eventStore);
      }
    }
    return eventStore;
  }
  function eventTupleToStore(tuple, eventStore = createEmptyEventStore()) {
    eventStore.defs[tuple.def.defId] = tuple.def;
    if (tuple.instance) {
      eventStore.instances[tuple.instance.instanceId] = tuple.instance;
    }
    return eventStore;
  }
  function getRelevantEvents(eventStore, instanceId) {
    let instance = eventStore.instances[instanceId];
    if (instance) {
      let def = eventStore.defs[instance.defId];
      let newStore = filterEventStoreDefs(eventStore, (lookDef) => isEventDefsGrouped(def, lookDef));
      newStore.defs[def.defId] = def;
      newStore.instances[instance.instanceId] = instance;
      return newStore;
    }
    return createEmptyEventStore();
  }
  function isEventDefsGrouped(def0, def1) {
    return Boolean(def0.groupId && def0.groupId === def1.groupId);
  }
  function createEmptyEventStore() {
    return { defs: {}, instances: {} };
  }
  function mergeEventStores(store0, store1) {
    return {
      defs: Object.assign(Object.assign({}, store0.defs), store1.defs),
      instances: Object.assign(Object.assign({}, store0.instances), store1.instances)
    };
  }
  function filterEventStoreDefs(eventStore, filterFunc) {
    let defs = filterHash(eventStore.defs, filterFunc);
    let instances = filterHash(eventStore.instances, (instance) => defs[instance.defId]);
    return { defs, instances };
  }
  function excludeSubEventStore(master, sub) {
    let { defs, instances } = master;
    let filteredDefs = {};
    let filteredInstances = {};
    for (let defId in defs) {
      if (!sub.defs[defId]) {
        filteredDefs[defId] = defs[defId];
      }
    }
    for (let instanceId in instances) {
      if (!sub.instances[instanceId] && filteredDefs[instances[instanceId].defId]) {
        filteredInstances[instanceId] = instances[instanceId];
      }
    }
    return {
      defs: filteredDefs,
      instances: filteredInstances
    };
  }
  function normalizeConstraint(input, context) {
    if (Array.isArray(input)) {
      return parseEvents(input, null, context, true);
    }
    if (typeof input === "object" && input) {
      return parseEvents([input], null, context, true);
    }
    if (input != null) {
      return String(input);
    }
    return null;
  }
  function parseClassNames(raw) {
    if (Array.isArray(raw)) {
      return raw;
    }
    if (typeof raw === "string") {
      return raw.split(/\s+/);
    }
    return [];
  }
  var EVENT_UI_REFINERS = {
    display: String,
    editable: Boolean,
    startEditable: Boolean,
    durationEditable: Boolean,
    constraint: identity,
    overlap: identity,
    allow: identity,
    className: parseClassNames,
    classNames: parseClassNames,
    color: String,
    backgroundColor: String,
    borderColor: String,
    textColor: String
  };
  var EMPTY_EVENT_UI = {
    display: null,
    startEditable: null,
    durationEditable: null,
    constraints: [],
    overlap: null,
    allows: [],
    backgroundColor: "",
    borderColor: "",
    textColor: "",
    classNames: []
  };
  function createEventUi(refined, context) {
    let constraint = normalizeConstraint(refined.constraint, context);
    return {
      display: refined.display || null,
      startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,
      durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,
      constraints: constraint != null ? [constraint] : [],
      overlap: refined.overlap != null ? refined.overlap : null,
      allows: refined.allow != null ? [refined.allow] : [],
      backgroundColor: refined.backgroundColor || refined.color || "",
      borderColor: refined.borderColor || refined.color || "",
      textColor: refined.textColor || "",
      classNames: (refined.className || []).concat(refined.classNames || [])
    };
  }
  function combineEventUis(uis) {
    return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);
  }
  function combineTwoEventUis(item0, item1) {
    return {
      display: item1.display != null ? item1.display : item0.display,
      startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,
      durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,
      constraints: item0.constraints.concat(item1.constraints),
      overlap: typeof item1.overlap === "boolean" ? item1.overlap : item0.overlap,
      allows: item0.allows.concat(item1.allows),
      backgroundColor: item1.backgroundColor || item0.backgroundColor,
      borderColor: item1.borderColor || item0.borderColor,
      textColor: item1.textColor || item0.textColor,
      classNames: item0.classNames.concat(item1.classNames)
    };
  }
  var EVENT_SOURCE_REFINERS = {
    id: String,
    defaultAllDay: Boolean,
    url: String,
    format: String,
    events: identity,
    eventDataTransform: identity,
    success: identity,
    failure: identity
  };
  function parseEventSource(raw, context, refiners = buildEventSourceRefiners(context)) {
    let rawObj;
    if (typeof raw === "string") {
      rawObj = { url: raw };
    } else if (typeof raw === "function" || Array.isArray(raw)) {
      rawObj = { events: raw };
    } else if (typeof raw === "object" && raw) {
      rawObj = raw;
    }
    if (rawObj) {
      let { refined, extra } = refineProps(rawObj, refiners);
      let metaRes = buildEventSourceMeta(refined, context);
      if (metaRes) {
        return {
          _raw: raw,
          isFetching: false,
          latestFetchId: "",
          fetchRange: null,
          defaultAllDay: refined.defaultAllDay,
          eventDataTransform: refined.eventDataTransform,
          success: refined.success,
          failure: refined.failure,
          publicId: refined.id || "",
          sourceId: guid(),
          sourceDefId: metaRes.sourceDefId,
          meta: metaRes.meta,
          ui: createEventUi(refined, context),
          extendedProps: extra
        };
      }
    }
    return null;
  }
  function buildEventSourceRefiners(context) {
    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS), context.pluginHooks.eventSourceRefiners);
  }
  function buildEventSourceMeta(raw, context) {
    let defs = context.pluginHooks.eventSourceDefs;
    for (let i3 = defs.length - 1; i3 >= 0; i3 -= 1) {
      let def = defs[i3];
      let meta = def.parseMeta(raw);
      if (meta) {
        return { sourceDefId: i3, meta };
      }
    }
    return null;
  }
  function reduceEventStore(eventStore, action, eventSources, dateProfile, context) {
    switch (action.type) {
      case "RECEIVE_EVENTS":
        return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);
      case "ADD_EVENTS":
        return addEvent(
          eventStore,
          action.eventStore,
          dateProfile ? dateProfile.activeRange : null,
          context
        );
      case "RESET_EVENTS":
        return action.eventStore;
      case "MERGE_EVENTS":
        return mergeEventStores(eventStore, action.eventStore);
      case "PREV":
      case "NEXT":
      case "CHANGE_DATE":
      case "CHANGE_VIEW_TYPE":
        if (dateProfile) {
          return expandRecurring(eventStore, dateProfile.activeRange, context);
        }
        return eventStore;
      case "REMOVE_EVENTS":
        return excludeSubEventStore(eventStore, action.eventStore);
      case "REMOVE_EVENT_SOURCE":
        return excludeEventsBySourceId(eventStore, action.sourceId);
      case "REMOVE_ALL_EVENT_SOURCES":
        return filterEventStoreDefs(eventStore, (eventDef) => !eventDef.sourceId);
      case "REMOVE_ALL_EVENTS":
        return createEmptyEventStore();
      default:
        return eventStore;
    }
  }
  function receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {
    if (eventSource && fetchId === eventSource.latestFetchId) {
      let subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);
      if (fetchRange) {
        subset = expandRecurring(subset, fetchRange, context);
      }
      return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);
    }
    return eventStore;
  }
  function transformRawEvents(rawEvents, eventSource, context) {
    let calEachTransform = context.options.eventDataTransform;
    let sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;
    if (sourceEachTransform) {
      rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);
    }
    if (calEachTransform) {
      rawEvents = transformEachRawEvent(rawEvents, calEachTransform);
    }
    return rawEvents;
  }
  function transformEachRawEvent(rawEvents, func) {
    let refinedEvents;
    if (!func) {
      refinedEvents = rawEvents;
    } else {
      refinedEvents = [];
      for (let rawEvent of rawEvents) {
        let refinedEvent = func(rawEvent);
        if (refinedEvent) {
          refinedEvents.push(refinedEvent);
        } else if (refinedEvent == null) {
          refinedEvents.push(rawEvent);
        }
      }
    }
    return refinedEvents;
  }
  function addEvent(eventStore, subset, expandRange, context) {
    if (expandRange) {
      subset = expandRecurring(subset, expandRange, context);
    }
    return mergeEventStores(eventStore, subset);
  }
  function rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {
    let { defs } = eventStore;
    let instances = mapHash(eventStore.instances, (instance) => {
      let def = defs[instance.defId];
      if (def.allDay || def.recurringDef) {
        return instance;
      }
      return Object.assign(Object.assign({}, instance), { range: {
        start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),
        end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo))
      }, forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo, forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo });
    });
    return { defs, instances };
  }
  function excludeEventsBySourceId(eventStore, sourceId) {
    return filterEventStoreDefs(eventStore, (eventDef) => eventDef.sourceId !== sourceId);
  }
  var Emitter = class {
    constructor() {
      this.handlers = {};
      this.thisContext = null;
    }
    setThisContext(thisContext) {
      this.thisContext = thisContext;
    }
    setOptions(options) {
      this.options = options;
    }
    on(type, handler) {
      addToHash(this.handlers, type, handler);
    }
    off(type, handler) {
      removeFromHash(this.handlers, type, handler);
    }
    trigger(type, ...args) {
      let attachedHandlers = this.handlers[type] || [];
      let optionHandler = this.options && this.options[type];
      let handlers = [].concat(optionHandler || [], attachedHandlers);
      for (let handler of handlers) {
        handler.apply(this.thisContext, args);
      }
    }
    hasHandlers(type) {
      return Boolean(this.handlers[type] && this.handlers[type].length || this.options && this.options[type]);
    }
  };
  function addToHash(hash, type, handler) {
    (hash[type] || (hash[type] = [])).push(handler);
  }
  function removeFromHash(hash, type, handler) {
    if (handler) {
      if (hash[type]) {
        hash[type] = hash[type].filter((func) => func !== handler);
      }
    } else {
      delete hash[type];
    }
  }
  var DEF_DEFAULTS = {
    startTime: "09:00",
    endTime: "17:00",
    daysOfWeek: [1, 2, 3, 4, 5],
    display: "inverse-background",
    classNames: "fc-non-business",
    groupId: "_businessHours"
  };
  function parseBusinessHours(input, context) {
    return parseEvents(refineInputs(input), null, context);
  }
  function refineInputs(input) {
    let rawDefs;
    if (input === true) {
      rawDefs = [{}];
    } else if (Array.isArray(input)) {
      rawDefs = input.filter((rawDef) => rawDef.daysOfWeek);
    } else if (typeof input === "object" && input) {
      rawDefs = [input];
    } else {
      rawDefs = [];
    }
    rawDefs = rawDefs.map((rawDef) => Object.assign(Object.assign({}, DEF_DEFAULTS), rawDef));
    return rawDefs;
  }
  function triggerDateSelect(selection, pev, context) {
    context.emitter.trigger("select", Object.assign(Object.assign({}, buildDateSpanApiWithContext(selection, context)), { jsEvent: pev ? pev.origEvent : null, view: context.viewApi || context.calendarApi.view }));
  }
  function triggerDateUnselect(pev, context) {
    context.emitter.trigger("unselect", {
      jsEvent: pev ? pev.origEvent : null,
      view: context.viewApi || context.calendarApi.view
    });
  }
  function buildDateSpanApiWithContext(dateSpan, context) {
    let props = {};
    for (let transform of context.pluginHooks.dateSpanTransforms) {
      Object.assign(props, transform(dateSpan, context));
    }
    Object.assign(props, buildDateSpanApi(dateSpan, context.dateEnv));
    return props;
  }
  function getDefaultEventEnd(allDay, marker, context) {
    let { dateEnv, options } = context;
    let end = marker;
    if (allDay) {
      end = startOfDay(end);
      end = dateEnv.add(end, options.defaultAllDayEventDuration);
    } else {
      end = dateEnv.add(end, options.defaultTimedEventDuration);
    }
    return end;
  }
  function applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {
    let eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);
    let dest = createEmptyEventStore();
    for (let defId in eventStore.defs) {
      let def = eventStore.defs[defId];
      dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);
    }
    for (let instanceId in eventStore.instances) {
      let instance = eventStore.instances[instanceId];
      let def = dest.defs[instance.defId];
      dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);
    }
    return dest;
  }
  function applyMutationToEventDef(eventDef, eventConfig, mutation, context) {
    let standardProps = mutation.standardProps || {};
    if (standardProps.hasEnd == null && eventConfig.durationEditable && (mutation.startDelta || mutation.endDelta)) {
      standardProps.hasEnd = true;
    }
    let copy = Object.assign(Object.assign(Object.assign({}, eventDef), standardProps), { ui: Object.assign(Object.assign({}, eventDef.ui), standardProps.ui) });
    if (mutation.extendedProps) {
      copy.extendedProps = Object.assign(Object.assign({}, copy.extendedProps), mutation.extendedProps);
    }
    for (let applier of context.pluginHooks.eventDefMutationAppliers) {
      applier(copy, mutation, context);
    }
    if (!copy.hasEnd && context.options.forceEventDuration) {
      copy.hasEnd = true;
    }
    return copy;
  }
  function applyMutationToEventInstance(eventInstance, eventDef, eventConfig, mutation, context) {
    let { dateEnv } = context;
    let forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;
    let clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;
    let copy = Object.assign({}, eventInstance);
    if (forceAllDay) {
      copy.range = computeAlignedDayRange(copy.range);
    }
    if (mutation.datesDelta && eventConfig.startEditable) {
      copy.range = {
        start: dateEnv.add(copy.range.start, mutation.datesDelta),
        end: dateEnv.add(copy.range.end, mutation.datesDelta)
      };
    }
    if (mutation.startDelta && eventConfig.durationEditable) {
      copy.range = {
        start: dateEnv.add(copy.range.start, mutation.startDelta),
        end: copy.range.end
      };
    }
    if (mutation.endDelta && eventConfig.durationEditable) {
      copy.range = {
        start: copy.range.start,
        end: dateEnv.add(copy.range.end, mutation.endDelta)
      };
    }
    if (clearEnd) {
      copy.range = {
        start: copy.range.start,
        end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context)
      };
    }
    if (eventDef.allDay) {
      copy.range = {
        start: startOfDay(copy.range.start),
        end: startOfDay(copy.range.end)
      };
    }
    if (copy.range.end < copy.range.start) {
      copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);
    }
    return copy;
  }
  var EventSourceImpl = class {
    constructor(context, internalEventSource) {
      this.context = context;
      this.internalEventSource = internalEventSource;
    }
    remove() {
      this.context.dispatch({
        type: "REMOVE_EVENT_SOURCE",
        sourceId: this.internalEventSource.sourceId
      });
    }
    refetch() {
      this.context.dispatch({
        type: "FETCH_EVENT_SOURCES",
        sourceIds: [this.internalEventSource.sourceId],
        isRefetch: true
      });
    }
    get id() {
      return this.internalEventSource.publicId;
    }
    get url() {
      return this.internalEventSource.meta.url;
    }
    get format() {
      return this.internalEventSource.meta.format;
    }
  };
  var EventImpl = class {
    constructor(context, def, instance) {
      this._context = context;
      this._def = def;
      this._instance = instance || null;
    }
    setProp(name, val) {
      if (name in EVENT_DATE_REFINERS) {
        console.warn("Could not set date-related prop 'name'. Use one of the date-related methods instead.");
      } else if (name === "id") {
        val = EVENT_NON_DATE_REFINERS[name](val);
        this.mutate({
          standardProps: { publicId: val }
        });
      } else if (name in EVENT_NON_DATE_REFINERS) {
        val = EVENT_NON_DATE_REFINERS[name](val);
        this.mutate({
          standardProps: { [name]: val }
        });
      } else if (name in EVENT_UI_REFINERS) {
        let ui = EVENT_UI_REFINERS[name](val);
        if (name === "color") {
          ui = { backgroundColor: val, borderColor: val };
        } else if (name === "editable") {
          ui = { startEditable: val, durationEditable: val };
        } else {
          ui = { [name]: val };
        }
        this.mutate({
          standardProps: { ui }
        });
      } else {
        console.warn(`Could not set prop '${name}'. Use setExtendedProp instead.`);
      }
    }
    setExtendedProp(name, val) {
      this.mutate({
        extendedProps: { [name]: val }
      });
    }
    setStart(startInput, options = {}) {
      let { dateEnv } = this._context;
      let start = dateEnv.createMarker(startInput);
      if (start && this._instance) {
        let instanceRange = this._instance.range;
        let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);
        if (options.maintainDuration) {
          this.mutate({ datesDelta: startDelta });
        } else {
          this.mutate({ startDelta });
        }
      }
    }
    setEnd(endInput, options = {}) {
      let { dateEnv } = this._context;
      let end;
      if (endInput != null) {
        end = dateEnv.createMarker(endInput);
        if (!end) {
          return;
        }
      }
      if (this._instance) {
        if (end) {
          let endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);
          this.mutate({ endDelta });
        } else {
          this.mutate({ standardProps: { hasEnd: false } });
        }
      }
    }
    setDates(startInput, endInput, options = {}) {
      let { dateEnv } = this._context;
      let standardProps = { allDay: options.allDay };
      let start = dateEnv.createMarker(startInput);
      let end;
      if (!start) {
        return;
      }
      if (endInput != null) {
        end = dateEnv.createMarker(endInput);
        if (!end) {
          return;
        }
      }
      if (this._instance) {
        let instanceRange = this._instance.range;
        if (options.allDay === true) {
          instanceRange = computeAlignedDayRange(instanceRange);
        }
        let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);
        if (end) {
          let endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);
          if (durationsEqual(startDelta, endDelta)) {
            this.mutate({ datesDelta: startDelta, standardProps });
          } else {
            this.mutate({ startDelta, endDelta, standardProps });
          }
        } else {
          standardProps.hasEnd = false;
          this.mutate({ datesDelta: startDelta, standardProps });
        }
      }
    }
    moveStart(deltaInput) {
      let delta = createDuration(deltaInput);
      if (delta) {
        this.mutate({ startDelta: delta });
      }
    }
    moveEnd(deltaInput) {
      let delta = createDuration(deltaInput);
      if (delta) {
        this.mutate({ endDelta: delta });
      }
    }
    moveDates(deltaInput) {
      let delta = createDuration(deltaInput);
      if (delta) {
        this.mutate({ datesDelta: delta });
      }
    }
    setAllDay(allDay, options = {}) {
      let standardProps = { allDay };
      let { maintainDuration } = options;
      if (maintainDuration == null) {
        maintainDuration = this._context.options.allDayMaintainDuration;
      }
      if (this._def.allDay !== allDay) {
        standardProps.hasEnd = maintainDuration;
      }
      this.mutate({ standardProps });
    }
    formatRange(formatInput) {
      let { dateEnv } = this._context;
      let instance = this._instance;
      let formatter = createFormatter(formatInput);
      if (this._def.hasEnd) {
        return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {
          forcedStartTzo: instance.forcedStartTzo,
          forcedEndTzo: instance.forcedEndTzo
        });
      }
      return dateEnv.format(instance.range.start, formatter, {
        forcedTzo: instance.forcedStartTzo
      });
    }
    mutate(mutation) {
      let instance = this._instance;
      if (instance) {
        let def = this._def;
        let context = this._context;
        let { eventStore } = context.getCurrentData();
        let relevantEvents = getRelevantEvents(eventStore, instance.instanceId);
        let eventConfigBase = {
          "": {
            display: "",
            startEditable: true,
            durationEditable: true,
            constraints: [],
            overlap: null,
            allows: [],
            backgroundColor: "",
            borderColor: "",
            textColor: "",
            classNames: []
          }
        };
        relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context);
        let oldEvent = new EventImpl(context, def, instance);
        this._def = relevantEvents.defs[def.defId];
        this._instance = relevantEvents.instances[instance.instanceId];
        context.dispatch({
          type: "MERGE_EVENTS",
          eventStore: relevantEvents
        });
        context.emitter.trigger("eventChange", {
          oldEvent,
          event: this,
          relatedEvents: buildEventApis(relevantEvents, context, instance),
          revert() {
            context.dispatch({
              type: "RESET_EVENTS",
              eventStore
            });
          }
        });
      }
    }
    remove() {
      let context = this._context;
      let asStore = eventApiToStore(this);
      context.dispatch({
        type: "REMOVE_EVENTS",
        eventStore: asStore
      });
      context.emitter.trigger("eventRemove", {
        event: this,
        relatedEvents: [],
        revert() {
          context.dispatch({
            type: "MERGE_EVENTS",
            eventStore: asStore
          });
        }
      });
    }
    get source() {
      let { sourceId } = this._def;
      if (sourceId) {
        return new EventSourceImpl(this._context, this._context.getCurrentData().eventSources[sourceId]);
      }
      return null;
    }
    get start() {
      return this._instance ? this._context.dateEnv.toDate(this._instance.range.start) : null;
    }
    get end() {
      return this._instance && this._def.hasEnd ? this._context.dateEnv.toDate(this._instance.range.end) : null;
    }
    get startStr() {
      let instance = this._instance;
      if (instance) {
        return this._context.dateEnv.formatIso(instance.range.start, {
          omitTime: this._def.allDay,
          forcedTzo: instance.forcedStartTzo
        });
      }
      return "";
    }
    get endStr() {
      let instance = this._instance;
      if (instance && this._def.hasEnd) {
        return this._context.dateEnv.formatIso(instance.range.end, {
          omitTime: this._def.allDay,
          forcedTzo: instance.forcedEndTzo
        });
      }
      return "";
    }
    get id() {
      return this._def.publicId;
    }
    get groupId() {
      return this._def.groupId;
    }
    get allDay() {
      return this._def.allDay;
    }
    get title() {
      return this._def.title;
    }
    get url() {
      return this._def.url;
    }
    get display() {
      return this._def.ui.display || "auto";
    }
    get startEditable() {
      return this._def.ui.startEditable;
    }
    get durationEditable() {
      return this._def.ui.durationEditable;
    }
    get constraint() {
      return this._def.ui.constraints[0] || null;
    }
    get overlap() {
      return this._def.ui.overlap;
    }
    get allow() {
      return this._def.ui.allows[0] || null;
    }
    get backgroundColor() {
      return this._def.ui.backgroundColor;
    }
    get borderColor() {
      return this._def.ui.borderColor;
    }
    get textColor() {
      return this._def.ui.textColor;
    }
    get classNames() {
      return this._def.ui.classNames;
    }
    get extendedProps() {
      return this._def.extendedProps;
    }
    toPlainObject(settings = {}) {
      let def = this._def;
      let { ui } = def;
      let { startStr, endStr } = this;
      let res = {};
      if (def.title) {
        res.title = def.title;
      }
      if (startStr) {
        res.start = startStr;
      }
      if (endStr) {
        res.end = endStr;
      }
      if (def.publicId) {
        res.id = def.publicId;
      }
      if (def.groupId) {
        res.groupId = def.groupId;
      }
      if (def.url) {
        res.url = def.url;
      }
      if (ui.display && ui.display !== "auto") {
        res.display = ui.display;
      }
      if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {
        res.color = ui.backgroundColor;
      } else {
        if (ui.backgroundColor) {
          res.backgroundColor = ui.backgroundColor;
        }
        if (ui.borderColor) {
          res.borderColor = ui.borderColor;
        }
      }
      if (ui.textColor) {
        res.textColor = ui.textColor;
      }
      if (ui.classNames.length) {
        res.classNames = ui.classNames;
      }
      if (Object.keys(def.extendedProps).length) {
        if (settings.collapseExtendedProps) {
          Object.assign(res, def.extendedProps);
        } else {
          res.extendedProps = def.extendedProps;
        }
      }
      return res;
    }
    toJSON() {
      return this.toPlainObject();
    }
  };
  function eventApiToStore(eventApi) {
    let def = eventApi._def;
    let instance = eventApi._instance;
    return {
      defs: { [def.defId]: def },
      instances: instance ? { [instance.instanceId]: instance } : {}
    };
  }
  function buildEventApis(eventStore, context, excludeInstance) {
    let { defs, instances } = eventStore;
    let eventApis = [];
    let excludeInstanceId = excludeInstance ? excludeInstance.instanceId : "";
    for (let id in instances) {
      let instance = instances[id];
      let def = defs[instance.defId];
      if (instance.instanceId !== excludeInstanceId) {
        eventApis.push(new EventImpl(context, def, instance));
      }
    }
    return eventApis;
  }
  function getElSeg(el) {
    return el.fcSeg || el.parentNode.fcSeg || null;
  }
  function compileEventUis(eventDefs, eventUiBases) {
    return mapHash(eventDefs, (eventDef) => compileEventUi(eventDef, eventUiBases));
  }
  function compileEventUi(eventDef, eventUiBases) {
    let uis = [];
    if (eventUiBases[""]) {
      uis.push(eventUiBases[""]);
    }
    if (eventUiBases[eventDef.defId]) {
      uis.push(eventUiBases[eventDef.defId]);
    }
    uis.push(eventDef.ui);
    return combineEventUis(uis);
  }
  var STANDARD_PROPS = {
    start: identity,
    end: identity,
    allDay: Boolean
  };
  function parseDateSpan(raw, dateEnv, defaultDuration) {
    let span = parseOpenDateSpan(raw, dateEnv);
    let { range } = span;
    if (!range.start) {
      return null;
    }
    if (!range.end) {
      if (defaultDuration == null) {
        return null;
      }
      range.end = dateEnv.add(range.start, defaultDuration);
    }
    return span;
  }
  function parseOpenDateSpan(raw, dateEnv) {
    let { refined: standardProps, extra } = refineProps(raw, STANDARD_PROPS);
    let startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;
    let endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;
    let { allDay } = standardProps;
    if (allDay == null) {
      allDay = startMeta && startMeta.isTimeUnspecified && (!endMeta || endMeta.isTimeUnspecified);
    }
    return Object.assign({ range: {
      start: startMeta ? startMeta.marker : null,
      end: endMeta ? endMeta.marker : null
    }, allDay }, extra);
  }
  function buildDateSpanApi(span, dateEnv) {
    return Object.assign(Object.assign({}, buildRangeApi(span.range, dateEnv, span.allDay)), { allDay: span.allDay });
  }
  function buildRangeApiWithTimeZone(range, dateEnv, omitTime) {
    return Object.assign(Object.assign({}, buildRangeApi(range, dateEnv, omitTime)), { timeZone: dateEnv.timeZone });
  }
  function buildRangeApi(range, dateEnv, omitTime) {
    return {
      start: dateEnv.toDate(range.start),
      end: dateEnv.toDate(range.end),
      startStr: dateEnv.formatIso(range.start, { omitTime }),
      endStr: dateEnv.formatIso(range.end, { omitTime })
    };
  }
  function unpromisify(func, normalizedSuccessCallback, normalizedFailureCallback) {
    let isResolved = false;
    let wrappedSuccess = function(res2) {
      if (!isResolved) {
        isResolved = true;
        normalizedSuccessCallback(res2);
      }
    };
    let wrappedFailure = function(error2) {
      if (!isResolved) {
        isResolved = true;
        normalizedFailureCallback(error2);
      }
    };
    let res = func(wrappedSuccess, wrappedFailure);
    if (res && typeof res.then === "function") {
      res.then(wrappedSuccess, wrappedFailure);
    }
  }
  var JsonRequestError = class extends Error {
    constructor(message, response) {
      super(message);
      this.response = response;
    }
  };
  function requestJson(method, url, params) {
    method = method.toUpperCase();
    const fetchOptions = {
      method
    };
    if (method === "GET") {
      url += (url.indexOf("?") === -1 ? "?" : "&") + new URLSearchParams(params);
    } else {
      fetchOptions.body = new URLSearchParams(params);
      fetchOptions.headers = {
        "Content-Type": "application/x-www-form-urlencoded"
      };
    }
    return fetch(url, fetchOptions).then((fetchRes) => {
      if (fetchRes.ok) {
        return fetchRes.json().then((parsedResponse) => {
          return [parsedResponse, fetchRes];
        }, () => {
          throw new JsonRequestError("Failure parsing JSON", fetchRes);
        });
      } else {
        throw new JsonRequestError("Request failed", fetchRes);
      }
    });
  }
  var canVGrowWithinCell;
  function getCanVGrowWithinCell() {
    if (canVGrowWithinCell == null) {
      canVGrowWithinCell = computeCanVGrowWithinCell();
    }
    return canVGrowWithinCell;
  }
  function computeCanVGrowWithinCell() {
    if (typeof document === "undefined") {
      return true;
    }
    let el = document.createElement("div");
    el.style.position = "absolute";
    el.style.top = "0px";
    el.style.left = "0px";
    el.innerHTML = "<table><tr><td><div></div></td></tr></table>";
    el.querySelector("table").style.height = "100px";
    el.querySelector("div").style.height = "100%";
    document.body.appendChild(el);
    let div = el.querySelector("div");
    let possible = div.offsetHeight > 0;
    document.body.removeChild(el);
    return possible;
  }
  var CalendarRoot = class extends BaseComponent {
    constructor() {
      super(...arguments);
      this.state = {
        forPrint: false
      };
      this.handleBeforePrint = () => {
        this.setState({ forPrint: true });
      };
      this.handleAfterPrint = () => {
        this.setState({ forPrint: false });
      };
    }
    render() {
      let { props } = this;
      let { options } = props;
      let { forPrint } = this.state;
      let isHeightAuto = forPrint || options.height === "auto" || options.contentHeight === "auto";
      let height = !isHeightAuto && options.height != null ? options.height : "";
      let classNames = [
        "fc",
        forPrint ? "fc-media-print" : "fc-media-screen",
        `fc-direction-${options.direction}`,
        props.theme.getClass("root")
      ];
      if (!getCanVGrowWithinCell()) {
        classNames.push("fc-liquid-hack");
      }
      return props.children(classNames, height, isHeightAuto, forPrint);
    }
    componentDidMount() {
      let { emitter } = this.props;
      emitter.on("_beforeprint", this.handleBeforePrint);
      emitter.on("_afterprint", this.handleAfterPrint);
    }
    componentWillUnmount() {
      let { emitter } = this.props;
      emitter.off("_beforeprint", this.handleBeforePrint);
      emitter.off("_afterprint", this.handleAfterPrint);
    }
  };
  var Interaction = class {
    constructor(settings) {
      this.component = settings.component;
      this.isHitComboAllowed = settings.isHitComboAllowed || null;
    }
    destroy() {
    }
  };
  function parseInteractionSettings(component, input) {
    return {
      component,
      el: input.el,
      useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,
      isHitComboAllowed: input.isHitComboAllowed || null
    };
  }
  var interactionSettingsStore = {};
  var CalendarImpl = class {
    getCurrentData() {
      return this.currentDataManager.getCurrentData();
    }
    dispatch(action) {
      this.currentDataManager.dispatch(action);
    }
    get view() {
      return this.getCurrentData().viewApi;
    }
    batchRendering(callback) {
      callback();
    }
    updateSize() {
      this.trigger("_resize", true);
    }
    setOption(name, val) {
      this.dispatch({
        type: "SET_OPTION",
        optionName: name,
        rawOptionValue: val
      });
    }
    getOption(name) {
      return this.currentDataManager.currentCalendarOptionsInput[name];
    }
    getAvailableLocaleCodes() {
      return Object.keys(this.getCurrentData().availableRawLocales);
    }
    on(handlerName, handler) {
      let { currentDataManager } = this;
      if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {
        currentDataManager.emitter.on(handlerName, handler);
      } else {
        console.warn(`Unknown listener name '${handlerName}'`);
      }
    }
    off(handlerName, handler) {
      this.currentDataManager.emitter.off(handlerName, handler);
    }
    trigger(handlerName, ...args) {
      this.currentDataManager.emitter.trigger(handlerName, ...args);
    }
    changeView(viewType, dateOrRange) {
      this.batchRendering(() => {
        this.unselect();
        if (dateOrRange) {
          if (dateOrRange.start && dateOrRange.end) {
            this.dispatch({
              type: "CHANGE_VIEW_TYPE",
              viewType
            });
            this.dispatch({
              type: "SET_OPTION",
              optionName: "visibleRange",
              rawOptionValue: dateOrRange
            });
          } else {
            let { dateEnv } = this.getCurrentData();
            this.dispatch({
              type: "CHANGE_VIEW_TYPE",
              viewType,
              dateMarker: dateEnv.createMarker(dateOrRange)
            });
          }
        } else {
          this.dispatch({
            type: "CHANGE_VIEW_TYPE",
            viewType
          });
        }
      });
    }
    zoomTo(dateMarker, viewType) {
      let state = this.getCurrentData();
      let spec;
      viewType = viewType || "day";
      spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);
      this.unselect();
      if (spec) {
        this.dispatch({
          type: "CHANGE_VIEW_TYPE",
          viewType: spec.type,
          dateMarker
        });
      } else {
        this.dispatch({
          type: "CHANGE_DATE",
          dateMarker
        });
      }
    }
    getUnitViewSpec(unit) {
      let { viewSpecs, toolbarConfig } = this.getCurrentData();
      let viewTypes = [].concat(toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [], toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : []);
      let i3;
      let spec;
      for (let viewType in viewSpecs) {
        viewTypes.push(viewType);
      }
      for (i3 = 0; i3 < viewTypes.length; i3 += 1) {
        spec = viewSpecs[viewTypes[i3]];
        if (spec) {
          if (spec.singleUnit === unit) {
            return spec;
          }
        }
      }
      return null;
    }
    prev() {
      this.unselect();
      this.dispatch({ type: "PREV" });
    }
    next() {
      this.unselect();
      this.dispatch({ type: "NEXT" });
    }
    prevYear() {
      let state = this.getCurrentData();
      this.unselect();
      this.dispatch({
        type: "CHANGE_DATE",
        dateMarker: state.dateEnv.addYears(state.currentDate, -1)
      });
    }
    nextYear() {
      let state = this.getCurrentData();
      this.unselect();
      this.dispatch({
        type: "CHANGE_DATE",
        dateMarker: state.dateEnv.addYears(state.currentDate, 1)
      });
    }
    today() {
      let state = this.getCurrentData();
      this.unselect();
      this.dispatch({
        type: "CHANGE_DATE",
        dateMarker: getNow(state.calendarOptions.now, state.dateEnv)
      });
    }
    gotoDate(zonedDateInput) {
      let state = this.getCurrentData();
      this.unselect();
      this.dispatch({
        type: "CHANGE_DATE",
        dateMarker: state.dateEnv.createMarker(zonedDateInput)
      });
    }
    incrementDate(deltaInput) {
      let state = this.getCurrentData();
      let delta = createDuration(deltaInput);
      if (delta) {
        this.unselect();
        this.dispatch({
          type: "CHANGE_DATE",
          dateMarker: state.dateEnv.add(state.currentDate, delta)
        });
      }
    }
    getDate() {
      let state = this.getCurrentData();
      return state.dateEnv.toDate(state.currentDate);
    }
    formatDate(d2, formatter) {
      let { dateEnv } = this.getCurrentData();
      return dateEnv.format(dateEnv.createMarker(d2), createFormatter(formatter));
    }
    formatRange(d0, d1, settings) {
      let { dateEnv } = this.getCurrentData();
      return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);
    }
    formatIso(d2, omitTime) {
      let { dateEnv } = this.getCurrentData();
      return dateEnv.formatIso(dateEnv.createMarker(d2), { omitTime });
    }
    select(dateOrObj, endDate) {
      let selectionInput;
      if (endDate == null) {
        if (dateOrObj.start != null) {
          selectionInput = dateOrObj;
        } else {
          selectionInput = {
            start: dateOrObj,
            end: null
          };
        }
      } else {
        selectionInput = {
          start: dateOrObj,
          end: endDate
        };
      }
      let state = this.getCurrentData();
      let selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({ days: 1 }));
      if (selection) {
        this.dispatch({ type: "SELECT_DATES", selection });
        triggerDateSelect(selection, null, state);
      }
    }
    unselect(pev) {
      let state = this.getCurrentData();
      if (state.dateSelection) {
        this.dispatch({ type: "UNSELECT_DATES" });
        triggerDateUnselect(pev, state);
      }
    }
    addEvent(eventInput, sourceInput) {
      if (eventInput instanceof EventImpl) {
        let def = eventInput._def;
        let instance = eventInput._instance;
        let currentData = this.getCurrentData();
        if (!currentData.eventStore.defs[def.defId]) {
          this.dispatch({
            type: "ADD_EVENTS",
            eventStore: eventTupleToStore({ def, instance })
          });
          this.triggerEventAdd(eventInput);
        }
        return eventInput;
      }
      let state = this.getCurrentData();
      let eventSource;
      if (sourceInput instanceof EventSourceImpl) {
        eventSource = sourceInput.internalEventSource;
      } else if (typeof sourceInput === "boolean") {
        if (sourceInput) {
          [eventSource] = hashValuesToArray(state.eventSources);
        }
      } else if (sourceInput != null) {
        let sourceApi = this.getEventSourceById(sourceInput);
        if (!sourceApi) {
          console.warn(`Could not find an event source with ID "${sourceInput}"`);
          return null;
        }
        eventSource = sourceApi.internalEventSource;
      }
      let tuple = parseEvent(eventInput, eventSource, state, false);
      if (tuple) {
        let newEventApi = new EventImpl(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);
        this.dispatch({
          type: "ADD_EVENTS",
          eventStore: eventTupleToStore(tuple)
        });
        this.triggerEventAdd(newEventApi);
        return newEventApi;
      }
      return null;
    }
    triggerEventAdd(eventApi) {
      let { emitter } = this.getCurrentData();
      emitter.trigger("eventAdd", {
        event: eventApi,
        relatedEvents: [],
        revert: () => {
          this.dispatch({
            type: "REMOVE_EVENTS",
            eventStore: eventApiToStore(eventApi)
          });
        }
      });
    }
    getEventById(id) {
      let state = this.getCurrentData();
      let { defs, instances } = state.eventStore;
      id = String(id);
      for (let defId in defs) {
        let def = defs[defId];
        if (def.publicId === id) {
          if (def.recurringDef) {
            return new EventImpl(state, def, null);
          }
          for (let instanceId in instances) {
            let instance = instances[instanceId];
            if (instance.defId === def.defId) {
              return new EventImpl(state, def, instance);
            }
          }
        }
      }
      return null;
    }
    getEvents() {
      let currentData = this.getCurrentData();
      return buildEventApis(currentData.eventStore, currentData);
    }
    removeAllEvents() {
      this.dispatch({ type: "REMOVE_ALL_EVENTS" });
    }
    getEventSources() {
      let state = this.getCurrentData();
      let sourceHash = state.eventSources;
      let sourceApis = [];
      for (let internalId in sourceHash) {
        sourceApis.push(new EventSourceImpl(state, sourceHash[internalId]));
      }
      return sourceApis;
    }
    getEventSourceById(id) {
      let state = this.getCurrentData();
      let sourceHash = state.eventSources;
      id = String(id);
      for (let sourceId in sourceHash) {
        if (sourceHash[sourceId].publicId === id) {
          return new EventSourceImpl(state, sourceHash[sourceId]);
        }
      }
      return null;
    }
    addEventSource(sourceInput) {
      let state = this.getCurrentData();
      if (sourceInput instanceof EventSourceImpl) {
        if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {
          this.dispatch({
            type: "ADD_EVENT_SOURCES",
            sources: [sourceInput.internalEventSource]
          });
        }
        return sourceInput;
      }
      let eventSource = parseEventSource(sourceInput, state);
      if (eventSource) {
        this.dispatch({ type: "ADD_EVENT_SOURCES", sources: [eventSource] });
        return new EventSourceImpl(state, eventSource);
      }
      return null;
    }
    removeAllEventSources() {
      this.dispatch({ type: "REMOVE_ALL_EVENT_SOURCES" });
    }
    refetchEvents() {
      this.dispatch({ type: "FETCH_EVENT_SOURCES", isRefetch: true });
    }
    scrollToTime(timeInput) {
      let time = createDuration(timeInput);
      if (time) {
        this.trigger("_scrollRequest", { time });
      }
    }
  };
  var EMPTY_EVENT_STORE = createEmptyEventStore();
  var DAY_FORMAT = createFormatter({ year: "numeric", month: "long", day: "numeric" });
  var WEEK_FORMAT = createFormatter({ week: "long" });
  var _scrollbarWidths;
  function getScrollbarWidths() {
    if (!_scrollbarWidths) {
      _scrollbarWidths = computeScrollbarWidths();
    }
    return _scrollbarWidths;
  }
  function computeScrollbarWidths() {
    let el = document.createElement("div");
    el.style.overflow = "scroll";
    el.style.position = "absolute";
    el.style.top = "-9999px";
    el.style.left = "-9999px";
    document.body.appendChild(el);
    let res = computeScrollbarWidthsForEl(el);
    document.body.removeChild(el);
    return res;
  }
  function computeScrollbarWidthsForEl(el) {
    return {
      x: el.offsetHeight - el.clientHeight,
      y: el.offsetWidth - el.clientWidth
    };
  }
  var WEEKDAY_FORMAT = createFormatter({ weekday: "long" });
  var NowTimer = class extends d {
    constructor(props, context) {
      super(props, context);
      this.initialNowDate = getNow(context.options.now, context.dateEnv);
      this.initialNowQueriedMs = new Date().valueOf();
      this.state = this.computeTiming().currentState;
    }
    render() {
      let { props, state } = this;
      return props.children(state.nowDate, state.todayRange);
    }
    componentDidMount() {
      this.setTimeout();
    }
    componentDidUpdate(prevProps) {
      if (prevProps.unit !== this.props.unit) {
        this.clearTimeout();
        this.setTimeout();
      }
    }
    componentWillUnmount() {
      this.clearTimeout();
    }
    computeTiming() {
      let { props, context } = this;
      let unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs);
      let currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);
      let nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));
      let waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();
      waitMs = Math.min(1e3 * 60 * 60 * 24, waitMs);
      return {
        currentState: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) },
        nextState: { nowDate: nextUnitStart, todayRange: buildDayRange(nextUnitStart) },
        waitMs
      };
    }
    setTimeout() {
      let { nextState, waitMs } = this.computeTiming();
      this.timeoutId = setTimeout(() => {
        this.setState(nextState, () => {
          this.setTimeout();
        });
      }, waitMs);
    }
    clearTimeout() {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
      }
    }
  };
  NowTimer.contextType = ViewContextType;
  function buildDayRange(date) {
    let start = startOfDay(date);
    let end = addDays(start, 1);
    return { start, end };
  }
  var VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;
  var Scroller = class extends BaseComponent {
    constructor() {
      super(...arguments);
      this.handleEl = (el) => {
        this.el = el;
        setRef(this.props.elRef, el);
      };
    }
    render() {
      let { props } = this;
      let { liquid, liquidIsAbsolute } = props;
      let isAbsolute = liquid && liquidIsAbsolute;
      let className = ["fc-scroller"];
      if (liquid) {
        if (liquidIsAbsolute) {
          className.push("fc-scroller-liquid-absolute");
        } else {
          className.push("fc-scroller-liquid");
        }
      }
      return h("div", { ref: this.handleEl, className: className.join(" "), style: {
        overflowX: props.overflowX,
        overflowY: props.overflowY,
        left: isAbsolute && -(props.overcomeLeft || 0) || "",
        right: isAbsolute && -(props.overcomeRight || 0) || "",
        bottom: isAbsolute && -(props.overcomeBottom || 0) || "",
        marginLeft: !isAbsolute && -(props.overcomeLeft || 0) || "",
        marginRight: !isAbsolute && -(props.overcomeRight || 0) || "",
        marginBottom: !isAbsolute && -(props.overcomeBottom || 0) || "",
        maxHeight: props.maxHeight || ""
      } }, props.children);
    }
    needsXScrolling() {
      if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
        return false;
      }
      let { el } = this;
      let realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();
      let { children } = el;
      for (let i3 = 0; i3 < children.length; i3 += 1) {
        let childEl = children[i3];
        if (childEl.getBoundingClientRect().width > realClientWidth) {
          return true;
        }
      }
      return false;
    }
    needsYScrolling() {
      if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
        return false;
      }
      let { el } = this;
      let realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();
      let { children } = el;
      for (let i3 = 0; i3 < children.length; i3 += 1) {
        let childEl = children[i3];
        if (childEl.getBoundingClientRect().height > realClientHeight) {
          return true;
        }
      }
      return false;
    }
    getXScrollbarWidth() {
      if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
        return 0;
      }
      return this.el.offsetHeight - this.el.clientHeight;
    }
    getYScrollbarWidth() {
      if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
        return 0;
      }
      return this.el.offsetWidth - this.el.clientWidth;
    }
  };
  var RefMap = class {
    constructor(masterCallback) {
      this.masterCallback = masterCallback;
      this.currentMap = {};
      this.depths = {};
      this.callbackMap = {};
      this.handleValue = (val, key) => {
        let { depths, currentMap } = this;
        let removed = false;
        let added = false;
        if (val !== null) {
          removed = key in currentMap;
          currentMap[key] = val;
          depths[key] = (depths[key] || 0) + 1;
          added = true;
        } else {
          depths[key] -= 1;
          if (!depths[key]) {
            delete currentMap[key];
            delete this.callbackMap[key];
            removed = true;
          }
        }
        if (this.masterCallback) {
          if (removed) {
            this.masterCallback(null, String(key));
          }
          if (added) {
            this.masterCallback(val, String(key));
          }
        }
      };
    }
    createRef(key) {
      let refCallback = this.callbackMap[key];
      if (!refCallback) {
        refCallback = this.callbackMap[key] = (val) => {
          this.handleValue(val, String(key));
        };
      }
      return refCallback;
    }
    collect(startIndex, endIndex, step) {
      return collectFromHash(this.currentMap, startIndex, endIndex, step);
    }
    getAll() {
      return hashValuesToArray(this.currentMap);
    }
  };
  function computeShrinkWidth(chunkEls) {
    let shrinkCells = findElements(chunkEls, ".fc-scrollgrid-shrink");
    let largestWidth = 0;
    for (let shrinkCell of shrinkCells) {
      largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));
    }
    return Math.ceil(largestWidth);
  }
  function getSectionHasLiquidHeight(props, sectionConfig) {
    return props.liquid && sectionConfig.liquid;
  }
  function getAllowYScrolling(props, sectionConfig) {
    return sectionConfig.maxHeight != null || getSectionHasLiquidHeight(props, sectionConfig);
  }
  function renderChunkContent(sectionConfig, chunkConfig, arg, isHeader) {
    let { expandRows } = arg;
    let content = typeof chunkConfig.content === "function" ? chunkConfig.content(arg) : h("table", {
      role: "presentation",
      className: [
        chunkConfig.tableClassName,
        sectionConfig.syncRowHeights ? "fc-scrollgrid-sync-table" : ""
      ].join(" "),
      style: {
        minWidth: arg.tableMinWidth,
        width: arg.clientWidth,
        height: expandRows ? arg.clientHeight : ""
      }
    }, arg.tableColGroupNode, h(isHeader ? "thead" : "tbody", {
      role: "presentation"
    }, typeof chunkConfig.rowContent === "function" ? chunkConfig.rowContent(arg) : chunkConfig.rowContent));
    return content;
  }
  function isColPropsEqual(cols0, cols1) {
    return isArraysEqual(cols0, cols1, isPropsEqual);
  }
  function renderMicroColGroup(cols, shrinkWidth) {
    let colNodes = [];
    for (let colProps of cols) {
      let span = colProps.span || 1;
      for (let i3 = 0; i3 < span; i3 += 1) {
        colNodes.push(h("col", { style: {
          width: colProps.width === "shrink" ? sanitizeShrinkWidth(shrinkWidth) : colProps.width || "",
          minWidth: colProps.minWidth || ""
        } }));
      }
    }
    return h("colgroup", {}, ...colNodes);
  }
  function sanitizeShrinkWidth(shrinkWidth) {
    return shrinkWidth == null ? 4 : shrinkWidth;
  }
  function hasShrinkWidth(cols) {
    for (let col of cols) {
      if (col.width === "shrink") {
        return true;
      }
    }
    return false;
  }
  function getScrollGridClassNames(liquid, context) {
    let classNames = [
      "fc-scrollgrid",
      context.theme.getClass("table")
    ];
    if (liquid) {
      classNames.push("fc-scrollgrid-liquid");
    }
    return classNames;
  }
  function getSectionClassNames(sectionConfig, wholeTableVGrow) {
    let classNames = [
      "fc-scrollgrid-section",
      `fc-scrollgrid-section-${sectionConfig.type}`,
      sectionConfig.className
    ];
    if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {
      classNames.push("fc-scrollgrid-section-liquid");
    }
    if (sectionConfig.isSticky) {
      classNames.push("fc-scrollgrid-section-sticky");
    }
    return classNames;
  }
  var SimpleScrollGrid = class extends BaseComponent {
    constructor() {
      super(...arguments);
      this.processCols = memoize((a3) => a3, isColPropsEqual);
      this.renderMicroColGroup = memoize(renderMicroColGroup);
      this.scrollerRefs = new RefMap();
      this.scrollerElRefs = new RefMap(this._handleScrollerEl.bind(this));
      this.state = {
        shrinkWidth: null,
        forceYScrollbars: false,
        scrollerClientWidths: {},
        scrollerClientHeights: {}
      };
      this.handleSizing = () => {
        this.safeSetState(Object.assign({ shrinkWidth: this.computeShrinkWidth() }, this.computeScrollerDims()));
      };
    }
    render() {
      let { props, state, context } = this;
      let sectionConfigs = props.sections || [];
      let cols = this.processCols(props.cols);
      let microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);
      let classNames = getScrollGridClassNames(props.liquid, context);
      if (props.collapsibleWidth) {
        classNames.push("fc-scrollgrid-collapsible");
      }
      let configCnt = sectionConfigs.length;
      let configI = 0;
      let currentConfig;
      let headSectionNodes = [];
      let bodySectionNodes = [];
      let footSectionNodes = [];
      while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === "header") {
        headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));
        configI += 1;
      }
      while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === "body") {
        bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false));
        configI += 1;
      }
      while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === "footer") {
        footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));
        configI += 1;
      }
      let isBuggy = !getCanVGrowWithinCell();
      const roleAttrs = { role: "rowgroup" };
      return h("table", {
        role: "grid",
        className: classNames.join(" "),
        style: { height: props.height }
      }, Boolean(!isBuggy && headSectionNodes.length) && h("thead", roleAttrs, ...headSectionNodes), Boolean(!isBuggy && bodySectionNodes.length) && h("tbody", roleAttrs, ...bodySectionNodes), Boolean(!isBuggy && footSectionNodes.length) && h("tfoot", roleAttrs, ...footSectionNodes), isBuggy && h("tbody", roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes));
    }
    renderSection(sectionConfig, microColGroupNode, isHeader) {
      if ("outerContent" in sectionConfig) {
        return h(p, { key: sectionConfig.key }, sectionConfig.outerContent);
      }
      return h("tr", { key: sectionConfig.key, role: "presentation", className: getSectionClassNames(sectionConfig, this.props.liquid).join(" ") }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader));
    }
    renderChunkTd(sectionConfig, microColGroupNode, chunkConfig, isHeader) {
      if ("outerContent" in chunkConfig) {
        return chunkConfig.outerContent;
      }
      let { props } = this;
      let { forceYScrollbars, scrollerClientWidths, scrollerClientHeights } = this.state;
      let needsYScrolling = getAllowYScrolling(props, sectionConfig);
      let isLiquid = getSectionHasLiquidHeight(props, sectionConfig);
      let overflowY = !props.liquid ? "visible" : forceYScrollbars ? "scroll" : !needsYScrolling ? "hidden" : "auto";
      let sectionKey = sectionConfig.key;
      let content = renderChunkContent(sectionConfig, chunkConfig, {
        tableColGroupNode: microColGroupNode,
        tableMinWidth: "",
        clientWidth: !props.collapsibleWidth && scrollerClientWidths[sectionKey] !== void 0 ? scrollerClientWidths[sectionKey] : null,
        clientHeight: scrollerClientHeights[sectionKey] !== void 0 ? scrollerClientHeights[sectionKey] : null,
        expandRows: sectionConfig.expandRows,
        syncRowHeights: false,
        rowSyncHeights: [],
        reportRowHeightChange: () => {
        }
      }, isHeader);
      return h(isHeader ? "th" : "td", {
        ref: chunkConfig.elRef,
        role: "presentation"
      }, h(
        "div",
        { className: `fc-scroller-harness${isLiquid ? " fc-scroller-harness-liquid" : ""}` },
        h(Scroller, { ref: this.scrollerRefs.createRef(sectionKey), elRef: this.scrollerElRefs.createRef(sectionKey), overflowY, overflowX: !props.liquid ? "visible" : "hidden", maxHeight: sectionConfig.maxHeight, liquid: isLiquid, liquidIsAbsolute: true }, content)
      ));
    }
    _handleScrollerEl(scrollerEl, key) {
      let section = getSectionByKey(this.props.sections, key);
      if (section) {
        setRef(section.chunk.scrollerElRef, scrollerEl);
      }
    }
    componentDidMount() {
      this.handleSizing();
      this.context.addResizeHandler(this.handleSizing);
    }
    componentDidUpdate() {
      this.handleSizing();
    }
    componentWillUnmount() {
      this.context.removeResizeHandler(this.handleSizing);
    }
    computeShrinkWidth() {
      return hasShrinkWidth(this.props.cols) ? computeShrinkWidth(this.scrollerElRefs.getAll()) : 0;
    }
    computeScrollerDims() {
      let scrollbarWidth = getScrollbarWidths();
      let { scrollerRefs, scrollerElRefs } = this;
      let forceYScrollbars = false;
      let scrollerClientWidths = {};
      let scrollerClientHeights = {};
      for (let sectionKey in scrollerRefs.currentMap) {
        let scroller = scrollerRefs.currentMap[sectionKey];
        if (scroller && scroller.needsYScrolling()) {
          forceYScrollbars = true;
          break;
        }
      }
      for (let section of this.props.sections) {
        let sectionKey = section.key;
        let scrollerEl = scrollerElRefs.currentMap[sectionKey];
        if (scrollerEl) {
          let harnessEl = scrollerEl.parentNode;
          scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars ? scrollbarWidth.y : 0));
          scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);
        }
      }
      return { forceYScrollbars, scrollerClientWidths, scrollerClientHeights };
    }
  };
  SimpleScrollGrid.addStateEquality({
    scrollerClientWidths: isPropsEqual,
    scrollerClientHeights: isPropsEqual
  });
  function getSectionByKey(sections, key) {
    for (let section of sections) {
      if (section.key === key) {
        return section;
      }
    }
    return null;
  }
  var DAY_NUM_FORMAT = createFormatter({ day: "numeric" });

  // node_modules/@fullcalendar/core/index.js
  var css_248z = ':root{--fc-small-font-size:.85em;--fc-page-bg-color:#fff;--fc-neutral-bg-color:hsla(0,0%,82%,.3);--fc-neutral-text-color:grey;--fc-border-color:#ddd;--fc-button-text-color:#fff;--fc-button-bg-color:#2c3e50;--fc-button-border-color:#2c3e50;--fc-button-hover-bg-color:#1e2b37;--fc-button-hover-border-color:#1a252f;--fc-button-active-bg-color:#1a252f;--fc-button-active-border-color:#151e27;--fc-event-bg-color:#3788d8;--fc-event-border-color:#3788d8;--fc-event-text-color:#fff;--fc-event-selected-overlay-color:rgba(0,0,0,.25);--fc-more-link-bg-color:#d0d0d0;--fc-more-link-text-color:inherit;--fc-event-resizer-thickness:8px;--fc-event-resizer-dot-total-width:8px;--fc-event-resizer-dot-border-width:1px;--fc-non-business-color:hsla(0,0%,84%,.3);--fc-bg-event-color:#8fdf82;--fc-bg-event-opacity:0.3;--fc-highlight-color:rgba(188,232,241,.3);--fc-today-bg-color:rgba(255,220,40,.15);--fc-now-indicator-color:red}.fc-not-allowed,.fc-not-allowed .fc-event{cursor:not-allowed}.fc-unselectable{-webkit-touch-callout:none;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-moz-user-select:none;user-select:none}.fc{display:flex;flex-direction:column;font-size:1em}.fc,.fc *,.fc :after,.fc :before{box-sizing:border-box}.fc table{border-collapse:collapse;border-spacing:0;font-size:1em}.fc th{text-align:center}.fc td,.fc th{padding:0;vertical-align:top}.fc a[data-navlink]{cursor:pointer}.fc a[data-navlink]:hover{text-decoration:underline}.fc-direction-ltr{direction:ltr;text-align:left}.fc-direction-rtl{direction:rtl;text-align:right}.fc-theme-standard td,.fc-theme-standard th{border:1px solid var(--fc-border-color)}.fc-liquid-hack td,.fc-liquid-hack th{position:relative}@font-face{font-family:fcicons;font-style:normal;font-weight:400;src:url("data:application/x-font-ttf;charset=utf-8;base64,AAEAAAALAIAAAwAwT1MvMg8SBfAAAAC8AAAAYGNtYXAXVtKNAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5ZgYydxIAAAF4AAAFNGhlYWQUJ7cIAAAGrAAAADZoaGVhB20DzAAABuQAAAAkaG10eCIABhQAAAcIAAAALGxvY2ED4AU6AAAHNAAAABhtYXhwAA8AjAAAB0wAAAAgbmFtZXsr690AAAdsAAABhnBvc3QAAwAAAAAI9AAAACAAAwPAAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpBgPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6Qb//f//AAAAAAAg6QD//f//AAH/4xcEAAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAABAWIAjQKeAskAEwAAJSc3NjQnJiIHAQYUFwEWMjc2NCcCnuLiDQ0MJAz/AA0NAQAMJAwNDcni4gwjDQwM/wANIwz/AA0NDCMNAAAAAQFiAI0CngLJABMAACUBNjQnASYiBwYUHwEHBhQXFjI3AZ4BAA0N/wAMJAwNDeLiDQ0MJAyNAQAMIw0BAAwMDSMM4uINIwwNDQAAAAIA4gC3Ax4CngATACcAACUnNzY0JyYiDwEGFB8BFjI3NjQnISc3NjQnJiIPAQYUHwEWMjc2NCcB87e3DQ0MIw3VDQ3VDSMMDQ0BK7e3DQ0MJAzVDQ3VDCQMDQ3zuLcMJAwNDdUNIwzWDAwNIwy4twwkDA0N1Q0jDNYMDA0jDAAAAgDiALcDHgKeABMAJwAAJTc2NC8BJiIHBhQfAQcGFBcWMjchNzY0LwEmIgcGFB8BBwYUFxYyNwJJ1Q0N1Q0jDA0Nt7cNDQwjDf7V1Q0N1QwkDA0Nt7cNDQwkDLfWDCMN1Q0NDCQMt7gMIw0MDNYMIw3VDQ0MJAy3uAwjDQwMAAADAFUAAAOrA1UAMwBoAHcAABMiBgcOAQcOAQcOARURFBYXHgEXHgEXHgEzITI2Nz4BNz4BNz4BNRE0JicuAScuAScuASMFITIWFx4BFx4BFx4BFREUBgcOAQcOAQcOASMhIiYnLgEnLgEnLgE1ETQ2Nz4BNz4BNz4BMxMhMjY1NCYjISIGFRQWM9UNGAwLFQkJDgUFBQUFBQ4JCRULDBgNAlYNGAwLFQkJDgUFBQUFBQ4JCRULDBgN/aoCVgQIBAQHAwMFAQIBAQIBBQMDBwQECAT9qgQIBAQHAwMFAQIBAQIBBQMDBwQECASAAVYRGRkR/qoRGRkRA1UFBAUOCQkVDAsZDf2rDRkLDBUJCA4FBQUFBQUOCQgVDAsZDQJVDRkLDBUJCQ4FBAVVAgECBQMCBwQECAX9qwQJAwQHAwMFAQICAgIBBQMDBwQDCQQCVQUIBAQHAgMFAgEC/oAZEhEZGRESGQAAAAADAFUAAAOrA1UAMwBoAIkAABMiBgcOAQcOAQcOARURFBYXHgEXHgEXHgEzITI2Nz4BNz4BNz4BNRE0JicuAScuAScuASMFITIWFx4BFx4BFx4BFREUBgcOAQcOAQcOASMhIiYnLgEnLgEnLgE1ETQ2Nz4BNz4BNz4BMxMzFRQWMzI2PQEzMjY1NCYrATU0JiMiBh0BIyIGFRQWM9UNGAwLFQkJDgUFBQUFBQ4JCRULDBgNAlYNGAwLFQkJDgUFBQUFBQ4JCRULDBgN/aoCVgQIBAQHAwMFAQIBAQIBBQMDBwQECAT9qgQIBAQHAwMFAQIBAQIBBQMDBwQECASAgBkSEhmAERkZEYAZEhIZgBEZGREDVQUEBQ4JCRUMCxkN/asNGQsMFQkIDgUFBQUFBQ4JCBUMCxkNAlUNGQsMFQkJDgUEBVUCAQIFAwIHBAQIBf2rBAkDBAcDAwUBAgICAgEFAwMHBAMJBAJVBQgEBAcCAwUCAQL+gIASGRkSgBkSERmAEhkZEoAZERIZAAABAOIAjQMeAskAIAAAExcHBhQXFjI/ARcWMjc2NC8BNzY0JyYiDwEnJiIHBhQX4uLiDQ0MJAzi4gwkDA0N4uINDQwkDOLiDCQMDQ0CjeLiDSMMDQ3h4Q0NDCMN4uIMIw0MDOLiDAwNIwwAAAABAAAAAQAAa5n0y18PPPUACwQAAAAAANivOVsAAAAA2K85WwAAAAADqwNVAAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAOrAAEAAAAAAAAAAAAAAAAAAAALBAAAAAAAAAAAAAAAAgAAAAQAAWIEAAFiBAAA4gQAAOIEAABVBAAAVQQAAOIAAAAAAAoAFAAeAEQAagCqAOoBngJkApoAAQAAAAsAigADAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA4ArgABAAAAAAABAAcAAAABAAAAAAACAAcAYAABAAAAAAADAAcANgABAAAAAAAEAAcAdQABAAAAAAAFAAsAFQABAAAAAAAGAAcASwABAAAAAAAKABoAigADAAEECQABAA4ABwADAAEECQACAA4AZwADAAEECQADAA4APQADAAEECQAEAA4AfAADAAEECQAFABYAIAADAAEECQAGAA4AUgADAAEECQAKADQApGZjaWNvbnMAZgBjAGkAYwBvAG4Ac1ZlcnNpb24gMS4wAFYAZQByAHMAaQBvAG4AIAAxAC4AMGZjaWNvbnMAZgBjAGkAYwBvAG4Ac2ZjaWNvbnMAZgBjAGkAYwBvAG4Ac1JlZ3VsYXIAUgBlAGcAdQBsAGEAcmZjaWNvbnMAZgBjAGkAYwBvAG4Ac0ZvbnQgZ2VuZXJhdGVkIGJ5IEljb01vb24uAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAGIAeQAgAEkAYwBvAE0AbwBvAG4ALgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=") format("truetype")}.fc-icon{speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:inline-block;font-family:fcicons!important;font-style:normal;font-variant:normal;font-weight:400;height:1em;line-height:1;text-align:center;text-transform:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:1em}.fc-icon-chevron-left:before{content:"\\e900"}.fc-icon-chevron-right:before{content:"\\e901"}.fc-icon-chevrons-left:before{content:"\\e902"}.fc-icon-chevrons-right:before{content:"\\e903"}.fc-icon-minus-square:before{content:"\\e904"}.fc-icon-plus-square:before{content:"\\e905"}.fc-icon-x:before{content:"\\e906"}.fc .fc-button{border-radius:0;font-family:inherit;font-size:inherit;line-height:inherit;margin:0;overflow:visible;text-transform:none}.fc .fc-button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}.fc .fc-button{-webkit-appearance:button}.fc .fc-button:not(:disabled){cursor:pointer}.fc .fc-button::-moz-focus-inner{border-style:none;padding:0}.fc .fc-button{background-color:transparent;border:1px solid transparent;border-radius:.25em;display:inline-block;font-size:1em;font-weight:400;line-height:1.5;padding:.4em .65em;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:middle}.fc .fc-button:hover{text-decoration:none}.fc .fc-button:focus{box-shadow:0 0 0 .2rem rgba(44,62,80,.25);outline:0}.fc .fc-button:disabled{opacity:.65}.fc .fc-button-primary{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:hover{background-color:var(--fc-button-hover-bg-color);border-color:var(--fc-button-hover-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:disabled{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button-primary:not(:disabled).fc-button-active,.fc .fc-button-primary:not(:disabled):active{background-color:var(--fc-button-active-bg-color);border-color:var(--fc-button-active-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:not(:disabled).fc-button-active:focus,.fc .fc-button-primary:not(:disabled):active:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button .fc-icon{font-size:1.5em;vertical-align:middle}.fc .fc-button-group{display:inline-flex;position:relative;vertical-align:middle}.fc .fc-button-group>.fc-button{flex:1 1 auto;position:relative}.fc .fc-button-group>.fc-button.fc-button-active,.fc .fc-button-group>.fc-button:active,.fc .fc-button-group>.fc-button:focus,.fc .fc-button-group>.fc-button:hover{z-index:1}.fc-direction-ltr .fc-button-group>.fc-button:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;margin-left:-1px}.fc-direction-ltr .fc-button-group>.fc-button:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.fc-direction-rtl .fc-button-group>.fc-button:not(:first-child){border-bottom-right-radius:0;border-top-right-radius:0;margin-right:-1px}.fc-direction-rtl .fc-button-group>.fc-button:not(:last-child){border-bottom-left-radius:0;border-top-left-radius:0}.fc .fc-toolbar{align-items:center;display:flex;justify-content:space-between}.fc .fc-toolbar.fc-header-toolbar{margin-bottom:1.5em}.fc .fc-toolbar.fc-footer-toolbar{margin-top:1.5em}.fc .fc-toolbar-title{font-size:1.75em;margin:0}.fc-direction-ltr .fc-toolbar>*>:not(:first-child){margin-left:.75em}.fc-direction-rtl .fc-toolbar>*>:not(:first-child){margin-right:.75em}.fc-direction-rtl .fc-toolbar-ltr{flex-direction:row-reverse}.fc .fc-scroller{-webkit-overflow-scrolling:touch;position:relative}.fc .fc-scroller-liquid{height:100%}.fc .fc-scroller-liquid-absolute{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-scroller-harness{direction:ltr;overflow:hidden;position:relative}.fc .fc-scroller-harness-liquid{height:100%}.fc-direction-rtl .fc-scroller-harness>.fc-scroller{direction:rtl}.fc-theme-standard .fc-scrollgrid{border:1px solid var(--fc-border-color)}.fc .fc-scrollgrid,.fc .fc-scrollgrid table{table-layout:fixed;width:100%}.fc .fc-scrollgrid table{border-left-style:hidden;border-right-style:hidden;border-top-style:hidden}.fc .fc-scrollgrid{border-bottom-width:0;border-collapse:separate;border-right-width:0}.fc .fc-scrollgrid-liquid{height:100%}.fc .fc-scrollgrid-section,.fc .fc-scrollgrid-section table,.fc .fc-scrollgrid-section>td{height:1px}.fc .fc-scrollgrid-section-liquid>td{height:100%}.fc .fc-scrollgrid-section>*{border-left-width:0;border-top-width:0}.fc .fc-scrollgrid-section-footer>*,.fc .fc-scrollgrid-section-header>*{border-bottom-width:0}.fc .fc-scrollgrid-section-body table,.fc .fc-scrollgrid-section-footer table{border-bottom-style:hidden}.fc .fc-scrollgrid-section-sticky>*{background:var(--fc-page-bg-color);position:sticky;z-index:3}.fc .fc-scrollgrid-section-header.fc-scrollgrid-section-sticky>*{top:0}.fc .fc-scrollgrid-section-footer.fc-scrollgrid-section-sticky>*{bottom:0}.fc .fc-scrollgrid-sticky-shim{height:1px;margin-bottom:-1px}.fc-sticky{position:sticky}.fc .fc-view-harness{flex-grow:1;position:relative}.fc .fc-view-harness-active>.fc-view{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-col-header-cell-cushion{display:inline-block;padding:2px 4px}.fc .fc-bg-event,.fc .fc-highlight,.fc .fc-non-business{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-non-business{background:var(--fc-non-business-color)}.fc .fc-bg-event{background:var(--fc-bg-event-color);opacity:var(--fc-bg-event-opacity)}.fc .fc-bg-event .fc-event-title{font-size:var(--fc-small-font-size);font-style:italic;margin:.5em}.fc .fc-highlight{background:var(--fc-highlight-color)}.fc .fc-cell-shaded,.fc .fc-day-disabled{background:var(--fc-neutral-bg-color)}a.fc-event,a.fc-event:hover{text-decoration:none}.fc-event.fc-event-draggable,.fc-event[href]{cursor:pointer}.fc-event .fc-event-main{position:relative;z-index:2}.fc-event-dragging:not(.fc-event-selected){opacity:.75}.fc-event-dragging.fc-event-selected{box-shadow:0 2px 7px rgba(0,0,0,.3)}.fc-event .fc-event-resizer{display:none;position:absolute;z-index:4}.fc-event-selected .fc-event-resizer,.fc-event:hover .fc-event-resizer{display:block}.fc-event-selected .fc-event-resizer{background:var(--fc-page-bg-color);border-color:inherit;border-radius:calc(var(--fc-event-resizer-dot-total-width)/2);border-style:solid;border-width:var(--fc-event-resizer-dot-border-width);height:var(--fc-event-resizer-dot-total-width);width:var(--fc-event-resizer-dot-total-width)}.fc-event-selected .fc-event-resizer:before{bottom:-20px;content:"";left:-20px;position:absolute;right:-20px;top:-20px}.fc-event-selected,.fc-event:focus{box-shadow:0 2px 5px rgba(0,0,0,.2)}.fc-event-selected:before,.fc-event:focus:before{bottom:0;content:"";left:0;position:absolute;right:0;top:0;z-index:3}.fc-event-selected:after,.fc-event:focus:after{background:var(--fc-event-selected-overlay-color);bottom:-1px;content:"";left:-1px;position:absolute;right:-1px;top:-1px;z-index:1}.fc-h-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-h-event .fc-event-main{color:var(--fc-event-text-color)}.fc-h-event .fc-event-main-frame{display:flex}.fc-h-event .fc-event-time{max-width:100%;overflow:hidden}.fc-h-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-width:0}.fc-h-event .fc-event-title{display:inline-block;left:0;max-width:100%;overflow:hidden;right:0;vertical-align:top}.fc-h-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-start),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-end){border-bottom-left-radius:0;border-left-width:0;border-top-left-radius:0}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-end),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-start){border-bottom-right-radius:0;border-right-width:0;border-top-right-radius:0}.fc-h-event:not(.fc-event-selected) .fc-event-resizer{bottom:0;top:0;width:var(--fc-event-resizer-thickness)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end{cursor:w-resize;left:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start{cursor:e-resize;right:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-h-event.fc-event-selected .fc-event-resizer{margin-top:calc(var(--fc-event-resizer-dot-total-width)*-.5);top:50%}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-start,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-end{left:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-end,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-start{right:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc .fc-popover{box-shadow:0 2px 6px rgba(0,0,0,.15);position:absolute;z-index:9999}.fc .fc-popover-header{align-items:center;display:flex;flex-direction:row;justify-content:space-between;padding:3px 4px}.fc .fc-popover-title{margin:0 2px}.fc .fc-popover-close{cursor:pointer;font-size:1.1em;opacity:.65}.fc-theme-standard .fc-popover{background:var(--fc-page-bg-color);border:1px solid var(--fc-border-color)}.fc-theme-standard .fc-popover-header{background:var(--fc-neutral-bg-color)}';
  injectStyles(css_248z);
  var globalLocales = [];
  var MINIMAL_RAW_EN_LOCALE = {
    code: "en",
    week: {
      dow: 0,
      doy: 4
    },
    direction: "ltr",
    buttonText: {
      prev: "prev",
      next: "next",
      prevYear: "prev year",
      nextYear: "next year",
      year: "year",
      today: "today",
      month: "month",
      week: "week",
      day: "day",
      list: "list"
    },
    weekText: "W",
    weekTextLong: "Week",
    closeHint: "Close",
    timeHint: "Time",
    eventHint: "Event",
    allDayText: "all-day",
    moreLinkText: "more",
    noEventsText: "No events to display"
  };
  var RAW_EN_LOCALE = Object.assign(Object.assign({}, MINIMAL_RAW_EN_LOCALE), {
    buttonHints: {
      prev: "Previous $0",
      next: "Next $0",
      today(buttonText, unit) {
        return unit === "day" ? "Today" : `This ${buttonText}`;
      }
    },
    viewHint: "$0 view",
    navLinkHint: "Go to $0",
    moreLinkHint(eventCnt) {
      return `Show ${eventCnt} more event${eventCnt === 1 ? "" : "s"}`;
    }
  });
  function organizeRawLocales(explicitRawLocales) {
    let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : "en";
    let allRawLocales = globalLocales.concat(explicitRawLocales);
    let rawLocaleMap = {
      en: RAW_EN_LOCALE
    };
    for (let rawLocale of allRawLocales) {
      rawLocaleMap[rawLocale.code] = rawLocale;
    }
    return {
      map: rawLocaleMap,
      defaultCode
    };
  }
  function buildLocale(inputSingular, available) {
    if (typeof inputSingular === "object" && !Array.isArray(inputSingular)) {
      return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);
    }
    return queryLocale(inputSingular, available);
  }
  function queryLocale(codeArg, available) {
    let codes = [].concat(codeArg || []);
    let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;
    return parseLocale(codeArg, codes, raw);
  }
  function queryRawLocale(codes, available) {
    for (let i3 = 0; i3 < codes.length; i3 += 1) {
      let parts = codes[i3].toLocaleLowerCase().split("-");
      for (let j4 = parts.length; j4 > 0; j4 -= 1) {
        let simpleId = parts.slice(0, j4).join("-");
        if (available[simpleId]) {
          return available[simpleId];
        }
      }
    }
    return null;
  }
  function parseLocale(codeArg, codes, raw) {
    let merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ["buttonText"]);
    delete merged.code;
    let { week } = merged;
    delete merged.week;
    return {
      codeArg,
      codes,
      week,
      simpleNumberFormat: new Intl.NumberFormat(codeArg),
      options: merged
    };
  }
  function createPlugin(input) {
    return {
      id: guid(),
      name: input.name,
      premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : void 0,
      deps: input.deps || [],
      reducers: input.reducers || [],
      isLoadingFuncs: input.isLoadingFuncs || [],
      contextInit: [].concat(input.contextInit || []),
      eventRefiners: input.eventRefiners || {},
      eventDefMemberAdders: input.eventDefMemberAdders || [],
      eventSourceRefiners: input.eventSourceRefiners || {},
      isDraggableTransformers: input.isDraggableTransformers || [],
      eventDragMutationMassagers: input.eventDragMutationMassagers || [],
      eventDefMutationAppliers: input.eventDefMutationAppliers || [],
      dateSelectionTransformers: input.dateSelectionTransformers || [],
      datePointTransforms: input.datePointTransforms || [],
      dateSpanTransforms: input.dateSpanTransforms || [],
      views: input.views || {},
      viewPropsTransformers: input.viewPropsTransformers || [],
      isPropsValid: input.isPropsValid || null,
      externalDefTransforms: input.externalDefTransforms || [],
      viewContainerAppends: input.viewContainerAppends || [],
      eventDropTransformers: input.eventDropTransformers || [],
      componentInteractions: input.componentInteractions || [],
      calendarInteractions: input.calendarInteractions || [],
      themeClasses: input.themeClasses || {},
      eventSourceDefs: input.eventSourceDefs || [],
      cmdFormatter: input.cmdFormatter,
      recurringTypes: input.recurringTypes || [],
      namedTimeZonedImpl: input.namedTimeZonedImpl,
      initialView: input.initialView || "",
      elementDraggingImpl: input.elementDraggingImpl,
      optionChangeHandlers: input.optionChangeHandlers || {},
      scrollGridImpl: input.scrollGridImpl || null,
      listenerRefiners: input.listenerRefiners || {},
      optionRefiners: input.optionRefiners || {},
      propSetHandlers: input.propSetHandlers || {}
    };
  }
  function buildPluginHooks(pluginDefs, globalDefs) {
    let currentPluginIds = {};
    let hooks = {
      premiumReleaseDate: void 0,
      reducers: [],
      isLoadingFuncs: [],
      contextInit: [],
      eventRefiners: {},
      eventDefMemberAdders: [],
      eventSourceRefiners: {},
      isDraggableTransformers: [],
      eventDragMutationMassagers: [],
      eventDefMutationAppliers: [],
      dateSelectionTransformers: [],
      datePointTransforms: [],
      dateSpanTransforms: [],
      views: {},
      viewPropsTransformers: [],
      isPropsValid: null,
      externalDefTransforms: [],
      viewContainerAppends: [],
      eventDropTransformers: [],
      componentInteractions: [],
      calendarInteractions: [],
      themeClasses: {},
      eventSourceDefs: [],
      cmdFormatter: null,
      recurringTypes: [],
      namedTimeZonedImpl: null,
      initialView: "",
      elementDraggingImpl: null,
      optionChangeHandlers: {},
      scrollGridImpl: null,
      listenerRefiners: {},
      optionRefiners: {},
      propSetHandlers: {}
    };
    function addDefs(defs) {
      for (let def of defs) {
        const pluginName = def.name;
        const currentId = currentPluginIds[pluginName];
        if (currentId === void 0) {
          currentPluginIds[pluginName] = def.id;
          addDefs(def.deps);
          hooks = combineHooks(hooks, def);
        } else if (currentId !== def.id) {
          console.warn(`Duplicate plugin '${pluginName}'`);
        }
      }
    }
    if (pluginDefs) {
      addDefs(pluginDefs);
    }
    addDefs(globalDefs);
    return hooks;
  }
  function buildBuildPluginHooks() {
    let currentOverrideDefs = [];
    let currentGlobalDefs = [];
    let currentHooks;
    return (overrideDefs, globalDefs) => {
      if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {
        currentHooks = buildPluginHooks(overrideDefs, globalDefs);
      }
      currentOverrideDefs = overrideDefs;
      currentGlobalDefs = globalDefs;
      return currentHooks;
    };
  }
  function combineHooks(hooks0, hooks1) {
    return {
      premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),
      reducers: hooks0.reducers.concat(hooks1.reducers),
      isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),
      contextInit: hooks0.contextInit.concat(hooks1.contextInit),
      eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),
      eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),
      eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),
      isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),
      eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),
      eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),
      dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),
      datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),
      dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),
      views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),
      viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),
      isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,
      externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),
      viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),
      eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),
      calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),
      componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),
      themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),
      eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),
      cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,
      recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),
      namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,
      initialView: hooks0.initialView || hooks1.initialView,
      elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,
      optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),
      scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,
      listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),
      optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),
      propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers)
    };
  }
  function compareOptionalDates(date0, date1) {
    if (date0 === void 0) {
      return date1;
    }
    if (date1 === void 0) {
      return date0;
    }
    return new Date(Math.max(date0.valueOf(), date1.valueOf()));
  }
  var StandardTheme = class extends Theme {
  };
  StandardTheme.prototype.classes = {
    root: "fc-theme-standard",
    tableCellShaded: "fc-cell-shaded",
    buttonGroup: "fc-button-group",
    button: "fc-button fc-button-primary",
    buttonActive: "fc-button-active"
  };
  StandardTheme.prototype.baseIconClass = "fc-icon";
  StandardTheme.prototype.iconClasses = {
    close: "fc-icon-x",
    prev: "fc-icon-chevron-left",
    next: "fc-icon-chevron-right",
    prevYear: "fc-icon-chevrons-left",
    nextYear: "fc-icon-chevrons-right"
  };
  StandardTheme.prototype.rtlIconClasses = {
    prev: "fc-icon-chevron-right",
    next: "fc-icon-chevron-left",
    prevYear: "fc-icon-chevrons-right",
    nextYear: "fc-icon-chevrons-left"
  };
  StandardTheme.prototype.iconOverrideOption = "buttonIcons";
  StandardTheme.prototype.iconOverrideCustomButtonOption = "icon";
  StandardTheme.prototype.iconOverridePrefix = "fc-icon-";
  function compileViewDefs(defaultConfigs, overrideConfigs) {
    let hash = {};
    let viewType;
    for (viewType in defaultConfigs) {
      ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
    }
    for (viewType in overrideConfigs) {
      ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
    }
    return hash;
  }
  function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
    if (hash[viewType]) {
      return hash[viewType];
    }
    let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);
    if (viewDef) {
      hash[viewType] = viewDef;
    }
    return viewDef;
  }
  function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
    let defaultConfig = defaultConfigs[viewType];
    let overrideConfig = overrideConfigs[viewType];
    let queryProp = (name) => defaultConfig && defaultConfig[name] !== null ? defaultConfig[name] : overrideConfig && overrideConfig[name] !== null ? overrideConfig[name] : null;
    let theComponent = queryProp("component");
    let superType = queryProp("superType");
    let superDef = null;
    if (superType) {
      if (superType === viewType) {
        throw new Error("Can't have a custom view type that references itself");
      }
      superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);
    }
    if (!theComponent && superDef) {
      theComponent = superDef.component;
    }
    if (!theComponent) {
      return null;
    }
    return {
      type: viewType,
      component: theComponent,
      defaults: Object.assign(Object.assign({}, superDef ? superDef.defaults : {}), defaultConfig ? defaultConfig.rawOptions : {}),
      overrides: Object.assign(Object.assign({}, superDef ? superDef.overrides : {}), overrideConfig ? overrideConfig.rawOptions : {})
    };
  }
  function parseViewConfigs(inputs) {
    return mapHash(inputs, parseViewConfig);
  }
  function parseViewConfig(input) {
    let rawOptions = typeof input === "function" ? { component: input } : input;
    let { component } = rawOptions;
    if (rawOptions.content) {
      component = createViewHookComponent(rawOptions);
    }
    return {
      superType: rawOptions.type,
      component,
      rawOptions
    };
  }
  function createViewHookComponent(options) {
    return (viewProps) => h(ViewContextType.Consumer, null, (context) => h(ContentContainer, { elTag: "div", elClasses: buildViewClassNames(context.viewSpec), renderProps: Object.assign(Object.assign({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold }), generatorName: void 0, generator: options.content, classNameGenerator: options.classNames, didMount: options.didMount, willUnmount: options.willUnmount }));
  }
  function buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
    let defaultConfigs = parseViewConfigs(defaultInputs);
    let overrideConfigs = parseViewConfigs(optionOverrides.views);
    let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);
    return mapHash(viewDefs, (viewDef) => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults));
  }
  function buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
    let durationInput = viewDef.overrides.duration || viewDef.defaults.duration || dynamicOptionOverrides.duration || optionOverrides.duration;
    let duration = null;
    let durationUnit = "";
    let singleUnit = "";
    let singleUnitOverrides = {};
    if (durationInput) {
      duration = createDurationCached(durationInput);
      if (duration) {
        let denom = greatestDurationDenominator(duration);
        durationUnit = denom.unit;
        if (denom.value === 1) {
          singleUnit = durationUnit;
          singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};
        }
      }
    }
    let queryButtonText = (optionsSubset) => {
      let buttonTextMap = optionsSubset.buttonText || {};
      let buttonTextKey = viewDef.defaults.buttonTextKey;
      if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {
        return buttonTextMap[buttonTextKey];
      }
      if (buttonTextMap[viewDef.type] != null) {
        return buttonTextMap[viewDef.type];
      }
      if (buttonTextMap[singleUnit] != null) {
        return buttonTextMap[singleUnit];
      }
      return null;
    };
    let queryButtonTitle = (optionsSubset) => {
      let buttonHints = optionsSubset.buttonHints || {};
      let buttonKey = viewDef.defaults.buttonTextKey;
      if (buttonKey != null && buttonHints[buttonKey] != null) {
        return buttonHints[buttonKey];
      }
      if (buttonHints[viewDef.type] != null) {
        return buttonHints[viewDef.type];
      }
      if (buttonHints[singleUnit] != null) {
        return buttonHints[singleUnit];
      }
      return null;
    };
    return {
      type: viewDef.type,
      component: viewDef.component,
      duration,
      durationUnit,
      singleUnit,
      optionDefaults: viewDef.defaults,
      optionOverrides: Object.assign(Object.assign({}, singleUnitOverrides), viewDef.overrides),
      buttonTextOverride: queryButtonText(dynamicOptionOverrides) || queryButtonText(optionOverrides) || viewDef.overrides.buttonText,
      buttonTextDefault: queryButtonText(localeDefaults) || viewDef.defaults.buttonText || queryButtonText(BASE_OPTION_DEFAULTS) || viewDef.type,
      buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) || queryButtonTitle(optionOverrides) || viewDef.overrides.buttonHint,
      buttonTitleDefault: queryButtonTitle(localeDefaults) || viewDef.defaults.buttonHint || queryButtonTitle(BASE_OPTION_DEFAULTS)
    };
  }
  var durationInputMap = {};
  function createDurationCached(durationInput) {
    let json = JSON.stringify(durationInput);
    let res = durationInputMap[json];
    if (res === void 0) {
      res = createDuration(durationInput);
      durationInputMap[json] = res;
    }
    return res;
  }
  function reduceViewType(viewType, action) {
    switch (action.type) {
      case "CHANGE_VIEW_TYPE":
        viewType = action.viewType;
    }
    return viewType;
  }
  function reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {
    switch (action.type) {
      case "SET_OPTION":
        return Object.assign(Object.assign({}, dynamicOptionOverrides), { [action.optionName]: action.rawOptionValue });
      default:
        return dynamicOptionOverrides;
    }
  }
  function reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {
    let dp;
    switch (action.type) {
      case "CHANGE_VIEW_TYPE":
        return dateProfileGenerator.build(action.dateMarker || currentDate);
      case "CHANGE_DATE":
        return dateProfileGenerator.build(action.dateMarker);
      case "PREV":
        dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);
        if (dp.isValid) {
          return dp;
        }
        break;
      case "NEXT":
        dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);
        if (dp.isValid) {
          return dp;
        }
        break;
    }
    return currentDateProfile;
  }
  function initEventSources(calendarOptions, dateProfile, context) {
    let activeRange = dateProfile ? dateProfile.activeRange : null;
    return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);
  }
  function reduceEventSources(eventSources, action, dateProfile, context) {
    let activeRange = dateProfile ? dateProfile.activeRange : null;
    switch (action.type) {
      case "ADD_EVENT_SOURCES":
        return addSources(eventSources, action.sources, activeRange, context);
      case "REMOVE_EVENT_SOURCE":
        return removeSource(eventSources, action.sourceId);
      case "PREV":
      case "NEXT":
      case "CHANGE_DATE":
      case "CHANGE_VIEW_TYPE":
        if (dateProfile) {
          return fetchDirtySources(eventSources, activeRange, context);
        }
        return eventSources;
      case "FETCH_EVENT_SOURCES":
        return fetchSourcesByIds(eventSources, action.sourceIds ? arrayToHash(action.sourceIds) : excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);
      case "RECEIVE_EVENTS":
      case "RECEIVE_EVENT_ERROR":
        return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);
      case "REMOVE_ALL_EVENT_SOURCES":
        return {};
      default:
        return eventSources;
    }
  }
  function reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {
    let activeRange = dateProfile ? dateProfile.activeRange : null;
    return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);
  }
  function computeEventSourcesLoading(eventSources) {
    for (let sourceId in eventSources) {
      if (eventSources[sourceId].isFetching) {
        return true;
      }
    }
    return false;
  }
  function addSources(eventSourceHash, sources, fetchRange, context) {
    let hash = {};
    for (let source of sources) {
      hash[source.sourceId] = source;
    }
    if (fetchRange) {
      hash = fetchDirtySources(hash, fetchRange, context);
    }
    return Object.assign(Object.assign({}, eventSourceHash), hash);
  }
  function removeSource(eventSourceHash, sourceId) {
    return filterHash(eventSourceHash, (eventSource) => eventSource.sourceId !== sourceId);
  }
  function fetchDirtySources(sourceHash, fetchRange, context) {
    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);
  }
  function isSourceDirty(eventSource, fetchRange, context) {
    if (!doesSourceNeedRange(eventSource, context)) {
      return !eventSource.latestFetchId;
    }
    return !context.options.lazyFetching || !eventSource.fetchRange || eventSource.isFetching || fetchRange.start < eventSource.fetchRange.start || fetchRange.end > eventSource.fetchRange.end;
  }
  function fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {
    let nextSources = {};
    for (let sourceId in prevSources) {
      let source = prevSources[sourceId];
      if (sourceIdHash[sourceId]) {
        nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);
      } else {
        nextSources[sourceId] = source;
      }
    }
    return nextSources;
  }
  function fetchSource(eventSource, fetchRange, isRefetch, context) {
    let { options, calendarApi } = context;
    let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];
    let fetchId = guid();
    sourceDef.fetch({
      eventSource,
      range: fetchRange,
      isRefetch,
      context
    }, (res) => {
      let { rawEvents } = res;
      if (options.eventSourceSuccess) {
        rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;
      }
      if (eventSource.success) {
        rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;
      }
      context.dispatch({
        type: "RECEIVE_EVENTS",
        sourceId: eventSource.sourceId,
        fetchId,
        fetchRange,
        rawEvents
      });
    }, (error2) => {
      let errorHandled = false;
      if (options.eventSourceFailure) {
        options.eventSourceFailure.call(calendarApi, error2);
        errorHandled = true;
      }
      if (eventSource.failure) {
        eventSource.failure(error2);
        errorHandled = true;
      }
      if (!errorHandled) {
        console.warn(error2.message, error2);
      }
      context.dispatch({
        type: "RECEIVE_EVENT_ERROR",
        sourceId: eventSource.sourceId,
        fetchId,
        fetchRange,
        error: error2
      });
    });
    return Object.assign(Object.assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });
  }
  function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {
    let eventSource = sourceHash[sourceId];
    if (eventSource && fetchId === eventSource.latestFetchId) {
      return Object.assign(Object.assign({}, sourceHash), { [sourceId]: Object.assign(Object.assign({}, eventSource), { isFetching: false, fetchRange }) });
    }
    return sourceHash;
  }
  function excludeStaticSources(eventSources, context) {
    return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context));
  }
  function parseInitialSources(rawOptions, context) {
    let refiners = buildEventSourceRefiners(context);
    let rawSources = [].concat(rawOptions.eventSources || []);
    let sources = [];
    if (rawOptions.initialEvents) {
      rawSources.unshift(rawOptions.initialEvents);
    }
    if (rawOptions.events) {
      rawSources.unshift(rawOptions.events);
    }
    for (let rawSource of rawSources) {
      let source = parseEventSource(rawSource, context, refiners);
      if (source) {
        sources.push(source);
      }
    }
    return sources;
  }
  function doesSourceNeedRange(eventSource, context) {
    let defs = context.pluginHooks.eventSourceDefs;
    return !defs[eventSource.sourceDefId].ignoreRange;
  }
  function reduceDateSelection(currentSelection, action) {
    switch (action.type) {
      case "UNSELECT_DATES":
        return null;
      case "SELECT_DATES":
        return action.selection;
      default:
        return currentSelection;
    }
  }
  function reduceSelectedEvent(currentInstanceId, action) {
    switch (action.type) {
      case "UNSELECT_EVENT":
        return "";
      case "SELECT_EVENT":
        return action.eventInstanceId;
      default:
        return currentInstanceId;
    }
  }
  function reduceEventDrag(currentDrag, action) {
    let newDrag;
    switch (action.type) {
      case "UNSET_EVENT_DRAG":
        return null;
      case "SET_EVENT_DRAG":
        newDrag = action.state;
        return {
          affectedEvents: newDrag.affectedEvents,
          mutatedEvents: newDrag.mutatedEvents,
          isEvent: newDrag.isEvent
        };
      default:
        return currentDrag;
    }
  }
  function reduceEventResize(currentResize, action) {
    let newResize;
    switch (action.type) {
      case "UNSET_EVENT_RESIZE":
        return null;
      case "SET_EVENT_RESIZE":
        newResize = action.state;
        return {
          affectedEvents: newResize.affectedEvents,
          mutatedEvents: newResize.mutatedEvents,
          isEvent: newResize.isEvent
        };
      default:
        return currentResize;
    }
  }
  function parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
    let header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;
    let footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;
    return { header, footer };
  }
  function parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
    let sectionWidgets = {};
    let viewsWithButtons = [];
    let hasTitle = false;
    for (let sectionName in sectionStrHash) {
      let sectionStr = sectionStrHash[sectionName];
      let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);
      sectionWidgets[sectionName] = sectionRes.widgets;
      viewsWithButtons.push(...sectionRes.viewsWithButtons);
      hasTitle = hasTitle || sectionRes.hasTitle;
    }
    return { sectionWidgets, viewsWithButtons, hasTitle };
  }
  function parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
    let isRtl = calendarOptions.direction === "rtl";
    let calendarCustomButtons = calendarOptions.customButtons || {};
    let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};
    let calendarButtonText = calendarOptions.buttonText || {};
    let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};
    let calendarButtonHints = calendarOptions.buttonHints || {};
    let sectionSubstrs = sectionStr ? sectionStr.split(" ") : [];
    let viewsWithButtons = [];
    let hasTitle = false;
    let widgets = sectionSubstrs.map((buttonGroupStr) => buttonGroupStr.split(",").map((buttonName) => {
      if (buttonName === "title") {
        hasTitle = true;
        return { buttonName };
      }
      let customButtonProps;
      let viewSpec;
      let buttonClick;
      let buttonIcon;
      let buttonText;
      let buttonHint;
      if (customButtonProps = calendarCustomButtons[buttonName]) {
        buttonClick = (ev) => {
          if (customButtonProps.click) {
            customButtonProps.click.call(ev.target, ev, ev.target);
          }
        };
        (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) || (buttonIcon = theme.getIconClass(buttonName, isRtl)) || (buttonText = customButtonProps.text);
        buttonHint = customButtonProps.hint || customButtonProps.text;
      } else if (viewSpec = viewSpecs[buttonName]) {
        viewsWithButtons.push(buttonName);
        buttonClick = () => {
          calendarApi.changeView(buttonName);
        };
        (buttonText = viewSpec.buttonTextOverride) || (buttonIcon = theme.getIconClass(buttonName, isRtl)) || (buttonText = viewSpec.buttonTextDefault);
        let textFallback = viewSpec.buttonTextOverride || viewSpec.buttonTextDefault;
        buttonHint = formatWithOrdinals(
          viewSpec.buttonTitleOverride || viewSpec.buttonTitleDefault || calendarOptions.viewHint,
          [textFallback, buttonName],
          textFallback
        );
      } else if (calendarApi[buttonName]) {
        buttonClick = () => {
          calendarApi[buttonName]();
        };
        (buttonText = calendarButtonTextOverrides[buttonName]) || (buttonIcon = theme.getIconClass(buttonName, isRtl)) || (buttonText = calendarButtonText[buttonName]);
        if (buttonName === "prevYear" || buttonName === "nextYear") {
          let prevOrNext = buttonName === "prevYear" ? "prev" : "next";
          buttonHint = formatWithOrdinals(calendarButtonHintOverrides[prevOrNext] || calendarButtonHints[prevOrNext], [
            calendarButtonText.year || "year",
            "year"
          ], calendarButtonText[buttonName]);
        } else {
          buttonHint = (navUnit) => formatWithOrdinals(calendarButtonHintOverrides[buttonName] || calendarButtonHints[buttonName], [
            calendarButtonText[navUnit] || navUnit,
            navUnit
          ], calendarButtonText[buttonName]);
        }
      }
      return { buttonName, buttonClick, buttonIcon, buttonText, buttonHint };
    }));
    return { widgets, viewsWithButtons, hasTitle };
  }
  var ViewImpl = class {
    constructor(type, getCurrentData, dateEnv) {
      this.type = type;
      this.getCurrentData = getCurrentData;
      this.dateEnv = dateEnv;
    }
    get calendar() {
      return this.getCurrentData().calendarApi;
    }
    get title() {
      return this.getCurrentData().viewTitle;
    }
    get activeStart() {
      return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);
    }
    get activeEnd() {
      return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);
    }
    get currentStart() {
      return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);
    }
    get currentEnd() {
      return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);
    }
    getOption(name) {
      return this.getCurrentData().options[name];
    }
  };
  var eventSourceDef$2 = {
    ignoreRange: true,
    parseMeta(refined) {
      if (Array.isArray(refined.events)) {
        return refined.events;
      }
      return null;
    },
    fetch(arg, successCallback) {
      successCallback({
        rawEvents: arg.eventSource.meta
      });
    }
  };
  var arrayEventSourcePlugin = createPlugin({
    name: "array-event-source",
    eventSourceDefs: [eventSourceDef$2]
  });
  var eventSourceDef$1 = {
    parseMeta(refined) {
      if (typeof refined.events === "function") {
        return refined.events;
      }
      return null;
    },
    fetch(arg, successCallback, errorCallback) {
      const { dateEnv } = arg.context;
      const func = arg.eventSource.meta;
      unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), (rawEvents) => successCallback({ rawEvents }), errorCallback);
    }
  };
  var funcEventSourcePlugin = createPlugin({
    name: "func-event-source",
    eventSourceDefs: [eventSourceDef$1]
  });
  var JSON_FEED_EVENT_SOURCE_REFINERS = {
    method: String,
    extraParams: identity,
    startParam: String,
    endParam: String,
    timeZoneParam: String
  };
  var eventSourceDef = {
    parseMeta(refined) {
      if (refined.url && (refined.format === "json" || !refined.format)) {
        return {
          url: refined.url,
          format: "json",
          method: (refined.method || "GET").toUpperCase(),
          extraParams: refined.extraParams,
          startParam: refined.startParam,
          endParam: refined.endParam,
          timeZoneParam: refined.timeZoneParam
        };
      }
      return null;
    },
    fetch(arg, successCallback, errorCallback) {
      const { meta } = arg.eventSource;
      const requestParams = buildRequestParams(meta, arg.range, arg.context);
      requestJson(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {
        successCallback({ rawEvents, response });
      }, errorCallback);
    }
  };
  var jsonFeedEventSourcePlugin = createPlugin({
    name: "json-event-source",
    eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,
    eventSourceDefs: [eventSourceDef]
  });
  function buildRequestParams(meta, range, context) {
    let { dateEnv, options } = context;
    let startParam;
    let endParam;
    let timeZoneParam;
    let customRequestParams;
    let params = {};
    startParam = meta.startParam;
    if (startParam == null) {
      startParam = options.startParam;
    }
    endParam = meta.endParam;
    if (endParam == null) {
      endParam = options.endParam;
    }
    timeZoneParam = meta.timeZoneParam;
    if (timeZoneParam == null) {
      timeZoneParam = options.timeZoneParam;
    }
    if (typeof meta.extraParams === "function") {
      customRequestParams = meta.extraParams();
    } else {
      customRequestParams = meta.extraParams || {};
    }
    Object.assign(params, customRequestParams);
    params[startParam] = dateEnv.formatIso(range.start);
    params[endParam] = dateEnv.formatIso(range.end);
    if (dateEnv.timeZone !== "local") {
      params[timeZoneParam] = dateEnv.timeZone;
    }
    return params;
  }
  var SIMPLE_RECURRING_REFINERS = {
    daysOfWeek: identity,
    startTime: createDuration,
    endTime: createDuration,
    duration: createDuration,
    startRecur: identity,
    endRecur: identity
  };
  var recurring = {
    parse(refined, dateEnv) {
      if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {
        let recurringData = {
          daysOfWeek: refined.daysOfWeek || null,
          startTime: refined.startTime || null,
          endTime: refined.endTime || null,
          startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,
          endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null
        };
        let duration;
        if (refined.duration) {
          duration = refined.duration;
        }
        if (!duration && refined.startTime && refined.endTime) {
          duration = subtractDurations(refined.endTime, refined.startTime);
        }
        return {
          allDayGuess: Boolean(!refined.startTime && !refined.endTime),
          duration,
          typeData: recurringData
        };
      }
      return null;
    },
    expand(typeData, framingRange, dateEnv) {
      let clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });
      if (clippedFramingRange) {
        return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);
      }
      return [];
    }
  };
  var simpleRecurringEventsPlugin = createPlugin({
    name: "simple-recurring-event",
    recurringTypes: [recurring],
    eventRefiners: SIMPLE_RECURRING_REFINERS
  });
  function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {
    let dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;
    let dayMarker = startOfDay(framingRange.start);
    let endMarker = framingRange.end;
    let instanceStarts = [];
    while (dayMarker < endMarker) {
      let instanceStart;
      if (!dowHash || dowHash[dayMarker.getUTCDay()]) {
        if (startTime) {
          instanceStart = dateEnv.add(dayMarker, startTime);
        } else {
          instanceStart = dayMarker;
        }
        instanceStarts.push(instanceStart);
      }
      dayMarker = addDays(dayMarker, 1);
    }
    return instanceStarts;
  }
  var changeHandlerPlugin = createPlugin({
    name: "change-handler",
    optionChangeHandlers: {
      events(events, context) {
        handleEventSources([events], context);
      },
      eventSources: handleEventSources
    }
  });
  function handleEventSources(inputs, context) {
    let unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);
    let newInputs = [];
    for (let input of inputs) {
      let inputFound = false;
      for (let i3 = 0; i3 < unfoundSources.length; i3 += 1) {
        if (unfoundSources[i3]._raw === input) {
          unfoundSources.splice(i3, 1);
          inputFound = true;
          break;
        }
      }
      if (!inputFound) {
        newInputs.push(input);
      }
    }
    for (let unfoundSource of unfoundSources) {
      context.dispatch({
        type: "REMOVE_EVENT_SOURCE",
        sourceId: unfoundSource.sourceId
      });
    }
    for (let newInput of newInputs) {
      context.calendarApi.addEventSource(newInput);
    }
  }
  function handleDateProfile(dateProfile, context) {
    context.emitter.trigger("datesSet", Object.assign(Object.assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));
  }
  function handleEventStore(eventStore, context) {
    let { emitter } = context;
    if (emitter.hasHandlers("eventsSet")) {
      emitter.trigger("eventsSet", buildEventApis(eventStore, context));
    }
  }
  var globalPlugins = [
    arrayEventSourcePlugin,
    funcEventSourcePlugin,
    jsonFeedEventSourcePlugin,
    simpleRecurringEventsPlugin,
    changeHandlerPlugin,
    createPlugin({
      name: "misc",
      isLoadingFuncs: [
        (state) => computeEventSourcesLoading(state.eventSources)
      ],
      propSetHandlers: {
        dateProfile: handleDateProfile,
        eventStore: handleEventStore
      }
    })
  ];
  var TaskRunner = class {
    constructor(runTaskOption, drainedOption) {
      this.runTaskOption = runTaskOption;
      this.drainedOption = drainedOption;
      this.queue = [];
      this.delayedRunner = new DelayedRunner(this.drain.bind(this));
    }
    request(task, delay) {
      this.queue.push(task);
      this.delayedRunner.request(delay);
    }
    pause(scope) {
      this.delayedRunner.pause(scope);
    }
    resume(scope, force) {
      this.delayedRunner.resume(scope, force);
    }
    drain() {
      let { queue } = this;
      while (queue.length) {
        let completedTasks = [];
        let task;
        while (task = queue.shift()) {
          this.runTask(task);
          completedTasks.push(task);
        }
        this.drained(completedTasks);
      }
    }
    runTask(task) {
      if (this.runTaskOption) {
        this.runTaskOption(task);
      }
    }
    drained(completedTasks) {
      if (this.drainedOption) {
        this.drainedOption(completedTasks);
      }
    }
  };
  function buildTitle(dateProfile, viewOptions, dateEnv) {
    let range;
    if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {
      range = dateProfile.currentRange;
    } else {
      range = dateProfile.activeRange;
    }
    return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {
      isEndExclusive: dateProfile.isRangeAllDay,
      defaultSeparator: viewOptions.titleRangeSeparator
    });
  }
  function buildTitleFormat(dateProfile) {
    let { currentRangeUnit } = dateProfile;
    if (currentRangeUnit === "year") {
      return { year: "numeric" };
    }
    if (currentRangeUnit === "month") {
      return { year: "numeric", month: "long" };
    }
    let days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);
    if (days !== null && days > 1) {
      return { year: "numeric", month: "short", day: "numeric" };
    }
    return { year: "numeric", month: "long", day: "numeric" };
  }
  var CalendarDataManager = class {
    constructor(props) {
      this.computeOptionsData = memoize(this._computeOptionsData);
      this.computeCurrentViewData = memoize(this._computeCurrentViewData);
      this.organizeRawLocales = memoize(organizeRawLocales);
      this.buildLocale = memoize(buildLocale);
      this.buildPluginHooks = buildBuildPluginHooks();
      this.buildDateEnv = memoize(buildDateEnv$1);
      this.buildTheme = memoize(buildTheme);
      this.parseToolbars = memoize(parseToolbars);
      this.buildViewSpecs = memoize(buildViewSpecs);
      this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);
      this.buildViewApi = memoize(buildViewApi);
      this.buildViewUiProps = memoizeObjArg(buildViewUiProps);
      this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);
      this.buildEventUiBases = memoize(buildEventUiBases);
      this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);
      this.buildTitle = memoize(buildTitle);
      this.emitter = new Emitter();
      this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));
      this.currentCalendarOptionsInput = {};
      this.currentCalendarOptionsRefined = {};
      this.currentViewOptionsInput = {};
      this.currentViewOptionsRefined = {};
      this.currentCalendarOptionsRefiners = {};
      this.getCurrentData = () => this.data;
      this.dispatch = (action) => {
        this.actionRunner.request(action);
      };
      this.props = props;
      this.actionRunner.pause();
      let dynamicOptionOverrides = {};
      let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
      let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;
      let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
      props.calendarApi.currentDataManager = this;
      this.emitter.setThisContext(props.calendarApi);
      this.emitter.setOptions(currentViewData.options);
      let currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv);
      let dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
      if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {
        currentDate = dateProfile.currentRange.start;
      }
      let calendarContext = {
        dateEnv: optionsData.dateEnv,
        options: optionsData.calendarOptions,
        pluginHooks: optionsData.pluginHooks,
        calendarApi: props.calendarApi,
        dispatch: this.dispatch,
        emitter: this.emitter,
        getCurrentData: this.getCurrentData
      };
      for (let callback of optionsData.pluginHooks.contextInit) {
        callback(calendarContext);
      }
      let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);
      let initialState = {
        dynamicOptionOverrides,
        currentViewType,
        currentDate,
        dateProfile,
        businessHours: this.parseContextBusinessHours(calendarContext),
        eventSources,
        eventUiBases: {},
        eventStore: createEmptyEventStore(),
        renderableEventStore: createEmptyEventStore(),
        dateSelection: null,
        eventSelection: "",
        eventDrag: null,
        eventResize: null,
        selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig
      };
      let contextAndState = Object.assign(Object.assign({}, calendarContext), initialState);
      for (let reducer of optionsData.pluginHooks.reducers) {
        Object.assign(initialState, reducer(null, null, contextAndState));
      }
      if (computeIsLoading(initialState, calendarContext)) {
        this.emitter.trigger("loading", true);
      }
      this.state = initialState;
      this.updateData();
      this.actionRunner.resume();
    }
    resetOptions(optionOverrides, append) {
      let { props } = this;
      props.optionOverrides = append ? Object.assign(Object.assign({}, props.optionOverrides), optionOverrides) : optionOverrides;
      this.actionRunner.request({
        type: "NOTHING"
      });
    }
    _handleAction(action) {
      let { props, state, emitter } = this;
      let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);
      let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
      let currentViewType = reduceViewType(state.currentViewType, action);
      let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
      props.calendarApi.currentDataManager = this;
      emitter.setThisContext(props.calendarApi);
      emitter.setOptions(currentViewData.options);
      let calendarContext = {
        dateEnv: optionsData.dateEnv,
        options: optionsData.calendarOptions,
        pluginHooks: optionsData.pluginHooks,
        calendarApi: props.calendarApi,
        dispatch: this.dispatch,
        emitter,
        getCurrentData: this.getCurrentData
      };
      let { currentDate, dateProfile } = state;
      if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) {
        dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
      }
      currentDate = reduceCurrentDate(currentDate, action);
      dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);
      if (action.type === "PREV" || action.type === "NEXT" || !rangeContainsMarker(dateProfile.currentRange, currentDate)) {
        currentDate = dateProfile.currentRange.start;
      }
      let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);
      let eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);
      let isEventsLoading = computeEventSourcesLoading(eventSources);
      let renderableEventStore = isEventsLoading && !currentViewData.options.progressiveEventRendering ? state.renderableEventStore || eventStore : eventStore;
      let { eventUiSingleBase, selectionConfig } = this.buildViewUiProps(calendarContext);
      let eventUiBySource = this.buildEventUiBySource(eventSources);
      let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);
      let newState = {
        dynamicOptionOverrides,
        currentViewType,
        currentDate,
        dateProfile,
        eventSources,
        eventStore,
        renderableEventStore,
        selectionConfig,
        eventUiBases,
        businessHours: this.parseContextBusinessHours(calendarContext),
        dateSelection: reduceDateSelection(state.dateSelection, action),
        eventSelection: reduceSelectedEvent(state.eventSelection, action),
        eventDrag: reduceEventDrag(state.eventDrag, action),
        eventResize: reduceEventResize(state.eventResize, action)
      };
      let contextAndState = Object.assign(Object.assign({}, calendarContext), newState);
      for (let reducer of optionsData.pluginHooks.reducers) {
        Object.assign(newState, reducer(state, action, contextAndState));
      }
      let wasLoading = computeIsLoading(state, calendarContext);
      let isLoading = computeIsLoading(newState, calendarContext);
      if (!wasLoading && isLoading) {
        emitter.trigger("loading", true);
      } else if (wasLoading && !isLoading) {
        emitter.trigger("loading", false);
      }
      this.state = newState;
      if (props.onAction) {
        props.onAction(action);
      }
    }
    updateData() {
      let { props, state } = this;
      let oldData = this.data;
      let optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);
      let currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);
      let data = this.data = Object.assign(Object.assign(Object.assign({ viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);
      let changeHandlers = optionsData.pluginHooks.optionChangeHandlers;
      let oldCalendarOptions = oldData && oldData.calendarOptions;
      let newCalendarOptions = optionsData.calendarOptions;
      if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {
        if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {
          state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);
          state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);
        }
        for (let optionName in changeHandlers) {
          if (oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {
            changeHandlers[optionName](newCalendarOptions[optionName], data);
          }
        }
      }
      if (props.onData) {
        props.onData(data);
      }
    }
    _computeOptionsData(optionOverrides, dynamicOptionOverrides, calendarApi) {
      let { refinedOptions, pluginHooks, localeDefaults, availableLocaleData, extra } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides);
      warnUnknownOptions(extra);
      let dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);
      let viewSpecs = this.buildViewSpecs(pluginHooks.views, optionOverrides, dynamicOptionOverrides, localeDefaults);
      let theme = this.buildTheme(refinedOptions, pluginHooks);
      let toolbarConfig = this.parseToolbars(refinedOptions, optionOverrides, theme, viewSpecs, calendarApi);
      return {
        calendarOptions: refinedOptions,
        pluginHooks,
        dateEnv,
        viewSpecs,
        theme,
        toolbarConfig,
        localeDefaults,
        availableRawLocales: availableLocaleData.map
      };
    }
    processRawCalendarOptions(optionOverrides, dynamicOptionOverrides) {
      let { locales, locale } = mergeRawOptions([
        BASE_OPTION_DEFAULTS,
        optionOverrides,
        dynamicOptionOverrides
      ]);
      let availableLocaleData = this.organizeRawLocales(locales);
      let availableRawLocales = availableLocaleData.map;
      let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;
      let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);
      let refiners = this.currentCalendarOptionsRefiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
      let extra = {};
      let raw = mergeRawOptions([
        BASE_OPTION_DEFAULTS,
        localeDefaults,
        optionOverrides,
        dynamicOptionOverrides
      ]);
      let refined = {};
      let currentRaw = this.currentCalendarOptionsInput;
      let currentRefined = this.currentCalendarOptionsRefined;
      let anyChanges = false;
      for (let optionName in raw) {
        if (optionName !== "plugins") {
          if (raw[optionName] === currentRaw[optionName] || COMPLEX_OPTION_COMPARATORS[optionName] && optionName in currentRaw && COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName])) {
            refined[optionName] = currentRefined[optionName];
          } else if (refiners[optionName]) {
            refined[optionName] = refiners[optionName](raw[optionName]);
            anyChanges = true;
          } else {
            extra[optionName] = currentRaw[optionName];
          }
        }
      }
      if (anyChanges) {
        this.currentCalendarOptionsInput = raw;
        this.currentCalendarOptionsRefined = refined;
      }
      return {
        rawOptions: this.currentCalendarOptionsInput,
        refinedOptions: this.currentCalendarOptionsRefined,
        pluginHooks,
        availableLocaleData,
        localeDefaults,
        extra
      };
    }
    _computeCurrentViewData(viewType, optionsData, optionOverrides, dynamicOptionOverrides) {
      let viewSpec = optionsData.viewSpecs[viewType];
      if (!viewSpec) {
        throw new Error(`viewType "${viewType}" is not available. Please make sure you've loaded all neccessary plugins`);
      }
      let { refinedOptions, extra } = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides);
      warnUnknownOptions(extra);
      let dateProfileGenerator = this.buildDateProfileGenerator({
        dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,
        duration: viewSpec.duration,
        durationUnit: viewSpec.durationUnit,
        usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,
        dateEnv: optionsData.dateEnv,
        calendarApi: this.props.calendarApi,
        slotMinTime: refinedOptions.slotMinTime,
        slotMaxTime: refinedOptions.slotMaxTime,
        showNonCurrentDates: refinedOptions.showNonCurrentDates,
        dayCount: refinedOptions.dayCount,
        dateAlignment: refinedOptions.dateAlignment,
        dateIncrement: refinedOptions.dateIncrement,
        hiddenDays: refinedOptions.hiddenDays,
        weekends: refinedOptions.weekends,
        nowInput: refinedOptions.now,
        validRangeInput: refinedOptions.validRange,
        visibleRangeInput: refinedOptions.visibleRange,
        monthMode: refinedOptions.monthMode,
        fixedWeekCount: refinedOptions.fixedWeekCount
      });
      let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);
      return { viewSpec, options: refinedOptions, dateProfileGenerator, viewApi };
    }
    processRawViewOptions(viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {
      let raw = mergeRawOptions([
        BASE_OPTION_DEFAULTS,
        viewSpec.optionDefaults,
        localeDefaults,
        optionOverrides,
        viewSpec.optionOverrides,
        dynamicOptionOverrides
      ]);
      let refiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
      let refined = {};
      let currentRaw = this.currentViewOptionsInput;
      let currentRefined = this.currentViewOptionsRefined;
      let anyChanges = false;
      let extra = {};
      for (let optionName in raw) {
        if (raw[optionName] === currentRaw[optionName] || COMPLEX_OPTION_COMPARATORS[optionName] && COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], currentRaw[optionName])) {
          refined[optionName] = currentRefined[optionName];
        } else {
          if (raw[optionName] === this.currentCalendarOptionsInput[optionName] || COMPLEX_OPTION_COMPARATORS[optionName] && COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName])) {
            if (optionName in this.currentCalendarOptionsRefined) {
              refined[optionName] = this.currentCalendarOptionsRefined[optionName];
            }
          } else if (refiners[optionName]) {
            refined[optionName] = refiners[optionName](raw[optionName]);
          } else {
            extra[optionName] = raw[optionName];
          }
          anyChanges = true;
        }
      }
      if (anyChanges) {
        this.currentViewOptionsInput = raw;
        this.currentViewOptionsRefined = refined;
      }
      return {
        rawOptions: this.currentViewOptionsInput,
        refinedOptions: this.currentViewOptionsRefined,
        extra
      };
    }
  };
  function buildDateEnv$1(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {
    let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);
    return new DateEnv({
      calendarSystem: "gregory",
      timeZone,
      namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,
      locale,
      weekNumberCalculation,
      firstDay,
      weekText,
      cmdFormatter: pluginHooks.cmdFormatter,
      defaultSeparator
    });
  }
  function buildTheme(options, pluginHooks) {
    let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;
    return new ThemeClass(options);
  }
  function buildDateProfileGenerator(props) {
    let DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;
    return new DateProfileGeneratorClass(props);
  }
  function buildViewApi(type, getCurrentData, dateEnv) {
    return new ViewImpl(type, getCurrentData, dateEnv);
  }
  function buildEventUiBySource(eventSources) {
    return mapHash(eventSources, (eventSource) => eventSource.ui);
  }
  function buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {
    let eventUiBases = { "": eventUiSingleBase };
    for (let defId in eventDefs) {
      let def = eventDefs[defId];
      if (def.sourceId && eventUiBySource[def.sourceId]) {
        eventUiBases[defId] = eventUiBySource[def.sourceId];
      }
    }
    return eventUiBases;
  }
  function buildViewUiProps(calendarContext) {
    let { options } = calendarContext;
    return {
      eventUiSingleBase: createEventUi({
        display: options.eventDisplay,
        editable: options.editable,
        startEditable: options.eventStartEditable,
        durationEditable: options.eventDurationEditable,
        constraint: options.eventConstraint,
        overlap: typeof options.eventOverlap === "boolean" ? options.eventOverlap : void 0,
        allow: options.eventAllow,
        backgroundColor: options.eventBackgroundColor,
        borderColor: options.eventBorderColor,
        textColor: options.eventTextColor,
        color: options.eventColor
      }, calendarContext),
      selectionConfig: createEventUi({
        constraint: options.selectConstraint,
        overlap: typeof options.selectOverlap === "boolean" ? options.selectOverlap : void 0,
        allow: options.selectAllow
      }, calendarContext)
    };
  }
  function computeIsLoading(state, context) {
    for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {
      if (isLoadingFunc(state)) {
        return true;
      }
    }
    return false;
  }
  function parseContextBusinessHours(calendarContext) {
    return parseBusinessHours(calendarContext.options.businessHours, calendarContext);
  }
  function warnUnknownOptions(options, viewName) {
    for (let optionName in options) {
      console.warn(`Unknown option '${optionName}'` + (viewName ? ` for view '${viewName}'` : ""));
    }
  }
  var ToolbarSection = class extends BaseComponent {
    render() {
      let children = this.props.widgetGroups.map((widgetGroup) => this.renderWidgetGroup(widgetGroup));
      return h("div", { className: "fc-toolbar-chunk" }, ...children);
    }
    renderWidgetGroup(widgetGroup) {
      let { props } = this;
      let { theme } = this.context;
      let children = [];
      let isOnlyButtons = true;
      for (let widget of widgetGroup) {
        let { buttonName, buttonClick, buttonText, buttonIcon, buttonHint } = widget;
        if (buttonName === "title") {
          isOnlyButtons = false;
          children.push(h("h2", { className: "fc-toolbar-title", id: props.titleId }, props.title));
        } else {
          let isPressed = buttonName === props.activeButton;
          let isDisabled = !props.isTodayEnabled && buttonName === "today" || !props.isPrevEnabled && buttonName === "prev" || !props.isNextEnabled && buttonName === "next";
          let buttonClasses = [`fc-${buttonName}-button`, theme.getClass("button")];
          if (isPressed) {
            buttonClasses.push(theme.getClass("buttonActive"));
          }
          children.push(h("button", { type: "button", title: typeof buttonHint === "function" ? buttonHint(props.navUnit) : buttonHint, disabled: isDisabled, "aria-pressed": isPressed, className: buttonClasses.join(" "), onClick: buttonClick }, buttonText || (buttonIcon ? h("span", { className: buttonIcon }) : "")));
        }
      }
      if (children.length > 1) {
        let groupClassName = isOnlyButtons && theme.getClass("buttonGroup") || "";
        return h("div", { className: groupClassName }, ...children);
      }
      return children[0];
    }
  };
  var Toolbar = class extends BaseComponent {
    render() {
      let { model, extraClassName } = this.props;
      let forceLtr = false;
      let startContent;
      let endContent;
      let sectionWidgets = model.sectionWidgets;
      let centerContent = sectionWidgets.center;
      if (sectionWidgets.left) {
        forceLtr = true;
        startContent = sectionWidgets.left;
      } else {
        startContent = sectionWidgets.start;
      }
      if (sectionWidgets.right) {
        forceLtr = true;
        endContent = sectionWidgets.right;
      } else {
        endContent = sectionWidgets.end;
      }
      let classNames = [
        extraClassName || "",
        "fc-toolbar",
        forceLtr ? "fc-toolbar-ltr" : ""
      ];
      return h(
        "div",
        { className: classNames.join(" ") },
        this.renderSection("start", startContent || []),
        this.renderSection("center", centerContent || []),
        this.renderSection("end", endContent || [])
      );
    }
    renderSection(key, widgetGroups) {
      let { props } = this;
      return h(ToolbarSection, { key, widgetGroups, title: props.title, navUnit: props.navUnit, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled, titleId: props.titleId });
    }
  };
  var ViewContainer = class extends BaseComponent {
    constructor() {
      super(...arguments);
      this.state = {
        availableWidth: null
      };
      this.handleEl = (el) => {
        this.el = el;
        setRef(this.props.elRef, el);
        this.updateAvailableWidth();
      };
      this.handleResize = () => {
        this.updateAvailableWidth();
      };
    }
    render() {
      let { props, state } = this;
      let { aspectRatio } = props;
      let classNames = [
        "fc-view-harness",
        aspectRatio || props.liquid || props.height ? "fc-view-harness-active" : "fc-view-harness-passive"
      ];
      let height = "";
      let paddingBottom = "";
      if (aspectRatio) {
        if (state.availableWidth !== null) {
          height = state.availableWidth / aspectRatio;
        } else {
          paddingBottom = `${1 / aspectRatio * 100}%`;
        }
      } else {
        height = props.height || "";
      }
      return h("div", { "aria-labelledby": props.labeledById, ref: this.handleEl, className: classNames.join(" "), style: { height, paddingBottom } }, props.children);
    }
    componentDidMount() {
      this.context.addResizeHandler(this.handleResize);
    }
    componentWillUnmount() {
      this.context.removeResizeHandler(this.handleResize);
    }
    updateAvailableWidth() {
      if (this.el && this.props.aspectRatio) {
        this.setState({ availableWidth: this.el.offsetWidth });
      }
    }
  };
  var EventClicking = class extends Interaction {
    constructor(settings) {
      super(settings);
      this.handleSegClick = (ev, segEl) => {
        let { component } = this;
        let { context } = component;
        let seg = getElSeg(segEl);
        if (seg && component.isValidSegDownEl(ev.target)) {
          let hasUrlContainer = elementClosest(ev.target, ".fc-event-forced-url");
          let url = hasUrlContainer ? hasUrlContainer.querySelector("a[href]").href : "";
          context.emitter.trigger("eventClick", {
            el: segEl,
            event: new EventImpl(component.context, seg.eventRange.def, seg.eventRange.instance),
            jsEvent: ev,
            view: context.viewApi
          });
          if (url && !ev.defaultPrevented) {
            window.location.href = url;
          }
        }
      };
      this.destroy = listenBySelector(
        settings.el,
        "click",
        ".fc-event",
        this.handleSegClick
      );
    }
  };
  var EventHovering = class extends Interaction {
    constructor(settings) {
      super(settings);
      this.handleEventElRemove = (el) => {
        if (el === this.currentSegEl) {
          this.handleSegLeave(null, this.currentSegEl);
        }
      };
      this.handleSegEnter = (ev, segEl) => {
        if (getElSeg(segEl)) {
          this.currentSegEl = segEl;
          this.triggerEvent("eventMouseEnter", ev, segEl);
        }
      };
      this.handleSegLeave = (ev, segEl) => {
        if (this.currentSegEl) {
          this.currentSegEl = null;
          this.triggerEvent("eventMouseLeave", ev, segEl);
        }
      };
      this.removeHoverListeners = listenToHoverBySelector(
        settings.el,
        ".fc-event",
        this.handleSegEnter,
        this.handleSegLeave
      );
    }
    destroy() {
      this.removeHoverListeners();
    }
    triggerEvent(publicEvName, ev, segEl) {
      let { component } = this;
      let { context } = component;
      let seg = getElSeg(segEl);
      if (!ev || component.isValidSegDownEl(ev.target)) {
        context.emitter.trigger(publicEvName, {
          el: segEl,
          event: new EventImpl(context, seg.eventRange.def, seg.eventRange.instance),
          jsEvent: ev,
          view: context.viewApi
        });
      }
    }
  };
  var CalendarContent = class extends PureComponent {
    constructor() {
      super(...arguments);
      this.buildViewContext = memoize(buildViewContext);
      this.buildViewPropTransformers = memoize(buildViewPropTransformers);
      this.buildToolbarProps = memoize(buildToolbarProps);
      this.headerRef = y();
      this.footerRef = y();
      this.interactionsStore = {};
      this.state = {
        viewLabelId: getUniqueDomId()
      };
      this.registerInteractiveComponent = (component, settingsInput) => {
        let settings = parseInteractionSettings(component, settingsInput);
        let DEFAULT_INTERACTIONS = [
          EventClicking,
          EventHovering
        ];
        let interactionClasses = DEFAULT_INTERACTIONS.concat(this.props.pluginHooks.componentInteractions);
        let interactions = interactionClasses.map((TheInteractionClass) => new TheInteractionClass(settings));
        this.interactionsStore[component.uid] = interactions;
        interactionSettingsStore[component.uid] = settings;
      };
      this.unregisterInteractiveComponent = (component) => {
        let listeners = this.interactionsStore[component.uid];
        if (listeners) {
          for (let listener of listeners) {
            listener.destroy();
          }
          delete this.interactionsStore[component.uid];
        }
        delete interactionSettingsStore[component.uid];
      };
      this.resizeRunner = new DelayedRunner(() => {
        this.props.emitter.trigger("_resize", true);
        this.props.emitter.trigger("windowResize", { view: this.props.viewApi });
      });
      this.handleWindowResize = (ev) => {
        let { options } = this.props;
        if (options.handleWindowResize && ev.target === window) {
          this.resizeRunner.request(options.windowResizeDelay);
        }
      };
    }
    render() {
      let { props } = this;
      let { toolbarConfig, options } = props;
      let toolbarProps = this.buildToolbarProps(
        props.viewSpec,
        props.dateProfile,
        props.dateProfileGenerator,
        props.currentDate,
        getNow(props.options.now, props.dateEnv),
        props.viewTitle
      );
      let viewVGrow = false;
      let viewHeight = "";
      let viewAspectRatio;
      if (props.isHeightAuto || props.forPrint) {
        viewHeight = "";
      } else if (options.height != null) {
        viewVGrow = true;
      } else if (options.contentHeight != null) {
        viewHeight = options.contentHeight;
      } else {
        viewAspectRatio = Math.max(options.aspectRatio, 0.5);
      }
      let viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);
      let viewLabelId = toolbarConfig.header && toolbarConfig.header.hasTitle ? this.state.viewLabelId : "";
      return h(
        ViewContextType.Provider,
        { value: viewContext },
        toolbarConfig.header && h(Toolbar, Object.assign({ ref: this.headerRef, extraClassName: "fc-header-toolbar", model: toolbarConfig.header, titleId: viewLabelId }, toolbarProps)),
        h(
          ViewContainer,
          { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, labeledById: viewLabelId },
          this.renderView(props),
          this.buildAppendContent()
        ),
        toolbarConfig.footer && h(Toolbar, Object.assign({ ref: this.footerRef, extraClassName: "fc-footer-toolbar", model: toolbarConfig.footer, titleId: "" }, toolbarProps))
      );
    }
    componentDidMount() {
      let { props } = this;
      this.calendarInteractions = props.pluginHooks.calendarInteractions.map((CalendarInteractionClass) => new CalendarInteractionClass(props));
      window.addEventListener("resize", this.handleWindowResize);
      let { propSetHandlers } = props.pluginHooks;
      for (let propName in propSetHandlers) {
        propSetHandlers[propName](props[propName], props);
      }
    }
    componentDidUpdate(prevProps) {
      let { props } = this;
      let { propSetHandlers } = props.pluginHooks;
      for (let propName in propSetHandlers) {
        if (props[propName] !== prevProps[propName]) {
          propSetHandlers[propName](props[propName], props);
        }
      }
    }
    componentWillUnmount() {
      window.removeEventListener("resize", this.handleWindowResize);
      this.resizeRunner.clear();
      for (let interaction of this.calendarInteractions) {
        interaction.destroy();
      }
      this.props.emitter.trigger("_unmount");
    }
    buildAppendContent() {
      let { props } = this;
      let children = props.pluginHooks.viewContainerAppends.map((buildAppendContent) => buildAppendContent(props));
      return h(p, {}, ...children);
    }
    renderView(props) {
      let { pluginHooks } = props;
      let { viewSpec } = props;
      let viewProps = {
        dateProfile: props.dateProfile,
        businessHours: props.businessHours,
        eventStore: props.renderableEventStore,
        eventUiBases: props.eventUiBases,
        dateSelection: props.dateSelection,
        eventSelection: props.eventSelection,
        eventDrag: props.eventDrag,
        eventResize: props.eventResize,
        isHeightAuto: props.isHeightAuto,
        forPrint: props.forPrint
      };
      let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);
      for (let transformer of transformers) {
        Object.assign(viewProps, transformer.transform(viewProps, props));
      }
      let ViewComponent = viewSpec.component;
      return h(ViewComponent, Object.assign({}, viewProps));
    }
  };
  function buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {
    let todayInfo = dateProfileGenerator.build(now, void 0, false);
    let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);
    let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);
    return {
      title,
      activeButton: viewSpec.type,
      navUnit: viewSpec.singleUnit,
      isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),
      isPrevEnabled: prevInfo.isValid,
      isNextEnabled: nextInfo.isValid
    };
  }
  function buildViewPropTransformers(theClasses) {
    return theClasses.map((TheClass) => new TheClass());
  }
  var Calendar = class extends CalendarImpl {
    constructor(el, optionOverrides = {}) {
      super();
      this.isRendering = false;
      this.isRendered = false;
      this.currentClassNames = [];
      this.customContentRenderId = 0;
      this.handleAction = (action) => {
        switch (action.type) {
          case "SET_EVENT_DRAG":
          case "SET_EVENT_RESIZE":
            this.renderRunner.tryDrain();
        }
      };
      this.handleData = (data) => {
        this.currentData = data;
        this.renderRunner.request(data.calendarOptions.rerenderDelay);
      };
      this.handleRenderRequest = () => {
        if (this.isRendering) {
          this.isRendered = true;
          let { currentData } = this;
          flushSync(() => {
            P(h(CalendarRoot, { options: currentData.calendarOptions, theme: currentData.theme, emitter: currentData.emitter }, (classNames, height, isHeightAuto, forPrint) => {
              this.setClassNames(classNames);
              this.setHeight(height);
              return h(
                RenderId.Provider,
                { value: this.customContentRenderId },
                h(CalendarContent, Object.assign({ isHeightAuto, forPrint }, currentData))
              );
            }), this.el);
          });
        } else if (this.isRendered) {
          this.isRendered = false;
          P(null, this.el);
          this.setClassNames([]);
          this.setHeight("");
        }
      };
      this.el = el;
      this.renderRunner = new DelayedRunner(this.handleRenderRequest);
      new CalendarDataManager({
        optionOverrides,
        calendarApi: this,
        onAction: this.handleAction,
        onData: this.handleData
      });
    }
    render() {
      let wasRendering = this.isRendering;
      if (!wasRendering) {
        this.isRendering = true;
      } else {
        this.customContentRenderId += 1;
      }
      this.renderRunner.request();
      if (wasRendering) {
        this.updateSize();
      }
    }
    destroy() {
      if (this.isRendering) {
        this.isRendering = false;
        this.renderRunner.request();
      }
    }
    updateSize() {
      flushSync(() => {
        super.updateSize();
      });
    }
    batchRendering(func) {
      this.renderRunner.pause("batchRendering");
      func();
      this.renderRunner.resume("batchRendering");
    }
    pauseRendering() {
      this.renderRunner.pause("pauseRendering");
    }
    resumeRendering() {
      this.renderRunner.resume("pauseRendering", true);
    }
    resetOptions(optionOverrides, append) {
      this.currentDataManager.resetOptions(optionOverrides, append);
    }
    setClassNames(classNames) {
      if (!isArraysEqual(classNames, this.currentClassNames)) {
        let { classList } = this.el;
        for (let className of this.currentClassNames) {
          classList.remove(className);
        }
        for (let className of classNames) {
          classList.add(className);
        }
        this.currentClassNames = classNames;
      }
    }
    setHeight(height) {
      applyStyleProp(this.el, "height", height);
    }
  };

  // node_modules/@hotwired/stimulus/dist/stimulus.js
  var EventListener = class {
    constructor(eventTarget, eventName, eventOptions) {
      this.eventTarget = eventTarget;
      this.eventName = eventName;
      this.eventOptions = eventOptions;
      this.unorderedBindings = /* @__PURE__ */ new Set();
    }
    connect() {
      this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);
    }
    disconnect() {
      this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);
    }
    bindingConnected(binding) {
      this.unorderedBindings.add(binding);
    }
    bindingDisconnected(binding) {
      this.unorderedBindings.delete(binding);
    }
    handleEvent(event2) {
      const extendedEvent = extendEvent(event2);
      for (const binding of this.bindings) {
        if (extendedEvent.immediatePropagationStopped) {
          break;
        } else {
          binding.handleEvent(extendedEvent);
        }
      }
    }
    get bindings() {
      return Array.from(this.unorderedBindings).sort((left, right) => {
        const leftIndex = left.index, rightIndex = right.index;
        return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;
      });
    }
  };
  function extendEvent(event2) {
    if ("immediatePropagationStopped" in event2) {
      return event2;
    } else {
      const { stopImmediatePropagation } = event2;
      return Object.assign(event2, {
        immediatePropagationStopped: false,
        stopImmediatePropagation() {
          this.immediatePropagationStopped = true;
          stopImmediatePropagation.call(this);
        }
      });
    }
  }
  var Dispatcher = class {
    constructor(application2) {
      this.application = application2;
      this.eventListenerMaps = /* @__PURE__ */ new Map();
      this.started = false;
    }
    start() {
      if (!this.started) {
        this.started = true;
        this.eventListeners.forEach((eventListener) => eventListener.connect());
      }
    }
    stop() {
      if (this.started) {
        this.started = false;
        this.eventListeners.forEach((eventListener) => eventListener.disconnect());
      }
    }
    get eventListeners() {
      return Array.from(this.eventListenerMaps.values()).reduce((listeners, map) => listeners.concat(Array.from(map.values())), []);
    }
    bindingConnected(binding) {
      this.fetchEventListenerForBinding(binding).bindingConnected(binding);
    }
    bindingDisconnected(binding) {
      this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);
    }
    handleError(error2, message, detail = {}) {
      this.application.handleError(error2, `Error ${message}`, detail);
    }
    fetchEventListenerForBinding(binding) {
      const { eventTarget, eventName, eventOptions } = binding;
      return this.fetchEventListener(eventTarget, eventName, eventOptions);
    }
    fetchEventListener(eventTarget, eventName, eventOptions) {
      const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);
      const cacheKey = this.cacheKey(eventName, eventOptions);
      let eventListener = eventListenerMap.get(cacheKey);
      if (!eventListener) {
        eventListener = this.createEventListener(eventTarget, eventName, eventOptions);
        eventListenerMap.set(cacheKey, eventListener);
      }
      return eventListener;
    }
    createEventListener(eventTarget, eventName, eventOptions) {
      const eventListener = new EventListener(eventTarget, eventName, eventOptions);
      if (this.started) {
        eventListener.connect();
      }
      return eventListener;
    }
    fetchEventListenerMapForEventTarget(eventTarget) {
      let eventListenerMap = this.eventListenerMaps.get(eventTarget);
      if (!eventListenerMap) {
        eventListenerMap = /* @__PURE__ */ new Map();
        this.eventListenerMaps.set(eventTarget, eventListenerMap);
      }
      return eventListenerMap;
    }
    cacheKey(eventName, eventOptions) {
      const parts = [eventName];
      Object.keys(eventOptions).sort().forEach((key) => {
        parts.push(`${eventOptions[key] ? "" : "!"}${key}`);
      });
      return parts.join(":");
    }
  };
  var descriptorPattern = /^((.+?)(@(window|document))?->)?(.+?)(#([^:]+?))(:(.+))?$/;
  function parseActionDescriptorString(descriptorString) {
    const source = descriptorString.trim();
    const matches = source.match(descriptorPattern) || [];
    return {
      eventTarget: parseEventTarget(matches[4]),
      eventName: matches[2],
      eventOptions: matches[9] ? parseEventOptions(matches[9]) : {},
      identifier: matches[5],
      methodName: matches[7]
    };
  }
  function parseEventTarget(eventTargetName) {
    if (eventTargetName == "window") {
      return window;
    } else if (eventTargetName == "document") {
      return document;
    }
  }
  function parseEventOptions(eventOptions) {
    return eventOptions.split(":").reduce((options, token) => Object.assign(options, { [token.replace(/^!/, "")]: !/^!/.test(token) }), {});
  }
  function stringifyEventTarget(eventTarget) {
    if (eventTarget == window) {
      return "window";
    } else if (eventTarget == document) {
      return "document";
    }
  }
  function camelize(value) {
    return value.replace(/(?:[_-])([a-z0-9])/g, (_3, char) => char.toUpperCase());
  }
  function capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
  }
  function dasherize(value) {
    return value.replace(/([A-Z])/g, (_3, char) => `-${char.toLowerCase()}`);
  }
  function tokenize(value) {
    return value.match(/[^\s]+/g) || [];
  }
  var Action = class {
    constructor(element, index, descriptor) {
      this.element = element;
      this.index = index;
      this.eventTarget = descriptor.eventTarget || element;
      this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error("missing event name");
      this.eventOptions = descriptor.eventOptions || {};
      this.identifier = descriptor.identifier || error("missing identifier");
      this.methodName = descriptor.methodName || error("missing method name");
    }
    static forToken(token) {
      return new this(token.element, token.index, parseActionDescriptorString(token.content));
    }
    toString() {
      const eventNameSuffix = this.eventTargetName ? `@${this.eventTargetName}` : "";
      return `${this.eventName}${eventNameSuffix}->${this.identifier}#${this.methodName}`;
    }
    get params() {
      const params = {};
      const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`);
      for (const { name, value } of Array.from(this.element.attributes)) {
        const match = name.match(pattern);
        const key = match && match[1];
        if (key) {
          params[camelize(key)] = typecast(value);
        }
      }
      return params;
    }
    get eventTargetName() {
      return stringifyEventTarget(this.eventTarget);
    }
  };
  var defaultEventNames = {
    "a": (e3) => "click",
    "button": (e3) => "click",
    "form": (e3) => "submit",
    "details": (e3) => "toggle",
    "input": (e3) => e3.getAttribute("type") == "submit" ? "click" : "input",
    "select": (e3) => "change",
    "textarea": (e3) => "input"
  };
  function getDefaultEventNameForElement(element) {
    const tagName = element.tagName.toLowerCase();
    if (tagName in defaultEventNames) {
      return defaultEventNames[tagName](element);
    }
  }
  function error(message) {
    throw new Error(message);
  }
  function typecast(value) {
    try {
      return JSON.parse(value);
    } catch (o_O) {
      return value;
    }
  }
  var Binding = class {
    constructor(context, action) {
      this.context = context;
      this.action = action;
    }
    get index() {
      return this.action.index;
    }
    get eventTarget() {
      return this.action.eventTarget;
    }
    get eventOptions() {
      return this.action.eventOptions;
    }
    get identifier() {
      return this.context.identifier;
    }
    handleEvent(event2) {
      if (this.willBeInvokedByEvent(event2) && this.shouldBeInvokedPerSelf(event2)) {
        this.processStopPropagation(event2);
        this.processPreventDefault(event2);
        this.invokeWithEvent(event2);
      }
    }
    get eventName() {
      return this.action.eventName;
    }
    get method() {
      const method = this.controller[this.methodName];
      if (typeof method == "function") {
        return method;
      }
      throw new Error(`Action "${this.action}" references undefined method "${this.methodName}"`);
    }
    processStopPropagation(event2) {
      if (this.eventOptions.stop) {
        event2.stopPropagation();
      }
    }
    processPreventDefault(event2) {
      if (this.eventOptions.prevent) {
        event2.preventDefault();
      }
    }
    invokeWithEvent(event2) {
      const { target, currentTarget } = event2;
      try {
        const { params } = this.action;
        const actionEvent = Object.assign(event2, { params });
        this.method.call(this.controller, actionEvent);
        this.context.logDebugActivity(this.methodName, { event: event2, target, currentTarget, action: this.methodName });
      } catch (error2) {
        const { identifier, controller, element, index } = this;
        const detail = { identifier, controller, element, index, event: event2 };
        this.context.handleError(error2, `invoking action "${this.action}"`, detail);
      }
    }
    shouldBeInvokedPerSelf(event2) {
      if (this.action.eventOptions.self === true) {
        return this.action.element === event2.target;
      } else {
        return true;
      }
    }
    willBeInvokedByEvent(event2) {
      const eventTarget = event2.target;
      if (this.element === eventTarget) {
        return true;
      } else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {
        return this.scope.containsElement(eventTarget);
      } else {
        return this.scope.containsElement(this.action.element);
      }
    }
    get controller() {
      return this.context.controller;
    }
    get methodName() {
      return this.action.methodName;
    }
    get element() {
      return this.scope.element;
    }
    get scope() {
      return this.context.scope;
    }
  };
  var ElementObserver = class {
    constructor(element, delegate) {
      this.mutationObserverInit = { attributes: true, childList: true, subtree: true };
      this.element = element;
      this.started = false;
      this.delegate = delegate;
      this.elements = /* @__PURE__ */ new Set();
      this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));
    }
    start() {
      if (!this.started) {
        this.started = true;
        this.mutationObserver.observe(this.element, this.mutationObserverInit);
        this.refresh();
      }
    }
    pause(callback) {
      if (this.started) {
        this.mutationObserver.disconnect();
        this.started = false;
      }
      callback();
      if (!this.started) {
        this.mutationObserver.observe(this.element, this.mutationObserverInit);
        this.started = true;
      }
    }
    stop() {
      if (this.started) {
        this.mutationObserver.takeRecords();
        this.mutationObserver.disconnect();
        this.started = false;
      }
    }
    refresh() {
      if (this.started) {
        const matches = new Set(this.matchElementsInTree());
        for (const element of Array.from(this.elements)) {
          if (!matches.has(element)) {
            this.removeElement(element);
          }
        }
        for (const element of Array.from(matches)) {
          this.addElement(element);
        }
      }
    }
    processMutations(mutations) {
      if (this.started) {
        for (const mutation of mutations) {
          this.processMutation(mutation);
        }
      }
    }
    processMutation(mutation) {
      if (mutation.type == "attributes") {
        this.processAttributeChange(mutation.target, mutation.attributeName);
      } else if (mutation.type == "childList") {
        this.processRemovedNodes(mutation.removedNodes);
        this.processAddedNodes(mutation.addedNodes);
      }
    }
    processAttributeChange(node, attributeName) {
      const element = node;
      if (this.elements.has(element)) {
        if (this.delegate.elementAttributeChanged && this.matchElement(element)) {
          this.delegate.elementAttributeChanged(element, attributeName);
        } else {
          this.removeElement(element);
        }
      } else if (this.matchElement(element)) {
        this.addElement(element);
      }
    }
    processRemovedNodes(nodes) {
      for (const node of Array.from(nodes)) {
        const element = this.elementFromNode(node);
        if (element) {
          this.processTree(element, this.removeElement);
        }
      }
    }
    processAddedNodes(nodes) {
      for (const node of Array.from(nodes)) {
        const element = this.elementFromNode(node);
        if (element && this.elementIsActive(element)) {
          this.processTree(element, this.addElement);
        }
      }
    }
    matchElement(element) {
      return this.delegate.matchElement(element);
    }
    matchElementsInTree(tree = this.element) {
      return this.delegate.matchElementsInTree(tree);
    }
    processTree(tree, processor) {
      for (const element of this.matchElementsInTree(tree)) {
        processor.call(this, element);
      }
    }
    elementFromNode(node) {
      if (node.nodeType == Node.ELEMENT_NODE) {
        return node;
      }
    }
    elementIsActive(element) {
      if (element.isConnected != this.element.isConnected) {
        return false;
      } else {
        return this.element.contains(element);
      }
    }
    addElement(element) {
      if (!this.elements.has(element)) {
        if (this.elementIsActive(element)) {
          this.elements.add(element);
          if (this.delegate.elementMatched) {
            this.delegate.elementMatched(element);
          }
        }
      }
    }
    removeElement(element) {
      if (this.elements.has(element)) {
        this.elements.delete(element);
        if (this.delegate.elementUnmatched) {
          this.delegate.elementUnmatched(element);
        }
      }
    }
  };
  var AttributeObserver = class {
    constructor(element, attributeName, delegate) {
      this.attributeName = attributeName;
      this.delegate = delegate;
      this.elementObserver = new ElementObserver(element, this);
    }
    get element() {
      return this.elementObserver.element;
    }
    get selector() {
      return `[${this.attributeName}]`;
    }
    start() {
      this.elementObserver.start();
    }
    pause(callback) {
      this.elementObserver.pause(callback);
    }
    stop() {
      this.elementObserver.stop();
    }
    refresh() {
      this.elementObserver.refresh();
    }
    get started() {
      return this.elementObserver.started;
    }
    matchElement(element) {
      return element.hasAttribute(this.attributeName);
    }
    matchElementsInTree(tree) {
      const match = this.matchElement(tree) ? [tree] : [];
      const matches = Array.from(tree.querySelectorAll(this.selector));
      return match.concat(matches);
    }
    elementMatched(element) {
      if (this.delegate.elementMatchedAttribute) {
        this.delegate.elementMatchedAttribute(element, this.attributeName);
      }
    }
    elementUnmatched(element) {
      if (this.delegate.elementUnmatchedAttribute) {
        this.delegate.elementUnmatchedAttribute(element, this.attributeName);
      }
    }
    elementAttributeChanged(element, attributeName) {
      if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {
        this.delegate.elementAttributeValueChanged(element, attributeName);
      }
    }
  };
  var StringMapObserver = class {
    constructor(element, delegate) {
      this.element = element;
      this.delegate = delegate;
      this.started = false;
      this.stringMap = /* @__PURE__ */ new Map();
      this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));
    }
    start() {
      if (!this.started) {
        this.started = true;
        this.mutationObserver.observe(this.element, { attributes: true, attributeOldValue: true });
        this.refresh();
      }
    }
    stop() {
      if (this.started) {
        this.mutationObserver.takeRecords();
        this.mutationObserver.disconnect();
        this.started = false;
      }
    }
    refresh() {
      if (this.started) {
        for (const attributeName of this.knownAttributeNames) {
          this.refreshAttribute(attributeName, null);
        }
      }
    }
    processMutations(mutations) {
      if (this.started) {
        for (const mutation of mutations) {
          this.processMutation(mutation);
        }
      }
    }
    processMutation(mutation) {
      const attributeName = mutation.attributeName;
      if (attributeName) {
        this.refreshAttribute(attributeName, mutation.oldValue);
      }
    }
    refreshAttribute(attributeName, oldValue) {
      const key = this.delegate.getStringMapKeyForAttribute(attributeName);
      if (key != null) {
        if (!this.stringMap.has(attributeName)) {
          this.stringMapKeyAdded(key, attributeName);
        }
        const value = this.element.getAttribute(attributeName);
        if (this.stringMap.get(attributeName) != value) {
          this.stringMapValueChanged(value, key, oldValue);
        }
        if (value == null) {
          const oldValue2 = this.stringMap.get(attributeName);
          this.stringMap.delete(attributeName);
          if (oldValue2)
            this.stringMapKeyRemoved(key, attributeName, oldValue2);
        } else {
          this.stringMap.set(attributeName, value);
        }
      }
    }
    stringMapKeyAdded(key, attributeName) {
      if (this.delegate.stringMapKeyAdded) {
        this.delegate.stringMapKeyAdded(key, attributeName);
      }
    }
    stringMapValueChanged(value, key, oldValue) {
      if (this.delegate.stringMapValueChanged) {
        this.delegate.stringMapValueChanged(value, key, oldValue);
      }
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
      if (this.delegate.stringMapKeyRemoved) {
        this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);
      }
    }
    get knownAttributeNames() {
      return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));
    }
    get currentAttributeNames() {
      return Array.from(this.element.attributes).map((attribute) => attribute.name);
    }
    get recordedAttributeNames() {
      return Array.from(this.stringMap.keys());
    }
  };
  function add(map, key, value) {
    fetch2(map, key).add(value);
  }
  function del(map, key, value) {
    fetch2(map, key).delete(value);
    prune(map, key);
  }
  function fetch2(map, key) {
    let values = map.get(key);
    if (!values) {
      values = /* @__PURE__ */ new Set();
      map.set(key, values);
    }
    return values;
  }
  function prune(map, key) {
    const values = map.get(key);
    if (values != null && values.size == 0) {
      map.delete(key);
    }
  }
  var Multimap = class {
    constructor() {
      this.valuesByKey = /* @__PURE__ */ new Map();
    }
    get keys() {
      return Array.from(this.valuesByKey.keys());
    }
    get values() {
      const sets = Array.from(this.valuesByKey.values());
      return sets.reduce((values, set) => values.concat(Array.from(set)), []);
    }
    get size() {
      const sets = Array.from(this.valuesByKey.values());
      return sets.reduce((size, set) => size + set.size, 0);
    }
    add(key, value) {
      add(this.valuesByKey, key, value);
    }
    delete(key, value) {
      del(this.valuesByKey, key, value);
    }
    has(key, value) {
      const values = this.valuesByKey.get(key);
      return values != null && values.has(value);
    }
    hasKey(key) {
      return this.valuesByKey.has(key);
    }
    hasValue(value) {
      const sets = Array.from(this.valuesByKey.values());
      return sets.some((set) => set.has(value));
    }
    getValuesForKey(key) {
      const values = this.valuesByKey.get(key);
      return values ? Array.from(values) : [];
    }
    getKeysForValue(value) {
      return Array.from(this.valuesByKey).filter(([key, values]) => values.has(value)).map(([key, values]) => key);
    }
  };
  var TokenListObserver = class {
    constructor(element, attributeName, delegate) {
      this.attributeObserver = new AttributeObserver(element, attributeName, this);
      this.delegate = delegate;
      this.tokensByElement = new Multimap();
    }
    get started() {
      return this.attributeObserver.started;
    }
    start() {
      this.attributeObserver.start();
    }
    pause(callback) {
      this.attributeObserver.pause(callback);
    }
    stop() {
      this.attributeObserver.stop();
    }
    refresh() {
      this.attributeObserver.refresh();
    }
    get element() {
      return this.attributeObserver.element;
    }
    get attributeName() {
      return this.attributeObserver.attributeName;
    }
    elementMatchedAttribute(element) {
      this.tokensMatched(this.readTokensForElement(element));
    }
    elementAttributeValueChanged(element) {
      const [unmatchedTokens, matchedTokens] = this.refreshTokensForElement(element);
      this.tokensUnmatched(unmatchedTokens);
      this.tokensMatched(matchedTokens);
    }
    elementUnmatchedAttribute(element) {
      this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));
    }
    tokensMatched(tokens) {
      tokens.forEach((token) => this.tokenMatched(token));
    }
    tokensUnmatched(tokens) {
      tokens.forEach((token) => this.tokenUnmatched(token));
    }
    tokenMatched(token) {
      this.delegate.tokenMatched(token);
      this.tokensByElement.add(token.element, token);
    }
    tokenUnmatched(token) {
      this.delegate.tokenUnmatched(token);
      this.tokensByElement.delete(token.element, token);
    }
    refreshTokensForElement(element) {
      const previousTokens = this.tokensByElement.getValuesForKey(element);
      const currentTokens = this.readTokensForElement(element);
      const firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken));
      if (firstDifferingIndex == -1) {
        return [[], []];
      } else {
        return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];
      }
    }
    readTokensForElement(element) {
      const attributeName = this.attributeName;
      const tokenString = element.getAttribute(attributeName) || "";
      return parseTokenString(tokenString, element, attributeName);
    }
  };
  function parseTokenString(tokenString, element, attributeName) {
    return tokenString.trim().split(/\s+/).filter((content) => content.length).map((content, index) => ({ element, attributeName, content, index }));
  }
  function zip(left, right) {
    const length = Math.max(left.length, right.length);
    return Array.from({ length }, (_3, index) => [left[index], right[index]]);
  }
  function tokensAreEqual(left, right) {
    return left && right && left.index == right.index && left.content == right.content;
  }
  var ValueListObserver = class {
    constructor(element, attributeName, delegate) {
      this.tokenListObserver = new TokenListObserver(element, attributeName, this);
      this.delegate = delegate;
      this.parseResultsByToken = /* @__PURE__ */ new WeakMap();
      this.valuesByTokenByElement = /* @__PURE__ */ new WeakMap();
    }
    get started() {
      return this.tokenListObserver.started;
    }
    start() {
      this.tokenListObserver.start();
    }
    stop() {
      this.tokenListObserver.stop();
    }
    refresh() {
      this.tokenListObserver.refresh();
    }
    get element() {
      return this.tokenListObserver.element;
    }
    get attributeName() {
      return this.tokenListObserver.attributeName;
    }
    tokenMatched(token) {
      const { element } = token;
      const { value } = this.fetchParseResultForToken(token);
      if (value) {
        this.fetchValuesByTokenForElement(element).set(token, value);
        this.delegate.elementMatchedValue(element, value);
      }
    }
    tokenUnmatched(token) {
      const { element } = token;
      const { value } = this.fetchParseResultForToken(token);
      if (value) {
        this.fetchValuesByTokenForElement(element).delete(token);
        this.delegate.elementUnmatchedValue(element, value);
      }
    }
    fetchParseResultForToken(token) {
      let parseResult = this.parseResultsByToken.get(token);
      if (!parseResult) {
        parseResult = this.parseToken(token);
        this.parseResultsByToken.set(token, parseResult);
      }
      return parseResult;
    }
    fetchValuesByTokenForElement(element) {
      let valuesByToken = this.valuesByTokenByElement.get(element);
      if (!valuesByToken) {
        valuesByToken = /* @__PURE__ */ new Map();
        this.valuesByTokenByElement.set(element, valuesByToken);
      }
      return valuesByToken;
    }
    parseToken(token) {
      try {
        const value = this.delegate.parseValueForToken(token);
        return { value };
      } catch (error2) {
        return { error: error2 };
      }
    }
  };
  var BindingObserver = class {
    constructor(context, delegate) {
      this.context = context;
      this.delegate = delegate;
      this.bindingsByAction = /* @__PURE__ */ new Map();
    }
    start() {
      if (!this.valueListObserver) {
        this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);
        this.valueListObserver.start();
      }
    }
    stop() {
      if (this.valueListObserver) {
        this.valueListObserver.stop();
        delete this.valueListObserver;
        this.disconnectAllActions();
      }
    }
    get element() {
      return this.context.element;
    }
    get identifier() {
      return this.context.identifier;
    }
    get actionAttribute() {
      return this.schema.actionAttribute;
    }
    get schema() {
      return this.context.schema;
    }
    get bindings() {
      return Array.from(this.bindingsByAction.values());
    }
    connectAction(action) {
      const binding = new Binding(this.context, action);
      this.bindingsByAction.set(action, binding);
      this.delegate.bindingConnected(binding);
    }
    disconnectAction(action) {
      const binding = this.bindingsByAction.get(action);
      if (binding) {
        this.bindingsByAction.delete(action);
        this.delegate.bindingDisconnected(binding);
      }
    }
    disconnectAllActions() {
      this.bindings.forEach((binding) => this.delegate.bindingDisconnected(binding));
      this.bindingsByAction.clear();
    }
    parseValueForToken(token) {
      const action = Action.forToken(token);
      if (action.identifier == this.identifier) {
        return action;
      }
    }
    elementMatchedValue(element, action) {
      this.connectAction(action);
    }
    elementUnmatchedValue(element, action) {
      this.disconnectAction(action);
    }
  };
  var ValueObserver = class {
    constructor(context, receiver) {
      this.context = context;
      this.receiver = receiver;
      this.stringMapObserver = new StringMapObserver(this.element, this);
      this.valueDescriptorMap = this.controller.valueDescriptorMap;
    }
    start() {
      this.stringMapObserver.start();
      this.invokeChangedCallbacksForDefaultValues();
    }
    stop() {
      this.stringMapObserver.stop();
    }
    get element() {
      return this.context.element;
    }
    get controller() {
      return this.context.controller;
    }
    getStringMapKeyForAttribute(attributeName) {
      if (attributeName in this.valueDescriptorMap) {
        return this.valueDescriptorMap[attributeName].name;
      }
    }
    stringMapKeyAdded(key, attributeName) {
      const descriptor = this.valueDescriptorMap[attributeName];
      if (!this.hasValue(key)) {
        this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));
      }
    }
    stringMapValueChanged(value, name, oldValue) {
      const descriptor = this.valueDescriptorNameMap[name];
      if (value === null)
        return;
      if (oldValue === null) {
        oldValue = descriptor.writer(descriptor.defaultValue);
      }
      this.invokeChangedCallback(name, value, oldValue);
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
      const descriptor = this.valueDescriptorNameMap[key];
      if (this.hasValue(key)) {
        this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);
      } else {
        this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);
      }
    }
    invokeChangedCallbacksForDefaultValues() {
      for (const { key, name, defaultValue, writer } of this.valueDescriptors) {
        if (defaultValue != void 0 && !this.controller.data.has(key)) {
          this.invokeChangedCallback(name, writer(defaultValue), void 0);
        }
      }
    }
    invokeChangedCallback(name, rawValue, rawOldValue) {
      const changedMethodName = `${name}Changed`;
      const changedMethod = this.receiver[changedMethodName];
      if (typeof changedMethod == "function") {
        const descriptor = this.valueDescriptorNameMap[name];
        try {
          const value = descriptor.reader(rawValue);
          let oldValue = rawOldValue;
          if (rawOldValue) {
            oldValue = descriptor.reader(rawOldValue);
          }
          changedMethod.call(this.receiver, value, oldValue);
        } catch (error2) {
          if (!(error2 instanceof TypeError))
            throw error2;
          throw new TypeError(`Stimulus Value "${this.context.identifier}.${descriptor.name}" - ${error2.message}`);
        }
      }
    }
    get valueDescriptors() {
      const { valueDescriptorMap } = this;
      return Object.keys(valueDescriptorMap).map((key) => valueDescriptorMap[key]);
    }
    get valueDescriptorNameMap() {
      const descriptors = {};
      Object.keys(this.valueDescriptorMap).forEach((key) => {
        const descriptor = this.valueDescriptorMap[key];
        descriptors[descriptor.name] = descriptor;
      });
      return descriptors;
    }
    hasValue(attributeName) {
      const descriptor = this.valueDescriptorNameMap[attributeName];
      const hasMethodName = `has${capitalize(descriptor.name)}`;
      return this.receiver[hasMethodName];
    }
  };
  var TargetObserver = class {
    constructor(context, delegate) {
      this.context = context;
      this.delegate = delegate;
      this.targetsByName = new Multimap();
    }
    start() {
      if (!this.tokenListObserver) {
        this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);
        this.tokenListObserver.start();
      }
    }
    stop() {
      if (this.tokenListObserver) {
        this.disconnectAllTargets();
        this.tokenListObserver.stop();
        delete this.tokenListObserver;
      }
    }
    tokenMatched({ element, content: name }) {
      if (this.scope.containsElement(element)) {
        this.connectTarget(element, name);
      }
    }
    tokenUnmatched({ element, content: name }) {
      this.disconnectTarget(element, name);
    }
    connectTarget(element, name) {
      var _a;
      if (!this.targetsByName.has(name, element)) {
        this.targetsByName.add(name, element);
        (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetConnected(element, name));
      }
    }
    disconnectTarget(element, name) {
      var _a;
      if (this.targetsByName.has(name, element)) {
        this.targetsByName.delete(name, element);
        (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetDisconnected(element, name));
      }
    }
    disconnectAllTargets() {
      for (const name of this.targetsByName.keys) {
        for (const element of this.targetsByName.getValuesForKey(name)) {
          this.disconnectTarget(element, name);
        }
      }
    }
    get attributeName() {
      return `data-${this.context.identifier}-target`;
    }
    get element() {
      return this.context.element;
    }
    get scope() {
      return this.context.scope;
    }
  };
  var Context = class {
    constructor(module, scope) {
      this.logDebugActivity = (functionName, detail = {}) => {
        const { identifier, controller, element } = this;
        detail = Object.assign({ identifier, controller, element }, detail);
        this.application.logDebugActivity(this.identifier, functionName, detail);
      };
      this.module = module;
      this.scope = scope;
      this.controller = new module.controllerConstructor(this);
      this.bindingObserver = new BindingObserver(this, this.dispatcher);
      this.valueObserver = new ValueObserver(this, this.controller);
      this.targetObserver = new TargetObserver(this, this);
      try {
        this.controller.initialize();
        this.logDebugActivity("initialize");
      } catch (error2) {
        this.handleError(error2, "initializing controller");
      }
    }
    connect() {
      this.bindingObserver.start();
      this.valueObserver.start();
      this.targetObserver.start();
      try {
        this.controller.connect();
        this.logDebugActivity("connect");
      } catch (error2) {
        this.handleError(error2, "connecting controller");
      }
    }
    disconnect() {
      try {
        this.controller.disconnect();
        this.logDebugActivity("disconnect");
      } catch (error2) {
        this.handleError(error2, "disconnecting controller");
      }
      this.targetObserver.stop();
      this.valueObserver.stop();
      this.bindingObserver.stop();
    }
    get application() {
      return this.module.application;
    }
    get identifier() {
      return this.module.identifier;
    }
    get schema() {
      return this.application.schema;
    }
    get dispatcher() {
      return this.application.dispatcher;
    }
    get element() {
      return this.scope.element;
    }
    get parentElement() {
      return this.element.parentElement;
    }
    handleError(error2, message, detail = {}) {
      const { identifier, controller, element } = this;
      detail = Object.assign({ identifier, controller, element }, detail);
      this.application.handleError(error2, `Error ${message}`, detail);
    }
    targetConnected(element, name) {
      this.invokeControllerMethod(`${name}TargetConnected`, element);
    }
    targetDisconnected(element, name) {
      this.invokeControllerMethod(`${name}TargetDisconnected`, element);
    }
    invokeControllerMethod(methodName, ...args) {
      const controller = this.controller;
      if (typeof controller[methodName] == "function") {
        controller[methodName](...args);
      }
    }
  };
  function readInheritableStaticArrayValues(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return Array.from(ancestors.reduce((values, constructor2) => {
      getOwnStaticArrayValues(constructor2, propertyName).forEach((name) => values.add(name));
      return values;
    }, /* @__PURE__ */ new Set()));
  }
  function readInheritableStaticObjectPairs(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return ancestors.reduce((pairs, constructor2) => {
      pairs.push(...getOwnStaticObjectPairs(constructor2, propertyName));
      return pairs;
    }, []);
  }
  function getAncestorsForConstructor(constructor) {
    const ancestors = [];
    while (constructor) {
      ancestors.push(constructor);
      constructor = Object.getPrototypeOf(constructor);
    }
    return ancestors.reverse();
  }
  function getOwnStaticArrayValues(constructor, propertyName) {
    const definition = constructor[propertyName];
    return Array.isArray(definition) ? definition : [];
  }
  function getOwnStaticObjectPairs(constructor, propertyName) {
    const definition = constructor[propertyName];
    return definition ? Object.keys(definition).map((key) => [key, definition[key]]) : [];
  }
  function bless(constructor) {
    return shadow(constructor, getBlessedProperties(constructor));
  }
  function shadow(constructor, properties) {
    const shadowConstructor = extend(constructor);
    const shadowProperties = getShadowProperties(constructor.prototype, properties);
    Object.defineProperties(shadowConstructor.prototype, shadowProperties);
    return shadowConstructor;
  }
  function getBlessedProperties(constructor) {
    const blessings = readInheritableStaticArrayValues(constructor, "blessings");
    return blessings.reduce((blessedProperties, blessing) => {
      const properties = blessing(constructor);
      for (const key in properties) {
        const descriptor = blessedProperties[key] || {};
        blessedProperties[key] = Object.assign(descriptor, properties[key]);
      }
      return blessedProperties;
    }, {});
  }
  function getShadowProperties(prototype, properties) {
    return getOwnKeys(properties).reduce((shadowProperties, key) => {
      const descriptor = getShadowedDescriptor(prototype, properties, key);
      if (descriptor) {
        Object.assign(shadowProperties, { [key]: descriptor });
      }
      return shadowProperties;
    }, {});
  }
  function getShadowedDescriptor(prototype, properties, key) {
    const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);
    const shadowedByValue = shadowingDescriptor && "value" in shadowingDescriptor;
    if (!shadowedByValue) {
      const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;
      if (shadowingDescriptor) {
        descriptor.get = shadowingDescriptor.get || descriptor.get;
        descriptor.set = shadowingDescriptor.set || descriptor.set;
      }
      return descriptor;
    }
  }
  var getOwnKeys = (() => {
    if (typeof Object.getOwnPropertySymbols == "function") {
      return (object) => [
        ...Object.getOwnPropertyNames(object),
        ...Object.getOwnPropertySymbols(object)
      ];
    } else {
      return Object.getOwnPropertyNames;
    }
  })();
  var extend = (() => {
    function extendWithReflect(constructor) {
      function extended() {
        return Reflect.construct(constructor, arguments, new.target);
      }
      extended.prototype = Object.create(constructor.prototype, {
        constructor: { value: extended }
      });
      Reflect.setPrototypeOf(extended, constructor);
      return extended;
    }
    function testReflectExtension() {
      const a3 = function() {
        this.a.call(this);
      };
      const b3 = extendWithReflect(a3);
      b3.prototype.a = function() {
      };
      return new b3();
    }
    try {
      testReflectExtension();
      return extendWithReflect;
    } catch (error2) {
      return (constructor) => class extended extends constructor {
      };
    }
  })();
  function blessDefinition(definition) {
    return {
      identifier: definition.identifier,
      controllerConstructor: bless(definition.controllerConstructor)
    };
  }
  var Module = class {
    constructor(application2, definition) {
      this.application = application2;
      this.definition = blessDefinition(definition);
      this.contextsByScope = /* @__PURE__ */ new WeakMap();
      this.connectedContexts = /* @__PURE__ */ new Set();
    }
    get identifier() {
      return this.definition.identifier;
    }
    get controllerConstructor() {
      return this.definition.controllerConstructor;
    }
    get contexts() {
      return Array.from(this.connectedContexts);
    }
    connectContextForScope(scope) {
      const context = this.fetchContextForScope(scope);
      this.connectedContexts.add(context);
      context.connect();
    }
    disconnectContextForScope(scope) {
      const context = this.contextsByScope.get(scope);
      if (context) {
        this.connectedContexts.delete(context);
        context.disconnect();
      }
    }
    fetchContextForScope(scope) {
      let context = this.contextsByScope.get(scope);
      if (!context) {
        context = new Context(this, scope);
        this.contextsByScope.set(scope, context);
      }
      return context;
    }
  };
  var ClassMap = class {
    constructor(scope) {
      this.scope = scope;
    }
    has(name) {
      return this.data.has(this.getDataKey(name));
    }
    get(name) {
      return this.getAll(name)[0];
    }
    getAll(name) {
      const tokenString = this.data.get(this.getDataKey(name)) || "";
      return tokenize(tokenString);
    }
    getAttributeName(name) {
      return this.data.getAttributeNameForKey(this.getDataKey(name));
    }
    getDataKey(name) {
      return `${name}-class`;
    }
    get data() {
      return this.scope.data;
    }
  };
  var DataMap = class {
    constructor(scope) {
      this.scope = scope;
    }
    get element() {
      return this.scope.element;
    }
    get identifier() {
      return this.scope.identifier;
    }
    get(key) {
      const name = this.getAttributeNameForKey(key);
      return this.element.getAttribute(name);
    }
    set(key, value) {
      const name = this.getAttributeNameForKey(key);
      this.element.setAttribute(name, value);
      return this.get(key);
    }
    has(key) {
      const name = this.getAttributeNameForKey(key);
      return this.element.hasAttribute(name);
    }
    delete(key) {
      if (this.has(key)) {
        const name = this.getAttributeNameForKey(key);
        this.element.removeAttribute(name);
        return true;
      } else {
        return false;
      }
    }
    getAttributeNameForKey(key) {
      return `data-${this.identifier}-${dasherize(key)}`;
    }
  };
  var Guide = class {
    constructor(logger) {
      this.warnedKeysByObject = /* @__PURE__ */ new WeakMap();
      this.logger = logger;
    }
    warn(object, key, message) {
      let warnedKeys = this.warnedKeysByObject.get(object);
      if (!warnedKeys) {
        warnedKeys = /* @__PURE__ */ new Set();
        this.warnedKeysByObject.set(object, warnedKeys);
      }
      if (!warnedKeys.has(key)) {
        warnedKeys.add(key);
        this.logger.warn(message, object);
      }
    }
  };
  function attributeValueContainsToken(attributeName, token) {
    return `[${attributeName}~="${token}"]`;
  }
  var TargetSet = class {
    constructor(scope) {
      this.scope = scope;
    }
    get element() {
      return this.scope.element;
    }
    get identifier() {
      return this.scope.identifier;
    }
    get schema() {
      return this.scope.schema;
    }
    has(targetName) {
      return this.find(targetName) != null;
    }
    find(...targetNames) {
      return targetNames.reduce((target, targetName) => target || this.findTarget(targetName) || this.findLegacyTarget(targetName), void 0);
    }
    findAll(...targetNames) {
      return targetNames.reduce((targets, targetName) => [
        ...targets,
        ...this.findAllTargets(targetName),
        ...this.findAllLegacyTargets(targetName)
      ], []);
    }
    findTarget(targetName) {
      const selector = this.getSelectorForTargetName(targetName);
      return this.scope.findElement(selector);
    }
    findAllTargets(targetName) {
      const selector = this.getSelectorForTargetName(targetName);
      return this.scope.findAllElements(selector);
    }
    getSelectorForTargetName(targetName) {
      const attributeName = this.schema.targetAttributeForScope(this.identifier);
      return attributeValueContainsToken(attributeName, targetName);
    }
    findLegacyTarget(targetName) {
      const selector = this.getLegacySelectorForTargetName(targetName);
      return this.deprecate(this.scope.findElement(selector), targetName);
    }
    findAllLegacyTargets(targetName) {
      const selector = this.getLegacySelectorForTargetName(targetName);
      return this.scope.findAllElements(selector).map((element) => this.deprecate(element, targetName));
    }
    getLegacySelectorForTargetName(targetName) {
      const targetDescriptor = `${this.identifier}.${targetName}`;
      return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);
    }
    deprecate(element, targetName) {
      if (element) {
        const { identifier } = this;
        const attributeName = this.schema.targetAttribute;
        const revisedAttributeName = this.schema.targetAttributeForScope(identifier);
        this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}="${identifier}.${targetName}" with ${revisedAttributeName}="${targetName}". The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);
      }
      return element;
    }
    get guide() {
      return this.scope.guide;
    }
  };
  var Scope = class {
    constructor(schema, element, identifier, logger) {
      this.targets = new TargetSet(this);
      this.classes = new ClassMap(this);
      this.data = new DataMap(this);
      this.containsElement = (element2) => {
        return element2.closest(this.controllerSelector) === this.element;
      };
      this.schema = schema;
      this.element = element;
      this.identifier = identifier;
      this.guide = new Guide(logger);
    }
    findElement(selector) {
      return this.element.matches(selector) ? this.element : this.queryElements(selector).find(this.containsElement);
    }
    findAllElements(selector) {
      return [
        ...this.element.matches(selector) ? [this.element] : [],
        ...this.queryElements(selector).filter(this.containsElement)
      ];
    }
    queryElements(selector) {
      return Array.from(this.element.querySelectorAll(selector));
    }
    get controllerSelector() {
      return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);
    }
  };
  var ScopeObserver = class {
    constructor(element, schema, delegate) {
      this.element = element;
      this.schema = schema;
      this.delegate = delegate;
      this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);
      this.scopesByIdentifierByElement = /* @__PURE__ */ new WeakMap();
      this.scopeReferenceCounts = /* @__PURE__ */ new WeakMap();
    }
    start() {
      this.valueListObserver.start();
    }
    stop() {
      this.valueListObserver.stop();
    }
    get controllerAttribute() {
      return this.schema.controllerAttribute;
    }
    parseValueForToken(token) {
      const { element, content: identifier } = token;
      const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);
      let scope = scopesByIdentifier.get(identifier);
      if (!scope) {
        scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);
        scopesByIdentifier.set(identifier, scope);
      }
      return scope;
    }
    elementMatchedValue(element, value) {
      const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;
      this.scopeReferenceCounts.set(value, referenceCount);
      if (referenceCount == 1) {
        this.delegate.scopeConnected(value);
      }
    }
    elementUnmatchedValue(element, value) {
      const referenceCount = this.scopeReferenceCounts.get(value);
      if (referenceCount) {
        this.scopeReferenceCounts.set(value, referenceCount - 1);
        if (referenceCount == 1) {
          this.delegate.scopeDisconnected(value);
        }
      }
    }
    fetchScopesByIdentifierForElement(element) {
      let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);
      if (!scopesByIdentifier) {
        scopesByIdentifier = /* @__PURE__ */ new Map();
        this.scopesByIdentifierByElement.set(element, scopesByIdentifier);
      }
      return scopesByIdentifier;
    }
  };
  var Router = class {
    constructor(application2) {
      this.application = application2;
      this.scopeObserver = new ScopeObserver(this.element, this.schema, this);
      this.scopesByIdentifier = new Multimap();
      this.modulesByIdentifier = /* @__PURE__ */ new Map();
    }
    get element() {
      return this.application.element;
    }
    get schema() {
      return this.application.schema;
    }
    get logger() {
      return this.application.logger;
    }
    get controllerAttribute() {
      return this.schema.controllerAttribute;
    }
    get modules() {
      return Array.from(this.modulesByIdentifier.values());
    }
    get contexts() {
      return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), []);
    }
    start() {
      this.scopeObserver.start();
    }
    stop() {
      this.scopeObserver.stop();
    }
    loadDefinition(definition) {
      this.unloadIdentifier(definition.identifier);
      const module = new Module(this.application, definition);
      this.connectModule(module);
    }
    unloadIdentifier(identifier) {
      const module = this.modulesByIdentifier.get(identifier);
      if (module) {
        this.disconnectModule(module);
      }
    }
    getContextForElementAndIdentifier(element, identifier) {
      const module = this.modulesByIdentifier.get(identifier);
      if (module) {
        return module.contexts.find((context) => context.element == element);
      }
    }
    handleError(error2, message, detail) {
      this.application.handleError(error2, message, detail);
    }
    createScopeForElementAndIdentifier(element, identifier) {
      return new Scope(this.schema, element, identifier, this.logger);
    }
    scopeConnected(scope) {
      this.scopesByIdentifier.add(scope.identifier, scope);
      const module = this.modulesByIdentifier.get(scope.identifier);
      if (module) {
        module.connectContextForScope(scope);
      }
    }
    scopeDisconnected(scope) {
      this.scopesByIdentifier.delete(scope.identifier, scope);
      const module = this.modulesByIdentifier.get(scope.identifier);
      if (module) {
        module.disconnectContextForScope(scope);
      }
    }
    connectModule(module) {
      this.modulesByIdentifier.set(module.identifier, module);
      const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
      scopes.forEach((scope) => module.connectContextForScope(scope));
    }
    disconnectModule(module) {
      this.modulesByIdentifier.delete(module.identifier);
      const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
      scopes.forEach((scope) => module.disconnectContextForScope(scope));
    }
  };
  var defaultSchema = {
    controllerAttribute: "data-controller",
    actionAttribute: "data-action",
    targetAttribute: "data-target",
    targetAttributeForScope: (identifier) => `data-${identifier}-target`
  };
  var Application = class {
    constructor(element = document.documentElement, schema = defaultSchema) {
      this.logger = console;
      this.debug = false;
      this.logDebugActivity = (identifier, functionName, detail = {}) => {
        if (this.debug) {
          this.logFormattedMessage(identifier, functionName, detail);
        }
      };
      this.element = element;
      this.schema = schema;
      this.dispatcher = new Dispatcher(this);
      this.router = new Router(this);
    }
    static start(element, schema) {
      const application2 = new Application(element, schema);
      application2.start();
      return application2;
    }
    async start() {
      await domReady();
      this.logDebugActivity("application", "starting");
      this.dispatcher.start();
      this.router.start();
      this.logDebugActivity("application", "start");
    }
    stop() {
      this.logDebugActivity("application", "stopping");
      this.dispatcher.stop();
      this.router.stop();
      this.logDebugActivity("application", "stop");
    }
    register(identifier, controllerConstructor) {
      this.load({ identifier, controllerConstructor });
    }
    load(head, ...rest) {
      const definitions = Array.isArray(head) ? head : [head, ...rest];
      definitions.forEach((definition) => {
        if (definition.controllerConstructor.shouldLoad) {
          this.router.loadDefinition(definition);
        }
      });
    }
    unload(head, ...rest) {
      const identifiers = Array.isArray(head) ? head : [head, ...rest];
      identifiers.forEach((identifier) => this.router.unloadIdentifier(identifier));
    }
    get controllers() {
      return this.router.contexts.map((context) => context.controller);
    }
    getControllerForElementAndIdentifier(element, identifier) {
      const context = this.router.getContextForElementAndIdentifier(element, identifier);
      return context ? context.controller : null;
    }
    handleError(error2, message, detail) {
      var _a;
      this.logger.error(`%s

%o

%o`, message, error2, detail);
      (_a = window.onerror) === null || _a === void 0 ? void 0 : _a.call(window, message, "", 0, 0, error2);
    }
    logFormattedMessage(identifier, functionName, detail = {}) {
      detail = Object.assign({ application: this }, detail);
      this.logger.groupCollapsed(`${identifier} #${functionName}`);
      this.logger.log("details:", Object.assign({}, detail));
      this.logger.groupEnd();
    }
  };
  function domReady() {
    return new Promise((resolve) => {
      if (document.readyState == "loading") {
        document.addEventListener("DOMContentLoaded", () => resolve());
      } else {
        resolve();
      }
    });
  }
  function ClassPropertiesBlessing(constructor) {
    const classes = readInheritableStaticArrayValues(constructor, "classes");
    return classes.reduce((properties, classDefinition) => {
      return Object.assign(properties, propertiesForClassDefinition(classDefinition));
    }, {});
  }
  function propertiesForClassDefinition(key) {
    return {
      [`${key}Class`]: {
        get() {
          const { classes } = this;
          if (classes.has(key)) {
            return classes.get(key);
          } else {
            const attribute = classes.getAttributeName(key);
            throw new Error(`Missing attribute "${attribute}"`);
          }
        }
      },
      [`${key}Classes`]: {
        get() {
          return this.classes.getAll(key);
        }
      },
      [`has${capitalize(key)}Class`]: {
        get() {
          return this.classes.has(key);
        }
      }
    };
  }
  function TargetPropertiesBlessing(constructor) {
    const targets = readInheritableStaticArrayValues(constructor, "targets");
    return targets.reduce((properties, targetDefinition) => {
      return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));
    }, {});
  }
  function propertiesForTargetDefinition(name) {
    return {
      [`${name}Target`]: {
        get() {
          const target = this.targets.find(name);
          if (target) {
            return target;
          } else {
            throw new Error(`Missing target element "${name}" for "${this.identifier}" controller`);
          }
        }
      },
      [`${name}Targets`]: {
        get() {
          return this.targets.findAll(name);
        }
      },
      [`has${capitalize(name)}Target`]: {
        get() {
          return this.targets.has(name);
        }
      }
    };
  }
  function ValuePropertiesBlessing(constructor) {
    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, "values");
    const propertyDescriptorMap = {
      valueDescriptorMap: {
        get() {
          return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {
            const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);
            const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);
            return Object.assign(result, { [attributeName]: valueDescriptor });
          }, {});
        }
      }
    };
    return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {
      return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));
    }, propertyDescriptorMap);
  }
  function propertiesForValueDefinitionPair(valueDefinitionPair, controller) {
    const definition = parseValueDefinitionPair(valueDefinitionPair, controller);
    const { key, name, reader: read, writer: write } = definition;
    return {
      [name]: {
        get() {
          const value = this.data.get(key);
          if (value !== null) {
            return read(value);
          } else {
            return definition.defaultValue;
          }
        },
        set(value) {
          if (value === void 0) {
            this.data.delete(key);
          } else {
            this.data.set(key, write(value));
          }
        }
      },
      [`has${capitalize(name)}`]: {
        get() {
          return this.data.has(key) || definition.hasCustomDefaultValue;
        }
      }
    };
  }
  function parseValueDefinitionPair([token, typeDefinition], controller) {
    return valueDescriptorForTokenAndTypeDefinition({
      controller,
      token,
      typeDefinition
    });
  }
  function parseValueTypeConstant(constant) {
    switch (constant) {
      case Array:
        return "array";
      case Boolean:
        return "boolean";
      case Number:
        return "number";
      case Object:
        return "object";
      case String:
        return "string";
    }
  }
  function parseValueTypeDefault(defaultValue) {
    switch (typeof defaultValue) {
      case "boolean":
        return "boolean";
      case "number":
        return "number";
      case "string":
        return "string";
    }
    if (Array.isArray(defaultValue))
      return "array";
    if (Object.prototype.toString.call(defaultValue) === "[object Object]")
      return "object";
  }
  function parseValueTypeObject(payload) {
    const typeFromObject = parseValueTypeConstant(payload.typeObject.type);
    if (!typeFromObject)
      return;
    const defaultValueType = parseValueTypeDefault(payload.typeObject.default);
    if (typeFromObject !== defaultValueType) {
      const propertyPath = payload.controller ? `${payload.controller}.${payload.token}` : payload.token;
      throw new Error(`The specified default value for the Stimulus Value "${propertyPath}" must match the defined type "${typeFromObject}". The provided default value of "${payload.typeObject.default}" is of type "${defaultValueType}".`);
    }
    return typeFromObject;
  }
  function parseValueTypeDefinition(payload) {
    const typeFromObject = parseValueTypeObject({
      controller: payload.controller,
      token: payload.token,
      typeObject: payload.typeDefinition
    });
    const typeFromDefaultValue = parseValueTypeDefault(payload.typeDefinition);
    const typeFromConstant = parseValueTypeConstant(payload.typeDefinition);
    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;
    if (type)
      return type;
    const propertyPath = payload.controller ? `${payload.controller}.${payload.typeDefinition}` : payload.token;
    throw new Error(`Unknown value type "${propertyPath}" for "${payload.token}" value`);
  }
  function defaultValueForDefinition(typeDefinition) {
    const constant = parseValueTypeConstant(typeDefinition);
    if (constant)
      return defaultValuesByType[constant];
    const defaultValue = typeDefinition.default;
    if (defaultValue !== void 0)
      return defaultValue;
    return typeDefinition;
  }
  function valueDescriptorForTokenAndTypeDefinition(payload) {
    const key = `${dasherize(payload.token)}-value`;
    const type = parseValueTypeDefinition(payload);
    return {
      type,
      key,
      name: camelize(key),
      get defaultValue() {
        return defaultValueForDefinition(payload.typeDefinition);
      },
      get hasCustomDefaultValue() {
        return parseValueTypeDefault(payload.typeDefinition) !== void 0;
      },
      reader: readers[type],
      writer: writers[type] || writers.default
    };
  }
  var defaultValuesByType = {
    get array() {
      return [];
    },
    boolean: false,
    number: 0,
    get object() {
      return {};
    },
    string: ""
  };
  var readers = {
    array(value) {
      const array = JSON.parse(value);
      if (!Array.isArray(array)) {
        throw new TypeError(`expected value of type "array" but instead got value "${value}" of type "${parseValueTypeDefault(array)}"`);
      }
      return array;
    },
    boolean(value) {
      return !(value == "0" || String(value).toLowerCase() == "false");
    },
    number(value) {
      return Number(value);
    },
    object(value) {
      const object = JSON.parse(value);
      if (object === null || typeof object != "object" || Array.isArray(object)) {
        throw new TypeError(`expected value of type "object" but instead got value "${value}" of type "${parseValueTypeDefault(object)}"`);
      }
      return object;
    },
    string(value) {
      return value;
    }
  };
  var writers = {
    default: writeString,
    array: writeJSON,
    object: writeJSON
  };
  function writeJSON(value) {
    return JSON.stringify(value);
  }
  function writeString(value) {
    return `${value}`;
  }
  var Controller = class {
    constructor(context) {
      this.context = context;
    }
    static get shouldLoad() {
      return true;
    }
    get application() {
      return this.context.application;
    }
    get scope() {
      return this.context.scope;
    }
    get element() {
      return this.scope.element;
    }
    get identifier() {
      return this.scope.identifier;
    }
    get targets() {
      return this.scope.targets;
    }
    get classes() {
      return this.scope.classes;
    }
    get data() {
      return this.scope.data;
    }
    initialize() {
    }
    connect() {
    }
    disconnect() {
    }
    dispatch(eventName, { target = this.element, detail = {}, prefix = this.identifier, bubbles = true, cancelable = true } = {}) {
      const type = prefix ? `${prefix}:${eventName}` : eventName;
      const event2 = new CustomEvent(type, { detail, bubbles, cancelable });
      target.dispatchEvent(event2);
      return event2;
    }
  };
  Controller.blessings = [ClassPropertiesBlessing, TargetPropertiesBlessing, ValuePropertiesBlessing];
  Controller.targets = [];
  Controller.values = {};

  // app/javascript/controllers/application.js
  var application = Application.start();
  application.debug = false;
  window.Stimulus = application;

  // app/javascript/controllers/plans/load_table.js
  var load_table_default = class extends Controller {
    connect() {
      $("#plans-datatable").dataTable({
        "retrieve": true,
        "processing": true,
        "serverSide": true,
        "ajax": {
          "url": $("#plans-datatable").data("source")
        },
        "columns": [
          {
            "data": "",
            "className": "dtr-control",
            "defaultContent": "",
            "orderable": false
          },
          { "data": "name" },
          { "data": "price" },
          { "data": "number_days" },
          { "data": "actions", "orderable": false, "width": "10%" }
        ],
        "order": [[1, "asc"]]
      });
    }
  };

  // app/javascript/controllers/customers/load_table.js
  var load_table_default2 = class extends Controller {
    connect() {
      $("#customers-datatable").dataTable({
        "retrieve": true,
        "processing": true,
        "serverSide": true,
        "ajax": {
          "url": $("#customers-datatable").data("source")
        },
        "columns": [
          {
            "data": "",
            "className": "dtr-control",
            "defaultContent": "",
            "orderable": false
          },
          { "data": "id" },
          {
            data: "status",
            render: function(data) {
              if (data != "false") {
                return '<td><span class="fas fa-check-circle fa-2x text-success"></span></td>';
              } else {
                return '<td><span class="fas fa-times-circle fa-2x text-danger"></span></td>';
              }
            }
          },
          { "data": "name" },
          { "data": "dni" },
          { "data": "created_at" },
          { "data": "actions", "orderable": false, "width": "10%" }
        ],
        "order": [[1, "desc"]]
      });
    }
  };

  // app/javascript/controllers/subscriptions/load_table.js
  var load_table_default3 = class extends Controller {
    connect() {
      $("#subscriptions-datatable").dataTable({
        "retrieve": true,
        "processing": true,
        "serverSide": false,
        "ajax": {
          "url": $("#subscriptions-datatable").data("source")
        },
        "columns": [
          {
            "data": "",
            "className": "dtr-control",
            "defaultContent": "",
            "orderable": false
          },
          { "data": "id" },
          {
            data: "is_active",
            render: function(data) {
              if (data == "true") {
                return '<td><span class="fas fa-check-circle fa-2x text-success"></span></td>';
              } else {
                return '<td><span class="fas fa-times-circle fa-2x text-danger"></span></td>';
              }
            }
          },
          { "data": "customer" },
          { "data": "plan" },
          { "data": "start_sub" },
          { "data": "end_sub" },
          { "data": "actions", "orderable": false, "width": "10%" }
        ],
        "order": [[1, "desc"]]
      });
    }
  };

  // app/javascript/controllers/trainings/load_table.js
  var load_table_default4 = class extends Controller {
    connect() {
      $("#trainings-datatable").dataTable({
        "retrieve": true,
        "processing": true,
        "serverSide": true,
        "ajax": {
          "url": $("#trainings-datatable").data("source")
        },
        "columns": [
          {
            "data": "",
            "className": "dtr-control",
            "defaultContent": "",
            "orderable": false
          },
          { "data": "number" },
          { "data": "start" },
          { "data": "actions", "orderable": false, "width": "10%" }
        ],
        "order": [[1, "asc"]]
      });
    }
  };

  // app/javascript/controllers/subscriptions/destroy.js
  var destroy_default = class extends Controller {
    destroy(e3) {
      e3.preventDefault();
      let url = event.currentTarget.getAttribute("href");
      Swal.fire({
        title: "\xBFEst\xE1s seguro?",
        text: "No podr\xE1s revertir los cambios!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        cancelButtonText: "Cancelar",
        confirmButtonText: "Si, eliminar!"
      }).then(function(result) {
        if (result.value) {
          $.ajax({
            headers: {
              "X-CSRF-Token": $('meta[name="csrf-token"]').attr("content")
            },
            type: "DELETE",
            url,
            success: function() {
              let suscripciones = $("#subscriptions-datatable").DataTable();
              suscripciones.ajax.reload(null, false);
              Swal.fire(
                "Eliminado!",
                "La Suscripci\xF3n fue eliminada.",
                "success"
              );
            },
            error: function() {
              Swal.fire("Ocurri\xF3 un error");
            }
          });
        }
      });
    }
  };
  __publicField(destroy_default, "targets", ["row"]);

  // app/javascript/controllers/customers/destroy.js
  var destroy_default2 = class extends Controller {
    destroy(e3) {
      e3.preventDefault();
      let url = event.currentTarget.getAttribute("href");
      Swal.fire({
        title: "\xBFEst\xE1s seguro?",
        text: "No podr\xE1s revertir los cambios!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        cancelButtonText: "Cancelar",
        confirmButtonText: "Si, eliminar!"
      }).then(function(result) {
        if (result.value) {
          $.ajax({
            headers: {
              "X-CSRF-Token": $('meta[name="csrf-token"]').attr("content")
            },
            type: "DELETE",
            url,
            success: function() {
              let clientes = $("#customers-datatable").DataTable();
              clientes.ajax.reload(null, false);
              Swal.fire(
                "Eliminado!",
                "El Cliente fue eliminado.",
                "success"
              );
            },
            error: function() {
              Swal.fire("Ocurri\xF3 un error");
            }
          });
        }
      });
    }
  };
  __publicField(destroy_default2, "targets", ["row"]);

  // app/javascript/controllers/trainings/destroy.js
  var destroy_default3 = class extends Controller {
    destroy(e3) {
      e3.preventDefault();
      let url = event.currentTarget.getAttribute("href");
      Swal.fire({
        title: "\xBFEst\xE1s seguro?",
        text: "No podr\xE1s revertir los cambios!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        cancelButtonText: "Cancelar",
        confirmButtonText: "Si, eliminar!"
      }).then(function(result) {
        if (result.value) {
          $.ajax({
            headers: {
              "X-CSRF-Token": $('meta[name="csrf-token"]').attr("content")
            },
            type: "DELETE",
            url,
            success: function() {
              let clientes = $("#trainings-datatable").DataTable();
              clientes.ajax.reload(null, false);
              Swal.fire(
                "Eliminado!",
                "El Entrenamiento fue eliminado.",
                "success"
              );
            },
            error: function() {
              Swal.fire("Ocurri\xF3 un error");
            }
          });
        }
      });
    }
  };
  __publicField(destroy_default3, "targets", ["row"]);

  // app/javascript/controllers/index.js
  application.register("loadPlans", load_table_default);
  application.register("loadCustomers", load_table_default2);
  application.register("loadSubscriptions", load_table_default3);
  application.register("loadTrainings", load_table_default4);
  application.register("destroySubscription", destroy_default);
  application.register("destroyCustomer", destroy_default2);
  application.register("destroyTraining", destroy_default3);

  // app/javascript/application.js
  window.$ = window.jQuery = require_jquery();
  var dt = require_jquery_dataTables_min()();
  require_responsive_bootstrap4_min()();
  window.Swal = require_sweetalert2_min();
  require_select2_min()();
  require_jquery_ui_min();
  require_adminlte_min();
  require_bootstrap_bundle_min();
  require_moment_min();
  window.Calendar = Calendar;
  $.fn.select2.defaults.set("theme", "bootstrap4");
  $.fn.select2.defaults.set("width", "100%");
  $.extend(true, $.fn.dataTable.defaults, {
    "language": {
      "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
    },
    "responsive": true
  });
  $(document).ready(function() {
    $(".select2").select2();
  });
})();
/*!
   SpryMedia Ltd.

 This source file is free software, available under the following license:
   MIT license - http://datatables.net/license

 This source file is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.

 For details please refer to: http://www.datatables.net
 DataTables 1.12.1
 ©2008-2022 SpryMedia Ltd - datatables.net/license
*/
/*!
  * Bootstrap v4.6.2 (https://getbootstrap.com/)
  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
/*!
 * AdminLTE v3.2.0 (https://adminlte.io)
 * Copyright 2014-2022 Colorlib <https://colorlib.com>
 * Licensed under MIT (https://github.com/ColorlibHQ/AdminLTE/blob/master/LICENSE)
 */
/*!
 * jQuery JavaScript Library v3.6.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2022-08-26T17:52Z
 */
/*!
 Bootstrap 4 integration for DataTables' Responsive
 ©2016 SpryMedia Ltd - datatables.net/license
*/
/*! DataTables 1.12.1
 * ©2008-2022 SpryMedia Ltd - datatables.net/license
 */
/*! DataTables Bootstrap 4 integration
 * ©2011-2017 SpryMedia Ltd - datatables.net/license
 */
/*! Responsive 2.2.9
 * 2014-2021 SpryMedia Ltd - datatables.net/license
 */
/*! Select2 4.0.13 | https://github.com/select2/select2/blob/master/LICENSE.md */
/*! jQuery UI - v1.13.2 - 2022-07-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-patch.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */
